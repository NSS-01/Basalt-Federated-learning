12-22 12:55 INFO     cuda:0
12-22 12:55 INFO     ####################################################################################################
12-22 12:55 INFO     Partitioning data
12-22 12:55 INFO     Data statistics: {0: {0: 333, 1: 390, 2: 15, 3: 14, 4: 2, 5: 282, 6: 6, 7: 943, 8: 236, 9: 235}, 1: {0: 453, 2: 88, 3: 673, 4: 118, 5: 740, 6: 73, 7: 125, 8: 106, 9: 48}, 2: {0: 426, 1: 735, 2: 1145, 3: 441, 4: 1, 5: 7, 6: 567}, 3: {0: 132, 1: 80, 2: 30, 3: 2, 4: 965, 5: 266, 6: 627, 7: 908}, 4: {0: 133, 1: 171, 2: 691, 3: 451, 4: 84, 5: 277, 6: 81, 7: 223, 8: 1279}, 5: {0: 57, 1: 918, 2: 237, 3: 534, 4: 388, 5: 208, 6: 747}, 6: {0: 790, 1: 906, 2: 3, 3: 339, 4: 65, 5: 121, 6: 223, 7: 33, 8: 2063}, 7: {0: 307, 1: 256, 2: 15, 3: 1038, 4: 284, 5: 56, 7: 192, 8: 21, 9: 831}, 8: {0: 130, 1: 8, 2: 219, 3: 348, 4: 1455, 5: 2, 6: 562, 7: 5, 8: 132, 9: 624}, 9: {0: 515, 1: 290, 2: 59, 3: 299, 4: 45, 5: 557, 7: 7, 8: 289, 9: 232}, 10: {0: 1849, 1: 273, 2: 130, 3: 15, 4: 2, 5: 10, 6: 1, 7: 861}, 11: {0: 14, 1: 5, 2: 8, 3: 21, 4: 572, 5: 94, 6: 986, 7: 713, 8: 34, 9: 1194}, 12: {0: 158, 1: 505, 2: 229, 3: 22, 4: 244, 5: 94, 6: 722, 7: 54, 8: 153, 9: 256}, 13: {0: 3, 1: 961, 2: 22, 3: 356, 4: 142, 5: 32, 6: 130, 7: 308, 8: 319, 9: 939}, 14: {0: 2, 1: 1, 2: 24, 3: 546, 4: 442, 5: 396, 6: 3, 7: 624, 8: 79, 9: 15}, 15: {0: 78, 1: 101, 2: 215, 3: 8, 4: 23, 5: 348, 6: 589, 7: 466, 8: 905, 9: 726}, 16: {0: 306, 1: 222, 2: 781, 3: 10, 4: 139, 5: 66, 6: 29, 7: 207, 8: 21, 9: 645}, 17: {0: 224, 1: 460, 2: 81, 3: 434, 4: 657, 5: 3, 6: 114, 7: 295, 8: 66, 9: 201}, 18: {0: 1, 1: 320, 2: 250, 3: 447, 4: 213, 5: 1462, 6: 79, 7: 119, 8: 98, 9: 3}, 19: {0: 12, 1: 140, 2: 1716, 3: 133, 4: 1, 5: 400, 6: 379, 7: 182, 8: 50}}
12-22 12:55 INFO     Initializing nets
12-22 12:55 INFO     ######################in comm round:###############################0
12-22 12:55 INFO     Training network 0. n_training: 2456
12-22 12:55 INFO     >> Training accuracy: 0.004934
12-22 12:55 INFO     >> Test accuracy: 0.100000
12-22 12:55 INFO      ** Training complete **
12-22 12:55 INFO     net 0 final test acc 0.100000
12-22 12:55 INFO     Training network 1. n_training: 2424
12-22 12:56 INFO     >> Training accuracy: 0.264358
12-22 12:56 INFO     >> Test accuracy: 0.100000
12-22 12:56 INFO      ** Training complete **
12-22 12:56 INFO     net 1 final test acc 0.100000
12-22 12:56 INFO     Training network 2. n_training: 3322
12-22 12:56 INFO     >> Training accuracy: 0.125306
12-22 12:56 INFO     >> Test accuracy: 0.100000
12-22 12:56 INFO      ** Training complete **
12-22 12:56 INFO     net 2 final test acc 0.100000
12-22 12:56 INFO     Training network 3. n_training: 3010
12-22 12:57 INFO     >> Training accuracy: 0.000665
12-22 12:57 INFO     >> Test accuracy: 0.100000
12-22 12:57 INFO      ** Training complete **
12-22 12:57 INFO     net 3 final test acc 0.100000
12-22 12:57 INFO     Training network 4. n_training: 3390
12-22 12:57 INFO     >> Training accuracy: 0.124700
12-22 12:57 INFO     >> Test accuracy: 0.100000
12-22 12:57 INFO      ** Training complete **
12-22 12:57 INFO     net 4 final test acc 0.100000
12-22 12:57 INFO     Training network 5. n_training: 3089
12-22 12:58 INFO     >> Training accuracy: 0.165690
12-22 12:58 INFO     >> Test accuracy: 0.100000
12-22 12:58 INFO      ** Training complete **
12-22 12:58 INFO     net 5 final test acc 0.100000
12-22 12:58 INFO     Training network 6. n_training: 4543
12-22 12:58 INFO     >> Training accuracy: 0.071205
12-22 12:58 INFO     >> Test accuracy: 0.100000
12-22 12:58 INFO      ** Training complete **
12-22 12:58 INFO     net 6 final test acc 0.100000
12-22 12:58 INFO     Training network 7. n_training: 3000
12-22 12:59 INFO     >> Training accuracy: 0.326766
12-22 12:59 INFO     >> Test accuracy: 0.100000
12-22 12:59 INFO      ** Training complete **
12-22 12:59 INFO     net 7 final test acc 0.100000
12-22 12:59 INFO     Training network 8. n_training: 3485
12-22 12:59 INFO     >> Training accuracy: 0.094329
12-22 12:59 INFO     >> Test accuracy: 0.100000
12-22 12:59 INFO      ** Training complete **
12-22 12:59 INFO     net 8 final test acc 0.100000
12-22 12:59 INFO     Training network 9. n_training: 2293
12-22 13:00 INFO     >> Training accuracy: 0.127679
12-22 13:00 INFO     >> Test accuracy: 0.100000
12-22 13:00 INFO      ** Training complete **
12-22 13:00 INFO     net 9 final test acc 0.100000
12-22 13:00 INFO     Training network 10. n_training: 3141
12-22 13:00 INFO     >> Training accuracy: 0.004783
12-22 13:00 INFO     >> Test accuracy: 0.100000
12-22 13:00 INFO      ** Training complete **
12-22 13:00 INFO     net 10 final test acc 0.100000
12-22 13:00 INFO     Training network 11. n_training: 3641
12-22 13:01 INFO     >> Training accuracy: 0.006975
12-22 13:01 INFO     >> Test accuracy: 0.100000
12-22 13:01 INFO      ** Training complete **
12-22 13:01 INFO     net 11 final test acc 0.100000
12-22 13:01 INFO     Training network 12. n_training: 2437
12-22 13:01 INFO     >> Training accuracy: 0.009457
12-22 13:01 INFO     >> Test accuracy: 0.100000
12-22 13:01 INFO      ** Training complete **
12-22 13:01 INFO     net 12 final test acc 0.100000
12-22 13:01 INFO     Training network 13. n_training: 3212
12-22 13:02 INFO     >> Training accuracy: 0.105938
12-22 13:02 INFO     >> Test accuracy: 0.100000
12-22 13:02 INFO      ** Training complete **
12-22 13:02 INFO     net 13 final test acc 0.100000
12-22 13:02 INFO     Training network 14. n_training: 2132
12-22 13:02 INFO     >> Training accuracy: 0.240530
12-22 13:02 INFO     >> Test accuracy: 0.100000
12-22 13:02 INFO      ** Training complete **
12-22 13:02 INFO     net 14 final test acc 0.100000
12-22 13:02 INFO     Training network 15. n_training: 3459
12-22 13:03 INFO     >> Training accuracy: 0.002025
12-22 13:03 INFO     >> Test accuracy: 0.100000
12-22 13:03 INFO      ** Training complete **
12-22 13:03 INFO     net 15 final test acc 0.100000
12-22 13:03 INFO     Training network 16. n_training: 2426
12-22 13:03 INFO     >> Training accuracy: 0.005490
12-22 13:03 INFO     >> Test accuracy: 0.100000
12-22 13:03 INFO      ** Training complete **
12-22 13:03 INFO     net 16 final test acc 0.100000
12-22 13:03 INFO     Training network 17. n_training: 2535
12-22 13:03 INFO     >> Training accuracy: 0.161058
12-22 13:03 INFO     >> Test accuracy: 0.100000
12-22 13:03 INFO      ** Training complete **
12-22 13:03 INFO     net 17 final test acc 0.100000
12-22 13:03 INFO     Training network 18. n_training: 2992
12-22 13:04 INFO     >> Training accuracy: 0.141304
12-22 13:04 INFO     >> Test accuracy: 0.100000
12-22 13:04 INFO      ** Training complete **
12-22 13:04 INFO     net 18 final test acc 0.100000
12-22 13:04 INFO     Training network 19. n_training: 3013
12-22 13:04 INFO     >> Training accuracy: 0.042553
12-22 13:04 INFO     >> Test accuracy: 0.100000
12-22 13:04 INFO      ** Training complete **
12-22 13:04 INFO     net 19 final test acc 0.100000
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=566)
           2	LOAD_CONST(arg=1, lineno=568)
           4	STORE_FAST(arg=2, lineno=568)
           6	LOAD_CONST(arg=1, lineno=569)
           8	STORE_FAST(arg=3, lineno=569)
          10	LOAD_CONST(arg=1, lineno=570)
          12	STORE_FAST(arg=4, lineno=570)
          14	LOAD_GLOBAL(arg=0, lineno=571)
          16	LOAD_FAST(arg=0, lineno=571)
          18	LOAD_ATTR(arg=1, lineno=571)
          20	LOAD_CONST(arg=2, lineno=571)
          22	BINARY_SUBSCR(arg=None, lineno=571)
          24	CALL_FUNCTION(arg=1, lineno=571)
          26	GET_ITER(arg=None, lineno=571)
>         28	FOR_ITER(arg=56, lineno=571)
          30	STORE_FAST(arg=5, lineno=571)
          32	LOAD_FAST(arg=2, lineno=572)
          34	LOAD_FAST(arg=0, lineno=572)
          36	LOAD_FAST(arg=5, lineno=572)
          38	BINARY_SUBSCR(arg=None, lineno=572)
          40	LOAD_FAST(arg=1, lineno=572)
          42	LOAD_FAST(arg=5, lineno=572)
          44	BINARY_SUBSCR(arg=None, lineno=572)
          46	BINARY_MULTIPLY(arg=None, lineno=572)
          48	INPLACE_ADD(arg=None, lineno=572)
          50	STORE_FAST(arg=2, lineno=572)
          52	LOAD_FAST(arg=3, lineno=573)
          54	LOAD_FAST(arg=0, lineno=573)
          56	LOAD_FAST(arg=5, lineno=573)
          58	BINARY_SUBSCR(arg=None, lineno=573)
          60	LOAD_CONST(arg=3, lineno=573)
          62	BINARY_POWER(arg=None, lineno=573)
          64	INPLACE_ADD(arg=None, lineno=573)
          66	STORE_FAST(arg=3, lineno=573)
          68	LOAD_FAST(arg=4, lineno=574)
          70	LOAD_FAST(arg=1, lineno=574)
          72	LOAD_FAST(arg=5, lineno=574)
          74	BINARY_SUBSCR(arg=None, lineno=574)
          76	LOAD_CONST(arg=3, lineno=574)
          78	BINARY_POWER(arg=None, lineno=574)
          80	INPLACE_ADD(arg=None, lineno=574)
          82	STORE_FAST(arg=4, lineno=574)
          84	JUMP_ABSOLUTE(arg=28, lineno=574)
>         86	LOAD_FAST(arg=3, lineno=576)
          88	LOAD_CONST(arg=1, lineno=576)
          90	COMPARE_OP(arg=2, lineno=576)
          92	POP_JUMP_IF_FALSE(arg=106, lineno=576)
          94	LOAD_FAST(arg=4, lineno=576)
          96	LOAD_CONST(arg=1, lineno=576)
          98	COMPARE_OP(arg=2, lineno=576)
         100	POP_JUMP_IF_FALSE(arg=106, lineno=576)
         102	LOAD_CONST(arg=1, lineno=577)
         104	RETURN_VALUE(arg=None, lineno=577)
>        106	LOAD_FAST(arg=3, lineno=578)
         108	LOAD_CONST(arg=1, lineno=578)
         110	COMPARE_OP(arg=2, lineno=578)
         112	POP_JUMP_IF_TRUE(arg=122, lineno=578)
         114	LOAD_FAST(arg=4, lineno=578)
         116	LOAD_CONST(arg=1, lineno=578)
         118	COMPARE_OP(arg=2, lineno=578)
         120	POP_JUMP_IF_FALSE(arg=126, lineno=578)
>        122	LOAD_CONST(arg=4, lineno=579)
         124	RETURN_VALUE(arg=None, lineno=579)
>        126	LOAD_CONST(arg=4, lineno=581)
         128	LOAD_FAST(arg=2, lineno=581)
         130	LOAD_GLOBAL(arg=2, lineno=581)
         132	LOAD_METHOD(arg=3, lineno=581)
         134	LOAD_FAST(arg=3, lineno=581)
         136	LOAD_FAST(arg=4, lineno=581)
         138	BINARY_MULTIPLY(arg=None, lineno=581)
         140	CALL_METHOD(arg=1, lineno=581)
         142	BINARY_TRUE_DIVIDE(arg=None, lineno=581)
         144	BINARY_SUBTRACT(arg=None, lineno=581)
         146	RETURN_VALUE(arg=None, lineno=581)
         148	LOAD_CONST(arg=0, lineno=581)
         150	RETURN_VALUE(arg=None, lineno=581)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=566)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=568)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=STORE_FAST(arg=2, lineno=568)
12-22 13:04 DEBUG    stack ['$const2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=569)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=8, inst=STORE_FAST(arg=3, lineno=569)
12-22 13:04 DEBUG    stack ['$const6.1']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=570)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=STORE_FAST(arg=4, lineno=570)
12-22 13:04 DEBUG    stack ['$const10.2']
12-22 13:04 DEBUG    dispatch pc=14, inst=LOAD_GLOBAL(arg=0, lineno=571)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=571)
12-22 13:04 DEBUG    stack ['$14load_global.3']
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_ATTR(arg=1, lineno=571)
12-22 13:04 DEBUG    stack ['$14load_global.3', '$x16.4']
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=571)
12-22 13:04 DEBUG    stack ['$14load_global.3', '$18load_attr.5']
12-22 13:04 DEBUG    dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=571)
12-22 13:04 DEBUG    stack ['$14load_global.3', '$18load_attr.5', '$const20.6']
12-22 13:04 DEBUG    dispatch pc=24, inst=CALL_FUNCTION(arg=1, lineno=571)
12-22 13:04 DEBUG    stack ['$14load_global.3', '$22binary_subscr.7']
12-22 13:04 DEBUG    dispatch pc=26, inst=GET_ITER(arg=None, lineno=571)
12-22 13:04 DEBUG    stack ['$24call_function.8']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=28, stack=('$26get_iter.9',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=28 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi28.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=28 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=28, inst=FOR_ITER(arg=56, lineno=571)
12-22 13:04 DEBUG    stack ['$phi28.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=86, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=('$phi28.0', '$28for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=30 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=86 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=576)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=576)
12-22 13:04 DEBUG    stack ['$norm_x86.0']
12-22 13:04 DEBUG    dispatch pc=90, inst=COMPARE_OP(arg=2, lineno=576)
12-22 13:04 DEBUG    stack ['$norm_x86.0', '$const88.1']
12-22 13:04 DEBUG    dispatch pc=92, inst=POP_JUMP_IF_FALSE(arg=106, lineno=576)
12-22 13:04 DEBUG    stack ['$90compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=2), State(pc_initial=94 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
12-22 13:04 DEBUG    stack: ['$phi30.0', '$phi30.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=30 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=30, inst=STORE_FAST(arg=5, lineno=571)
12-22 13:04 DEBUG    stack ['$phi30.0', '$phi30.1']
12-22 13:04 DEBUG    dispatch pc=32, inst=LOAD_FAST(arg=2, lineno=572)
12-22 13:04 DEBUG    stack ['$phi30.0']
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=572)
12-22 13:04 DEBUG    stack ['$phi30.0', '$result32.2']
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_FAST(arg=5, lineno=572)
12-22 13:04 DEBUG    stack ['$phi30.0', '$result32.2', '$x34.3']
12-22 13:04 DEBUG    dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=572)
12-22 13:04 DEBUG    stack ['$phi30.0', '$result32.2', '$x34.3', '$i36.4']
12-22 13:04 DEBUG    dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=572)
12-22 13:04 DEBUG    stack ['$phi30.0', '$result32.2', '$38binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=42, inst=LOAD_FAST(arg=5, lineno=572)
12-22 13:04 DEBUG    stack ['$phi30.0', '$result32.2', '$38binary_subscr.5', '$y40.6']
12-22 13:04 DEBUG    dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=572)
12-22 13:04 DEBUG    stack ['$phi30.0', '$result32.2', '$38binary_subscr.5', '$y40.6', '$i42.7']
12-22 13:04 DEBUG    dispatch pc=46, inst=BINARY_MULTIPLY(arg=None, lineno=572)
12-22 13:04 DEBUG    stack ['$phi30.0', '$result32.2', '$38binary_subscr.5', '$44binary_subscr.8']
12-22 13:04 DEBUG    dispatch pc=48, inst=INPLACE_ADD(arg=None, lineno=572)
12-22 13:04 DEBUG    stack ['$phi30.0', '$result32.2', '$46binary_multiply.9']
12-22 13:04 DEBUG    dispatch pc=50, inst=STORE_FAST(arg=2, lineno=572)
12-22 13:04 DEBUG    stack ['$phi30.0', '$48inplace_add.10']
12-22 13:04 DEBUG    dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=573)
12-22 13:04 DEBUG    stack ['$phi30.0']
12-22 13:04 DEBUG    dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=573)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_x52.11']
12-22 13:04 DEBUG    dispatch pc=56, inst=LOAD_FAST(arg=5, lineno=573)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_x52.11', '$x54.12']
12-22 13:04 DEBUG    dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=573)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_x52.11', '$x54.12', '$i56.13']
12-22 13:04 DEBUG    dispatch pc=60, inst=LOAD_CONST(arg=3, lineno=573)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_x52.11', '$58binary_subscr.14']
12-22 13:04 DEBUG    dispatch pc=62, inst=BINARY_POWER(arg=None, lineno=573)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_x52.11', '$58binary_subscr.14', '$const60.15']
12-22 13:04 DEBUG    dispatch pc=64, inst=INPLACE_ADD(arg=None, lineno=573)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_x52.11', '$62binary_power.16']
12-22 13:04 DEBUG    dispatch pc=66, inst=STORE_FAST(arg=3, lineno=573)
12-22 13:04 DEBUG    stack ['$phi30.0', '$64inplace_add.17']
12-22 13:04 DEBUG    dispatch pc=68, inst=LOAD_FAST(arg=4, lineno=574)
12-22 13:04 DEBUG    stack ['$phi30.0']
12-22 13:04 DEBUG    dispatch pc=70, inst=LOAD_FAST(arg=1, lineno=574)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_y68.18']
12-22 13:04 DEBUG    dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=574)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_y68.18', '$y70.19']
12-22 13:04 DEBUG    dispatch pc=74, inst=BINARY_SUBSCR(arg=None, lineno=574)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_y68.18', '$y70.19', '$i72.20']
12-22 13:04 DEBUG    dispatch pc=76, inst=LOAD_CONST(arg=3, lineno=574)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_y68.18', '$74binary_subscr.21']
12-22 13:04 DEBUG    dispatch pc=78, inst=BINARY_POWER(arg=None, lineno=574)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_y68.18', '$74binary_subscr.21', '$const76.22']
12-22 13:04 DEBUG    dispatch pc=80, inst=INPLACE_ADD(arg=None, lineno=574)
12-22 13:04 DEBUG    stack ['$phi30.0', '$norm_y68.18', '$78binary_power.23']
12-22 13:04 DEBUG    dispatch pc=82, inst=STORE_FAST(arg=4, lineno=574)
12-22 13:04 DEBUG    stack ['$phi30.0', '$80inplace_add.24']
12-22 13:04 DEBUG    dispatch pc=84, inst=JUMP_ABSOLUTE(arg=28, lineno=574)
12-22 13:04 DEBUG    stack ['$phi30.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=28, stack=('$phi30.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=28 nstack_initial=1)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=94 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=576)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=576)
12-22 13:04 DEBUG    stack ['$norm_y94.0']
12-22 13:04 DEBUG    dispatch pc=98, inst=COMPARE_OP(arg=2, lineno=576)
12-22 13:04 DEBUG    stack ['$norm_y94.0', '$const96.1']
12-22 13:04 DEBUG    dispatch pc=100, inst=POP_JUMP_IF_FALSE(arg=106, lineno=576)
12-22 13:04 DEBUG    stack ['$98compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=28 nstack_initial=1), State(pc_initial=102 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=106 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=578)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=578)
12-22 13:04 DEBUG    stack ['$norm_x106.0']
12-22 13:04 DEBUG    dispatch pc=110, inst=COMPARE_OP(arg=2, lineno=578)
12-22 13:04 DEBUG    stack ['$norm_x106.0', '$const108.1']
12-22 13:04 DEBUG    dispatch pc=112, inst=POP_JUMP_IF_TRUE(arg=122, lineno=578)
12-22 13:04 DEBUG    stack ['$110compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=28 nstack_initial=1), State(pc_initial=102 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=102 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=102, inst=LOAD_CONST(arg=1, lineno=577)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=104, inst=RETURN_VALUE(arg=None, lineno=577)
12-22 13:04 DEBUG    stack ['$const102.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=114 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=578)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=116, inst=LOAD_CONST(arg=1, lineno=578)
12-22 13:04 DEBUG    stack ['$norm_y114.0']
12-22 13:04 DEBUG    dispatch pc=118, inst=COMPARE_OP(arg=2, lineno=578)
12-22 13:04 DEBUG    stack ['$norm_y114.0', '$const116.1']
12-22 13:04 DEBUG    dispatch pc=120, inst=POP_JUMP_IF_FALSE(arg=126, lineno=578)
12-22 13:04 DEBUG    stack ['$118compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=126, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=126 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=122 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=122, inst=LOAD_CONST(arg=4, lineno=579)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=579)
12-22 13:04 DEBUG    stack ['$const122.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=126 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=126 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=126 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=126, inst=LOAD_CONST(arg=4, lineno=581)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=581)
12-22 13:04 DEBUG    stack ['$const126.0']
12-22 13:04 DEBUG    dispatch pc=130, inst=LOAD_GLOBAL(arg=2, lineno=581)
12-22 13:04 DEBUG    stack ['$const126.0', '$result128.1']
12-22 13:04 DEBUG    dispatch pc=132, inst=LOAD_METHOD(arg=3, lineno=581)
12-22 13:04 DEBUG    stack ['$const126.0', '$result128.1', '$130load_global.2']
12-22 13:04 DEBUG    dispatch pc=134, inst=LOAD_FAST(arg=3, lineno=581)
12-22 13:04 DEBUG    stack ['$const126.0', '$result128.1', '$132load_method.3']
12-22 13:04 DEBUG    dispatch pc=136, inst=LOAD_FAST(arg=4, lineno=581)
12-22 13:04 DEBUG    stack ['$const126.0', '$result128.1', '$132load_method.3', '$norm_x134.4']
12-22 13:04 DEBUG    dispatch pc=138, inst=BINARY_MULTIPLY(arg=None, lineno=581)
12-22 13:04 DEBUG    stack ['$const126.0', '$result128.1', '$132load_method.3', '$norm_x134.4', '$norm_y136.5']
12-22 13:04 DEBUG    dispatch pc=140, inst=CALL_METHOD(arg=1, lineno=581)
12-22 13:04 DEBUG    stack ['$const126.0', '$result128.1', '$132load_method.3', '$138binary_multiply.6']
12-22 13:04 DEBUG    dispatch pc=142, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=581)
12-22 13:04 DEBUG    stack ['$const126.0', '$result128.1', '$140call_method.7']
12-22 13:04 DEBUG    dispatch pc=144, inst=BINARY_SUBTRACT(arg=None, lineno=581)
12-22 13:04 DEBUG    stack ['$const126.0', '$142binary_true_divide.8']
12-22 13:04 DEBUG    dispatch pc=146, inst=RETURN_VALUE(arg=None, lineno=581)
12-22 13:04 DEBUG    stack ['$144binary_subtract.9']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=1): {'$phi28.0'},
             State(pc_initial=30 nstack_initial=2): {'$phi30.1'},
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=126 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi28.0': State(pc_initial=0 nstack_initial=0),
 '$phi30.1': State(pc_initial=28 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=2))},
             '$phi30.0': {('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
12-22 13:04 DEBUG    keep phismap: {'$phi28.0': {('$26get_iter.9', State(pc_initial=0 nstack_initial=0))},
 '$phi30.1': {('$28for_iter.2', State(pc_initial=28 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi28.0': '$26get_iter.9'},
             State(pc_initial=28 nstack_initial=1): {'$phi30.1': '$28for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'value': '$const2.0'}), (6, {'res': '$const6.1'}), (8, {'value': '$const6.1'}), (10, {'res': '$const10.2'}), (12, {'value': '$const10.2'}), (14, {'res': '$14load_global.3'}), (16, {'res': '$x16.4'}), (18, {'item': '$x16.4', 'res': '$18load_attr.5'}), (20, {'res': '$const20.6'}), (22, {'index': '$const20.6', 'target': '$18load_attr.5', 'res': '$22binary_subscr.7'}), (24, {'func': '$14load_global.3', 'args': ['$22binary_subscr.7'], 'res': '$24call_function.8'}), (26, {'value': '$24call_function.8', 'res': '$26get_iter.9'})), outgoing_phis={'$phi28.0': '$26get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$26get_iter.9',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=28 nstack_initial=1):
AdaptBlockInfo(insts=((28, {'iterator': '$phi28.0', 'pair': '$28for_iter.1', 'indval': '$28for_iter.2', 'pred': '$28for_iter.3'}),), outgoing_phis={'$phi30.1': '$28for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={86: (), 30: ('$phi28.0', '$28for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=30 nstack_initial=2):
AdaptBlockInfo(insts=((30, {'value': '$phi30.1'}), (32, {'res': '$result32.2'}), (34, {'res': '$x34.3'}), (36, {'res': '$i36.4'}), (38, {'index': '$i36.4', 'target': '$x34.3', 'res': '$38binary_subscr.5'}), (40, {'res': '$y40.6'}), (42, {'res': '$i42.7'}), (44, {'index': '$i42.7', 'target': '$y40.6', 'res': '$44binary_subscr.8'}), (46, {'lhs': '$38binary_subscr.5', 'rhs': '$44binary_subscr.8', 'res': '$46binary_multiply.9'}), (48, {'lhs': '$result32.2', 'rhs': '$46binary_multiply.9', 'res': '$48inplace_add.10'}), (50, {'value': '$48inplace_add.10'}), (52, {'res': '$norm_x52.11'}), (54, {'res': '$x54.12'}), (56, {'res': '$i56.13'}), (58, {'index': '$i56.13', 'target': '$x54.12', 'res': '$58binary_subscr.14'}), (60, {'res': '$const60.15'}), (62, {'lhs': '$58binary_subscr.14', 'rhs': '$const60.15', 'res': '$62binary_power.16'}), (64, {'lhs': '$norm_x52.11', 'rhs': '$62binary_power.16', 'res': '$64inplace_add.17'}), (66, {'value': '$64inplace_add.17'}), (68, {'res': '$norm_y68.18'}), (70, {'res': '$y70.19'}), (72, {'res': '$i72.20'}), (74, {'index': '$i72.20', 'target': '$y70.19', 'res': '$74binary_subscr.21'}), (76, {'res': '$const76.22'}), (78, {'lhs': '$74binary_subscr.21', 'rhs': '$const76.22', 'res': '$78binary_power.23'}), (80, {'lhs': '$norm_y68.18', 'rhs': '$78binary_power.23', 'res': '$80inplace_add.24'}), (82, {'value': '$80inplace_add.24'}), (84, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$phi30.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$norm_x86.0'}), (88, {'res': '$const88.1'}), (90, {'lhs': '$norm_x86.0', 'rhs': '$const88.1', 'res': '$90compare_op.2'}), (92, {'pred': '$90compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 106: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$norm_y94.0'}), (96, {'res': '$const96.1'}), (98, {'lhs': '$norm_y94.0', 'rhs': '$const96.1', 'res': '$98compare_op.2'}), (100, {'pred': '$98compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 106: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$const102.0'}), (104, {'retval': '$const102.0', 'castval': '$104return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$norm_x106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$norm_x106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 122: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$norm_y114.0'}), (116, {'res': '$const116.1'}), (118, {'lhs': '$norm_y114.0', 'rhs': '$const116.1', 'res': '$118compare_op.2'}), (120, {'pred': '$118compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 126: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$const122.0'}), (124, {'retval': '$const122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=126 nstack_initial=0):
AdaptBlockInfo(insts=((126, {'res': '$const126.0'}), (128, {'res': '$result128.1'}), (130, {'res': '$130load_global.2'}), (132, {'item': '$130load_global.2', 'res': '$132load_method.3'}), (134, {'res': '$norm_x134.4'}), (136, {'res': '$norm_y136.5'}), (138, {'lhs': '$norm_x134.4', 'rhs': '$norm_y136.5', 'res': '$138binary_multiply.6'}), (140, {'func': '$132load_method.3', 'args': ['$138binary_multiply.6'], 'res': '$140call_method.7'}), (142, {'lhs': '$result128.1', 'rhs': '$140call_method.7', 'res': '$142binary_true_divide.8'}), (144, {'lhs': '$const126.0', 'rhs': '$142binary_true_divide.8', 'res': '$144binary_subtract.9'}), (146, {'retval': '$144binary_subtract.9', 'castval': '$146return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    result = const(float, 0.0)               ['result']
    norm_x = const(float, 0.0)               ['norm_x']
    norm_y = const(float, 0.0)               ['norm_y']
    $14load_global.3 = global(range: <class 'range'>) ['$14load_global.3']
    $18load_attr.5 = getattr(value=x, attr=shape) ['$18load_attr.5', 'x']
    $const20.6 = const(int, 0)               ['$const20.6']
    $22binary_subscr.7 = getitem(value=$18load_attr.5, index=$const20.6, fn=<built-in function getitem>) ['$18load_attr.5', '$22binary_subscr.7', '$const20.6']
    $24call_function.8 = call $14load_global.3($22binary_subscr.7, func=$14load_global.3, args=[Var($22binary_subscr.7, distances.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_global.3', '$22binary_subscr.7', '$24call_function.8']
    $26get_iter.9 = getiter(value=$24call_function.8) ['$24call_function.8', '$26get_iter.9']
    $phi28.0 = $26get_iter.9                 ['$26get_iter.9', '$phi28.0']
    jump 28                                  []
label 28:
    $28for_iter.1 = iternext(value=$phi28.0) ['$28for_iter.1', '$phi28.0']
    $28for_iter.2 = pair_first(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.2']
    $28for_iter.3 = pair_second(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.3']
    $phi30.1 = $28for_iter.2                 ['$28for_iter.2', '$phi30.1']
    branch $28for_iter.3, 30, 86             ['$28for_iter.3']
label 30:
    i = $phi30.1                             ['$phi30.1', 'i']
    $38binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$38binary_subscr.5', 'i', 'x']
    $44binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$44binary_subscr.8', 'i', 'y']
    $46binary_multiply.9 = $38binary_subscr.5 * $44binary_subscr.8 ['$38binary_subscr.5', '$44binary_subscr.8', '$46binary_multiply.9']
    $48inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$46binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$46binary_multiply.9', '$48inplace_add.10', 'result']
    result = $48inplace_add.10               ['$48inplace_add.10', 'result']
    $58binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>) ['$58binary_subscr.14', 'i', 'x']
    $const60.15 = const(int, 2)              ['$const60.15']
    $62binary_power.16 = $58binary_subscr.14 ** $const60.15 ['$58binary_subscr.14', '$62binary_power.16', '$const60.15']
    $64inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$62binary_power.16, static_lhs=Undefined, static_rhs=Undefined) ['$62binary_power.16', '$64inplace_add.17', 'norm_x']
    norm_x = $64inplace_add.17               ['$64inplace_add.17', 'norm_x']
    $74binary_subscr.21 = getitem(value=y, index=i, fn=<built-in function getitem>) ['$74binary_subscr.21', 'i', 'y']
    $const76.22 = const(int, 2)              ['$const76.22']
    $78binary_power.23 = $74binary_subscr.21 ** $const76.22 ['$74binary_subscr.21', '$78binary_power.23', '$const76.22']
    $80inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$78binary_power.23, static_lhs=Undefined, static_rhs=Undefined) ['$78binary_power.23', '$80inplace_add.24', 'norm_y']
    norm_y = $80inplace_add.24               ['$80inplace_add.24', 'norm_y']
    jump 28                                  []
label 86:
    $const88.1 = const(float, 0.0)           ['$const88.1']
    $90compare_op.2 = norm_x == $const88.1   ['$90compare_op.2', '$const88.1', 'norm_x']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
    branch $92pred, 94, 106                  ['$92pred']
label 94:
    $const96.1 = const(float, 0.0)           ['$const96.1']
    $98compare_op.2 = norm_y == $const96.1   ['$98compare_op.2', '$const96.1', 'norm_y']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98compare_op.2', 'bool100']
    branch $100pred, 102, 106                ['$100pred']
label 102:
    $const102.0 = const(float, 0.0)          ['$const102.0']
    $104return_value.1 = cast(value=$const102.0) ['$104return_value.1', '$const102.0']
    return $104return_value.1                ['$104return_value.1']
label 106:
    $const108.1 = const(float, 0.0)          ['$const108.1']
    $110compare_op.2 = norm_x == $const108.1 ['$110compare_op.2', '$const108.1', 'norm_x']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 122, 114                ['$112pred']
label 114:
    $const116.1 = const(float, 0.0)          ['$const116.1']
    $118compare_op.2 = norm_y == $const116.1 ['$118compare_op.2', '$const116.1', 'norm_y']
    bool120 = global(bool: <class 'bool'>)   ['bool120']
    $120pred = call bool120($118compare_op.2, func=bool120, args=(Var($118compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None) ['$118compare_op.2', '$120pred', 'bool120']
    branch $120pred, 122, 126                ['$120pred']
label 122:
    $const122.0 = const(float, 1.0)          ['$const122.0']
    $124return_value.1 = cast(value=$const122.0) ['$124return_value.1', '$const122.0']
    return $124return_value.1                ['$124return_value.1']
label 126:
    $const126.0 = const(float, 1.0)          ['$const126.0']
    $130load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$130load_global.2']
    $132load_method.3 = getattr(value=$130load_global.2, attr=sqrt) ['$130load_global.2', '$132load_method.3']
    $138binary_multiply.6 = norm_x * norm_y  ['$138binary_multiply.6', 'norm_x', 'norm_y']
    $140call_method.7 = call $132load_method.3($138binary_multiply.6, func=$132load_method.3, args=[Var($138binary_multiply.6, distances.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$132load_method.3', '$138binary_multiply.6', '$140call_method.7']
    $142binary_true_divide.8 = result / $140call_method.7 ['$140call_method.7', '$142binary_true_divide.8', 'result']
    $144binary_subtract.9 = $const126.0 - $142binary_true_divide.8 ['$142binary_true_divide.8', '$144binary_subtract.9', '$const126.0']
    $146return_value.10 = cast(value=$144binary_subtract.9) ['$144binary_subtract.9', '$146return_value.10']
    return $146return_value.10               ['$146return_value.10']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF389FC70>
12-22 13:04 DEBUG    on stmt: x = arg(0, name=x)
12-22 13:04 DEBUG    on stmt: y = arg(1, name=y)
12-22 13:04 DEBUG    on stmt: result = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_x = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_y = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $14load_global.3 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.5 = getattr(value=x, attr=shape)
12-22 13:04 DEBUG    on stmt: $const20.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22binary_subscr.7 = static_getitem(value=$18load_attr.5, index=0, index_var=$const20.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $24call_function.8 = call $14load_global.3($22binary_subscr.7, func=$14load_global.3, args=[Var($22binary_subscr.7, distances.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
12-22 13:04 DEBUG    on stmt: $phi28.0 = $26get_iter.9
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block analysis pass on 28
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF389FC70>
12-22 13:04 DEBUG    on stmt: $28for_iter.1 = iternext(value=$phi28.0)
12-22 13:04 DEBUG    on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi30.1 = $28for_iter.2
12-22 13:04 DEBUG    on stmt: branch $28for_iter.3, 30, 86
12-22 13:04 DEBUG    ==== SSA block analysis pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF389FC70>
12-22 13:04 DEBUG    on stmt: i = $phi30.1
12-22 13:04 DEBUG    on stmt: $38binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $44binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $46binary_multiply.9 = $38binary_subscr.5 * $44binary_subscr.8
12-22 13:04 DEBUG    on stmt: $48inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$46binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: result = $48inplace_add.10
12-22 13:04 DEBUG    on stmt: $58binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const60.15 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $62binary_power.16 = $58binary_subscr.14 ** $const60.15
12-22 13:04 DEBUG    on stmt: $64inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$62binary_power.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_x = $64inplace_add.17
12-22 13:04 DEBUG    on stmt: $74binary_subscr.21 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const76.22 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $78binary_power.23 = $74binary_subscr.21 ** $const76.22
12-22 13:04 DEBUG    on stmt: $80inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$78binary_power.23, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_y = $80inplace_add.24
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block analysis pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF389FC70>
12-22 13:04 DEBUG    on stmt: $const88.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $90compare_op.2 = norm_x == $const88.1
12-22 13:04 DEBUG    on stmt: bool92 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $92pred, 94, 106
12-22 13:04 DEBUG    ==== SSA block analysis pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF389FC70>
12-22 13:04 DEBUG    on stmt: $const96.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $98compare_op.2 = norm_y == $const96.1
12-22 13:04 DEBUG    on stmt: bool100 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $100pred, 102, 106
12-22 13:04 DEBUG    ==== SSA block analysis pass on 102
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF389FC70>
12-22 13:04 DEBUG    on stmt: $const102.0 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $104return_value.1 = cast(value=$const102.0)
12-22 13:04 DEBUG    on stmt: return $104return_value.1
12-22 13:04 DEBUG    ==== SSA block analysis pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF389FC70>
12-22 13:04 DEBUG    on stmt: $const108.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = norm_x == $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 122, 114
12-22 13:04 DEBUG    ==== SSA block analysis pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF389FC70>
12-22 13:04 DEBUG    on stmt: $const116.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $118compare_op.2 = norm_y == $const116.1
12-22 13:04 DEBUG    on stmt: bool120 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $120pred = call bool120($118compare_op.2, func=bool120, args=(Var($118compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $120pred, 122, 126
12-22 13:04 DEBUG    ==== SSA block analysis pass on 122
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF389FC70>
12-22 13:04 DEBUG    on stmt: $const122.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $124return_value.1 = cast(value=$const122.0)
12-22 13:04 DEBUG    on stmt: return $124return_value.1
12-22 13:04 DEBUG    ==== SSA block analysis pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF389FC70>
12-22 13:04 DEBUG    on stmt: $const126.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $132load_method.3 = getattr(value=$130load_global.2, attr=sqrt)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.6 = norm_x * norm_y
12-22 13:04 DEBUG    on stmt: $140call_method.7 = call $132load_method.3($138binary_multiply.6, func=$132load_method.3, args=[Var($138binary_multiply.6, distances.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $142binary_true_divide.8 = result / $140call_method.7
12-22 13:04 DEBUG    on stmt: $144binary_subtract.9 = $const126.0 - $142binary_true_divide.8
12-22 13:04 DEBUG    on stmt: $146return_value.10 = cast(value=$144binary_subtract.9)
12-22 13:04 DEBUG    on stmt: return $146return_value.10
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$100pred': [<numba.core.ir.Assign object at 0x000001AEF3A5E340>],
             '$104return_value.1': [<numba.core.ir.Assign object at 0x000001AEF3A5E190>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF3A5E700>],
             '$112pred': [<numba.core.ir.Assign object at 0x000001AEF3A55940>],
             '$118compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF3A55370>],
             '$120pred': [<numba.core.ir.Assign object at 0x000001AEF3A55A30>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x000001AEF3A5BE80>],
             '$130load_global.2': [<numba.core.ir.Assign object at 0x000001AEF3972310>],
             '$132load_method.3': [<numba.core.ir.Assign object at 0x000001AEF3972BE0>],
             '$138binary_multiply.6': [<numba.core.ir.Assign object at 0x000001AEF3978F10>],
             '$140call_method.7': [<numba.core.ir.Assign object at 0x000001AEF3978F40>],
             '$142binary_true_divide.8': [<numba.core.ir.Assign object at 0x000001AEF3978220>],
             '$144binary_subtract.9': [<numba.core.ir.Assign object at 0x000001AEF389F160>],
             '$146return_value.10': [<numba.core.ir.Assign object at 0x000001AEF389F2E0>],
             '$14load_global.3': [<numba.core.ir.Assign object at 0x000001AEF3A6F400>],
             '$18load_attr.5': [<numba.core.ir.Assign object at 0x000001AEF3A6F760>],
             '$22binary_subscr.7': [<numba.core.ir.Assign object at 0x000001AEF3A6A1C0>],
             '$24call_function.8': [<numba.core.ir.Assign object at 0x000001AEF3A6FD60>],
             '$26get_iter.9': [<numba.core.ir.Assign object at 0x000001AEF3A6FB20>],
             '$28for_iter.1': [<numba.core.ir.Assign object at 0x000001AEF3A737C0>],
             '$28for_iter.2': [<numba.core.ir.Assign object at 0x000001AEF3A73820>],
             '$28for_iter.3': [<numba.core.ir.Assign object at 0x000001AEF3A738E0>],
             '$38binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF3A731C0>],
             '$44binary_subscr.8': [<numba.core.ir.Assign object at 0x000001AEF3A73BE0>],
             '$46binary_multiply.9': [<numba.core.ir.Assign object at 0x000001AEF3A76310>],
             '$48inplace_add.10': [<numba.core.ir.Assign object at 0x000001AEF3A760D0>],
             '$58binary_subscr.14': [<numba.core.ir.Assign object at 0x000001AEF3A767C0>],
             '$62binary_power.16': [<numba.core.ir.Assign object at 0x000001AEF3A76A00>],
             '$64inplace_add.17': [<numba.core.ir.Assign object at 0x000001AEF3A76B50>],
             '$74binary_subscr.21': [<numba.core.ir.Assign object at 0x000001AEF3A7FCA0>],
             '$78binary_power.23': [<numba.core.ir.Assign object at 0x000001AEF3A7FA90>],
             '$80inplace_add.24': [<numba.core.ir.Assign object at 0x000001AEF3A7F820>],
             '$90compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF3A7F4F0>],
             '$92pred': [<numba.core.ir.Assign object at 0x000001AEF3A7F100>],
             '$98compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF3A5E2B0>],
             '$const102.0': [<numba.core.ir.Assign object at 0x000001AEF3A5E130>],
             '$const108.1': [<numba.core.ir.Assign object at 0x000001AEF3A5E580>],
             '$const116.1': [<numba.core.ir.Assign object at 0x000001AEF3A552B0>],
             '$const122.0': [<numba.core.ir.Assign object at 0x000001AEF3A5BAC0>],
             '$const126.0': [<numba.core.ir.Assign object at 0x000001AEF3972250>],
             '$const20.6': [<numba.core.ir.Assign object at 0x000001AEF3A6FEE0>],
             '$const60.15': [<numba.core.ir.Assign object at 0x000001AEF3A767F0>],
             '$const76.22': [<numba.core.ir.Assign object at 0x000001AEF3A7FBB0>],
             '$const88.1': [<numba.core.ir.Assign object at 0x000001AEF3A764C0>],
             '$const96.1': [<numba.core.ir.Assign object at 0x000001AEF3A7F2E0>],
             '$phi28.0': [<numba.core.ir.Assign object at 0x000001AEF3A6AF70>],
             '$phi30.1': [<numba.core.ir.Assign object at 0x000001AEF3A6FDF0>],
             'bool100': [<numba.core.ir.Assign object at 0x000001AEF3A5EEB0>],
             'bool112': [<numba.core.ir.Assign object at 0x000001AEF3A5EB20>],
             'bool120': [<numba.core.ir.Assign object at 0x000001AEF3A558B0>],
             'bool92': [<numba.core.ir.Assign object at 0x000001AEF3A7F760>],
             'i': [<numba.core.ir.Assign object at 0x000001AEF3A73790>],
             'norm_x': [<numba.core.ir.Assign object at 0x000001AEF3A6AE20>,
                        <numba.core.ir.Assign object at 0x000001AEF3A76670>],
             'norm_y': [<numba.core.ir.Assign object at 0x000001AEF3A6F1F0>,
                        <numba.core.ir.Assign object at 0x000001AEF3A7F5E0>],
             'result': [<numba.core.ir.Assign object at 0x000001AEF3A6A6D0>,
                        <numba.core.ir.Assign object at 0x000001AEF3A76DC0>],
             'x': [<numba.core.ir.Assign object at 0x000001AEF3A6AC70>],
             'y': [<numba.core.ir.Assign object at 0x000001AEF3A6AC10>]})
12-22 13:04 DEBUG    SSA violators {'norm_x', 'result', 'norm_y'}
12-22 13:04 DEBUG    Fix SSA violator on var norm_x
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: x = arg(0, name=x)
12-22 13:04 DEBUG    on stmt: y = arg(1, name=y)
12-22 13:04 DEBUG    on stmt: result = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_x = const(float, 0.0)
12-22 13:04 DEBUG    first assign: norm_x
12-22 13:04 DEBUG    replaced with: norm_x = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_y = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $14load_global.3 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.5 = getattr(value=x, attr=shape)
12-22 13:04 DEBUG    on stmt: $const20.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22binary_subscr.7 = static_getitem(value=$18load_attr.5, index=0, index_var=$const20.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $24call_function.8 = call $14load_global.3($22binary_subscr.7, func=$14load_global.3, args=[Var($22binary_subscr.7, distances.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
12-22 13:04 DEBUG    on stmt: $phi28.0 = $26get_iter.9
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 28
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $28for_iter.1 = iternext(value=$phi28.0)
12-22 13:04 DEBUG    on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi30.1 = $28for_iter.2
12-22 13:04 DEBUG    on stmt: branch $28for_iter.3, 30, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: i = $phi30.1
12-22 13:04 DEBUG    on stmt: $38binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $44binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $46binary_multiply.9 = $38binary_subscr.5 * $44binary_subscr.8
12-22 13:04 DEBUG    on stmt: $48inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$46binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: result = $48inplace_add.10
12-22 13:04 DEBUG    on stmt: $58binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const60.15 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $62binary_power.16 = $58binary_subscr.14 ** $const60.15
12-22 13:04 DEBUG    on stmt: $64inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$62binary_power.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_x = $64inplace_add.17
12-22 13:04 DEBUG    replaced with: norm_x.1 = $64inplace_add.17
12-22 13:04 DEBUG    on stmt: $74binary_subscr.21 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const76.22 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $78binary_power.23 = $74binary_subscr.21 ** $const76.22
12-22 13:04 DEBUG    on stmt: $80inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$78binary_power.23, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_y = $80inplace_add.24
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const88.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $90compare_op.2 = norm_x == $const88.1
12-22 13:04 DEBUG    on stmt: bool92 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $92pred, 94, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const96.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $98compare_op.2 = norm_y == $const96.1
12-22 13:04 DEBUG    on stmt: bool100 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $100pred, 102, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 102
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const102.0 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $104return_value.1 = cast(value=$const102.0)
12-22 13:04 DEBUG    on stmt: return $104return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const108.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = norm_x == $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 122, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const116.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $118compare_op.2 = norm_y == $const116.1
12-22 13:04 DEBUG    on stmt: bool120 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $120pred = call bool120($118compare_op.2, func=bool120, args=(Var($118compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $120pred, 122, 126
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 122
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const122.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $124return_value.1 = cast(value=$const122.0)
12-22 13:04 DEBUG    on stmt: return $124return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const126.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $132load_method.3 = getattr(value=$130load_global.2, attr=sqrt)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.6 = norm_x * norm_y
12-22 13:04 DEBUG    on stmt: $140call_method.7 = call $132load_method.3($138binary_multiply.6, func=$132load_method.3, args=[Var($138binary_multiply.6, distances.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $142binary_true_divide.8 = result / $140call_method.7
12-22 13:04 DEBUG    on stmt: $144binary_subtract.9 = $const126.0 - $142binary_true_divide.8
12-22 13:04 DEBUG    on stmt: $146return_value.10 = cast(value=$144binary_subtract.9)
12-22 13:04 DEBUG    on stmt: return $146return_value.10
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001AEF3A4D430>],
             30: [<numba.core.ir.Assign object at 0x000001AEF3A4D4F0>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: x = arg(0, name=x)
12-22 13:04 DEBUG    on stmt: y = arg(1, name=y)
12-22 13:04 DEBUG    on stmt: result = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_x = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_y = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $14load_global.3 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.5 = getattr(value=x, attr=shape)
12-22 13:04 DEBUG    on stmt: $const20.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22binary_subscr.7 = static_getitem(value=$18load_attr.5, index=0, index_var=$const20.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $24call_function.8 = call $14load_global.3($22binary_subscr.7, func=$14load_global.3, args=[Var($22binary_subscr.7, distances.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
12-22 13:04 DEBUG    on stmt: $phi28.0 = $26get_iter.9
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 28
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $28for_iter.1 = iternext(value=$phi28.0)
12-22 13:04 DEBUG    on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi30.1 = $28for_iter.2
12-22 13:04 DEBUG    on stmt: branch $28for_iter.3, 30, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: i = $phi30.1
12-22 13:04 DEBUG    on stmt: $38binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $44binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $46binary_multiply.9 = $38binary_subscr.5 * $44binary_subscr.8
12-22 13:04 DEBUG    on stmt: $48inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$46binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: result = $48inplace_add.10
12-22 13:04 DEBUG    on stmt: $58binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const60.15 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $62binary_power.16 = $58binary_subscr.14 ** $const60.15
12-22 13:04 DEBUG    on stmt: $64inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$62binary_power.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='norm_x' stmt=$64inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x, rhs=$62binary_power.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 30
12-22 13:04 DEBUG    idom 28 from label 30
12-22 13:04 DEBUG    find_def_from_bottom label 28
12-22 13:04 DEBUG    find_def_from_top label 28
12-22 13:04 DEBUG    insert phi node norm_x.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
12-22 13:04 DEBUG    find_def_from_bottom label 0
12-22 13:04 DEBUG    incoming_def norm_x = const(float, 0.0)
12-22 13:04 DEBUG    find_def_from_bottom label 30
12-22 13:04 DEBUG    incoming_def norm_x.1 = $64inplace_add.17
12-22 13:04 DEBUG    replaced with: $64inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x.2, rhs=$62binary_power.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_x.1 = $64inplace_add.17
12-22 13:04 DEBUG    on stmt: $74binary_subscr.21 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const76.22 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $78binary_power.23 = $74binary_subscr.21 ** $const76.22
12-22 13:04 DEBUG    on stmt: $80inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$78binary_power.23, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_y = $80inplace_add.24
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const88.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $90compare_op.2 = norm_x == $const88.1
12-22 13:04 DEBUG    find_def var='norm_x' stmt=$90compare_op.2 = norm_x == $const88.1
12-22 13:04 DEBUG    find_def_from_top label 86
12-22 13:04 DEBUG    idom 28 from label 86
12-22 13:04 DEBUG    find_def_from_bottom label 28
12-22 13:04 DEBUG    replaced with: $90compare_op.2 = norm_x.2 == $const88.1
12-22 13:04 DEBUG    on stmt: bool92 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $92pred, 94, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const96.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $98compare_op.2 = norm_y == $const96.1
12-22 13:04 DEBUG    on stmt: bool100 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $100pred, 102, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 102
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const102.0 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $104return_value.1 = cast(value=$const102.0)
12-22 13:04 DEBUG    on stmt: return $104return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const108.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = norm_x == $const108.1
12-22 13:04 DEBUG    find_def var='norm_x' stmt=$110compare_op.2 = norm_x == $const108.1
12-22 13:04 DEBUG    find_def_from_top label 106
12-22 13:04 DEBUG    idom 86 from label 106
12-22 13:04 DEBUG    find_def_from_bottom label 86
12-22 13:04 DEBUG    find_def_from_top label 86
12-22 13:04 DEBUG    idom 28 from label 86
12-22 13:04 DEBUG    find_def_from_bottom label 28
12-22 13:04 DEBUG    replaced with: $110compare_op.2 = norm_x.2 == $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 122, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const116.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $118compare_op.2 = norm_y == $const116.1
12-22 13:04 DEBUG    on stmt: bool120 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $120pred = call bool120($118compare_op.2, func=bool120, args=(Var($118compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $120pred, 122, 126
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 122
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const122.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $124return_value.1 = cast(value=$const122.0)
12-22 13:04 DEBUG    on stmt: return $124return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const126.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $132load_method.3 = getattr(value=$130load_global.2, attr=sqrt)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.6 = norm_x * norm_y
12-22 13:04 DEBUG    find_def var='norm_x' stmt=$138binary_multiply.6 = norm_x * norm_y
12-22 13:04 DEBUG    find_def_from_top label 126
12-22 13:04 DEBUG    idom 114 from label 126
12-22 13:04 DEBUG    find_def_from_bottom label 114
12-22 13:04 DEBUG    find_def_from_top label 114
12-22 13:04 DEBUG    idom 106 from label 114
12-22 13:04 DEBUG    find_def_from_bottom label 106
12-22 13:04 DEBUG    find_def_from_top label 106
12-22 13:04 DEBUG    idom 86 from label 106
12-22 13:04 DEBUG    find_def_from_bottom label 86
12-22 13:04 DEBUG    find_def_from_top label 86
12-22 13:04 DEBUG    idom 28 from label 86
12-22 13:04 DEBUG    find_def_from_bottom label 28
12-22 13:04 DEBUG    replaced with: $138binary_multiply.6 = norm_x.2 * norm_y
12-22 13:04 DEBUG    on stmt: $140call_method.7 = call $132load_method.3($138binary_multiply.6, func=$132load_method.3, args=[Var($138binary_multiply.6, distances.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $142binary_true_divide.8 = result / $140call_method.7
12-22 13:04 DEBUG    on stmt: $144binary_subtract.9 = $const126.0 - $142binary_true_divide.8
12-22 13:04 DEBUG    on stmt: $146return_value.10 = cast(value=$144binary_subtract.9)
12-22 13:04 DEBUG    on stmt: return $146return_value.10
12-22 13:04 DEBUG    Fix SSA violator on var result
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A6AFD0>
12-22 13:04 DEBUG    on stmt: x = arg(0, name=x)
12-22 13:04 DEBUG    on stmt: y = arg(1, name=y)
12-22 13:04 DEBUG    on stmt: result = const(float, 0.0)
12-22 13:04 DEBUG    first assign: result
12-22 13:04 DEBUG    replaced with: result = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_x = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_y = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $14load_global.3 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.5 = getattr(value=x, attr=shape)
12-22 13:04 DEBUG    on stmt: $const20.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22binary_subscr.7 = static_getitem(value=$18load_attr.5, index=0, index_var=$const20.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $24call_function.8 = call $14load_global.3($22binary_subscr.7, func=$14load_global.3, args=[Var($22binary_subscr.7, distances.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
12-22 13:04 DEBUG    on stmt: $phi28.0 = $26get_iter.9
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 28
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A6AFD0>
12-22 13:04 DEBUG    on stmt: norm_x.2 = phi(incoming_values=[Var(norm_x, distances.py:569), Var(norm_x.1, distances.py:573)], incoming_blocks=[0, 30])
12-22 13:04 DEBUG    on stmt: $28for_iter.1 = iternext(value=$phi28.0)
12-22 13:04 DEBUG    on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi30.1 = $28for_iter.2
12-22 13:04 DEBUG    on stmt: branch $28for_iter.3, 30, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A6AFD0>
12-22 13:04 DEBUG    on stmt: i = $phi30.1
12-22 13:04 DEBUG    on stmt: $38binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $44binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $46binary_multiply.9 = $38binary_subscr.5 * $44binary_subscr.8
12-22 13:04 DEBUG    on stmt: $48inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$46binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: result = $48inplace_add.10
12-22 13:04 DEBUG    replaced with: result.1 = $48inplace_add.10
12-22 13:04 DEBUG    on stmt: $58binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const60.15 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $62binary_power.16 = $58binary_subscr.14 ** $const60.15
12-22 13:04 DEBUG    on stmt: $64inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x.2, rhs=$62binary_power.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_x.1 = $64inplace_add.17
12-22 13:04 DEBUG    on stmt: $74binary_subscr.21 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const76.22 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $78binary_power.23 = $74binary_subscr.21 ** $const76.22
12-22 13:04 DEBUG    on stmt: $80inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$78binary_power.23, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_y = $80inplace_add.24
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A6AFD0>
12-22 13:04 DEBUG    on stmt: $const88.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $90compare_op.2 = norm_x.2 == $const88.1
12-22 13:04 DEBUG    on stmt: bool92 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $92pred, 94, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A6AFD0>
12-22 13:04 DEBUG    on stmt: $const96.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $98compare_op.2 = norm_y == $const96.1
12-22 13:04 DEBUG    on stmt: bool100 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $100pred, 102, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 102
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A6AFD0>
12-22 13:04 DEBUG    on stmt: $const102.0 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $104return_value.1 = cast(value=$const102.0)
12-22 13:04 DEBUG    on stmt: return $104return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A6AFD0>
12-22 13:04 DEBUG    on stmt: $const108.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = norm_x.2 == $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 122, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A6AFD0>
12-22 13:04 DEBUG    on stmt: $const116.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $118compare_op.2 = norm_y == $const116.1
12-22 13:04 DEBUG    on stmt: bool120 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $120pred = call bool120($118compare_op.2, func=bool120, args=(Var($118compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $120pred, 122, 126
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 122
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A6AFD0>
12-22 13:04 DEBUG    on stmt: $const122.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $124return_value.1 = cast(value=$const122.0)
12-22 13:04 DEBUG    on stmt: return $124return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3A6AFD0>
12-22 13:04 DEBUG    on stmt: $const126.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $132load_method.3 = getattr(value=$130load_global.2, attr=sqrt)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.6 = norm_x.2 * norm_y
12-22 13:04 DEBUG    on stmt: $140call_method.7 = call $132load_method.3($138binary_multiply.6, func=$132load_method.3, args=[Var($138binary_multiply.6, distances.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $142binary_true_divide.8 = result / $140call_method.7
12-22 13:04 DEBUG    on stmt: $144binary_subtract.9 = $const126.0 - $142binary_true_divide.8
12-22 13:04 DEBUG    on stmt: $146return_value.10 = cast(value=$144binary_subtract.9)
12-22 13:04 DEBUG    on stmt: return $146return_value.10
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001AEF3A6A8B0>],
             30: [<numba.core.ir.Assign object at 0x000001AEF3A6A580>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: x = arg(0, name=x)
12-22 13:04 DEBUG    on stmt: y = arg(1, name=y)
12-22 13:04 DEBUG    on stmt: result = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_x = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_y = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $14load_global.3 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.5 = getattr(value=x, attr=shape)
12-22 13:04 DEBUG    on stmt: $const20.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22binary_subscr.7 = static_getitem(value=$18load_attr.5, index=0, index_var=$const20.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $24call_function.8 = call $14load_global.3($22binary_subscr.7, func=$14load_global.3, args=[Var($22binary_subscr.7, distances.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
12-22 13:04 DEBUG    on stmt: $phi28.0 = $26get_iter.9
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 28
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: norm_x.2 = phi(incoming_values=[Var(norm_x, distances.py:569), Var(norm_x.1, distances.py:573)], incoming_blocks=[0, 30])
12-22 13:04 DEBUG    on stmt: $28for_iter.1 = iternext(value=$phi28.0)
12-22 13:04 DEBUG    on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi30.1 = $28for_iter.2
12-22 13:04 DEBUG    on stmt: branch $28for_iter.3, 30, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: i = $phi30.1
12-22 13:04 DEBUG    on stmt: $38binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $44binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $46binary_multiply.9 = $38binary_subscr.5 * $44binary_subscr.8
12-22 13:04 DEBUG    on stmt: $48inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$46binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='result' stmt=$48inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result, rhs=$46binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 30
12-22 13:04 DEBUG    idom 28 from label 30
12-22 13:04 DEBUG    find_def_from_bottom label 28
12-22 13:04 DEBUG    find_def_from_top label 28
12-22 13:04 DEBUG    insert phi node result.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
12-22 13:04 DEBUG    find_def_from_bottom label 0
12-22 13:04 DEBUG    incoming_def result = const(float, 0.0)
12-22 13:04 DEBUG    find_def_from_bottom label 30
12-22 13:04 DEBUG    incoming_def result.1 = $48inplace_add.10
12-22 13:04 DEBUG    replaced with: $48inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$46binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: result.1 = $48inplace_add.10
12-22 13:04 DEBUG    on stmt: $58binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const60.15 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $62binary_power.16 = $58binary_subscr.14 ** $const60.15
12-22 13:04 DEBUG    on stmt: $64inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x.2, rhs=$62binary_power.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_x.1 = $64inplace_add.17
12-22 13:04 DEBUG    on stmt: $74binary_subscr.21 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const76.22 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $78binary_power.23 = $74binary_subscr.21 ** $const76.22
12-22 13:04 DEBUG    on stmt: $80inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$78binary_power.23, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_y = $80inplace_add.24
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const88.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $90compare_op.2 = norm_x.2 == $const88.1
12-22 13:04 DEBUG    on stmt: bool92 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $92pred, 94, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const96.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $98compare_op.2 = norm_y == $const96.1
12-22 13:04 DEBUG    on stmt: bool100 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $100pred, 102, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 102
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const102.0 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $104return_value.1 = cast(value=$const102.0)
12-22 13:04 DEBUG    on stmt: return $104return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const108.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = norm_x.2 == $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 122, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const116.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $118compare_op.2 = norm_y == $const116.1
12-22 13:04 DEBUG    on stmt: bool120 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $120pred = call bool120($118compare_op.2, func=bool120, args=(Var($118compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $120pred, 122, 126
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 122
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const122.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $124return_value.1 = cast(value=$const122.0)
12-22 13:04 DEBUG    on stmt: return $124return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A4D100>
12-22 13:04 DEBUG    on stmt: $const126.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $132load_method.3 = getattr(value=$130load_global.2, attr=sqrt)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.6 = norm_x.2 * norm_y
12-22 13:04 DEBUG    on stmt: $140call_method.7 = call $132load_method.3($138binary_multiply.6, func=$132load_method.3, args=[Var($138binary_multiply.6, distances.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $142binary_true_divide.8 = result / $140call_method.7
12-22 13:04 DEBUG    find_def var='result' stmt=$142binary_true_divide.8 = result / $140call_method.7
12-22 13:04 DEBUG    find_def_from_top label 126
12-22 13:04 DEBUG    idom 114 from label 126
12-22 13:04 DEBUG    find_def_from_bottom label 114
12-22 13:04 DEBUG    find_def_from_top label 114
12-22 13:04 DEBUG    idom 106 from label 114
12-22 13:04 DEBUG    find_def_from_bottom label 106
12-22 13:04 DEBUG    find_def_from_top label 106
12-22 13:04 DEBUG    idom 86 from label 106
12-22 13:04 DEBUG    find_def_from_bottom label 86
12-22 13:04 DEBUG    find_def_from_top label 86
12-22 13:04 DEBUG    idom 28 from label 86
12-22 13:04 DEBUG    find_def_from_bottom label 28
12-22 13:04 DEBUG    replaced with: $142binary_true_divide.8 = result.2 / $140call_method.7
12-22 13:04 DEBUG    on stmt: $144binary_subtract.9 = $const126.0 - $142binary_true_divide.8
12-22 13:04 DEBUG    on stmt: $146return_value.10 = cast(value=$144binary_subtract.9)
12-22 13:04 DEBUG    on stmt: return $146return_value.10
12-22 13:04 DEBUG    Fix SSA violator on var norm_y
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF389F8E0>
12-22 13:04 DEBUG    on stmt: x = arg(0, name=x)
12-22 13:04 DEBUG    on stmt: y = arg(1, name=y)
12-22 13:04 DEBUG    on stmt: result = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_x = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_y = const(float, 0.0)
12-22 13:04 DEBUG    first assign: norm_y
12-22 13:04 DEBUG    replaced with: norm_y = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $14load_global.3 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.5 = getattr(value=x, attr=shape)
12-22 13:04 DEBUG    on stmt: $const20.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22binary_subscr.7 = static_getitem(value=$18load_attr.5, index=0, index_var=$const20.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $24call_function.8 = call $14load_global.3($22binary_subscr.7, func=$14load_global.3, args=[Var($22binary_subscr.7, distances.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
12-22 13:04 DEBUG    on stmt: $phi28.0 = $26get_iter.9
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 28
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF389F8E0>
12-22 13:04 DEBUG    on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:568), Var(result.1, distances.py:572)], incoming_blocks=[0, 30])
12-22 13:04 DEBUG    on stmt: norm_x.2 = phi(incoming_values=[Var(norm_x, distances.py:569), Var(norm_x.1, distances.py:573)], incoming_blocks=[0, 30])
12-22 13:04 DEBUG    on stmt: $28for_iter.1 = iternext(value=$phi28.0)
12-22 13:04 DEBUG    on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi30.1 = $28for_iter.2
12-22 13:04 DEBUG    on stmt: branch $28for_iter.3, 30, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF389F8E0>
12-22 13:04 DEBUG    on stmt: i = $phi30.1
12-22 13:04 DEBUG    on stmt: $38binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $44binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $46binary_multiply.9 = $38binary_subscr.5 * $44binary_subscr.8
12-22 13:04 DEBUG    on stmt: $48inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$46binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: result.1 = $48inplace_add.10
12-22 13:04 DEBUG    on stmt: $58binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const60.15 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $62binary_power.16 = $58binary_subscr.14 ** $const60.15
12-22 13:04 DEBUG    on stmt: $64inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x.2, rhs=$62binary_power.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_x.1 = $64inplace_add.17
12-22 13:04 DEBUG    on stmt: $74binary_subscr.21 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const76.22 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $78binary_power.23 = $74binary_subscr.21 ** $const76.22
12-22 13:04 DEBUG    on stmt: $80inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$78binary_power.23, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_y = $80inplace_add.24
12-22 13:04 DEBUG    replaced with: norm_y.1 = $80inplace_add.24
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF389F8E0>
12-22 13:04 DEBUG    on stmt: $const88.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $90compare_op.2 = norm_x.2 == $const88.1
12-22 13:04 DEBUG    on stmt: bool92 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $92pred, 94, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF389F8E0>
12-22 13:04 DEBUG    on stmt: $const96.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $98compare_op.2 = norm_y == $const96.1
12-22 13:04 DEBUG    on stmt: bool100 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $100pred, 102, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 102
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF389F8E0>
12-22 13:04 DEBUG    on stmt: $const102.0 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $104return_value.1 = cast(value=$const102.0)
12-22 13:04 DEBUG    on stmt: return $104return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF389F8E0>
12-22 13:04 DEBUG    on stmt: $const108.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = norm_x.2 == $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 122, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF389F8E0>
12-22 13:04 DEBUG    on stmt: $const116.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $118compare_op.2 = norm_y == $const116.1
12-22 13:04 DEBUG    on stmt: bool120 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $120pred = call bool120($118compare_op.2, func=bool120, args=(Var($118compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $120pred, 122, 126
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 122
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF389F8E0>
12-22 13:04 DEBUG    on stmt: $const122.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $124return_value.1 = cast(value=$const122.0)
12-22 13:04 DEBUG    on stmt: return $124return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF389F8E0>
12-22 13:04 DEBUG    on stmt: $const126.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $132load_method.3 = getattr(value=$130load_global.2, attr=sqrt)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.6 = norm_x.2 * norm_y
12-22 13:04 DEBUG    on stmt: $140call_method.7 = call $132load_method.3($138binary_multiply.6, func=$132load_method.3, args=[Var($138binary_multiply.6, distances.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $142binary_true_divide.8 = result.2 / $140call_method.7
12-22 13:04 DEBUG    on stmt: $144binary_subtract.9 = $const126.0 - $142binary_true_divide.8
12-22 13:04 DEBUG    on stmt: $146return_value.10 = cast(value=$144binary_subtract.9)
12-22 13:04 DEBUG    on stmt: return $146return_value.10
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001AEF389F640>],
             30: [<numba.core.ir.Assign object at 0x000001AEF3A4D7F0>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A6AF40>
12-22 13:04 DEBUG    on stmt: x = arg(0, name=x)
12-22 13:04 DEBUG    on stmt: y = arg(1, name=y)
12-22 13:04 DEBUG    on stmt: result = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_x = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: norm_y = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $14load_global.3 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.5 = getattr(value=x, attr=shape)
12-22 13:04 DEBUG    on stmt: $const20.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22binary_subscr.7 = static_getitem(value=$18load_attr.5, index=0, index_var=$const20.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $24call_function.8 = call $14load_global.3($22binary_subscr.7, func=$14load_global.3, args=[Var($22binary_subscr.7, distances.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $26get_iter.9 = getiter(value=$24call_function.8)
12-22 13:04 DEBUG    on stmt: $phi28.0 = $26get_iter.9
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 28
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A6AF40>
12-22 13:04 DEBUG    on stmt: result.2 = phi(incoming_values=[Var(result, distances.py:568), Var(result.1, distances.py:572)], incoming_blocks=[0, 30])
12-22 13:04 DEBUG    on stmt: norm_x.2 = phi(incoming_values=[Var(norm_x, distances.py:569), Var(norm_x.1, distances.py:573)], incoming_blocks=[0, 30])
12-22 13:04 DEBUG    on stmt: $28for_iter.1 = iternext(value=$phi28.0)
12-22 13:04 DEBUG    on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi30.1 = $28for_iter.2
12-22 13:04 DEBUG    on stmt: branch $28for_iter.3, 30, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A6AF40>
12-22 13:04 DEBUG    on stmt: i = $phi30.1
12-22 13:04 DEBUG    on stmt: $38binary_subscr.5 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $44binary_subscr.8 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $46binary_multiply.9 = $38binary_subscr.5 * $44binary_subscr.8
12-22 13:04 DEBUG    on stmt: $48inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=result.2, rhs=$46binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: result.1 = $48inplace_add.10
12-22 13:04 DEBUG    on stmt: $58binary_subscr.14 = getitem(value=x, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const60.15 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $62binary_power.16 = $58binary_subscr.14 ** $const60.15
12-22 13:04 DEBUG    on stmt: $64inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_x.2, rhs=$62binary_power.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_x.1 = $64inplace_add.17
12-22 13:04 DEBUG    on stmt: $74binary_subscr.21 = getitem(value=y, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const76.22 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $78binary_power.23 = $74binary_subscr.21 ** $const76.22
12-22 13:04 DEBUG    on stmt: $80inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$78binary_power.23, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='norm_y' stmt=$80inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y, rhs=$78binary_power.23, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 30
12-22 13:04 DEBUG    idom 28 from label 30
12-22 13:04 DEBUG    find_def_from_bottom label 28
12-22 13:04 DEBUG    find_def_from_top label 28
12-22 13:04 DEBUG    insert phi node norm_y.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
12-22 13:04 DEBUG    find_def_from_bottom label 0
12-22 13:04 DEBUG    incoming_def norm_y = const(float, 0.0)
12-22 13:04 DEBUG    find_def_from_bottom label 30
12-22 13:04 DEBUG    incoming_def norm_y.1 = $80inplace_add.24
12-22 13:04 DEBUG    replaced with: $80inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=norm_y.2, rhs=$78binary_power.23, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: norm_y.1 = $80inplace_add.24
12-22 13:04 DEBUG    on stmt: jump 28
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A6AF40>
12-22 13:04 DEBUG    on stmt: $const88.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $90compare_op.2 = norm_x.2 == $const88.1
12-22 13:04 DEBUG    on stmt: bool92 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $92pred, 94, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A6AF40>
12-22 13:04 DEBUG    on stmt: $const96.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $98compare_op.2 = norm_y == $const96.1
12-22 13:04 DEBUG    find_def var='norm_y' stmt=$98compare_op.2 = norm_y == $const96.1
12-22 13:04 DEBUG    find_def_from_top label 94
12-22 13:04 DEBUG    idom 86 from label 94
12-22 13:04 DEBUG    find_def_from_bottom label 86
12-22 13:04 DEBUG    find_def_from_top label 86
12-22 13:04 DEBUG    idom 28 from label 86
12-22 13:04 DEBUG    find_def_from_bottom label 28
12-22 13:04 DEBUG    replaced with: $98compare_op.2 = norm_y.2 == $const96.1
12-22 13:04 DEBUG    on stmt: bool100 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, distances.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $100pred, 102, 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 102
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A6AF40>
12-22 13:04 DEBUG    on stmt: $const102.0 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $104return_value.1 = cast(value=$const102.0)
12-22 13:04 DEBUG    on stmt: return $104return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A6AF40>
12-22 13:04 DEBUG    on stmt: $const108.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = norm_x.2 == $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 122, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A6AF40>
12-22 13:04 DEBUG    on stmt: $const116.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $118compare_op.2 = norm_y == $const116.1
12-22 13:04 DEBUG    find_def var='norm_y' stmt=$118compare_op.2 = norm_y == $const116.1
12-22 13:04 DEBUG    find_def_from_top label 114
12-22 13:04 DEBUG    idom 106 from label 114
12-22 13:04 DEBUG    find_def_from_bottom label 106
12-22 13:04 DEBUG    find_def_from_top label 106
12-22 13:04 DEBUG    idom 86 from label 106
12-22 13:04 DEBUG    find_def_from_bottom label 86
12-22 13:04 DEBUG    find_def_from_top label 86
12-22 13:04 DEBUG    idom 28 from label 86
12-22 13:04 DEBUG    find_def_from_bottom label 28
12-22 13:04 DEBUG    replaced with: $118compare_op.2 = norm_y.2 == $const116.1
12-22 13:04 DEBUG    on stmt: bool120 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $120pred = call bool120($118compare_op.2, func=bool120, args=(Var($118compare_op.2, distances.py:578),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $120pred, 122, 126
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 122
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A6AF40>
12-22 13:04 DEBUG    on stmt: $const122.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $124return_value.1 = cast(value=$const122.0)
12-22 13:04 DEBUG    on stmt: return $124return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3A6AF40>
12-22 13:04 DEBUG    on stmt: $const126.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $132load_method.3 = getattr(value=$130load_global.2, attr=sqrt)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.6 = norm_x.2 * norm_y
12-22 13:04 DEBUG    find_def var='norm_y' stmt=$138binary_multiply.6 = norm_x.2 * norm_y
12-22 13:04 DEBUG    find_def_from_top label 126
12-22 13:04 DEBUG    idom 114 from label 126
12-22 13:04 DEBUG    find_def_from_bottom label 114
12-22 13:04 DEBUG    find_def_from_top label 114
12-22 13:04 DEBUG    idom 106 from label 114
12-22 13:04 DEBUG    find_def_from_bottom label 106
12-22 13:04 DEBUG    find_def_from_top label 106
12-22 13:04 DEBUG    idom 86 from label 106
12-22 13:04 DEBUG    find_def_from_bottom label 86
12-22 13:04 DEBUG    find_def_from_top label 86
12-22 13:04 DEBUG    idom 28 from label 86
12-22 13:04 DEBUG    find_def_from_bottom label 28
12-22 13:04 DEBUG    replaced with: $138binary_multiply.6 = norm_x.2 * norm_y.2
12-22 13:04 DEBUG    on stmt: $140call_method.7 = call $132load_method.3($138binary_multiply.6, func=$132load_method.3, args=[Var($138binary_multiply.6, distances.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $142binary_true_divide.8 = result.2 / $140call_method.7
12-22 13:04 DEBUG    on stmt: $144binary_subtract.9 = $const126.0 - $142binary_true_divide.8
12-22 13:04 DEBUG    on stmt: $146return_value.10 = cast(value=$144binary_subtract.9)
12-22 13:04 DEBUG    on stmt: return $146return_value.10
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
          96	JUMP_FORWARD(arg=8, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=237)
         138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	JUMP_ABSOLUTE(arg=130, lineno=241)
>        172	LOAD_FAST(arg=3, lineno=243)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=243)
         176	LOAD_CONST(arg=8, lineno=243)
         178	LOAD_FAST(arg=2, lineno=243)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         182	RETURN_VALUE(arg=None, lineno=243)
>        184	LOAD_FAST(arg=2, lineno=243)
         186	RETURN_VALUE(arg=None, lineno=243)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=214)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
12-22 13:04 DEBUG    stack ['$2load_deref.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
12-22 13:04 DEBUG    stack ['$2load_deref.0', '$const4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
12-22 13:04 DEBUG    stack ['$6call_function.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
12-22 13:04 DEBUG    stack ['$10load_deref.3']
12-22 13:04 DEBUG    dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
12-22 13:04 DEBUG    stack ['$10load_deref.3', '$a12.4']
12-22 13:04 DEBUG    dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
12-22 13:04 DEBUG    stack ['$14call_function.5']
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
12-22 13:04 DEBUG    stack ['$b18.6']
12-22 13:04 DEBUG    dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
12-22 13:04 DEBUG    stack ['$b18.6', '$const20.7']
12-22 13:04 DEBUG    dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=218)
12-22 13:04 DEBUG    stack ['$22compare_op.8']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=26 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
12-22 13:04 DEBUG    stack ['$const26.0']
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
12-22 13:04 DEBUG    stack ['$b30.1']
12-22 13:04 DEBUG    dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
12-22 13:04 DEBUG    stack ['$32unary_negative.2']
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
12-22 13:04 DEBUG    stack ['$exp36.3']
12-22 13:04 DEBUG    dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
12-22 13:04 DEBUG    stack ['$exp36.3', '$const38.4']
12-22 13:04 DEBUG    dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=221)
12-22 13:04 DEBUG    stack ['$40compare_op.5']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=98 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
12-22 13:04 DEBUG    stack ['$const98.0']
12-22 13:04 DEBUG    dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
12-22 13:04 DEBUG    stack ['$b102.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=44 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
12-22 13:04 DEBUG    stack ['$44load_global.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=48 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=223)
12-22 13:04 DEBUG    stack ['$48load_deref.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=106 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
12-22 13:04 DEBUG    stack ['$exp106.0']
12-22 13:04 DEBUG    dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
12-22 13:04 DEBUG    stack ['$exp106.0', '$const108.1']
12-22 13:04 DEBUG    dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=234)
12-22 13:04 DEBUG    stack ['$110compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=52 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
12-22 13:04 DEBUG    stack ['$a52.0']
12-22 13:04 DEBUG    dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
12-22 13:04 DEBUG    stack ['$a52.0', '$const54.1']
12-22 13:04 DEBUG    dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=224)
12-22 13:04 DEBUG    stack ['$56compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=114 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
12-22 13:04 DEBUG    stack ['$114load_global.0']
12-22 13:04 DEBUG    dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
12-22 13:04 DEBUG    stack ['$116load_method.1']
12-22 13:04 DEBUG    dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
12-22 13:04 DEBUG    stack ['$116load_method.1', '$a118.2']
12-22 13:04 DEBUG    dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
12-22 13:04 DEBUG    stack ['$116load_method.1', '$a118.2', '$120load_global.3']
12-22 13:04 DEBUG    dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
12-22 13:04 DEBUG    stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
12-22 13:04 DEBUG    dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
12-22 13:04 DEBUG    stack ['$116load_method.1', '$a118.2', '$124call_function.5']
12-22 13:04 DEBUG    dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
12-22 13:04 DEBUG    stack ['$126call_method.6']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=130 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
12-22 13:04 DEBUG    stack ['$exp130.0']
12-22 13:04 DEBUG    dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
12-22 13:04 DEBUG    stack ['$exp130.0', '$const132.1']
12-22 13:04 DEBUG    dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=237)
12-22 13:04 DEBUG    stack ['$134compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=60 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=225)
12-22 13:04 DEBUG    stack ['$60load_deref.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=76 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
12-22 13:04 DEBUG    stack ['$a76.0']
12-22 13:04 DEBUG    dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
12-22 13:04 DEBUG    stack ['$a76.0', '$const78.1']
12-22 13:04 DEBUG    dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=229)
12-22 13:04 DEBUG    stack ['$80compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=138 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
12-22 13:04 DEBUG    stack ['$exp138.0']
12-22 13:04 DEBUG    dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
12-22 13:04 DEBUG    stack ['$exp138.0', '$const140.1']
12-22 13:04 DEBUG    dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=238)
12-22 13:04 DEBUG    stack ['$142binary_and.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=172 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=243)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=243)
12-22 13:04 DEBUG    stack ['$invert172.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=64 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
12-22 13:04 DEBUG    stack ['$64load_deref.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=68 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
12-22 13:04 DEBUG    stack ['$68load_global.0']
12-22 13:04 DEBUG    dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
12-22 13:04 DEBUG    stack ['$68load_global.0', '$const70.1']
12-22 13:04 DEBUG    dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
12-22 13:04 DEBUG    stack ['$72call_function.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=84 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
12-22 13:04 DEBUG    stack ['$a84.0']
12-22 13:04 DEBUG    dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
12-22 13:04 DEBUG    stack ['$a84.0', '$const86.1']
12-22 13:04 DEBUG    dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=229)
12-22 13:04 DEBUG    stack ['$88compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=146 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
12-22 13:04 DEBUG    stack ['$r146.0']
12-22 13:04 DEBUG    dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
12-22 13:04 DEBUG    stack ['$r146.0', '$a148.1']
12-22 13:04 DEBUG    dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
12-22 13:04 DEBUG    stack ['$150inplace_multiply.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=154 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
12-22 13:04 DEBUG    stack ['$exp154.0']
12-22 13:04 DEBUG    dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
12-22 13:04 DEBUG    stack ['$exp154.0', '$const156.1']
12-22 13:04 DEBUG    dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
12-22 13:04 DEBUG    stack ['$158inplace_rshift.2']
12-22 13:04 DEBUG    dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
12-22 13:04 DEBUG    stack ['$a162.3']
12-22 13:04 DEBUG    dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
12-22 13:04 DEBUG    stack ['$a162.3', '$a164.4']
12-22 13:04 DEBUG    dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
12-22 13:04 DEBUG    stack ['$166inplace_multiply.5']
12-22 13:04 DEBUG    dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=241)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=176 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=243)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=243)
12-22 13:04 DEBUG    stack ['$const176.0']
12-22 13:04 DEBUG    dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
12-22 13:04 DEBUG    stack ['$const176.0', '$r178.1']
12-22 13:04 DEBUG    dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=243)
12-22 13:04 DEBUG    stack ['$180binary_true_divide.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=184 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=243)
12-22 13:04 DEBUG    stack ['$r184.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=92 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
12-22 13:04 DEBUG    stack ['$const92.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=130 nstack_initial=0)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float32)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float32)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' (built-in)>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_deref.3 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const20.7 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22compare_op.8 = b < $const20.7
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $24pred, 26, 98
12-22 13:04 DEBUG    ==== SSA block analysis pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: invert = const(bool, True)
12-22 13:04 DEBUG    on stmt: exp = unary(fn=<built-in function neg>, value=b)
12-22 13:04 DEBUG    on stmt: $const38.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $40compare_op.5 = exp < $const38.4
12-22 13:04 DEBUG    on stmt: bool42 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $42pred, 44, 48
12-22 13:04 DEBUG    ==== SSA block analysis pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'OverflowError'>
12-22 13:04 DEBUG    ==== SSA block analysis pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: $48load_deref.0 = freevar(is_integer: False)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block analysis pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: invert = const(bool, False)
12-22 13:04 DEBUG    on stmt: exp = b
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block analysis pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: $const108.1 = const(int, 65536)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = exp > $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 114, 130
12-22 13:04 DEBUG    ==== SSA block analysis pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
12-22 13:04 DEBUG    on stmt: $120load_global.3 = global(float: <class 'float'>)
12-22 13:04 DEBUG    on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $128return_value.7 = cast(value=$126call_method.6)
12-22 13:04 DEBUG    on stmt: return $128return_value.7
12-22 13:04 DEBUG    ==== SSA block analysis pass on 130
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: $const132.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $134compare_op.2 = exp != $const132.1
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 138, 172
12-22 13:04 DEBUG    ==== SSA block analysis pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: $const140.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $142binary_and.2 = exp & $const140.1
12-22 13:04 DEBUG    on stmt: bool144 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $144pred, 146, 154
12-22 13:04 DEBUG    ==== SSA block analysis pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: r = $150inplace_multiply.2
12-22 13:04 DEBUG    on stmt: jump 154
12-22 13:04 DEBUG    ==== SSA block analysis pass on 154
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: $const156.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: exp = $158inplace_rshift.2
12-22 13:04 DEBUG    on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: a.1 = $166inplace_multiply.5
12-22 13:04 DEBUG    on stmt: jump 130
12-22 13:04 DEBUG    ==== SSA block analysis pass on 172
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: bool174 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $174pred, 176, 184
12-22 13:04 DEBUG    ==== SSA block analysis pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: $const176.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $180binary_true_divide.2 = $const176.0 / r
12-22 13:04 DEBUG    on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
12-22 13:04 DEBUG    on stmt: return $182return_value.3
12-22 13:04 DEBUG    ==== SSA block analysis pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33BCBB0>
12-22 13:04 DEBUG    on stmt: $186return_value.1 = cast(value=r)
12-22 13:04 DEBUG    on stmt: return $186return_value.1
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x000001AEF37E6040>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF3752520>],
             '$112pred': [<numba.core.ir.Assign object at 0x000001AEF3752400>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x000001AEF3752DC0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x000001AEF3752CD0>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x000001AEF3752220>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x000001AEF393D940>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x000001AEF3752250>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x000001AEF3732460>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF3732820>],
             '$136pred': [<numba.core.ir.Assign object at 0x000001AEF3732250>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x000001AEF3533F40>],
             '$144pred': [<numba.core.ir.Assign object at 0x000001AEF3533F10>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x000001AEF33CA670>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x000001AEF3552400>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x000001AEF369CDF0>],
             '$174pred': [<numba.core.ir.Assign object at 0x000001AEF369C880>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x000001AEF369C7F0>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x000001AEF369C3D0>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x000001AEF3463490>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x000001AEF37E6A00>],
             '$24pred': [<numba.core.ir.Assign object at 0x000001AEF37E6940>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF398FBB0>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x000001AEF37F3AF0>],
             '$42pred': [<numba.core.ir.Assign object at 0x000001AEF37F3D60>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x000001AEF37F3E80>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF3802910>],
             '$50pred': [<numba.core.ir.Assign object at 0x000001AEF3802FD0>],
             '$const108.1': [<numba.core.ir.Assign object at 0x000001AEF3752640>],
             '$const132.1': [<numba.core.ir.Assign object at 0x000001AEF3732730>],
             '$const140.1': [<numba.core.ir.Assign object at 0x000001AEF35339D0>],
             '$const156.1': [<numba.core.ir.Assign object at 0x000001AEF3552910>],
             '$const176.0': [<numba.core.ir.Assign object at 0x000001AEF369CB50>],
             '$const20.7': [<numba.core.ir.Assign object at 0x000001AEF37E6D00>],
             '$const38.4': [<numba.core.ir.Assign object at 0x000001AEF37F3940>],
             '$const4.1': [<numba.core.ir.Assign object at 0x000001AEF37E65E0>],
             'a': [<numba.core.ir.Assign object at 0x000001AEF397BC40>],
             'a.1': [<numba.core.ir.Assign object at 0x000001AEF37E6880>,
                     <numba.core.ir.Assign object at 0x000001AEF369CEB0>],
             'b': [<numba.core.ir.Assign object at 0x000001AEF397BE50>],
             'bool112': [<numba.core.ir.Assign object at 0x000001AEF3752880>],
             'bool136': [<numba.core.ir.Assign object at 0x000001AEF37325B0>],
             'bool144': [<numba.core.ir.Assign object at 0x000001AEF3533E50>],
             'bool174': [<numba.core.ir.Assign object at 0x000001AEF369C460>],
             'bool24': [<numba.core.ir.Assign object at 0x000001AEF37E6FD0>],
             'bool42': [<numba.core.ir.Assign object at 0x000001AEF37F3BB0>],
             'bool50': [<numba.core.ir.Assign object at 0x000001AEF38028B0>],
             'exp': [<numba.core.ir.Assign object at 0x000001AEF37F3610>,
                     <numba.core.ir.Assign object at 0x000001AEF372E7F0>,
                     <numba.core.ir.Assign object at 0x000001AEF3552340>],
             'invert': [<numba.core.ir.Assign object at 0x000001AEF37F3130>,
                        <numba.core.ir.Assign object at 0x000001AEF372E6D0>],
             'r': [<numba.core.ir.Assign object at 0x000001AEF37E6130>,
                   <numba.core.ir.Assign object at 0x000001AEF33CAE50>]})
12-22 13:04 DEBUG    SSA violators {'exp', 'r', 'invert', 'a.1'}
12-22 13:04 DEBUG    Fix SSA violator on var exp
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_deref.3 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const20.7 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22compare_op.8 = b < $const20.7
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $24pred, 26, 98
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: invert = const(bool, True)
12-22 13:04 DEBUG    on stmt: exp = unary(fn=<built-in function neg>, value=b)
12-22 13:04 DEBUG    first assign: exp
12-22 13:04 DEBUG    replaced with: exp = unary(fn=<built-in function neg>, value=b)
12-22 13:04 DEBUG    on stmt: $const38.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $40compare_op.5 = exp < $const38.4
12-22 13:04 DEBUG    on stmt: bool42 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $42pred, 44, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'OverflowError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $48load_deref.0 = freevar(is_integer: False)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: invert = const(bool, False)
12-22 13:04 DEBUG    on stmt: exp = b
12-22 13:04 DEBUG    replaced with: exp.1 = b
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const108.1 = const(int, 65536)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = exp > $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 114, 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
12-22 13:04 DEBUG    on stmt: $120load_global.3 = global(float: <class 'float'>)
12-22 13:04 DEBUG    on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $128return_value.7 = cast(value=$126call_method.6)
12-22 13:04 DEBUG    on stmt: return $128return_value.7
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 130
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const132.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $134compare_op.2 = exp != $const132.1
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 138, 172
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const140.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $142binary_and.2 = exp & $const140.1
12-22 13:04 DEBUG    on stmt: bool144 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $144pred, 146, 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: r = $150inplace_multiply.2
12-22 13:04 DEBUG    on stmt: jump 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 154
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const156.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: exp = $158inplace_rshift.2
12-22 13:04 DEBUG    replaced with: exp.2 = $158inplace_rshift.2
12-22 13:04 DEBUG    on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: a.1 = $166inplace_multiply.5
12-22 13:04 DEBUG    on stmt: jump 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 172
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: bool174 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $174pred, 176, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const176.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $180binary_true_divide.2 = $const176.0 / r
12-22 13:04 DEBUG    on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
12-22 13:04 DEBUG    on stmt: return $182return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $186return_value.1 = cast(value=r)
12-22 13:04 DEBUG    on stmt: return $186return_value.1
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x000001AEF3435CD0>],
             98: [<numba.core.ir.Assign object at 0x000001AEF3435700>],
             154: [<numba.core.ir.Assign object at 0x000001AEF3463400>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_deref.3 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const20.7 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22compare_op.8 = b < $const20.7
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $24pred, 26, 98
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: invert = const(bool, True)
12-22 13:04 DEBUG    on stmt: exp = unary(fn=<built-in function neg>, value=b)
12-22 13:04 DEBUG    on stmt: $const38.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $40compare_op.5 = exp < $const38.4
12-22 13:04 DEBUG    find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
12-22 13:04 DEBUG    on stmt: bool42 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $42pred, 44, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'OverflowError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $48load_deref.0 = freevar(is_integer: False)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: invert = const(bool, False)
12-22 13:04 DEBUG    on stmt: exp.1 = b
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const108.1 = const(int, 65536)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = exp > $const108.1
12-22 13:04 DEBUG    find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
12-22 13:04 DEBUG    find_def_from_top label 106
12-22 13:04 DEBUG    insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
12-22 13:04 DEBUG    find_def_from_bottom label 48
12-22 13:04 DEBUG    find_def_from_top label 48
12-22 13:04 DEBUG    idom 26 from label 48
12-22 13:04 DEBUG    find_def_from_bottom label 26
12-22 13:04 DEBUG    incoming_def exp = unary(fn=<built-in function neg>, value=b)
12-22 13:04 DEBUG    find_def_from_bottom label 98
12-22 13:04 DEBUG    incoming_def exp.1 = b
12-22 13:04 DEBUG    replaced with: $110compare_op.2 = exp.3 > $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 114, 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
12-22 13:04 DEBUG    on stmt: $120load_global.3 = global(float: <class 'float'>)
12-22 13:04 DEBUG    on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $128return_value.7 = cast(value=$126call_method.6)
12-22 13:04 DEBUG    on stmt: return $128return_value.7
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 130
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const132.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $134compare_op.2 = exp != $const132.1
12-22 13:04 DEBUG    find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
12-22 13:04 DEBUG    find_def_from_top label 130
12-22 13:04 DEBUG    insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
12-22 13:04 DEBUG    find_def_from_bottom label 106
12-22 13:04 DEBUG    incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
12-22 13:04 DEBUG    find_def_from_bottom label 154
12-22 13:04 DEBUG    incoming_def exp.2 = $158inplace_rshift.2
12-22 13:04 DEBUG    replaced with: $134compare_op.2 = exp.4 != $const132.1
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 138, 172
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const140.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $142binary_and.2 = exp & $const140.1
12-22 13:04 DEBUG    find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
12-22 13:04 DEBUG    find_def_from_top label 138
12-22 13:04 DEBUG    idom 130 from label 138
12-22 13:04 DEBUG    find_def_from_bottom label 130
12-22 13:04 DEBUG    replaced with: $142binary_and.2 = exp.4 & $const140.1
12-22 13:04 DEBUG    on stmt: bool144 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $144pred, 146, 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: r = $150inplace_multiply.2
12-22 13:04 DEBUG    on stmt: jump 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 154
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const156.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 154
12-22 13:04 DEBUG    idom 138 from label 154
12-22 13:04 DEBUG    find_def_from_bottom label 138
12-22 13:04 DEBUG    find_def_from_top label 138
12-22 13:04 DEBUG    idom 130 from label 138
12-22 13:04 DEBUG    find_def_from_bottom label 130
12-22 13:04 DEBUG    replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: exp.2 = $158inplace_rshift.2
12-22 13:04 DEBUG    on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: a.1 = $166inplace_multiply.5
12-22 13:04 DEBUG    on stmt: jump 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 172
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: bool174 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $174pred, 176, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const176.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $180binary_true_divide.2 = $const176.0 / r
12-22 13:04 DEBUG    on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
12-22 13:04 DEBUG    on stmt: return $182return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $186return_value.1 = cast(value=r)
12-22 13:04 DEBUG    on stmt: return $186return_value.1
12-22 13:04 DEBUG    Fix SSA violator on var r
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    first assign: r
12-22 13:04 DEBUG    replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_deref.3 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const20.7 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22compare_op.8 = b < $const20.7
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $24pred, 26, 98
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: invert = const(bool, True)
12-22 13:04 DEBUG    on stmt: exp = unary(fn=<built-in function neg>, value=b)
12-22 13:04 DEBUG    on stmt: $const38.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $40compare_op.5 = exp < $const38.4
12-22 13:04 DEBUG    on stmt: bool42 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $42pred, 44, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'OverflowError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: $48load_deref.0 = freevar(is_integer: False)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: invert = const(bool, False)
12-22 13:04 DEBUG    on stmt: exp.1 = b
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
12-22 13:04 DEBUG    on stmt: $const108.1 = const(int, 65536)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = exp.3 > $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 114, 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
12-22 13:04 DEBUG    on stmt: $120load_global.3 = global(float: <class 'float'>)
12-22 13:04 DEBUG    on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $128return_value.7 = cast(value=$126call_method.6)
12-22 13:04 DEBUG    on stmt: return $128return_value.7
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 130
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
12-22 13:04 DEBUG    on stmt: $const132.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $134compare_op.2 = exp.4 != $const132.1
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 138, 172
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: $const140.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $142binary_and.2 = exp.4 & $const140.1
12-22 13:04 DEBUG    on stmt: bool144 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $144pred, 146, 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: r = $150inplace_multiply.2
12-22 13:04 DEBUG    replaced with: r.1 = $150inplace_multiply.2
12-22 13:04 DEBUG    on stmt: jump 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 154
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: $const156.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: exp.2 = $158inplace_rshift.2
12-22 13:04 DEBUG    on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: a.1 = $166inplace_multiply.5
12-22 13:04 DEBUG    on stmt: jump 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 172
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: bool174 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $174pred, 176, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: $const176.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $180binary_true_divide.2 = $const176.0 / r
12-22 13:04 DEBUG    on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
12-22 13:04 DEBUG    on stmt: return $182return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34634F0>
12-22 13:04 DEBUG    on stmt: $186return_value.1 = cast(value=r)
12-22 13:04 DEBUG    on stmt: return $186return_value.1
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001AEF3463BB0>],
             146: [<numba.core.ir.Assign object at 0x000001AEF3435130>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_deref.3 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const20.7 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22compare_op.8 = b < $const20.7
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $24pred, 26, 98
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: invert = const(bool, True)
12-22 13:04 DEBUG    on stmt: exp = unary(fn=<built-in function neg>, value=b)
12-22 13:04 DEBUG    on stmt: $const38.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $40compare_op.5 = exp < $const38.4
12-22 13:04 DEBUG    on stmt: bool42 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $42pred, 44, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'OverflowError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: $48load_deref.0 = freevar(is_integer: False)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: invert = const(bool, False)
12-22 13:04 DEBUG    on stmt: exp.1 = b
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
12-22 13:04 DEBUG    on stmt: $const108.1 = const(int, 65536)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = exp.3 > $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 114, 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
12-22 13:04 DEBUG    on stmt: $120load_global.3 = global(float: <class 'float'>)
12-22 13:04 DEBUG    on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $128return_value.7 = cast(value=$126call_method.6)
12-22 13:04 DEBUG    on stmt: return $128return_value.7
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 130
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
12-22 13:04 DEBUG    on stmt: $const132.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $134compare_op.2 = exp.4 != $const132.1
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 138, 172
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: $const140.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $142binary_and.2 = exp.4 & $const140.1
12-22 13:04 DEBUG    on stmt: bool144 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $144pred, 146, 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 146
12-22 13:04 DEBUG    idom 138 from label 146
12-22 13:04 DEBUG    find_def_from_bottom label 138
12-22 13:04 DEBUG    find_def_from_top label 138
12-22 13:04 DEBUG    idom 130 from label 138
12-22 13:04 DEBUG    find_def_from_bottom label 130
12-22 13:04 DEBUG    find_def_from_top label 130
12-22 13:04 DEBUG    insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
12-22 13:04 DEBUG    find_def_from_bottom label 106
12-22 13:04 DEBUG    find_def_from_top label 106
12-22 13:04 DEBUG    idom 0 from label 106
12-22 13:04 DEBUG    find_def_from_bottom label 0
12-22 13:04 DEBUG    incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_bottom label 154
12-22 13:04 DEBUG    find_def_from_top label 154
12-22 13:04 DEBUG    insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
12-22 13:04 DEBUG    find_def_from_bottom label 138
12-22 13:04 DEBUG    find_def_from_top label 138
12-22 13:04 DEBUG    idom 130 from label 138
12-22 13:04 DEBUG    find_def_from_bottom label 130
12-22 13:04 DEBUG    incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[106])
12-22 13:04 DEBUG    find_def_from_bottom label 146
12-22 13:04 DEBUG    incoming_def r.1 = $150inplace_multiply.2
12-22 13:04 DEBUG    incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
12-22 13:04 DEBUG    replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: r.1 = $150inplace_multiply.2
12-22 13:04 DEBUG    on stmt: jump 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 154
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: $const156.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: exp.2 = $158inplace_rshift.2
12-22 13:04 DEBUG    on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: a.1 = $166inplace_multiply.5
12-22 13:04 DEBUG    on stmt: jump 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 172
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: bool174 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $174pred, 176, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: $const176.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $180binary_true_divide.2 = $const176.0 / r
12-22 13:04 DEBUG    find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
12-22 13:04 DEBUG    find_def_from_top label 176
12-22 13:04 DEBUG    idom 172 from label 176
12-22 13:04 DEBUG    find_def_from_bottom label 172
12-22 13:04 DEBUG    find_def_from_top label 172
12-22 13:04 DEBUG    idom 130 from label 172
12-22 13:04 DEBUG    find_def_from_bottom label 130
12-22 13:04 DEBUG    replaced with: $180binary_true_divide.2 = $const176.0 / r.2
12-22 13:04 DEBUG    on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
12-22 13:04 DEBUG    on stmt: return $182return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3947AC0>
12-22 13:04 DEBUG    on stmt: $186return_value.1 = cast(value=r)
12-22 13:04 DEBUG    find_def var='r' stmt=$186return_value.1 = cast(value=r)
12-22 13:04 DEBUG    find_def_from_top label 184
12-22 13:04 DEBUG    idom 172 from label 184
12-22 13:04 DEBUG    find_def_from_bottom label 172
12-22 13:04 DEBUG    find_def_from_top label 172
12-22 13:04 DEBUG    idom 130 from label 172
12-22 13:04 DEBUG    find_def_from_bottom label 130
12-22 13:04 DEBUG    replaced with: $186return_value.1 = cast(value=r.2)
12-22 13:04 DEBUG    on stmt: return $186return_value.1
12-22 13:04 DEBUG    Fix SSA violator on var invert
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_deref.3 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const20.7 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22compare_op.8 = b < $const20.7
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $24pred, 26, 98
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: invert = const(bool, True)
12-22 13:04 DEBUG    first assign: invert
12-22 13:04 DEBUG    replaced with: invert = const(bool, True)
12-22 13:04 DEBUG    on stmt: exp = unary(fn=<built-in function neg>, value=b)
12-22 13:04 DEBUG    on stmt: $const38.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $40compare_op.5 = exp < $const38.4
12-22 13:04 DEBUG    on stmt: bool42 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $42pred, 44, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'OverflowError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: $48load_deref.0 = freevar(is_integer: False)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: invert = const(bool, False)
12-22 13:04 DEBUG    replaced with: invert.1 = const(bool, False)
12-22 13:04 DEBUG    on stmt: exp.1 = b
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
12-22 13:04 DEBUG    on stmt: $const108.1 = const(int, 65536)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = exp.3 > $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 114, 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
12-22 13:04 DEBUG    on stmt: $120load_global.3 = global(float: <class 'float'>)
12-22 13:04 DEBUG    on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $128return_value.7 = cast(value=$126call_method.6)
12-22 13:04 DEBUG    on stmt: return $128return_value.7
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 130
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
12-22 13:04 DEBUG    on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
12-22 13:04 DEBUG    on stmt: $const132.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $134compare_op.2 = exp.4 != $const132.1
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 138, 172
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: $const140.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $142binary_and.2 = exp.4 & $const140.1
12-22 13:04 DEBUG    on stmt: bool144 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $144pred, 146, 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: r.1 = $150inplace_multiply.2
12-22 13:04 DEBUG    on stmt: jump 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 154
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
12-22 13:04 DEBUG    on stmt: $const156.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: exp.2 = $158inplace_rshift.2
12-22 13:04 DEBUG    on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: a.1 = $166inplace_multiply.5
12-22 13:04 DEBUG    on stmt: jump 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 172
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: bool174 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $174pred, 176, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: $const176.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $180binary_true_divide.2 = $const176.0 / r.2
12-22 13:04 DEBUG    on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
12-22 13:04 DEBUG    on stmt: return $182return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3986BB0>
12-22 13:04 DEBUG    on stmt: $186return_value.1 = cast(value=r.2)
12-22 13:04 DEBUG    on stmt: return $186return_value.1
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x000001AEF34359A0>],
             98: [<numba.core.ir.Assign object at 0x000001AEF3435070>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_deref.3 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const20.7 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22compare_op.8 = b < $const20.7
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $24pred, 26, 98
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: invert = const(bool, True)
12-22 13:04 DEBUG    on stmt: exp = unary(fn=<built-in function neg>, value=b)
12-22 13:04 DEBUG    on stmt: $const38.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $40compare_op.5 = exp < $const38.4
12-22 13:04 DEBUG    on stmt: bool42 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $42pred, 44, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'OverflowError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: $48load_deref.0 = freevar(is_integer: False)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: invert.1 = const(bool, False)
12-22 13:04 DEBUG    on stmt: exp.1 = b
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
12-22 13:04 DEBUG    on stmt: $const108.1 = const(int, 65536)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = exp.3 > $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 114, 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
12-22 13:04 DEBUG    on stmt: $120load_global.3 = global(float: <class 'float'>)
12-22 13:04 DEBUG    on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $128return_value.7 = cast(value=$126call_method.6)
12-22 13:04 DEBUG    on stmt: return $128return_value.7
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 130
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
12-22 13:04 DEBUG    on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
12-22 13:04 DEBUG    on stmt: $const132.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $134compare_op.2 = exp.4 != $const132.1
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 138, 172
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: $const140.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $142binary_and.2 = exp.4 & $const140.1
12-22 13:04 DEBUG    on stmt: bool144 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $144pred, 146, 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: r.1 = $150inplace_multiply.2
12-22 13:04 DEBUG    on stmt: jump 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 154
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
12-22 13:04 DEBUG    on stmt: $const156.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: exp.2 = $158inplace_rshift.2
12-22 13:04 DEBUG    on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: a.1 = $166inplace_multiply.5
12-22 13:04 DEBUG    on stmt: jump 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 172
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: bool174 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 172
12-22 13:04 DEBUG    idom 130 from label 172
12-22 13:04 DEBUG    find_def_from_bottom label 130
12-22 13:04 DEBUG    find_def_from_top label 130
12-22 13:04 DEBUG    idom 106 from label 130
12-22 13:04 DEBUG    find_def_from_bottom label 106
12-22 13:04 DEBUG    find_def_from_top label 106
12-22 13:04 DEBUG    insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
12-22 13:04 DEBUG    find_def_from_bottom label 48
12-22 13:04 DEBUG    find_def_from_top label 48
12-22 13:04 DEBUG    idom 26 from label 48
12-22 13:04 DEBUG    find_def_from_bottom label 26
12-22 13:04 DEBUG    incoming_def invert = const(bool, True)
12-22 13:04 DEBUG    find_def_from_bottom label 98
12-22 13:04 DEBUG    incoming_def invert.1 = const(bool, False)
12-22 13:04 DEBUG    replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $174pred, 176, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: $const176.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $180binary_true_divide.2 = $const176.0 / r.2
12-22 13:04 DEBUG    on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
12-22 13:04 DEBUG    on stmt: return $182return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3463EE0>
12-22 13:04 DEBUG    on stmt: $186return_value.1 = cast(value=r.2)
12-22 13:04 DEBUG    on stmt: return $186return_value.1
12-22 13:04 DEBUG    Fix SSA violator on var a.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_deref.3 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    first assign: a.1
12-22 13:04 DEBUG    replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const20.7 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22compare_op.8 = b < $const20.7
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $24pred, 26, 98
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: invert = const(bool, True)
12-22 13:04 DEBUG    on stmt: exp = unary(fn=<built-in function neg>, value=b)
12-22 13:04 DEBUG    on stmt: $const38.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $40compare_op.5 = exp < $const38.4
12-22 13:04 DEBUG    on stmt: bool42 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $42pred, 44, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'OverflowError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $48load_deref.0 = freevar(is_integer: False)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: invert.1 = const(bool, False)
12-22 13:04 DEBUG    on stmt: exp.1 = b
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
12-22 13:04 DEBUG    on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
12-22 13:04 DEBUG    on stmt: $const108.1 = const(int, 65536)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = exp.3 > $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 114, 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
12-22 13:04 DEBUG    on stmt: $120load_global.3 = global(float: <class 'float'>)
12-22 13:04 DEBUG    on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $128return_value.7 = cast(value=$126call_method.6)
12-22 13:04 DEBUG    on stmt: return $128return_value.7
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 130
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
12-22 13:04 DEBUG    on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
12-22 13:04 DEBUG    on stmt: $const132.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $134compare_op.2 = exp.4 != $const132.1
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 138, 172
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const140.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $142binary_and.2 = exp.4 & $const140.1
12-22 13:04 DEBUG    on stmt: bool144 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $144pred, 146, 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: r.1 = $150inplace_multiply.2
12-22 13:04 DEBUG    on stmt: jump 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 154
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
12-22 13:04 DEBUG    on stmt: $const156.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: exp.2 = $158inplace_rshift.2
12-22 13:04 DEBUG    on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: a.1 = $166inplace_multiply.5
12-22 13:04 DEBUG    replaced with: a.1.1 = $166inplace_multiply.5
12-22 13:04 DEBUG    on stmt: jump 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 172
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: bool174 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $174pred, 176, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $const176.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $180binary_true_divide.2 = $const176.0 / r.2
12-22 13:04 DEBUG    on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
12-22 13:04 DEBUG    on stmt: return $182return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF33BC040>
12-22 13:04 DEBUG    on stmt: $186return_value.1 = cast(value=r.2)
12-22 13:04 DEBUG    on stmt: return $186return_value.1
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001AEF39929A0>],
             154: [<numba.core.ir.Assign object at 0x000001AEF3463EE0>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_deref.3 = freevar(tp: float32)
12-22 13:04 DEBUG    on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const20.7 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $22compare_op.8 = b < $const20.7
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $24pred, 26, 98
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: invert = const(bool, True)
12-22 13:04 DEBUG    on stmt: exp = unary(fn=<built-in function neg>, value=b)
12-22 13:04 DEBUG    on stmt: $const38.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $40compare_op.5 = exp < $const38.4
12-22 13:04 DEBUG    on stmt: bool42 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $42pred, 44, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'OverflowError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: $48load_deref.0 = freevar(is_integer: False)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: invert.1 = const(bool, False)
12-22 13:04 DEBUG    on stmt: exp.1 = b
12-22 13:04 DEBUG    on stmt: jump 106
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 106
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[48, 98])
12-22 13:04 DEBUG    on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[48, 98])
12-22 13:04 DEBUG    on stmt: $const108.1 = const(int, 65536)
12-22 13:04 DEBUG    on stmt: $110compare_op.2 = exp.3 > $const108.1
12-22 13:04 DEBUG    on stmt: bool112 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $112pred, 114, 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
12-22 13:04 DEBUG    on stmt: $120load_global.3 = global(float: <class 'float'>)
12-22 13:04 DEBUG    on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 114
12-22 13:04 DEBUG    idom 106 from label 114
12-22 13:04 DEBUG    find_def_from_bottom label 106
12-22 13:04 DEBUG    find_def_from_top label 106
12-22 13:04 DEBUG    idom 0 from label 106
12-22 13:04 DEBUG    find_def_from_bottom label 0
12-22 13:04 DEBUG    on stmt: $128return_value.7 = cast(value=$126call_method.6)
12-22 13:04 DEBUG    on stmt: return $128return_value.7
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 130
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[106, 154])
12-22 13:04 DEBUG    on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:234), Var(exp.2, numbers.py:240)], incoming_blocks=[106, 154])
12-22 13:04 DEBUG    on stmt: $const132.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $134compare_op.2 = exp.4 != $const132.1
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 138, 172
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: $const140.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $142binary_and.2 = exp.4 & $const140.1
12-22 13:04 DEBUG    on stmt: bool144 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $144pred, 146, 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 146
12-22 13:04 DEBUG    idom 138 from label 146
12-22 13:04 DEBUG    find_def_from_bottom label 138
12-22 13:04 DEBUG    find_def_from_top label 138
12-22 13:04 DEBUG    idom 130 from label 138
12-22 13:04 DEBUG    find_def_from_bottom label 130
12-22 13:04 DEBUG    find_def_from_top label 130
12-22 13:04 DEBUG    insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
12-22 13:04 DEBUG    find_def_from_bottom label 106
12-22 13:04 DEBUG    find_def_from_top label 106
12-22 13:04 DEBUG    idom 0 from label 106
12-22 13:04 DEBUG    find_def_from_bottom label 0
12-22 13:04 DEBUG    incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_bottom label 154
12-22 13:04 DEBUG    incoming_def a.1.1 = $166inplace_multiply.5
12-22 13:04 DEBUG    replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: r.1 = $150inplace_multiply.2
12-22 13:04 DEBUG    on stmt: jump 154
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 154
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
12-22 13:04 DEBUG    on stmt: $const156.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: exp.2 = $158inplace_rshift.2
12-22 13:04 DEBUG    on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 154
12-22 13:04 DEBUG    idom 138 from label 154
12-22 13:04 DEBUG    find_def_from_bottom label 138
12-22 13:04 DEBUG    find_def_from_top label 138
12-22 13:04 DEBUG    idom 130 from label 138
12-22 13:04 DEBUG    find_def_from_bottom label 130
12-22 13:04 DEBUG    replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: a.1.1 = $166inplace_multiply.5
12-22 13:04 DEBUG    on stmt: jump 130
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 172
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: bool174 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $174pred, 176, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: $const176.0 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $180binary_true_divide.2 = $const176.0 / r.2
12-22 13:04 DEBUG    on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
12-22 13:04 DEBUG    on stmt: return $182return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF39925B0>
12-22 13:04 DEBUG    on stmt: $186return_value.1 = cast(value=r.2)
12-22 13:04 DEBUG    on stmt: return $186return_value.1
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=14)
           2	LOAD_GLOBAL(arg=0, lineno=31)
           4	LOAD_ATTR(arg=1, lineno=31)
           6	LOAD_FAST(arg=0, lineno=31)
           8	LOAD_ATTR(arg=2, lineno=31)
          10	LOAD_CONST(arg=1, lineno=31)
          12	BINARY_SUBSCR(arg=None, lineno=31)
          14	LOAD_FAST(arg=1, lineno=31)
          16	BUILD_TUPLE(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=0, lineno=31)
          20	LOAD_ATTR(arg=3, lineno=31)
          22	LOAD_CONST(arg=2, lineno=31)
          24	CALL_FUNCTION_KW(arg=2, lineno=31)
          26	STORE_FAST(arg=2, lineno=31)
          28	LOAD_GLOBAL(arg=4, lineno=32)
          30	LOAD_METHOD(arg=5, lineno=32)
          32	LOAD_FAST(arg=0, lineno=32)
          34	LOAD_ATTR(arg=2, lineno=32)
          36	LOAD_CONST(arg=1, lineno=32)
          38	BINARY_SUBSCR(arg=None, lineno=32)
          40	CALL_METHOD(arg=1, lineno=32)
          42	GET_ITER(arg=None, lineno=32)
>         44	FOR_ITER(arg=40, lineno=32)
          46	STORE_FAST(arg=3, lineno=32)
          48	LOAD_FAST(arg=0, lineno=34)
          50	LOAD_FAST(arg=3, lineno=34)
          52	BINARY_SUBSCR(arg=None, lineno=34)
          54	LOAD_ATTR(arg=6, lineno=34)
          56	LOAD_CONST(arg=3, lineno=34)
          58	LOAD_CONST(arg=4, lineno=34)
          60	CALL_FUNCTION_KW(arg=1, lineno=34)
          62	STORE_FAST(arg=4, lineno=34)
          64	LOAD_FAST(arg=4, lineno=35)
          66	LOAD_CONST(arg=5, lineno=35)
          68	LOAD_FAST(arg=1, lineno=35)
          70	BUILD_SLICE(arg=2, lineno=35)
          72	BINARY_SUBSCR(arg=None, lineno=35)
          74	STORE_FAST(arg=4, lineno=35)
          76	LOAD_FAST(arg=4, lineno=36)
          78	LOAD_FAST(arg=2, lineno=36)
          80	LOAD_FAST(arg=3, lineno=36)
          82	STORE_SUBSCR(arg=None, lineno=36)
          84	JUMP_ABSOLUTE(arg=44, lineno=36)
>         86	LOAD_FAST(arg=2, lineno=37)
          88	RETURN_VALUE(arg=None, lineno=37)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=14)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=31)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=31)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=31)
12-22 13:04 DEBUG    stack ['$4load_attr.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=31)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$X6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=31)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$8load_attr.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=31)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=31)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$12binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=16, inst=BUILD_TUPLE(arg=2, lineno=31)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$12binary_subscr.5', '$n_neighbors14.6']
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_GLOBAL(arg=0, lineno=31)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$16build_tuple.7']
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_ATTR(arg=3, lineno=31)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$16build_tuple.7', '$18load_global.8']
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=31)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$16build_tuple.7', '$20load_attr.9']
12-22 13:04 DEBUG    dispatch pc=24, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$16build_tuple.7', '$20load_attr.9', '$const22.10']
12-22 13:04 DEBUG    dispatch pc=26, inst=STORE_FAST(arg=2, lineno=31)
12-22 13:04 DEBUG    stack ['$24call_function_kw.11']
12-22 13:04 DEBUG    dispatch pc=28, inst=LOAD_GLOBAL(arg=4, lineno=32)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_METHOD(arg=5, lineno=32)
12-22 13:04 DEBUG    stack ['$28load_global.12']
12-22 13:04 DEBUG    dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=32)
12-22 13:04 DEBUG    stack ['$30load_method.13']
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_ATTR(arg=2, lineno=32)
12-22 13:04 DEBUG    stack ['$30load_method.13', '$X32.14']
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=32)
12-22 13:04 DEBUG    stack ['$30load_method.13', '$34load_attr.15']
12-22 13:04 DEBUG    dispatch pc=38, inst=BINARY_SUBSCR(arg=None, lineno=32)
12-22 13:04 DEBUG    stack ['$30load_method.13', '$34load_attr.15', '$const36.16']
12-22 13:04 DEBUG    dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=32)
12-22 13:04 DEBUG    stack ['$30load_method.13', '$38binary_subscr.17']
12-22 13:04 DEBUG    dispatch pc=42, inst=GET_ITER(arg=None, lineno=32)
12-22 13:04 DEBUG    stack ['$40call_method.18']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=44, stack=('$42get_iter.19',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=44 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi44.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=44 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=44, inst=FOR_ITER(arg=40, lineno=32)
12-22 13:04 DEBUG    stack ['$phi44.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=86, stack=(), blockstack=(), npush=0), Edge(pc=46, stack=('$phi44.0', '$44for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=46 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=86 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=86, inst=LOAD_FAST(arg=2, lineno=37)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=88, inst=RETURN_VALUE(arg=None, lineno=37)
12-22 13:04 DEBUG    stack ['$knn_indices86.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=46 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi46.0', '$phi46.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=46 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=46, inst=STORE_FAST(arg=3, lineno=32)
12-22 13:04 DEBUG    stack ['$phi46.0', '$phi46.1']
12-22 13:04 DEBUG    dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=34)
12-22 13:04 DEBUG    stack ['$phi46.0']
12-22 13:04 DEBUG    dispatch pc=50, inst=LOAD_FAST(arg=3, lineno=34)
12-22 13:04 DEBUG    stack ['$phi46.0', '$X48.2']
12-22 13:04 DEBUG    dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=34)
12-22 13:04 DEBUG    stack ['$phi46.0', '$X48.2', '$row50.3']
12-22 13:04 DEBUG    dispatch pc=54, inst=LOAD_ATTR(arg=6, lineno=34)
12-22 13:04 DEBUG    stack ['$phi46.0', '$52binary_subscr.4']
12-22 13:04 DEBUG    dispatch pc=56, inst=LOAD_CONST(arg=3, lineno=34)
12-22 13:04 DEBUG    stack ['$phi46.0', '$54load_attr.5']
12-22 13:04 DEBUG    dispatch pc=58, inst=LOAD_CONST(arg=4, lineno=34)
12-22 13:04 DEBUG    stack ['$phi46.0', '$54load_attr.5', '$const56.6']
12-22 13:04 DEBUG    dispatch pc=60, inst=CALL_FUNCTION_KW(arg=1, lineno=34)
12-22 13:04 DEBUG    stack ['$phi46.0', '$54load_attr.5', '$const56.6', '$const58.7']
12-22 13:04 DEBUG    dispatch pc=62, inst=STORE_FAST(arg=4, lineno=34)
12-22 13:04 DEBUG    stack ['$phi46.0', '$60call_function_kw.8']
12-22 13:04 DEBUG    dispatch pc=64, inst=LOAD_FAST(arg=4, lineno=35)
12-22 13:04 DEBUG    stack ['$phi46.0']
12-22 13:04 DEBUG    dispatch pc=66, inst=LOAD_CONST(arg=5, lineno=35)
12-22 13:04 DEBUG    stack ['$phi46.0', '$v64.9']
12-22 13:04 DEBUG    dispatch pc=68, inst=LOAD_FAST(arg=1, lineno=35)
12-22 13:04 DEBUG    stack ['$phi46.0', '$v64.9', '$const66.10']
12-22 13:04 DEBUG    dispatch pc=70, inst=BUILD_SLICE(arg=2, lineno=35)
12-22 13:04 DEBUG    stack ['$phi46.0', '$v64.9', '$const66.10', '$n_neighbors68.11']
12-22 13:04 DEBUG    dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=35)
12-22 13:04 DEBUG    stack ['$phi46.0', '$v64.9', '$70build_slice.13']
12-22 13:04 DEBUG    dispatch pc=74, inst=STORE_FAST(arg=4, lineno=35)
12-22 13:04 DEBUG    stack ['$phi46.0', '$72binary_subscr.14']
12-22 13:04 DEBUG    dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=36)
12-22 13:04 DEBUG    stack ['$phi46.0']
12-22 13:04 DEBUG    dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=36)
12-22 13:04 DEBUG    stack ['$phi46.0', '$v76.15']
12-22 13:04 DEBUG    dispatch pc=80, inst=LOAD_FAST(arg=3, lineno=36)
12-22 13:04 DEBUG    stack ['$phi46.0', '$v76.15', '$knn_indices78.16']
12-22 13:04 DEBUG    dispatch pc=82, inst=STORE_SUBSCR(arg=None, lineno=36)
12-22 13:04 DEBUG    stack ['$phi46.0', '$v76.15', '$knn_indices78.16', '$row80.17']
12-22 13:04 DEBUG    dispatch pc=84, inst=JUMP_ABSOLUTE(arg=44, lineno=36)
12-22 13:04 DEBUG    stack ['$phi46.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=44, stack=('$phi46.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=44 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): {'$phi44.0'},
             State(pc_initial=46 nstack_initial=2): {'$phi46.1'},
             State(pc_initial=86 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi44.0': State(pc_initial=0 nstack_initial=0),
 '$phi46.1': State(pc_initial=44 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi44.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi46.0': {('$phi44.0', State(pc_initial=44 nstack_initial=1))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi44.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=1))},
             '$phi46.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi44.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi44.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.0': {('$42get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))}})
12-22 13:04 DEBUG    keep phismap: {'$phi44.0': {('$42get_iter.19', State(pc_initial=0 nstack_initial=0))},
 '$phi46.1': {('$44for_iter.2', State(pc_initial=44 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi44.0': '$42get_iter.19'},
             State(pc_initial=44 nstack_initial=1): {'$phi46.1': '$44for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$X6.2'}), (8, {'item': '$X6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$n_neighbors14.6'}), (16, {'items': ['$12binary_subscr.5', '$n_neighbors14.6'], 'res': '$16build_tuple.7'}), (18, {'res': '$18load_global.8'}), (20, {'item': '$18load_global.8', 'res': '$20load_attr.9'}), (22, {'res': '$const22.10'}), (24, {'func': '$4load_attr.1', 'args': ['$16build_tuple.7', '$20load_attr.9'], 'names': '$const22.10', 'res': '$24call_function_kw.11'}), (26, {'value': '$24call_function_kw.11'}), (28, {'res': '$28load_global.12'}), (30, {'item': '$28load_global.12', 'res': '$30load_method.13'}), (32, {'res': '$X32.14'}), (34, {'item': '$X32.14', 'res': '$34load_attr.15'}), (36, {'res': '$const36.16'}), (38, {'index': '$const36.16', 'target': '$34load_attr.15', 'res': '$38binary_subscr.17'}), (40, {'func': '$30load_method.13', 'args': ['$38binary_subscr.17'], 'res': '$40call_method.18'}), (42, {'value': '$40call_method.18', 'res': '$42get_iter.19'})), outgoing_phis={'$phi44.0': '$42get_iter.19'}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: ('$42get_iter.19',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((44, {'iterator': '$phi44.0', 'pair': '$44for_iter.1', 'indval': '$44for_iter.2', 'pred': '$44for_iter.3'}),), outgoing_phis={'$phi46.1': '$44for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={86: (), 46: ('$phi44.0', '$44for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=46 nstack_initial=2):
AdaptBlockInfo(insts=((46, {'value': '$phi46.1'}), (48, {'res': '$X48.2'}), (50, {'res': '$row50.3'}), (52, {'index': '$row50.3', 'target': '$X48.2', 'res': '$52binary_subscr.4'}), (54, {'item': '$52binary_subscr.4', 'res': '$54load_attr.5'}), (56, {'res': '$const56.6'}), (58, {'res': '$const58.7'}), (60, {'func': '$54load_attr.5', 'args': ['$const56.6'], 'names': '$const58.7', 'res': '$60call_function_kw.8'}), (62, {'value': '$60call_function_kw.8'}), (64, {'res': '$v64.9'}), (66, {'res': '$const66.10'}), (68, {'res': '$n_neighbors68.11'}), (70, {'start': '$const66.10', 'stop': '$n_neighbors68.11', 'step': None, 'res': '$70build_slice.13', 'slicevar': '$70build_slice.12'}), (72, {'index': '$70build_slice.13', 'target': '$v64.9', 'res': '$72binary_subscr.14'}), (74, {'value': '$72binary_subscr.14'}), (76, {'res': '$v76.15'}), (78, {'res': '$knn_indices78.16'}), (80, {'res': '$row80.17'}), (82, {'target': '$knn_indices78.16', 'index': '$row80.17', 'value': '$v76.15'}), (84, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: ('$phi46.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$knn_indices86.0'}), (88, {'retval': '$knn_indices86.0', 'castval': '$88return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    X = arg(0, name=X)                       ['X']
    n_neighbors = arg(1, name=n_neighbors)   ['n_neighbors']
    $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=X, attr=shape) ['$8load_attr.3', 'X']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $16build_tuple.7 = build_tuple(items=[Var($12binary_subscr.5, utils.py:31), Var(n_neighbors, utils.py:14)]) ['$12binary_subscr.5', '$16build_tuple.7', 'n_neighbors']
    $18load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.8']
    $20load_attr.9 = getattr(value=$18load_global.8, attr=int32) ['$18load_global.8', '$20load_attr.9']
    knn_indices = call $4load_attr.1($16build_tuple.7, func=$4load_attr.1, args=[Var($16build_tuple.7, utils.py:31)], kws=[('dtype', Var($20load_attr.9, utils.py:31))], vararg=None, varkwarg=None, target=None) ['$16build_tuple.7', '$20load_attr.9', '$4load_attr.1', 'knn_indices']
    $28load_global.12 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>) ['$28load_global.12']
    $30load_method.13 = getattr(value=$28load_global.12, attr=prange) ['$28load_global.12', '$30load_method.13']
    $34load_attr.15 = getattr(value=X, attr=shape) ['$34load_attr.15', 'X']
    $const36.16 = const(int, 0)              ['$const36.16']
    $38binary_subscr.17 = getitem(value=$34load_attr.15, index=$const36.16, fn=<built-in function getitem>) ['$34load_attr.15', '$38binary_subscr.17', '$const36.16']
    $40call_method.18 = call $30load_method.13($38binary_subscr.17, func=$30load_method.13, args=[Var($38binary_subscr.17, utils.py:32)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_method.13', '$38binary_subscr.17', '$40call_method.18']
    $42get_iter.19 = getiter(value=$40call_method.18) ['$40call_method.18', '$42get_iter.19']
    $phi44.0 = $42get_iter.19                ['$42get_iter.19', '$phi44.0']
    jump 44                                  []
label 44:
    $44for_iter.1 = iternext(value=$phi44.0) ['$44for_iter.1', '$phi44.0']
    $44for_iter.2 = pair_first(value=$44for_iter.1) ['$44for_iter.1', '$44for_iter.2']
    $44for_iter.3 = pair_second(value=$44for_iter.1) ['$44for_iter.1', '$44for_iter.3']
    $phi46.1 = $44for_iter.2                 ['$44for_iter.2', '$phi46.1']
    branch $44for_iter.3, 46, 86             ['$44for_iter.3']
label 46:
    row = $phi46.1                           ['$phi46.1', 'row']
    $52binary_subscr.4 = getitem(value=X, index=row, fn=<built-in function getitem>) ['$52binary_subscr.4', 'X', 'row']
    $54load_attr.5 = getattr(value=$52binary_subscr.4, attr=argsort) ['$52binary_subscr.4', '$54load_attr.5']
    $const56.6 = const(str, quicksort)       ['$const56.6']
    v = call $54load_attr.5(func=$54load_attr.5, args=[], kws=[('kind', Var($const56.6, utils.py:34))], vararg=None, varkwarg=None, target=None) ['$54load_attr.5', '$const56.6', 'v']
    $const66.10 = const(NoneType, None)      ['$const66.10']
    $70build_slice.12 = global(slice: <class 'slice'>) ['$70build_slice.12']
    $70build_slice.13 = call $70build_slice.12($const66.10, n_neighbors, func=$70build_slice.12, args=(Var($const66.10, utils.py:35), Var(n_neighbors, utils.py:14)), kws=(), vararg=None, varkwarg=None, target=None) ['$70build_slice.12', '$70build_slice.13', '$const66.10', 'n_neighbors']
    v = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>) ['$70build_slice.13', 'v', 'v']
    knn_indices[row] = v                     ['knn_indices', 'row', 'v']
    jump 44                                  []
label 86:
    $88return_value.1 = cast(value=knn_indices) ['$88return_value.1', 'knn_indices']
    return $88return_value.1                 ['$88return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF3A5E670>
12-22 13:04 DEBUG    on stmt: X = arg(0, name=X)
12-22 13:04 DEBUG    on stmt: n_neighbors = arg(1, name=n_neighbors)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=X, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $16build_tuple.7 = build_tuple(items=[Var($12binary_subscr.5, utils.py:31), Var(n_neighbors, utils.py:14)])
12-22 13:04 DEBUG    on stmt: $18load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $20load_attr.9 = getattr(value=$18load_global.8, attr=int32)
12-22 13:04 DEBUG    on stmt: knn_indices = call $4load_attr.1($16build_tuple.7, func=$4load_attr.1, args=[Var($16build_tuple.7, utils.py:31)], kws=[('dtype', Var($20load_attr.9, utils.py:31))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_method.13 = getattr(value=$28load_global.12, attr=prange)
12-22 13:04 DEBUG    on stmt: $34load_attr.15 = getattr(value=X, attr=shape)
12-22 13:04 DEBUG    on stmt: $const36.16 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $38binary_subscr.17 = static_getitem(value=$34load_attr.15, index=0, index_var=$const36.16, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $40call_method.18 = call $30load_method.13($38binary_subscr.17, func=$30load_method.13, args=[Var($38binary_subscr.17, utils.py:32)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $42get_iter.19 = getiter(value=$40call_method.18)
12-22 13:04 DEBUG    on stmt: $phi44.0 = $42get_iter.19
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block analysis pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF3A5E670>
12-22 13:04 DEBUG    on stmt: $44for_iter.1 = iternext(value=$phi44.0)
12-22 13:04 DEBUG    on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi46.1 = $44for_iter.2
12-22 13:04 DEBUG    on stmt: branch $44for_iter.3, 46, 86
12-22 13:04 DEBUG    ==== SSA block analysis pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF3A5E670>
12-22 13:04 DEBUG    on stmt: row = $phi46.1
12-22 13:04 DEBUG    on stmt: $52binary_subscr.4 = getitem(value=X, index=row, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $54load_attr.5 = getattr(value=$52binary_subscr.4, attr=argsort)
12-22 13:04 DEBUG    on stmt: $const56.6 = const(str, quicksort)
12-22 13:04 DEBUG    on stmt: v = call $54load_attr.5(func=$54load_attr.5, args=[], kws=[('kind', Var($const56.6, utils.py:34))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const66.10 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $70build_slice.12 = global(slice: <class 'slice'>)
12-22 13:04 DEBUG    on stmt: $70build_slice.13 = call $70build_slice.12($const66.10, n_neighbors, func=$70build_slice.12, args=(Var($const66.10, utils.py:35), Var(n_neighbors, utils.py:14)), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: v = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: knn_indices[row] = v
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block analysis pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF3A5E670>
12-22 13:04 DEBUG    on stmt: $88return_value.1 = cast(value=knn_indices)
12-22 13:04 DEBUG    on stmt: return $88return_value.1
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$12binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF3830AC0>],
             '$16build_tuple.7': [<numba.core.ir.Assign object at 0x000001AEF372EBB0>],
             '$18load_global.8': [<numba.core.ir.Assign object at 0x000001AEF372EC40>],
             '$20load_attr.9': [<numba.core.ir.Assign object at 0x000001AEF372EA30>],
             '$28load_global.12': [<numba.core.ir.Assign object at 0x000001AEF3725B80>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AEF3A5BB80>],
             '$30load_method.13': [<numba.core.ir.Assign object at 0x000001AEF3725580>],
             '$34load_attr.15': [<numba.core.ir.Assign object at 0x000001AEF3725DC0>],
             '$38binary_subscr.17': [<numba.core.ir.Assign object at 0x000001AEF3830280>],
             '$40call_method.18': [<numba.core.ir.Assign object at 0x000001AEF3725A90>],
             '$42get_iter.19': [<numba.core.ir.Assign object at 0x000001AEF36A9070>],
             '$44for_iter.1': [<numba.core.ir.Assign object at 0x000001AEF36A9CD0>],
             '$44for_iter.2': [<numba.core.ir.Assign object at 0x000001AEF36A9940>],
             '$44for_iter.3': [<numba.core.ir.Assign object at 0x000001AEF36A9460>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x000001AEF38FD190>],
             '$52binary_subscr.4': [<numba.core.ir.Assign object at 0x000001AEF3A6A6D0>],
             '$54load_attr.5': [<numba.core.ir.Assign object at 0x000001AEF39F1F40>],
             '$70build_slice.12': [<numba.core.ir.Assign object at 0x000001AEF3696BB0>],
             '$70build_slice.13': [<numba.core.ir.Assign object at 0x000001AEF3696DF0>],
             '$88return_value.1': [<numba.core.ir.Assign object at 0x000001AEF3696070>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x000001AEF398F2B0>],
             '$const10.4': [<numba.core.ir.Assign object at 0x000001AEF3693700>],
             '$const36.16': [<numba.core.ir.Assign object at 0x000001AEF3725D30>],
             '$const56.6': [<numba.core.ir.Assign object at 0x000001AEF3A6FD90>],
             '$const66.10': [<numba.core.ir.Assign object at 0x000001AEF36A9670>],
             '$phi44.0': [<numba.core.ir.Assign object at 0x000001AEF38322B0>],
             '$phi46.1': [<numba.core.ir.Assign object at 0x000001AEF36A9160>],
             'X': [<numba.core.ir.Assign object at 0x000001AEF389FFA0>],
             'knn_indices': [<numba.core.ir.Assign object at 0x000001AEF3725A30>],
             'n_neighbors': [<numba.core.ir.Assign object at 0x000001AEF3A55790>],
             'row': [<numba.core.ir.Assign object at 0x000001AEF36A96D0>],
             'v': [<numba.core.ir.Assign object at 0x000001AEF389F760>,
                   <numba.core.ir.Assign object at 0x000001AEF3696100>]})
12-22 13:04 DEBUG    SSA violators {'v'}
12-22 13:04 DEBUG    Fix SSA violator on var v
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1F10>
12-22 13:04 DEBUG    on stmt: X = arg(0, name=X)
12-22 13:04 DEBUG    on stmt: n_neighbors = arg(1, name=n_neighbors)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=X, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $16build_tuple.7 = build_tuple(items=[Var($12binary_subscr.5, utils.py:31), Var(n_neighbors, utils.py:14)])
12-22 13:04 DEBUG    on stmt: $18load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $20load_attr.9 = getattr(value=$18load_global.8, attr=int32)
12-22 13:04 DEBUG    on stmt: knn_indices = call $4load_attr.1($16build_tuple.7, func=$4load_attr.1, args=[Var($16build_tuple.7, utils.py:31)], kws=[('dtype', Var($20load_attr.9, utils.py:31))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_method.13 = getattr(value=$28load_global.12, attr=prange)
12-22 13:04 DEBUG    on stmt: $34load_attr.15 = getattr(value=X, attr=shape)
12-22 13:04 DEBUG    on stmt: $const36.16 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $38binary_subscr.17 = static_getitem(value=$34load_attr.15, index=0, index_var=$const36.16, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $40call_method.18 = call $30load_method.13($38binary_subscr.17, func=$30load_method.13, args=[Var($38binary_subscr.17, utils.py:32)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $42get_iter.19 = getiter(value=$40call_method.18)
12-22 13:04 DEBUG    on stmt: $phi44.0 = $42get_iter.19
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1F10>
12-22 13:04 DEBUG    on stmt: $44for_iter.1 = iternext(value=$phi44.0)
12-22 13:04 DEBUG    on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi46.1 = $44for_iter.2
12-22 13:04 DEBUG    on stmt: branch $44for_iter.3, 46, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1F10>
12-22 13:04 DEBUG    on stmt: row = $phi46.1
12-22 13:04 DEBUG    on stmt: $52binary_subscr.4 = getitem(value=X, index=row, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $54load_attr.5 = getattr(value=$52binary_subscr.4, attr=argsort)
12-22 13:04 DEBUG    on stmt: $const56.6 = const(str, quicksort)
12-22 13:04 DEBUG    on stmt: v = call $54load_attr.5(func=$54load_attr.5, args=[], kws=[('kind', Var($const56.6, utils.py:34))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    first assign: v
12-22 13:04 DEBUG    replaced with: v = call $54load_attr.5(func=$54load_attr.5, args=[], kws=[('kind', Var($const56.6, utils.py:34))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const66.10 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $70build_slice.12 = global(slice: <class 'slice'>)
12-22 13:04 DEBUG    on stmt: $70build_slice.13 = call $70build_slice.12($const66.10, n_neighbors, func=$70build_slice.12, args=(Var($const66.10, utils.py:35), Var(n_neighbors, utils.py:14)), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: v = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    replaced with: v.1 = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: knn_indices[row] = v
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1F10>
12-22 13:04 DEBUG    on stmt: $88return_value.1 = cast(value=knn_indices)
12-22 13:04 DEBUG    on stmt: return $88return_value.1
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {46: [<numba.core.ir.Assign object at 0x000001AEF36A1760>,
                  <numba.core.ir.Assign object at 0x000001AEF36A1940>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF36A1DC0>
12-22 13:04 DEBUG    on stmt: X = arg(0, name=X)
12-22 13:04 DEBUG    on stmt: n_neighbors = arg(1, name=n_neighbors)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=X, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $16build_tuple.7 = build_tuple(items=[Var($12binary_subscr.5, utils.py:31), Var(n_neighbors, utils.py:14)])
12-22 13:04 DEBUG    on stmt: $18load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $20load_attr.9 = getattr(value=$18load_global.8, attr=int32)
12-22 13:04 DEBUG    on stmt: knn_indices = call $4load_attr.1($16build_tuple.7, func=$4load_attr.1, args=[Var($16build_tuple.7, utils.py:31)], kws=[('dtype', Var($20load_attr.9, utils.py:31))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_method.13 = getattr(value=$28load_global.12, attr=prange)
12-22 13:04 DEBUG    on stmt: $34load_attr.15 = getattr(value=X, attr=shape)
12-22 13:04 DEBUG    on stmt: $const36.16 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $38binary_subscr.17 = static_getitem(value=$34load_attr.15, index=0, index_var=$const36.16, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $40call_method.18 = call $30load_method.13($38binary_subscr.17, func=$30load_method.13, args=[Var($38binary_subscr.17, utils.py:32)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $42get_iter.19 = getiter(value=$40call_method.18)
12-22 13:04 DEBUG    on stmt: $phi44.0 = $42get_iter.19
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF36A1DC0>
12-22 13:04 DEBUG    on stmt: $44for_iter.1 = iternext(value=$phi44.0)
12-22 13:04 DEBUG    on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi46.1 = $44for_iter.2
12-22 13:04 DEBUG    on stmt: branch $44for_iter.3, 46, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF36A1DC0>
12-22 13:04 DEBUG    on stmt: row = $phi46.1
12-22 13:04 DEBUG    on stmt: $52binary_subscr.4 = getitem(value=X, index=row, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $54load_attr.5 = getattr(value=$52binary_subscr.4, attr=argsort)
12-22 13:04 DEBUG    on stmt: $const56.6 = const(str, quicksort)
12-22 13:04 DEBUG    on stmt: v = call $54load_attr.5(func=$54load_attr.5, args=[], kws=[('kind', Var($const56.6, utils.py:34))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const66.10 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $70build_slice.12 = global(slice: <class 'slice'>)
12-22 13:04 DEBUG    on stmt: $70build_slice.13 = call $70build_slice.12($const66.10, n_neighbors, func=$70build_slice.12, args=(Var($const66.10, utils.py:35), Var(n_neighbors, utils.py:14)), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: v.1 = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='v' stmt=v.1 = getitem(value=v, index=$70build_slice.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: knn_indices[row] = v
12-22 13:04 DEBUG    find_def var='v' stmt=knn_indices[row] = v
12-22 13:04 DEBUG    replaced with: knn_indices[row] = v.1
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF36A1DC0>
12-22 13:04 DEBUG    on stmt: $88return_value.1 = cast(value=knn_indices)
12-22 13:04 DEBUG    on stmt: return $88return_value.1
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4369)
           2	LOAD_GLOBAL(arg=0, lineno=4370)
           4	LOAD_FAST(arg=0, lineno=4370)
           6	LOAD_FAST(arg=1, lineno=4370)
           8	LOAD_DEREF(arg=0, lineno=4370)
          10	CALL_FUNCTION(arg=3, lineno=4370)
          12	RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4369)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    stack ['$10call_function.4']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(int32, 2d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF38090D0>
12-22 13:04 DEBUG    on stmt: shape = arg(0, name=shape)
12-22 13:04 DEBUG    on stmt: dtype = arg(1, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
12-22 13:04 DEBUG    on stmt: $8load_deref.3 = freevar(retty: array(int32, 2d, C))
12-22 13:04 DEBUG    on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $12return_value.5 = cast(value=$10call_function.4)
12-22 13:04 DEBUG    on stmt: return $12return_value.5
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10call_function.4': [<numba.core.ir.Assign object at 0x000001AEF38FA820>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x000001AEF3A7FA60>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AEF3696970>],
             '$8load_deref.3': [<numba.core.ir.Assign object at 0x000001AEF3696640>],
             'dtype': [<numba.core.ir.Assign object at 0x000001AEF3456D60>],
             'shape': [<numba.core.ir.Assign object at 0x000001AEF3456C40>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=8, lineno=2)
          32	STORE_FAST(arg=4, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=5, lineno=3)
          38	JUMP_ABSOLUTE(arg=30, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=1)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$sched4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$sched4.1', '$const6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
12-22 13:04 DEBUG    dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
12-22 13:04 DEBUG    dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
12-22 13:04 DEBUG    dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
12-22 13:04 DEBUG    dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$26call_function.12']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi30.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=30 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=30, inst=FOR_ITER(arg=8, lineno=2)
12-22 13:04 DEBUG    stack ['$phi30.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=40 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
12-22 13:04 DEBUG    stack ['$const40.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=32 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi32.0', '$phi32.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=32 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=32, inst=STORE_FAST(arg=4, lineno=2)
12-22 13:04 DEBUG    stack ['$phi32.0', '$phi32.1']
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0']
12-22 13:04 DEBUG    dispatch pc=36, inst=STORE_FAST(arg=5, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0', '$const34.2']
12-22 13:04 DEBUG    dispatch pc=38, inst=JUMP_ABSOLUTE(arg=30, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    sched = arg(0, name=sched)               ['sched']
    X = arg(1, name=X)                       ['X']
    n__neighbors = arg(2, name=n__neighbors) ['n__neighbors']
    knn__indices = arg(3, name=knn__indices) ['knn__indices']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_18 = $phi32.1              ['$phi32.1', 'parfor__index_18']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=6382)
           2	LOAD_DEREF(arg=0, lineno=6383)
           4	LOAD_FAST(arg=0, lineno=6383)
           6	CALL_FUNCTION(arg=1, lineno=6383)
           8	RETURN_VALUE(arg=None, lineno=6383)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=6382)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=6383)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=6383)
12-22 13:04 DEBUG    stack ['$2load_deref.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=6383)
12-22 13:04 DEBUG    stack ['$2load_deref.0', '$arr4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=6383)
12-22 13:04 DEBUG    stack ['$6call_function.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$arr4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$arr4.1'], 'res': '$6call_function.2'}), (8, {'retval': '$6call_function.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    arr = arg(0, name=arr)                   ['arr']
    $2load_deref.0 = freevar(sort_func: <function make_quicksort_impl.<locals>.run_quicksort at 0x000001AEF343F4C0>) ['$2load_deref.0']
    $6call_function.2 = call $2load_deref.0(arr, func=$2load_deref.0, args=[Var(arr, arrayobj.py:6382)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$6call_function.2', 'arr']
    $8return_value.3 = cast(value=$6call_function.2) ['$6call_function.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35D56A0>
12-22 13:04 DEBUG    on stmt: arr = arg(0, name=arr)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(sort_func: <function make_quicksort_impl.<locals>.run_quicksort at 0x000001AEF343F4C0>)
12-22 13:04 DEBUG    on stmt: $6call_function.2 = call $2load_deref.0(arr, func=$2load_deref.0, args=[Var(arr, arrayobj.py:6382)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $8return_value.3 = cast(value=$6call_function.2)
12-22 13:04 DEBUG    on stmt: return $8return_value.3
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$2load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF357BA00>],
             '$6call_function.2': [<numba.core.ir.Assign object at 0x000001AEF357BD90>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x000001AEF357BFA0>],
             'arr': [<numba.core.ir.Assign object at 0x000001AEF35D5C40>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=200)
           2	LOAD_FAST(arg=0, lineno=202)
           4	LOAD_ATTR(arg=0, lineno=202)
           6	LOAD_CONST(arg=1, lineno=202)
           8	COMPARE_OP(arg=2, lineno=202)
          10	POP_JUMP_IF_FALSE(arg=20, lineno=202)
          12	LOAD_DEREF(arg=0, lineno=203)
          14	LOAD_FAST(arg=0, lineno=203)
          16	CALL_FUNCTION(arg=1, lineno=203)
          18	RETURN_VALUE(arg=None, lineno=203)
>         20	LOAD_GLOBAL(arg=1, lineno=205)
          22	LOAD_METHOD(arg=2, lineno=205)
          24	LOAD_FAST(arg=0, lineno=205)
          26	LOAD_ATTR(arg=3, lineno=205)
          28	LOAD_CONST(arg=0, lineno=205)
          30	LOAD_CONST(arg=2, lineno=205)
          32	BUILD_SLICE(arg=2, lineno=205)
          34	BINARY_SUBSCR(arg=None, lineno=205)
          36	CALL_METHOD(arg=1, lineno=205)
          38	GET_ITER(arg=None, lineno=205)
>         40	FOR_ITER(arg=16, lineno=205)
          42	STORE_FAST(arg=1, lineno=205)
          44	LOAD_DEREF(arg=0, lineno=206)
          46	LOAD_FAST(arg=0, lineno=206)
          48	LOAD_FAST(arg=1, lineno=206)
          50	BINARY_SUBSCR(arg=None, lineno=206)
          52	CALL_FUNCTION(arg=1, lineno=206)
          54	POP_TOP(arg=None, lineno=206)
          56	JUMP_ABSOLUTE(arg=40, lineno=206)
>         58	LOAD_FAST(arg=0, lineno=207)
          60	RETURN_VALUE(arg=None, lineno=207)
          62	LOAD_CONST(arg=0, lineno=207)
          64	RETURN_VALUE(arg=None, lineno=207)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=200)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=202)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=202)
12-22 13:04 DEBUG    stack ['$A2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=202)
12-22 13:04 DEBUG    stack ['$4load_attr.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=202)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$const6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=20, lineno=202)
12-22 13:04 DEBUG    stack ['$8compare_op.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=12 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_DEREF(arg=0, lineno=203)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=203)
12-22 13:04 DEBUG    stack ['$12load_deref.0']
12-22 13:04 DEBUG    dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=203)
12-22 13:04 DEBUG    stack ['$12load_deref.0', '$A14.1']
12-22 13:04 DEBUG    dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=203)
12-22 13:04 DEBUG    stack ['$16call_function.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=20 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=20 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=205)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=205)
12-22 13:04 DEBUG    stack ['$20load_global.0']
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=205)
12-22 13:04 DEBUG    stack ['$22load_method.1']
12-22 13:04 DEBUG    dispatch pc=26, inst=LOAD_ATTR(arg=3, lineno=205)
12-22 13:04 DEBUG    stack ['$22load_method.1', '$A24.2']
12-22 13:04 DEBUG    dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=205)
12-22 13:04 DEBUG    stack ['$22load_method.1', '$26load_attr.3']
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=205)
12-22 13:04 DEBUG    stack ['$22load_method.1', '$26load_attr.3', '$const28.4']
12-22 13:04 DEBUG    dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=205)
12-22 13:04 DEBUG    stack ['$22load_method.1', '$26load_attr.3', '$const28.4', '$const30.5']
12-22 13:04 DEBUG    dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=205)
12-22 13:04 DEBUG    stack ['$22load_method.1', '$26load_attr.3', '$32build_slice.7']
12-22 13:04 DEBUG    dispatch pc=36, inst=CALL_METHOD(arg=1, lineno=205)
12-22 13:04 DEBUG    stack ['$22load_method.1', '$34binary_subscr.8']
12-22 13:04 DEBUG    dispatch pc=38, inst=GET_ITER(arg=None, lineno=205)
12-22 13:04 DEBUG    stack ['$36call_method.9']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=40, stack=('$38get_iter.10',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=40 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi40.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=40 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=40, inst=FOR_ITER(arg=16, lineno=205)
12-22 13:04 DEBUG    stack ['$phi40.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=42, stack=('$phi40.0', '$40for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=42 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=58 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=207)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=60, inst=RETURN_VALUE(arg=None, lineno=207)
12-22 13:04 DEBUG    stack ['$A58.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=42 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi42.0', '$phi42.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=42 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=42, inst=STORE_FAST(arg=1, lineno=205)
12-22 13:04 DEBUG    stack ['$phi42.0', '$phi42.1']
12-22 13:04 DEBUG    dispatch pc=44, inst=LOAD_DEREF(arg=0, lineno=206)
12-22 13:04 DEBUG    stack ['$phi42.0']
12-22 13:04 DEBUG    dispatch pc=46, inst=LOAD_FAST(arg=0, lineno=206)
12-22 13:04 DEBUG    stack ['$phi42.0', '$44load_deref.2']
12-22 13:04 DEBUG    dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=206)
12-22 13:04 DEBUG    stack ['$phi42.0', '$44load_deref.2', '$A46.3']
12-22 13:04 DEBUG    dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=206)
12-22 13:04 DEBUG    stack ['$phi42.0', '$44load_deref.2', '$A46.3', '$idx48.4']
12-22 13:04 DEBUG    dispatch pc=52, inst=CALL_FUNCTION(arg=1, lineno=206)
12-22 13:04 DEBUG    stack ['$phi42.0', '$44load_deref.2', '$50binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=54, inst=POP_TOP(arg=None, lineno=206)
12-22 13:04 DEBUG    stack ['$phi42.0', '$52call_function.6']
12-22 13:04 DEBUG    dispatch pc=56, inst=JUMP_ABSOLUTE(arg=40, lineno=206)
12-22 13:04 DEBUG    stack ['$phi42.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=40, stack=('$phi42.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=40 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=1): {'$phi40.0'},
             State(pc_initial=42 nstack_initial=2): {'$phi42.1'},
             State(pc_initial=58 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi40.0': State(pc_initial=20 nstack_initial=0),
 '$phi42.1': State(pc_initial=40 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi42.0', State(pc_initial=42 nstack_initial=2))},
             '$phi42.0': {('$phi40.0', State(pc_initial=40 nstack_initial=1))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi40.0', State(pc_initial=40 nstack_initial=1))},
             '$phi42.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi42.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi40.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi42.0': {('$38get_iter.10',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi42.1': {('$40for_iter.2',
                           State(pc_initial=40 nstack_initial=1))}})
12-22 13:04 DEBUG    keep phismap: {'$phi40.0': {('$38get_iter.10', State(pc_initial=20 nstack_initial=0))},
 '$phi42.1': {('$40for_iter.2', State(pc_initial=40 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=20 nstack_initial=0): {'$phi40.0': '$38get_iter.10'},
             State(pc_initial=40 nstack_initial=1): {'$phi42.1': '$40for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$A2.0'}), (4, {'item': '$A2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_deref.0'}), (14, {'res': '$A14.1'}), (16, {'func': '$12load_deref.0', 'args': ['$A14.1'], 'res': '$16call_function.2'}), (18, {'retval': '$16call_function.2', 'castval': '$18return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$A24.2'}), (26, {'item': '$A24.2', 'res': '$26load_attr.3'}), (28, {'res': '$const28.4'}), (30, {'res': '$const30.5'}), (32, {'start': '$const28.4', 'stop': '$const30.5', 'step': None, 'res': '$32build_slice.7', 'slicevar': '$32build_slice.6'}), (34, {'index': '$32build_slice.7', 'target': '$26load_attr.3', 'res': '$34binary_subscr.8'}), (36, {'func': '$22load_method.1', 'args': ['$34binary_subscr.8'], 'res': '$36call_method.9'}), (38, {'value': '$36call_method.9', 'res': '$38get_iter.10'})), outgoing_phis={'$phi40.0': '$38get_iter.10'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ('$38get_iter.10',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=40 nstack_initial=1):
AdaptBlockInfo(insts=((40, {'iterator': '$phi40.0', 'pair': '$40for_iter.1', 'indval': '$40for_iter.2', 'pred': '$40for_iter.3'}),), outgoing_phis={'$phi42.1': '$40for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 42: ('$phi40.0', '$40for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=42 nstack_initial=2):
AdaptBlockInfo(insts=((42, {'value': '$phi42.1'}), (44, {'res': '$44load_deref.2'}), (46, {'res': '$A46.3'}), (48, {'res': '$idx48.4'}), (50, {'index': '$idx48.4', 'target': '$A46.3', 'res': '$50binary_subscr.5'}), (52, {'func': '$44load_deref.2', 'args': ['$50binary_subscr.5'], 'res': '$52call_function.6'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ('$phi42.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$A58.0'}), (60, {'retval': '$A58.0', 'castval': '$60return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    A = arg(0, name=A)                       ['A']
    $4load_attr.1 = getattr(value=A, attr=ndim) ['$4load_attr.1', 'A']
    $const6.2 = const(int, 1)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, quicksort.py:202),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_deref.0 = freevar(run_quicksort1: <function make_quicksort_impl.<locals>.run_quicksort1 at 0x000001AEF343FAF0>) ['$12load_deref.0']
    $16call_function.2 = call $12load_deref.0(A, func=$12load_deref.0, args=[Var(A, quicksort.py:200)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_deref.0', '$16call_function.2', 'A']
    $18return_value.3 = cast(value=$16call_function.2) ['$16call_function.2', '$18return_value.3']
    return $18return_value.3                 ['$18return_value.3']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=ndindex) ['$20load_global.0', '$22load_method.1']
    $26load_attr.3 = getattr(value=A, attr=shape) ['$26load_attr.3', 'A']
    $const28.4 = const(NoneType, None)       ['$const28.4']
    $const30.5 = const(int, -1)              ['$const30.5']
    $32build_slice.6 = global(slice: <class 'slice'>) ['$32build_slice.6']
    $32build_slice.7 = call $32build_slice.6($const28.4, $const30.5, func=$32build_slice.6, args=(Var($const28.4, quicksort.py:205), Var($const30.5, quicksort.py:205)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.6', '$32build_slice.7', '$const28.4', '$const30.5']
    $34binary_subscr.8 = getitem(value=$26load_attr.3, index=$32build_slice.7, fn=<built-in function getitem>) ['$26load_attr.3', '$32build_slice.7', '$34binary_subscr.8']
    $36call_method.9 = call $22load_method.1($34binary_subscr.8, func=$22load_method.1, args=[Var($34binary_subscr.8, quicksort.py:205)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', '$34binary_subscr.8', '$36call_method.9']
    $38get_iter.10 = getiter(value=$36call_method.9) ['$36call_method.9', '$38get_iter.10']
    $phi40.0 = $38get_iter.10                ['$38get_iter.10', '$phi40.0']
    jump 40                                  []
label 40:
    $40for_iter.1 = iternext(value=$phi40.0) ['$40for_iter.1', '$phi40.0']
    $40for_iter.2 = pair_first(value=$40for_iter.1) ['$40for_iter.1', '$40for_iter.2']
    $40for_iter.3 = pair_second(value=$40for_iter.1) ['$40for_iter.1', '$40for_iter.3']
    $phi42.1 = $40for_iter.2                 ['$40for_iter.2', '$phi42.1']
    branch $40for_iter.3, 42, 58             ['$40for_iter.3']
label 42:
    idx = $phi42.1                           ['$phi42.1', 'idx']
    $44load_deref.2 = freevar(run_quicksort1: <function make_quicksort_impl.<locals>.run_quicksort1 at 0x000001AEF343FAF0>) ['$44load_deref.2']
    $50binary_subscr.5 = getitem(value=A, index=idx, fn=<built-in function getitem>) ['$50binary_subscr.5', 'A', 'idx']
    $52call_function.6 = call $44load_deref.2($50binary_subscr.5, func=$44load_deref.2, args=[Var($50binary_subscr.5, quicksort.py:206)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.2', '$50binary_subscr.5', '$52call_function.6']
    jump 40                                  []
label 58:
    $60return_value.1 = cast(value=A)        ['$60return_value.1', 'A']
    return $60return_value.1                 ['$60return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF1D86070>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $const6.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $8compare_op.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: bool10 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, quicksort.py:202),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 12
12-22 13:04 DEBUG    ==== SSA block analysis pass on 12
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF1D86070>
12-22 13:04 DEBUG    on stmt: $12load_deref.0 = freevar(run_quicksort1: <function make_quicksort_impl.<locals>.run_quicksort1 at 0x000001AEF343FAF0>)
12-22 13:04 DEBUG    on stmt: $16call_function.2 = call $12load_deref.0(A, func=$12load_deref.0, args=[Var(A, quicksort.py:200)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $18return_value.3 = cast(value=$16call_function.2)
12-22 13:04 DEBUG    on stmt: return $18return_value.3
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10pred': [<numba.core.ir.Assign object at 0x000001AEF3204FD0>],
             '$12load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF31C36D0>],
             '$16call_function.2': [<numba.core.ir.Assign object at 0x000001AEF31C3280>],
             '$18return_value.3': [<numba.core.ir.Assign object at 0x000001AEF31C3B50>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x000001AEF32044C0>],
             '$8compare_op.3': [<numba.core.ir.Assign object at 0x000001AEF3204C10>],
             '$const6.2': [<numba.core.ir.Assign object at 0x000001AEF3204940>],
             'A': [<numba.core.ir.Assign object at 0x000001AEF31F34C0>],
             'bool10': [<numba.core.ir.Assign object at 0x000001AEF32049A0>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=164)
           2	LOAD_DEREF(arg=1, lineno=166)
           4	LOAD_FAST(arg=0, lineno=166)
           6	CALL_FUNCTION(arg=1, lineno=166)
           8	STORE_FAST(arg=1, lineno=166)
          10	LOAD_GLOBAL(arg=0, lineno=168)
          12	LOAD_FAST(arg=0, lineno=168)
          14	CALL_FUNCTION(arg=1, lineno=168)
          16	LOAD_CONST(arg=1, lineno=168)
          18	COMPARE_OP(arg=0, lineno=168)
          20	POP_JUMP_IF_FALSE(arg=26, lineno=168)
          22	LOAD_FAST(arg=1, lineno=169)
          24	RETURN_VALUE(arg=None, lineno=169)
>         26	LOAD_GLOBAL(arg=1, lineno=171)
          28	LOAD_DEREF(arg=3, lineno=171)
          30	LOAD_DEREF(arg=3, lineno=171)
          32	CALL_FUNCTION(arg=2, lineno=171)
          34	BUILD_LIST(arg=1, lineno=171)
          36	LOAD_GLOBAL(arg=2, lineno=171)
          38	BINARY_MULTIPLY(arg=None, lineno=171)
          40	STORE_FAST(arg=2, lineno=171)
          42	LOAD_GLOBAL(arg=1, lineno=172)
          44	LOAD_DEREF(arg=3, lineno=172)
          46	LOAD_GLOBAL(arg=0, lineno=172)
          48	LOAD_FAST(arg=0, lineno=172)
          50	CALL_FUNCTION(arg=1, lineno=172)
          52	LOAD_CONST(arg=2, lineno=172)
          54	BINARY_SUBTRACT(arg=None, lineno=172)
          56	CALL_FUNCTION(arg=2, lineno=172)
          58	LOAD_FAST(arg=2, lineno=172)
          60	LOAD_CONST(arg=3, lineno=172)
          62	STORE_SUBSCR(arg=None, lineno=172)
          64	LOAD_CONST(arg=2, lineno=173)
          66	STORE_FAST(arg=3, lineno=173)
>         68	LOAD_FAST(arg=3, lineno=175)
          70	LOAD_CONST(arg=3, lineno=175)
          72	COMPARE_OP(arg=4, lineno=175)
          74	POP_JUMP_IF_FALSE(arg=254, lineno=175)
          76	LOAD_FAST(arg=3, lineno=176)
          78	LOAD_CONST(arg=2, lineno=176)
          80	INPLACE_SUBTRACT(arg=None, lineno=176)
          82	STORE_FAST(arg=3, lineno=176)
          84	LOAD_FAST(arg=2, lineno=177)
          86	LOAD_FAST(arg=3, lineno=177)
          88	BINARY_SUBSCR(arg=None, lineno=177)
          90	UNPACK_SEQUENCE(arg=2, lineno=177)
          92	STORE_FAST(arg=4, lineno=177)
          94	STORE_FAST(arg=5, lineno=177)
>         96	LOAD_FAST(arg=5, lineno=179)
          98	LOAD_FAST(arg=4, lineno=179)
         100	BINARY_SUBTRACT(arg=None, lineno=179)
         102	LOAD_GLOBAL(arg=3, lineno=179)
         104	COMPARE_OP(arg=5, lineno=179)
         106	POP_JUMP_IF_FALSE(arg=238, lineno=179)
         108	LOAD_FAST(arg=3, lineno=180)
         110	LOAD_GLOBAL(arg=2, lineno=180)
         112	COMPARE_OP(arg=0, lineno=180)
         114	POP_JUMP_IF_TRUE(arg=120, lineno=180)
         116	LOAD_GLOBAL(arg=4, lineno=180)
         118	RAISE_VARARGS(arg=1, lineno=180)
>        120	LOAD_DEREF(arg=2, lineno=181)
         122	LOAD_FAST(arg=0, lineno=181)
         124	LOAD_FAST(arg=1, lineno=181)
         126	LOAD_FAST(arg=4, lineno=181)
         128	LOAD_FAST(arg=5, lineno=181)
         130	CALL_FUNCTION(arg=4, lineno=181)
         132	STORE_FAST(arg=6, lineno=181)
         134	LOAD_FAST(arg=5, lineno=183)
         136	LOAD_FAST(arg=6, lineno=183)
         138	BINARY_SUBTRACT(arg=None, lineno=183)
         140	LOAD_FAST(arg=6, lineno=183)
         142	LOAD_FAST(arg=4, lineno=183)
         144	BINARY_SUBTRACT(arg=None, lineno=183)
         146	COMPARE_OP(arg=4, lineno=183)
         148	POP_JUMP_IF_FALSE(arg=194, lineno=183)
         150	LOAD_FAST(arg=5, lineno=185)
         152	LOAD_FAST(arg=6, lineno=185)
         154	COMPARE_OP(arg=4, lineno=185)
         156	POP_JUMP_IF_FALSE(arg=184, lineno=185)
         158	LOAD_GLOBAL(arg=1, lineno=186)
         160	LOAD_FAST(arg=6, lineno=186)
         162	LOAD_CONST(arg=2, lineno=186)
         164	BINARY_ADD(arg=None, lineno=186)
         166	LOAD_FAST(arg=5, lineno=186)
         168	CALL_FUNCTION(arg=2, lineno=186)
         170	LOAD_FAST(arg=2, lineno=186)
         172	LOAD_FAST(arg=3, lineno=186)
         174	STORE_SUBSCR(arg=None, lineno=186)
         176	LOAD_FAST(arg=3, lineno=187)
         178	LOAD_CONST(arg=2, lineno=187)
         180	INPLACE_ADD(arg=None, lineno=187)
         182	STORE_FAST(arg=3, lineno=187)
>        184	LOAD_FAST(arg=6, lineno=188)
         186	LOAD_CONST(arg=2, lineno=188)
         188	BINARY_SUBTRACT(arg=None, lineno=188)
         190	STORE_FAST(arg=5, lineno=188)
         192	JUMP_ABSOLUTE(arg=96, lineno=188)
>        194	LOAD_FAST(arg=6, lineno=190)
         196	LOAD_FAST(arg=4, lineno=190)
         198	COMPARE_OP(arg=4, lineno=190)
         200	POP_JUMP_IF_FALSE(arg=228, lineno=190)
         202	LOAD_GLOBAL(arg=1, lineno=191)
         204	LOAD_FAST(arg=4, lineno=191)
         206	LOAD_FAST(arg=6, lineno=191)
         208	LOAD_CONST(arg=2, lineno=191)
         210	BINARY_SUBTRACT(arg=None, lineno=191)
         212	CALL_FUNCTION(arg=2, lineno=191)
         214	LOAD_FAST(arg=2, lineno=191)
         216	LOAD_FAST(arg=3, lineno=191)
         218	STORE_SUBSCR(arg=None, lineno=191)
         220	LOAD_FAST(arg=3, lineno=192)
         222	LOAD_CONST(arg=2, lineno=192)
         224	INPLACE_ADD(arg=None, lineno=192)
         226	STORE_FAST(arg=3, lineno=192)
>        228	LOAD_FAST(arg=6, lineno=193)
         230	LOAD_CONST(arg=2, lineno=193)
         232	BINARY_ADD(arg=None, lineno=193)
         234	STORE_FAST(arg=4, lineno=193)
         236	JUMP_ABSOLUTE(arg=96, lineno=193)
>        238	LOAD_DEREF(arg=0, lineno=195)
         240	LOAD_FAST(arg=0, lineno=195)
         242	LOAD_FAST(arg=1, lineno=195)
         244	LOAD_FAST(arg=4, lineno=195)
         246	LOAD_FAST(arg=5, lineno=195)
         248	CALL_FUNCTION(arg=4, lineno=195)
         250	POP_TOP(arg=None, lineno=195)
         252	JUMP_ABSOLUTE(arg=68, lineno=195)
>        254	LOAD_FAST(arg=1, lineno=197)
         256	RETURN_VALUE(arg=None, lineno=197)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=164)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=166)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=166)
12-22 13:04 DEBUG    stack ['$2load_deref.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=166)
12-22 13:04 DEBUG    stack ['$2load_deref.0', '$A4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=STORE_FAST(arg=1, lineno=166)
12-22 13:04 DEBUG    stack ['$6call_function.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=168)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=168)
12-22 13:04 DEBUG    stack ['$10load_global.3']
12-22 13:04 DEBUG    dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=168)
12-22 13:04 DEBUG    stack ['$10load_global.3', '$A12.4']
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=168)
12-22 13:04 DEBUG    stack ['$14call_function.5']
12-22 13:04 DEBUG    dispatch pc=18, inst=COMPARE_OP(arg=0, lineno=168)
12-22 13:04 DEBUG    stack ['$14call_function.5', '$const16.6']
12-22 13:04 DEBUG    dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=26, lineno=168)
12-22 13:04 DEBUG    stack ['$18compare_op.7']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=22 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_FAST(arg=1, lineno=169)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=169)
12-22 13:04 DEBUG    stack ['$R22.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=26 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=26 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=26, inst=LOAD_GLOBAL(arg=1, lineno=171)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=28, inst=LOAD_DEREF(arg=3, lineno=171)
12-22 13:04 DEBUG    stack ['$26load_global.0']
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_DEREF(arg=3, lineno=171)
12-22 13:04 DEBUG    stack ['$26load_global.0', '$28load_deref.1']
12-22 13:04 DEBUG    dispatch pc=32, inst=CALL_FUNCTION(arg=2, lineno=171)
12-22 13:04 DEBUG    stack ['$26load_global.0', '$28load_deref.1', '$30load_deref.2']
12-22 13:04 DEBUG    dispatch pc=34, inst=BUILD_LIST(arg=1, lineno=171)
12-22 13:04 DEBUG    stack ['$32call_function.3']
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_GLOBAL(arg=2, lineno=171)
12-22 13:04 DEBUG    stack ['$34build_list.4']
12-22 13:04 DEBUG    dispatch pc=38, inst=BINARY_MULTIPLY(arg=None, lineno=171)
12-22 13:04 DEBUG    stack ['$34build_list.4', '$36load_global.5']
12-22 13:04 DEBUG    dispatch pc=40, inst=STORE_FAST(arg=2, lineno=171)
12-22 13:04 DEBUG    stack ['$38binary_multiply.6']
12-22 13:04 DEBUG    dispatch pc=42, inst=LOAD_GLOBAL(arg=1, lineno=172)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=44, inst=LOAD_DEREF(arg=3, lineno=172)
12-22 13:04 DEBUG    stack ['$42load_global.7']
12-22 13:04 DEBUG    dispatch pc=46, inst=LOAD_GLOBAL(arg=0, lineno=172)
12-22 13:04 DEBUG    stack ['$42load_global.7', '$44load_deref.8']
12-22 13:04 DEBUG    dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=172)
12-22 13:04 DEBUG    stack ['$42load_global.7', '$44load_deref.8', '$46load_global.9']
12-22 13:04 DEBUG    dispatch pc=50, inst=CALL_FUNCTION(arg=1, lineno=172)
12-22 13:04 DEBUG    stack ['$42load_global.7', '$44load_deref.8', '$46load_global.9', '$A48.10']
12-22 13:04 DEBUG    dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=172)
12-22 13:04 DEBUG    stack ['$42load_global.7', '$44load_deref.8', '$50call_function.11']
12-22 13:04 DEBUG    dispatch pc=54, inst=BINARY_SUBTRACT(arg=None, lineno=172)
12-22 13:04 DEBUG    stack ['$42load_global.7', '$44load_deref.8', '$50call_function.11', '$const52.12']
12-22 13:04 DEBUG    dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=172)
12-22 13:04 DEBUG    stack ['$42load_global.7', '$44load_deref.8', '$54binary_subtract.13']
12-22 13:04 DEBUG    dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=172)
12-22 13:04 DEBUG    stack ['$56call_function.14']
12-22 13:04 DEBUG    dispatch pc=60, inst=LOAD_CONST(arg=3, lineno=172)
12-22 13:04 DEBUG    stack ['$56call_function.14', '$stack58.15']
12-22 13:04 DEBUG    dispatch pc=62, inst=STORE_SUBSCR(arg=None, lineno=172)
12-22 13:04 DEBUG    stack ['$56call_function.14', '$stack58.15', '$const60.16']
12-22 13:04 DEBUG    dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=173)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=66, inst=STORE_FAST(arg=3, lineno=173)
12-22 13:04 DEBUG    stack ['$const64.17']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=68 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=68 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=68, inst=LOAD_FAST(arg=3, lineno=175)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=175)
12-22 13:04 DEBUG    stack ['$n68.0']
12-22 13:04 DEBUG    dispatch pc=72, inst=COMPARE_OP(arg=4, lineno=175)
12-22 13:04 DEBUG    stack ['$n68.0', '$const70.1']
12-22 13:04 DEBUG    dispatch pc=74, inst=POP_JUMP_IF_FALSE(arg=254, lineno=175)
12-22 13:04 DEBUG    stack ['$72compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=76, stack=(), blockstack=(), npush=0), Edge(pc=254, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=254 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=76 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=76, inst=LOAD_FAST(arg=3, lineno=176)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=176)
12-22 13:04 DEBUG    stack ['$n76.0']
12-22 13:04 DEBUG    dispatch pc=80, inst=INPLACE_SUBTRACT(arg=None, lineno=176)
12-22 13:04 DEBUG    stack ['$n76.0', '$const78.1']
12-22 13:04 DEBUG    dispatch pc=82, inst=STORE_FAST(arg=3, lineno=176)
12-22 13:04 DEBUG    stack ['$80inplace_subtract.2']
12-22 13:04 DEBUG    dispatch pc=84, inst=LOAD_FAST(arg=2, lineno=177)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=177)
12-22 13:04 DEBUG    stack ['$stack84.3']
12-22 13:04 DEBUG    dispatch pc=88, inst=BINARY_SUBSCR(arg=None, lineno=177)
12-22 13:04 DEBUG    stack ['$stack84.3', '$n86.4']
12-22 13:04 DEBUG    dispatch pc=90, inst=UNPACK_SEQUENCE(arg=2, lineno=177)
12-22 13:04 DEBUG    stack ['$88binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=92, inst=STORE_FAST(arg=4, lineno=177)
12-22 13:04 DEBUG    stack ['$90unpack_sequence.7', '$90unpack_sequence.6']
12-22 13:04 DEBUG    dispatch pc=94, inst=STORE_FAST(arg=5, lineno=177)
12-22 13:04 DEBUG    stack ['$90unpack_sequence.7']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=254 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=254 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=254, inst=LOAD_FAST(arg=1, lineno=197)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=256, inst=RETURN_VALUE(arg=None, lineno=197)
12-22 13:04 DEBUG    stack ['$R254.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=96 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=96 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=96, inst=LOAD_FAST(arg=5, lineno=179)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=179)
12-22 13:04 DEBUG    stack ['$high96.0']
12-22 13:04 DEBUG    dispatch pc=100, inst=BINARY_SUBTRACT(arg=None, lineno=179)
12-22 13:04 DEBUG    stack ['$high96.0', '$low98.1']
12-22 13:04 DEBUG    dispatch pc=102, inst=LOAD_GLOBAL(arg=3, lineno=179)
12-22 13:04 DEBUG    stack ['$100binary_subtract.2']
12-22 13:04 DEBUG    dispatch pc=104, inst=COMPARE_OP(arg=5, lineno=179)
12-22 13:04 DEBUG    stack ['$100binary_subtract.2', '$102load_global.3']
12-22 13:04 DEBUG    dispatch pc=106, inst=POP_JUMP_IF_FALSE(arg=238, lineno=179)
12-22 13:04 DEBUG    stack ['$104compare_op.4']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0), Edge(pc=238, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=238 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=108 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=108, inst=LOAD_FAST(arg=3, lineno=180)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=110, inst=LOAD_GLOBAL(arg=2, lineno=180)
12-22 13:04 DEBUG    stack ['$n108.0']
12-22 13:04 DEBUG    dispatch pc=112, inst=COMPARE_OP(arg=0, lineno=180)
12-22 13:04 DEBUG    stack ['$n108.0', '$110load_global.1']
12-22 13:04 DEBUG    dispatch pc=114, inst=POP_JUMP_IF_TRUE(arg=120, lineno=180)
12-22 13:04 DEBUG    stack ['$112compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=120, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=238 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=238 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=238, inst=LOAD_DEREF(arg=0, lineno=195)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=240, inst=LOAD_FAST(arg=0, lineno=195)
12-22 13:04 DEBUG    stack ['$238load_deref.0']
12-22 13:04 DEBUG    dispatch pc=242, inst=LOAD_FAST(arg=1, lineno=195)
12-22 13:04 DEBUG    stack ['$238load_deref.0', '$A240.1']
12-22 13:04 DEBUG    dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=195)
12-22 13:04 DEBUG    stack ['$238load_deref.0', '$A240.1', '$R242.2']
12-22 13:04 DEBUG    dispatch pc=246, inst=LOAD_FAST(arg=5, lineno=195)
12-22 13:04 DEBUG    stack ['$238load_deref.0', '$A240.1', '$R242.2', '$low244.3']
12-22 13:04 DEBUG    dispatch pc=248, inst=CALL_FUNCTION(arg=4, lineno=195)
12-22 13:04 DEBUG    stack ['$238load_deref.0', '$A240.1', '$R242.2', '$low244.3', '$high246.4']
12-22 13:04 DEBUG    dispatch pc=250, inst=POP_TOP(arg=None, lineno=195)
12-22 13:04 DEBUG    stack ['$248call_function.5']
12-22 13:04 DEBUG    dispatch pc=252, inst=JUMP_ABSOLUTE(arg=68, lineno=195)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=116 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=116, inst=LOAD_GLOBAL(arg=4, lineno=180)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=118, inst=RAISE_VARARGS(arg=1, lineno=180)
12-22 13:04 DEBUG    stack ['$116load_global.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=120 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=120, inst=LOAD_DEREF(arg=2, lineno=181)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=181)
12-22 13:04 DEBUG    stack ['$120load_deref.0']
12-22 13:04 DEBUG    dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=181)
12-22 13:04 DEBUG    stack ['$120load_deref.0', '$A122.1']
12-22 13:04 DEBUG    dispatch pc=126, inst=LOAD_FAST(arg=4, lineno=181)
12-22 13:04 DEBUG    stack ['$120load_deref.0', '$A122.1', '$R124.2']
12-22 13:04 DEBUG    dispatch pc=128, inst=LOAD_FAST(arg=5, lineno=181)
12-22 13:04 DEBUG    stack ['$120load_deref.0', '$A122.1', '$R124.2', '$low126.3']
12-22 13:04 DEBUG    dispatch pc=130, inst=CALL_FUNCTION(arg=4, lineno=181)
12-22 13:04 DEBUG    stack ['$120load_deref.0', '$A122.1', '$R124.2', '$low126.3', '$high128.4']
12-22 13:04 DEBUG    dispatch pc=132, inst=STORE_FAST(arg=6, lineno=181)
12-22 13:04 DEBUG    stack ['$130call_function.5']
12-22 13:04 DEBUG    dispatch pc=134, inst=LOAD_FAST(arg=5, lineno=183)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=136, inst=LOAD_FAST(arg=6, lineno=183)
12-22 13:04 DEBUG    stack ['$high134.6']
12-22 13:04 DEBUG    dispatch pc=138, inst=BINARY_SUBTRACT(arg=None, lineno=183)
12-22 13:04 DEBUG    stack ['$high134.6', '$i136.7']
12-22 13:04 DEBUG    dispatch pc=140, inst=LOAD_FAST(arg=6, lineno=183)
12-22 13:04 DEBUG    stack ['$138binary_subtract.8']
12-22 13:04 DEBUG    dispatch pc=142, inst=LOAD_FAST(arg=4, lineno=183)
12-22 13:04 DEBUG    stack ['$138binary_subtract.8', '$i140.9']
12-22 13:04 DEBUG    dispatch pc=144, inst=BINARY_SUBTRACT(arg=None, lineno=183)
12-22 13:04 DEBUG    stack ['$138binary_subtract.8', '$i140.9', '$low142.10']
12-22 13:04 DEBUG    dispatch pc=146, inst=COMPARE_OP(arg=4, lineno=183)
12-22 13:04 DEBUG    stack ['$138binary_subtract.8', '$144binary_subtract.11']
12-22 13:04 DEBUG    dispatch pc=148, inst=POP_JUMP_IF_FALSE(arg=194, lineno=183)
12-22 13:04 DEBUG    stack ['$146compare_op.12']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=150, stack=(), blockstack=(), npush=0), Edge(pc=194, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=150 nstack_initial=0), State(pc_initial=194 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=194 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=150 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=150, inst=LOAD_FAST(arg=5, lineno=185)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=152, inst=LOAD_FAST(arg=6, lineno=185)
12-22 13:04 DEBUG    stack ['$high150.0']
12-22 13:04 DEBUG    dispatch pc=154, inst=COMPARE_OP(arg=4, lineno=185)
12-22 13:04 DEBUG    stack ['$high150.0', '$i152.1']
12-22 13:04 DEBUG    dispatch pc=156, inst=POP_JUMP_IF_FALSE(arg=184, lineno=185)
12-22 13:04 DEBUG    stack ['$154compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=158, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=194 nstack_initial=0), State(pc_initial=158 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=194 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=194, inst=LOAD_FAST(arg=6, lineno=190)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=196, inst=LOAD_FAST(arg=4, lineno=190)
12-22 13:04 DEBUG    stack ['$i194.0']
12-22 13:04 DEBUG    dispatch pc=198, inst=COMPARE_OP(arg=4, lineno=190)
12-22 13:04 DEBUG    stack ['$i194.0', '$low196.1']
12-22 13:04 DEBUG    dispatch pc=200, inst=POP_JUMP_IF_FALSE(arg=228, lineno=190)
12-22 13:04 DEBUG    stack ['$198compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=228, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=158 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=228 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=158 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=158, inst=LOAD_GLOBAL(arg=1, lineno=186)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=160, inst=LOAD_FAST(arg=6, lineno=186)
12-22 13:04 DEBUG    stack ['$158load_global.0']
12-22 13:04 DEBUG    dispatch pc=162, inst=LOAD_CONST(arg=2, lineno=186)
12-22 13:04 DEBUG    stack ['$158load_global.0', '$i160.1']
12-22 13:04 DEBUG    dispatch pc=164, inst=BINARY_ADD(arg=None, lineno=186)
12-22 13:04 DEBUG    stack ['$158load_global.0', '$i160.1', '$const162.2']
12-22 13:04 DEBUG    dispatch pc=166, inst=LOAD_FAST(arg=5, lineno=186)
12-22 13:04 DEBUG    stack ['$158load_global.0', '$164binary_add.3']
12-22 13:04 DEBUG    dispatch pc=168, inst=CALL_FUNCTION(arg=2, lineno=186)
12-22 13:04 DEBUG    stack ['$158load_global.0', '$164binary_add.3', '$high166.4']
12-22 13:04 DEBUG    dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=186)
12-22 13:04 DEBUG    stack ['$168call_function.5']
12-22 13:04 DEBUG    dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=186)
12-22 13:04 DEBUG    stack ['$168call_function.5', '$stack170.6']
12-22 13:04 DEBUG    dispatch pc=174, inst=STORE_SUBSCR(arg=None, lineno=186)
12-22 13:04 DEBUG    stack ['$168call_function.5', '$stack170.6', '$n172.7']
12-22 13:04 DEBUG    dispatch pc=176, inst=LOAD_FAST(arg=3, lineno=187)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=178, inst=LOAD_CONST(arg=2, lineno=187)
12-22 13:04 DEBUG    stack ['$n176.8']
12-22 13:04 DEBUG    dispatch pc=180, inst=INPLACE_ADD(arg=None, lineno=187)
12-22 13:04 DEBUG    stack ['$n176.8', '$const178.9']
12-22 13:04 DEBUG    dispatch pc=182, inst=STORE_FAST(arg=3, lineno=187)
12-22 13:04 DEBUG    stack ['$180inplace_add.10']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=184, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=228 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=184 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=184, inst=LOAD_FAST(arg=6, lineno=188)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=186, inst=LOAD_CONST(arg=2, lineno=188)
12-22 13:04 DEBUG    stack ['$i184.0']
12-22 13:04 DEBUG    dispatch pc=188, inst=BINARY_SUBTRACT(arg=None, lineno=188)
12-22 13:04 DEBUG    stack ['$i184.0', '$const186.1']
12-22 13:04 DEBUG    dispatch pc=190, inst=STORE_FAST(arg=5, lineno=188)
12-22 13:04 DEBUG    stack ['$188binary_subtract.2']
12-22 13:04 DEBUG    dispatch pc=192, inst=JUMP_ABSOLUTE(arg=96, lineno=188)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=228 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=202 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=202, inst=LOAD_GLOBAL(arg=1, lineno=191)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=204, inst=LOAD_FAST(arg=4, lineno=191)
12-22 13:04 DEBUG    stack ['$202load_global.0']
12-22 13:04 DEBUG    dispatch pc=206, inst=LOAD_FAST(arg=6, lineno=191)
12-22 13:04 DEBUG    stack ['$202load_global.0', '$low204.1']
12-22 13:04 DEBUG    dispatch pc=208, inst=LOAD_CONST(arg=2, lineno=191)
12-22 13:04 DEBUG    stack ['$202load_global.0', '$low204.1', '$i206.2']
12-22 13:04 DEBUG    dispatch pc=210, inst=BINARY_SUBTRACT(arg=None, lineno=191)
12-22 13:04 DEBUG    stack ['$202load_global.0', '$low204.1', '$i206.2', '$const208.3']
12-22 13:04 DEBUG    dispatch pc=212, inst=CALL_FUNCTION(arg=2, lineno=191)
12-22 13:04 DEBUG    stack ['$202load_global.0', '$low204.1', '$210binary_subtract.4']
12-22 13:04 DEBUG    dispatch pc=214, inst=LOAD_FAST(arg=2, lineno=191)
12-22 13:04 DEBUG    stack ['$212call_function.5']
12-22 13:04 DEBUG    dispatch pc=216, inst=LOAD_FAST(arg=3, lineno=191)
12-22 13:04 DEBUG    stack ['$212call_function.5', '$stack214.6']
12-22 13:04 DEBUG    dispatch pc=218, inst=STORE_SUBSCR(arg=None, lineno=191)
12-22 13:04 DEBUG    stack ['$212call_function.5', '$stack214.6', '$n216.7']
12-22 13:04 DEBUG    dispatch pc=220, inst=LOAD_FAST(arg=3, lineno=192)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=222, inst=LOAD_CONST(arg=2, lineno=192)
12-22 13:04 DEBUG    stack ['$n220.8']
12-22 13:04 DEBUG    dispatch pc=224, inst=INPLACE_ADD(arg=None, lineno=192)
12-22 13:04 DEBUG    stack ['$n220.8', '$const222.9']
12-22 13:04 DEBUG    dispatch pc=226, inst=STORE_FAST(arg=3, lineno=192)
12-22 13:04 DEBUG    stack ['$224inplace_add.10']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=228, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=228 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=228 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=228 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=228, inst=LOAD_FAST(arg=6, lineno=193)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=230, inst=LOAD_CONST(arg=2, lineno=193)
12-22 13:04 DEBUG    stack ['$i228.0']
12-22 13:04 DEBUG    dispatch pc=232, inst=BINARY_ADD(arg=None, lineno=193)
12-22 13:04 DEBUG    stack ['$i228.0', '$const230.1']
12-22 13:04 DEBUG    dispatch pc=234, inst=STORE_FAST(arg=4, lineno=193)
12-22 13:04 DEBUG    stack ['$232binary_add.2']
12-22 13:04 DEBUG    dispatch pc=236, inst=JUMP_ABSOLUTE(arg=96, lineno=193)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=228 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=228 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=228 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=96 nstack_initial=0)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set(),
             State(pc_initial=158 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set(),
             State(pc_initial=194 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=228 nstack_initial=0): set(),
             State(pc_initial=238 nstack_initial=0): set(),
             State(pc_initial=254 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$A4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$A4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$A12.4'}), (14, {'func': '$10load_global.3', 'args': ['$A12.4'], 'res': '$14call_function.5'}), (16, {'res': '$const16.6'}), (18, {'lhs': '$14call_function.5', 'rhs': '$const16.6', 'res': '$18compare_op.7'}), (20, {'pred': '$18compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 26: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$R22.0'}), (24, {'retval': '$R22.0', 'castval': '$24return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$26load_global.0'}), (28, {'res': '$28load_deref.1'}), (30, {'res': '$30load_deref.2'}), (32, {'func': '$26load_global.0', 'args': ['$28load_deref.1', '$30load_deref.2'], 'res': '$32call_function.3'}), (34, {'items': ['$32call_function.3'], 'res': '$34build_list.4'}), (36, {'res': '$36load_global.5'}), (38, {'lhs': '$34build_list.4', 'rhs': '$36load_global.5', 'res': '$38binary_multiply.6'}), (40, {'value': '$38binary_multiply.6'}), (42, {'res': '$42load_global.7'}), (44, {'res': '$44load_deref.8'}), (46, {'res': '$46load_global.9'}), (48, {'res': '$A48.10'}), (50, {'func': '$46load_global.9', 'args': ['$A48.10'], 'res': '$50call_function.11'}), (52, {'res': '$const52.12'}), (54, {'lhs': '$50call_function.11', 'rhs': '$const52.12', 'res': '$54binary_subtract.13'}), (56, {'func': '$42load_global.7', 'args': ['$44load_deref.8', '$54binary_subtract.13'], 'res': '$56call_function.14'}), (58, {'res': '$stack58.15'}), (60, {'res': '$const60.16'}), (62, {'target': '$stack58.15', 'index': '$const60.16', 'value': '$56call_function.14'}), (64, {'res': '$const64.17'}), (66, {'value': '$const64.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$n68.0'}), (70, {'res': '$const70.1'}), (72, {'lhs': '$n68.0', 'rhs': '$const70.1', 'res': '$72compare_op.2'}), (74, {'pred': '$72compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={76: (), 254: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$n76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$n76.0', 'rhs': '$const78.1', 'res': '$80inplace_subtract.2'}), (82, {'value': '$80inplace_subtract.2'}), (84, {'res': '$stack84.3'}), (86, {'res': '$n86.4'}), (88, {'index': '$n86.4', 'target': '$stack84.3', 'res': '$88binary_subscr.5'}), (90, {'iterable': '$88binary_subscr.5', 'stores': ['$90unpack_sequence.6', '$90unpack_sequence.7'], 'tupleobj': '$90unpack_sequence.8'}), (92, {'value': '$90unpack_sequence.6'}), (94, {'value': '$90unpack_sequence.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$high96.0'}), (98, {'res': '$low98.1'}), (100, {'lhs': '$high96.0', 'rhs': '$low98.1', 'res': '$100binary_subtract.2'}), (102, {'res': '$102load_global.3'}), (104, {'lhs': '$100binary_subtract.2', 'rhs': '$102load_global.3', 'res': '$104compare_op.4'}), (106, {'pred': '$104compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: (), 238: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$n108.0'}), (110, {'res': '$110load_global.1'}), (112, {'lhs': '$n108.0', 'rhs': '$110load_global.1', 'res': '$112compare_op.2'}), (114, {'pred': '$112compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 120: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$116load_global.0'}), (118, {'exc': '$116load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$120load_deref.0'}), (122, {'res': '$A122.1'}), (124, {'res': '$R124.2'}), (126, {'res': '$low126.3'}), (128, {'res': '$high128.4'}), (130, {'func': '$120load_deref.0', 'args': ['$A122.1', '$R124.2', '$low126.3', '$high128.4'], 'res': '$130call_function.5'}), (132, {'value': '$130call_function.5'}), (134, {'res': '$high134.6'}), (136, {'res': '$i136.7'}), (138, {'lhs': '$high134.6', 'rhs': '$i136.7', 'res': '$138binary_subtract.8'}), (140, {'res': '$i140.9'}), (142, {'res': '$low142.10'}), (144, {'lhs': '$i140.9', 'rhs': '$low142.10', 'res': '$144binary_subtract.11'}), (146, {'lhs': '$138binary_subtract.8', 'rhs': '$144binary_subtract.11', 'res': '$146compare_op.12'}), (148, {'pred': '$146compare_op.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={150: (), 194: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$high150.0'}), (152, {'res': '$i152.1'}), (154, {'lhs': '$high150.0', 'rhs': '$i152.1', 'res': '$154compare_op.2'}), (156, {'pred': '$154compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={158: (), 184: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=158 nstack_initial=0):
AdaptBlockInfo(insts=((158, {'res': '$158load_global.0'}), (160, {'res': '$i160.1'}), (162, {'res': '$const162.2'}), (164, {'lhs': '$i160.1', 'rhs': '$const162.2', 'res': '$164binary_add.3'}), (166, {'res': '$high166.4'}), (168, {'func': '$158load_global.0', 'args': ['$164binary_add.3', '$high166.4'], 'res': '$168call_function.5'}), (170, {'res': '$stack170.6'}), (172, {'res': '$n172.7'}), (174, {'target': '$stack170.6', 'index': '$n172.7', 'value': '$168call_function.5'}), (176, {'res': '$n176.8'}), (178, {'res': '$const178.9'}), (180, {'lhs': '$n176.8', 'rhs': '$const178.9', 'res': '$180inplace_add.10'}), (182, {'value': '$180inplace_add.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={184: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$i184.0'}), (186, {'res': '$const186.1'}), (188, {'lhs': '$i184.0', 'rhs': '$const186.1', 'res': '$188binary_subtract.2'}), (190, {'value': '$188binary_subtract.2'}), (192, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=194 nstack_initial=0):
AdaptBlockInfo(insts=((194, {'res': '$i194.0'}), (196, {'res': '$low196.1'}), (198, {'lhs': '$i194.0', 'rhs': '$low196.1', 'res': '$198compare_op.2'}), (200, {'pred': '$198compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 228: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'res': '$202load_global.0'}), (204, {'res': '$low204.1'}), (206, {'res': '$i206.2'}), (208, {'res': '$const208.3'}), (210, {'lhs': '$i206.2', 'rhs': '$const208.3', 'res': '$210binary_subtract.4'}), (212, {'func': '$202load_global.0', 'args': ['$low204.1', '$210binary_subtract.4'], 'res': '$212call_function.5'}), (214, {'res': '$stack214.6'}), (216, {'res': '$n216.7'}), (218, {'target': '$stack214.6', 'index': '$n216.7', 'value': '$212call_function.5'}), (220, {'res': '$n220.8'}), (222, {'res': '$const222.9'}), (224, {'lhs': '$n220.8', 'rhs': '$const222.9', 'res': '$224inplace_add.10'}), (226, {'value': '$224inplace_add.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={228: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=228 nstack_initial=0):
AdaptBlockInfo(insts=((228, {'res': '$i228.0'}), (230, {'res': '$const230.1'}), (232, {'lhs': '$i228.0', 'rhs': '$const230.1', 'res': '$232binary_add.2'}), (234, {'value': '$232binary_add.2'}), (236, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=238 nstack_initial=0):
AdaptBlockInfo(insts=((238, {'res': '$238load_deref.0'}), (240, {'res': '$A240.1'}), (242, {'res': '$R242.2'}), (244, {'res': '$low244.3'}), (246, {'res': '$high246.4'}), (248, {'func': '$238load_deref.0', 'args': ['$A240.1', '$R242.2', '$low244.3', '$high246.4'], 'res': '$248call_function.5'}), (252, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=254 nstack_initial=0):
AdaptBlockInfo(insts=((254, {'res': '$R254.0'}), (256, {'retval': '$R254.0', 'castval': '$256return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    A = arg(0, name=A)                       ['A']
    $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x000001AEF35F7EE0>) ['$2load_deref.0']
    R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', 'A', 'R']
    $10load_global.3 = global(len: <built-in function len>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'A']
    $const16.6 = const(int, 2)               ['$const16.6']
    $18compare_op.7 = $14call_function.5 < $const16.6 ['$14call_function.5', '$18compare_op.7', '$const16.6']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.7', '$20pred', 'bool20']
    branch $20pred, 22, 26                   ['$20pred']
label 22:
    $24return_value.1 = cast(value=R)        ['$24return_value.1', 'R']
    return $24return_value.1                 ['$24return_value.1']
label 26:
    $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>) ['$26load_global.0']
    $28load_deref.1 = freevar(zero: 0)       ['$28load_deref.1']
    $30load_deref.2 = freevar(zero: 0)       ['$30load_deref.2']
    $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.0', '$28load_deref.1', '$30load_deref.2', '$32call_function.3']
    $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)]) ['$32call_function.3', '$34build_list.4']
    $36load_global.5 = global(MAX_STACK: 100) ['$36load_global.5']
    stack = $34build_list.4 * $36load_global.5 ['$34build_list.4', '$36load_global.5', 'stack']
    $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>) ['$42load_global.7']
    $44load_deref.8 = freevar(zero: 0)       ['$44load_deref.8']
    $46load_global.9 = global(len: <built-in function len>) ['$46load_global.9']
    $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.9', '$50call_function.11', 'A']
    $const52.12 = const(int, 1)              ['$const52.12']
    $54binary_subtract.13 = $50call_function.11 - $const52.12 ['$50call_function.11', '$54binary_subtract.13', '$const52.12']
    $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.7', '$44load_deref.8', '$54binary_subtract.13', '$56call_function.14']
    $const60.16 = const(int, 0)              ['$const60.16']
    stack[$const60.16] = $56call_function.14 ['$56call_function.14', '$const60.16', 'stack']
    n = const(int, 1)                        ['n']
    jump 68                                  []
label 68:
    $const70.1 = const(int, 0)               ['$const70.1']
    $72compare_op.2 = n > $const70.1         ['$72compare_op.2', '$const70.1', 'n']
    bool74 = global(bool: <class 'bool'>)    ['bool74']
    $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None) ['$72compare_op.2', '$74pred', 'bool74']
    branch $74pred, 76, 254                  ['$74pred']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined) ['$80inplace_subtract.2', '$const78.1', 'n']
    n = $80inplace_subtract.2                ['$80inplace_subtract.2', 'n']
    $88binary_subscr.5 = getitem(value=stack, index=n, fn=<built-in function getitem>) ['$88binary_subscr.5', 'n', 'stack']
    $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2) ['$88binary_subscr.5', '$90unpack_sequence.8']
    $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>) ['$90unpack_sequence.6', '$90unpack_sequence.8']
    $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>) ['$90unpack_sequence.7', '$90unpack_sequence.8']
    low = $90unpack_sequence.6               ['$90unpack_sequence.6', 'low']
    high = $90unpack_sequence.7              ['$90unpack_sequence.7', 'high']
    jump 96                                  []
label 96:
    $100binary_subtract.2 = high - low       ['$100binary_subtract.2', 'high', 'low']
    $102load_global.3 = global(SMALL_QUICKSORT: 15) ['$102load_global.3']
    $104compare_op.4 = $100binary_subtract.2 >= $102load_global.3 ['$100binary_subtract.2', '$102load_global.3', '$104compare_op.4']
    bool106 = global(bool: <class 'bool'>)   ['bool106']
    $106pred = call bool106($104compare_op.4, func=bool106, args=(Var($104compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None) ['$104compare_op.4', '$106pred', 'bool106']
    branch $106pred, 108, 238                ['$106pred']
label 108:
    $110load_global.1 = global(MAX_STACK: 100) ['$110load_global.1']
    $112compare_op.2 = n < $110load_global.1 ['$110load_global.1', '$112compare_op.2', 'n']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None) ['$112compare_op.2', '$114pred', 'bool114']
    branch $114pred, 120, 116                ['$114pred']
label 116:
    $116load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$116load_global.0']
    raise $116load_global.0                  ['$116load_global.0']
label 120:
    $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x000001AEF35F7D30>) ['$120load_deref.0']
    i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_deref.0', 'A', 'R', 'high', 'i', 'low']
    $138binary_subtract.8 = high - i         ['$138binary_subtract.8', 'high', 'i']
    $144binary_subtract.11 = i - low         ['$144binary_subtract.11', 'i', 'low']
    $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11 ['$138binary_subtract.8', '$144binary_subtract.11', '$146compare_op.12']
    bool148 = global(bool: <class 'bool'>)   ['bool148']
    $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None) ['$146compare_op.12', '$148pred', 'bool148']
    branch $148pred, 150, 194                ['$148pred']
label 150:
    $154compare_op.2 = high > i              ['$154compare_op.2', 'high', 'i']
    bool156 = global(bool: <class 'bool'>)   ['bool156']
    $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None) ['$154compare_op.2', '$156pred', 'bool156']
    branch $156pred, 158, 184                ['$156pred']
label 158:
    $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>) ['$158load_global.0']
    $const162.2 = const(int, 1)              ['$const162.2']
    $164binary_add.3 = i + $const162.2       ['$164binary_add.3', '$const162.2', 'i']
    $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.0', '$164binary_add.3', '$168call_function.5', 'high']
    stack[n] = $168call_function.5           ['$168call_function.5', 'n', 'stack']
    $const178.9 = const(int, 1)              ['$const178.9']
    $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined) ['$180inplace_add.10', '$const178.9', 'n']
    n = $180inplace_add.10                   ['$180inplace_add.10', 'n']
    jump 184                                 []
label 184:
    $const186.1 = const(int, 1)              ['$const186.1']
    high = i - $const186.1                   ['$const186.1', 'high', 'i']
    jump 96                                  []
label 194:
    $198compare_op.2 = i > low               ['$198compare_op.2', 'i', 'low']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None) ['$198compare_op.2', '$200pred', 'bool200']
    branch $200pred, 202, 228                ['$200pred']
label 202:
    $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>) ['$202load_global.0']
    $const208.3 = const(int, 1)              ['$const208.3']
    $210binary_subtract.4 = i - $const208.3  ['$210binary_subtract.4', '$const208.3', 'i']
    $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_global.0', '$210binary_subtract.4', '$212call_function.5', 'low']
    stack[n] = $212call_function.5           ['$212call_function.5', 'n', 'stack']
    $const222.9 = const(int, 1)              ['$const222.9']
    $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined) ['$224inplace_add.10', '$const222.9', 'n']
    n = $224inplace_add.10                   ['$224inplace_add.10', 'n']
    jump 228                                 []
label 228:
    $const230.1 = const(int, 1)              ['$const230.1']
    low = i + $const230.1                    ['$const230.1', 'i', 'low']
    jump 96                                  []
label 238:
    $238load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x000001AEF35F7DC0>) ['$238load_deref.0']
    $248call_function.5 = call $238load_deref.0(A, R, low, high, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None) ['$238load_deref.0', '$248call_function.5', 'A', 'R', 'high', 'low']
    jump 68                                  []
label 254:
    $256return_value.1 = cast(value=R)       ['$256return_value.1', 'R']
    return $256return_value.1                ['$256return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x000001AEF35F7EE0>)
12-22 13:04 DEBUG    on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_global.3 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 22, 26
12-22 13:04 DEBUG    ==== SSA block analysis pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $24return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $24return_value.1
12-22 13:04 DEBUG    ==== SSA block analysis pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $28load_deref.1 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $30load_deref.2 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
12-22 13:04 DEBUG    on stmt: $36load_global.5 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: stack = $34build_list.4 * $36load_global.5
12-22 13:04 DEBUG    on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $44load_deref.8 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $46load_global.9 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const52.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
12-22 13:04 DEBUG    on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const60.16 = const(int, 0)
12-22 13:04 DEBUG    on stmt: stack[0] = $56call_function.14
12-22 13:04 DEBUG    on stmt: n = const(int, 1)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block analysis pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $const70.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $72compare_op.2 = n > $const70.1
12-22 13:04 DEBUG    on stmt: bool74 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $74pred, 76, 254
12-22 13:04 DEBUG    ==== SSA block analysis pass on 76
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $const78.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n = $80inplace_subtract.2
12-22 13:04 DEBUG    on stmt: $88binary_subscr.5 = getitem(value=stack, index=n, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: low = $90unpack_sequence.6
12-22 13:04 DEBUG    on stmt: high = $90unpack_sequence.7
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block analysis pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $100binary_subtract.2 = high - low
12-22 13:04 DEBUG    on stmt: $102load_global.3 = global(SMALL_QUICKSORT: 15)
12-22 13:04 DEBUG    on stmt: $104compare_op.4 = $100binary_subtract.2 >= $102load_global.3
12-22 13:04 DEBUG    on stmt: bool106 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $106pred = call bool106($104compare_op.4, func=bool106, args=(Var($104compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $106pred, 108, 238
12-22 13:04 DEBUG    ==== SSA block analysis pass on 108
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $110load_global.1 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: $112compare_op.2 = n < $110load_global.1
12-22 13:04 DEBUG    on stmt: bool114 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $114pred, 120, 116
12-22 13:04 DEBUG    ==== SSA block analysis pass on 116
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $116load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block analysis pass on 120
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x000001AEF35F7D30>)
12-22 13:04 DEBUG    on stmt: i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_subtract.8 = high - i
12-22 13:04 DEBUG    on stmt: $144binary_subtract.11 = i - low
12-22 13:04 DEBUG    on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
12-22 13:04 DEBUG    on stmt: bool148 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $148pred, 150, 194
12-22 13:04 DEBUG    ==== SSA block analysis pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $154compare_op.2 = high > i
12-22 13:04 DEBUG    on stmt: bool156 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $156pred, 158, 184
12-22 13:04 DEBUG    ==== SSA block analysis pass on 158
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const162.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $164binary_add.3 = i + $const162.2
12-22 13:04 DEBUG    on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n] = $168call_function.5
12-22 13:04 DEBUG    on stmt: $const178.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n = $180inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 184
12-22 13:04 DEBUG    ==== SSA block analysis pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $const186.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: high = i - $const186.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block analysis pass on 194
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $198compare_op.2 = i > low
12-22 13:04 DEBUG    on stmt: bool200 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $200pred, 202, 228
12-22 13:04 DEBUG    ==== SSA block analysis pass on 202
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const208.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $210binary_subtract.4 = i - $const208.3
12-22 13:04 DEBUG    on stmt: $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n] = $212call_function.5
12-22 13:04 DEBUG    on stmt: $const222.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n = $224inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 228
12-22 13:04 DEBUG    ==== SSA block analysis pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $const230.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: low = i + $const230.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block analysis pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $238load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x000001AEF35F7DC0>)
12-22 13:04 DEBUG    on stmt: $248call_function.5 = call $238load_deref.0(A, R, low, high, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block analysis pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: $256return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $256return_value.1
12-22 13:04 DEBUG    ==== SSA block analysis pass on 255
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF31BA880>
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$100binary_subtract.2': [<numba.core.ir.Assign object at 0x000001AEF20C86A0>],
             '$102load_global.3': [<numba.core.ir.Assign object at 0x000001AEF20C8A30>],
             '$104compare_op.4': [<numba.core.ir.Assign object at 0x000001AEF20C8D00>],
             '$106pred': [<numba.core.ir.Assign object at 0x000001AEF31AE040>],
             '$10load_global.3': [<numba.core.ir.Assign object at 0x000001AEF20C5AF0>],
             '$110load_global.1': [<numba.core.ir.Assign object at 0x000001AEF31AE700>],
             '$112compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF31AE1F0>],
             '$114pred': [<numba.core.ir.Assign object at 0x000001AEF31AE820>],
             '$116load_global.0': [<numba.core.ir.Assign object at 0x000001AEF31AE400>],
             '$120load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF31AEF70>],
             '$138binary_subtract.8': [<numba.core.ir.Assign object at 0x000001AEF31B2CA0>],
             '$144binary_subtract.11': [<numba.core.ir.Assign object at 0x000001AEF31B23D0>],
             '$146compare_op.12': [<numba.core.ir.Assign object at 0x000001AEF20DF5B0>],
             '$148pred': [<numba.core.ir.Assign object at 0x000001AEF20DF430>],
             '$14call_function.5': [<numba.core.ir.Assign object at 0x000001AEF20C5760>],
             '$154compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF20DFC40>],
             '$156pred': [<numba.core.ir.Assign object at 0x000001AEF20DFC70>],
             '$158load_global.0': [<numba.core.ir.Assign object at 0x000001AEF20DFD00>],
             '$164binary_add.3': [<numba.core.ir.Assign object at 0x000001AEF20DFD30>],
             '$168call_function.5': [<numba.core.ir.Assign object at 0x000001AEF319C070>],
             '$180inplace_add.10': [<numba.core.ir.Assign object at 0x000001AEF319C190>],
             '$18compare_op.7': [<numba.core.ir.Assign object at 0x000001AEF20C58B0>],
             '$198compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF31BA3A0>],
             '$200pred': [<numba.core.ir.Assign object at 0x000001AEF31BAF70>],
             '$202load_global.0': [<numba.core.ir.Assign object at 0x000001AEF31BA160>],
             '$20pred': [<numba.core.ir.Assign object at 0x000001AEF2062DC0>],
             '$210binary_subtract.4': [<numba.core.ir.Assign object at 0x000001AEF31BAFD0>],
             '$212call_function.5': [<numba.core.ir.Assign object at 0x000001AEF3228B80>],
             '$224inplace_add.10': [<numba.core.ir.Assign object at 0x000001AEF3228BB0>],
             '$238load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF3228C40>],
             '$248call_function.5': [<numba.core.ir.Assign object at 0x000001AEF1D6F790>],
             '$24return_value.1': [<numba.core.ir.Assign object at 0x000001AEF2062550>],
             '$256return_value.1': [<numba.core.ir.Assign object at 0x000001AEF1D6F5E0>],
             '$26load_global.0': [<numba.core.ir.Assign object at 0x000001AEF2062B50>],
             '$28load_deref.1': [<numba.core.ir.Assign object at 0x000001AEF31499D0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF20C5F40>],
             '$30load_deref.2': [<numba.core.ir.Assign object at 0x000001AEF3149C70>],
             '$32call_function.3': [<numba.core.ir.Assign object at 0x000001AEF3149DC0>],
             '$34build_list.4': [<numba.core.ir.Assign object at 0x000001AEF3149190>],
             '$36load_global.5': [<numba.core.ir.Assign object at 0x000001AEF3149A30>],
             '$42load_global.7': [<numba.core.ir.Assign object at 0x000001AEF31491F0>],
             '$44load_deref.8': [<numba.core.ir.Assign object at 0x000001AEF3149760>],
             '$46load_global.9': [<numba.core.ir.Assign object at 0x000001AEF3149F40>],
             '$50call_function.11': [<numba.core.ir.Assign object at 0x000001AEF2097CA0>],
             '$54binary_subtract.13': [<numba.core.ir.Assign object at 0x000001AEF2097250>],
             '$56call_function.14': [<numba.core.ir.Assign object at 0x000001AEF2097BE0>],
             '$72compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF31EFAF0>],
             '$74pred': [<numba.core.ir.Assign object at 0x000001AEF31EF8E0>],
             '$80inplace_subtract.2': [<numba.core.ir.Assign object at 0x000001AEF31EF4C0>],
             '$88binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF20C8E50>],
             '$90unpack_sequence.6': [<numba.core.ir.Assign object at 0x000001AEF20C8040>],
             '$90unpack_sequence.7': [<numba.core.ir.Assign object at 0x000001AEF20C8130>],
             '$90unpack_sequence.8': [<numba.core.ir.Assign object at 0x000001AEF20C8160>],
             '$const16.6': [<numba.core.ir.Assign object at 0x000001AEF20C5580>],
             '$const162.2': [<numba.core.ir.Assign object at 0x000001AEF20DF310>],
             '$const178.9': [<numba.core.ir.Assign object at 0x000001AEF319C340>],
             '$const186.1': [<numba.core.ir.Assign object at 0x000001AEF319C640>],
             '$const208.3': [<numba.core.ir.Assign object at 0x000001AEF31BA730>],
             '$const222.9': [<numba.core.ir.Assign object at 0x000001AEF354CF40>],
             '$const230.1': [<numba.core.ir.Assign object at 0x000001AEF3228F40>],
             '$const52.12': [<numba.core.ir.Assign object at 0x000001AEF2097E50>],
             '$const60.16': [<numba.core.ir.Assign object at 0x000001AEF31EF340>],
             '$const70.1': [<numba.core.ir.Assign object at 0x000001AEF2060880>],
             '$const78.1': [<numba.core.ir.Assign object at 0x000001AEF31EF0A0>],
             'A': [<numba.core.ir.Assign object at 0x000001AEF20C5CA0>],
             'R': [<numba.core.ir.Assign object at 0x000001AEF20C53D0>],
             'bool106': [<numba.core.ir.Assign object at 0x000001AEF20C8850>],
             'bool114': [<numba.core.ir.Assign object at 0x000001AEF31AE880>],
             'bool148': [<numba.core.ir.Assign object at 0x000001AEF20DF370>],
             'bool156': [<numba.core.ir.Assign object at 0x000001AEF20DF8E0>],
             'bool20': [<numba.core.ir.Assign object at 0x000001AEF20628B0>],
             'bool200': [<numba.core.ir.Assign object at 0x000001AEF31BAB80>],
             'bool74': [<numba.core.ir.Assign object at 0x000001AEF31EFC40>],
             'high': [<numba.core.ir.Assign object at 0x000001AEF20C81C0>,
                      <numba.core.ir.Assign object at 0x000001AEF319C220>],
             'i': [<numba.core.ir.Assign object at 0x000001AEF31B2A90>],
             'low': [<numba.core.ir.Assign object at 0x000001AEF20C83A0>,
                     <numba.core.ir.Assign object at 0x000001AEF3228EB0>],
             'n': [<numba.core.ir.Assign object at 0x000001AEF20601F0>,
                   <numba.core.ir.Assign object at 0x000001AEF31EFCD0>,
                   <numba.core.ir.Assign object at 0x000001AEF319C520>,
                   <numba.core.ir.Assign object at 0x000001AEF3228280>],
             'stack': [<numba.core.ir.Assign object at 0x000001AEF31497F0>]})
12-22 13:04 DEBUG    SSA violators {'n', 'low', 'high'}
12-22 13:04 DEBUG    Fix SSA violator on var n
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x000001AEF35F7EE0>)
12-22 13:04 DEBUG    on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_global.3 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 22, 26
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $24return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $24return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $28load_deref.1 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $30load_deref.2 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
12-22 13:04 DEBUG    on stmt: $36load_global.5 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: stack = $34build_list.4 * $36load_global.5
12-22 13:04 DEBUG    on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $44load_deref.8 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $46load_global.9 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const52.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
12-22 13:04 DEBUG    on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const60.16 = const(int, 0)
12-22 13:04 DEBUG    on stmt: stack[0] = $56call_function.14
12-22 13:04 DEBUG    on stmt: n = const(int, 1)
12-22 13:04 DEBUG    first assign: n
12-22 13:04 DEBUG    replaced with: n = const(int, 1)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $const70.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $72compare_op.2 = n > $const70.1
12-22 13:04 DEBUG    on stmt: bool74 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $74pred, 76, 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 76
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $const78.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n = $80inplace_subtract.2
12-22 13:04 DEBUG    replaced with: n.1 = $80inplace_subtract.2
12-22 13:04 DEBUG    on stmt: $88binary_subscr.5 = getitem(value=stack, index=n, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: low = $90unpack_sequence.6
12-22 13:04 DEBUG    on stmt: high = $90unpack_sequence.7
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $100binary_subtract.2 = high - low
12-22 13:04 DEBUG    on stmt: $102load_global.3 = global(SMALL_QUICKSORT: 15)
12-22 13:04 DEBUG    on stmt: $104compare_op.4 = $100binary_subtract.2 >= $102load_global.3
12-22 13:04 DEBUG    on stmt: bool106 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $106pred = call bool106($104compare_op.4, func=bool106, args=(Var($104compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $106pred, 108, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 108
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $110load_global.1 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: $112compare_op.2 = n < $110load_global.1
12-22 13:04 DEBUG    on stmt: bool114 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $114pred, 120, 116
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 116
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $116load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 120
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x000001AEF35F7D30>)
12-22 13:04 DEBUG    on stmt: i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_subtract.8 = high - i
12-22 13:04 DEBUG    on stmt: $144binary_subtract.11 = i - low
12-22 13:04 DEBUG    on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
12-22 13:04 DEBUG    on stmt: bool148 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $148pred, 150, 194
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $154compare_op.2 = high > i
12-22 13:04 DEBUG    on stmt: bool156 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $156pred, 158, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 158
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const162.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $164binary_add.3 = i + $const162.2
12-22 13:04 DEBUG    on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n] = $168call_function.5
12-22 13:04 DEBUG    on stmt: $const178.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n = $180inplace_add.10
12-22 13:04 DEBUG    replaced with: n.2 = $180inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $const186.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: high = i - $const186.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 194
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $198compare_op.2 = i > low
12-22 13:04 DEBUG    on stmt: bool200 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $200pred, 202, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 202
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const208.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $210binary_subtract.4 = i - $const208.3
12-22 13:04 DEBUG    on stmt: $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n] = $212call_function.5
12-22 13:04 DEBUG    on stmt: $const222.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n = $224inplace_add.10
12-22 13:04 DEBUG    replaced with: n.3 = $224inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $const230.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: low = i + $const230.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $238load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x000001AEF35F7DC0>)
12-22 13:04 DEBUG    on stmt: $248call_function.5 = call $238load_deref.0(A, R, low, high, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $256return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $256return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 255
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x000001AEF31E3DF0>],
             76: [<numba.core.ir.Assign object at 0x000001AEF31E31C0>],
             158: [<numba.core.ir.Assign object at 0x000001AEF1D6FAC0>],
             202: [<numba.core.ir.Assign object at 0x000001AEF1D6F310>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x000001AEF35F7EE0>)
12-22 13:04 DEBUG    on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_global.3 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 22, 26
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $24return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $24return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $28load_deref.1 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $30load_deref.2 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
12-22 13:04 DEBUG    on stmt: $36load_global.5 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: stack = $34build_list.4 * $36load_global.5
12-22 13:04 DEBUG    on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $44load_deref.8 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $46load_global.9 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const52.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
12-22 13:04 DEBUG    on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const60.16 = const(int, 0)
12-22 13:04 DEBUG    on stmt: stack[0] = $56call_function.14
12-22 13:04 DEBUG    on stmt: n = const(int, 1)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $const70.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $72compare_op.2 = n > $const70.1
12-22 13:04 DEBUG    find_def var='n' stmt=$72compare_op.2 = n > $const70.1
12-22 13:04 DEBUG    find_def_from_top label 68
12-22 13:04 DEBUG    insert phi node n.4 = phi(incoming_values=[], incoming_blocks=[]) at 68
12-22 13:04 DEBUG    find_def_from_bottom label 26
12-22 13:04 DEBUG    incoming_def n = const(int, 1)
12-22 13:04 DEBUG    find_def_from_bottom label 238
12-22 13:04 DEBUG    find_def_from_top label 238
12-22 13:04 DEBUG    idom 96 from label 238
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    find_def_from_top label 96
12-22 13:04 DEBUG    insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 96
12-22 13:04 DEBUG    find_def_from_bottom label 76
12-22 13:04 DEBUG    incoming_def n.1 = $80inplace_subtract.2
12-22 13:04 DEBUG    find_def_from_bottom label 255
12-22 13:04 DEBUG    find_def_from_top label 255
12-22 13:04 DEBUG    insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 255
12-22 13:04 DEBUG    find_def_from_bottom label 184
12-22 13:04 DEBUG    find_def_from_top label 184
12-22 13:04 DEBUG    insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 184
12-22 13:04 DEBUG    find_def_from_bottom label 158
12-22 13:04 DEBUG    incoming_def n.2 = $180inplace_add.10
12-22 13:04 DEBUG    find_def_from_bottom label 150
12-22 13:04 DEBUG    find_def_from_top label 150
12-22 13:04 DEBUG    idom 120 from label 150
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    incoming_def n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176)], incoming_blocks=[76])
12-22 13:04 DEBUG    incoming_def n.7 = phi(incoming_values=[Var(n.2, quicksort.py:187), Var(n.5, quicksort.py:175)], incoming_blocks=[158, 150])
12-22 13:04 DEBUG    find_def_from_bottom label 228
12-22 13:04 DEBUG    find_def_from_top label 228
12-22 13:04 DEBUG    insert phi node n.8 = phi(incoming_values=[], incoming_blocks=[]) at 228
12-22 13:04 DEBUG    find_def_from_bottom label 202
12-22 13:04 DEBUG    incoming_def n.3 = $224inplace_add.10
12-22 13:04 DEBUG    find_def_from_bottom label 194
12-22 13:04 DEBUG    find_def_from_top label 194
12-22 13:04 DEBUG    idom 120 from label 194
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    incoming_def n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176)], incoming_blocks=[76])
12-22 13:04 DEBUG    incoming_def n.8 = phi(incoming_values=[Var(n.3, quicksort.py:192), Var(n.5, quicksort.py:175)], incoming_blocks=[202, 194])
12-22 13:04 DEBUG    incoming_def n.6 = phi(incoming_values=[Var(n.7, quicksort.py:175), Var(n.8, quicksort.py:175)], incoming_blocks=[184, 228])
12-22 13:04 DEBUG    incoming_def n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:175)], incoming_blocks=[76, 255])
12-22 13:04 DEBUG    replaced with: $72compare_op.2 = n.4 > $const70.1
12-22 13:04 DEBUG    on stmt: bool74 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $74pred, 76, 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 76
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $const78.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='n' stmt=$80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 76
12-22 13:04 DEBUG    idom 68 from label 76
12-22 13:04 DEBUG    find_def_from_bottom label 68
12-22 13:04 DEBUG    replaced with: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n.4, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.1 = $80inplace_subtract.2
12-22 13:04 DEBUG    on stmt: $88binary_subscr.5 = getitem(value=stack, index=n, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='n' stmt=$88binary_subscr.5 = getitem(value=stack, index=n, fn=<built-in function getitem>)
12-22 13:04 DEBUG    replaced with: $88binary_subscr.5 = getitem(value=stack, index=n.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: low = $90unpack_sequence.6
12-22 13:04 DEBUG    on stmt: high = $90unpack_sequence.7
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $100binary_subtract.2 = high - low
12-22 13:04 DEBUG    on stmt: $102load_global.3 = global(SMALL_QUICKSORT: 15)
12-22 13:04 DEBUG    on stmt: $104compare_op.4 = $100binary_subtract.2 >= $102load_global.3
12-22 13:04 DEBUG    on stmt: bool106 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $106pred = call bool106($104compare_op.4, func=bool106, args=(Var($104compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $106pred, 108, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 108
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $110load_global.1 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: $112compare_op.2 = n < $110load_global.1
12-22 13:04 DEBUG    find_def var='n' stmt=$112compare_op.2 = n < $110load_global.1
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: $112compare_op.2 = n.5 < $110load_global.1
12-22 13:04 DEBUG    on stmt: bool114 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $114pred, 120, 116
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 116
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $116load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 120
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x000001AEF35F7D30>)
12-22 13:04 DEBUG    on stmt: i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_subtract.8 = high - i
12-22 13:04 DEBUG    on stmt: $144binary_subtract.11 = i - low
12-22 13:04 DEBUG    on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
12-22 13:04 DEBUG    on stmt: bool148 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $148pred, 150, 194
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $154compare_op.2 = high > i
12-22 13:04 DEBUG    on stmt: bool156 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $156pred, 158, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 158
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const162.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $164binary_add.3 = i + $const162.2
12-22 13:04 DEBUG    on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n] = $168call_function.5
12-22 13:04 DEBUG    find_def var='n' stmt=stack[n] = $168call_function.5
12-22 13:04 DEBUG    find_def_from_top label 158
12-22 13:04 DEBUG    idom 150 from label 158
12-22 13:04 DEBUG    find_def_from_bottom label 150
12-22 13:04 DEBUG    find_def_from_top label 150
12-22 13:04 DEBUG    idom 120 from label 150
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: stack[n.5] = $168call_function.5
12-22 13:04 DEBUG    on stmt: $const178.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='n' stmt=$180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 158
12-22 13:04 DEBUG    idom 150 from label 158
12-22 13:04 DEBUG    find_def_from_bottom label 150
12-22 13:04 DEBUG    find_def_from_top label 150
12-22 13:04 DEBUG    idom 120 from label 150
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.5, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.2 = $180inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $const186.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: high = i - $const186.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 194
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $198compare_op.2 = i > low
12-22 13:04 DEBUG    on stmt: bool200 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $200pred, 202, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 202
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const208.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $210binary_subtract.4 = i - $const208.3
12-22 13:04 DEBUG    on stmt: $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n] = $212call_function.5
12-22 13:04 DEBUG    find_def var='n' stmt=stack[n] = $212call_function.5
12-22 13:04 DEBUG    find_def_from_top label 202
12-22 13:04 DEBUG    idom 194 from label 202
12-22 13:04 DEBUG    find_def_from_bottom label 194
12-22 13:04 DEBUG    find_def_from_top label 194
12-22 13:04 DEBUG    idom 120 from label 194
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: stack[n.5] = $212call_function.5
12-22 13:04 DEBUG    on stmt: $const222.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='n' stmt=$224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 202
12-22 13:04 DEBUG    idom 194 from label 202
12-22 13:04 DEBUG    find_def_from_bottom label 194
12-22 13:04 DEBUG    find_def_from_top label 194
12-22 13:04 DEBUG    idom 120 from label 194
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.5, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.3 = $224inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $const230.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: low = i + $const230.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $238load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x000001AEF35F7DC0>)
12-22 13:04 DEBUG    on stmt: $248call_function.5 = call $238load_deref.0(A, R, low, high, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: $256return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $256return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 255
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31BAE20>
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    Fix SSA violator on var low
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x000001AEF35F7EE0>)
12-22 13:04 DEBUG    on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_global.3 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 22, 26
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $24return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $24return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $28load_deref.1 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $30load_deref.2 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
12-22 13:04 DEBUG    on stmt: $36load_global.5 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: stack = $34build_list.4 * $36load_global.5
12-22 13:04 DEBUG    on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $44load_deref.8 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $46load_global.9 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const52.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
12-22 13:04 DEBUG    on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const60.16 = const(int, 0)
12-22 13:04 DEBUG    on stmt: stack[0] = $56call_function.14
12-22 13:04 DEBUG    on stmt: n = const(int, 1)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: n.4 = phi(incoming_values=[Var(n, quicksort.py:173), Var(n.5, quicksort.py:175)], incoming_blocks=[26, 238])
12-22 13:04 DEBUG    on stmt: $const70.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $72compare_op.2 = n.4 > $const70.1
12-22 13:04 DEBUG    on stmt: bool74 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $74pred, 76, 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 76
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $const78.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n.4, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.1 = $80inplace_subtract.2
12-22 13:04 DEBUG    on stmt: $88binary_subscr.5 = getitem(value=stack, index=n.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: low = $90unpack_sequence.6
12-22 13:04 DEBUG    first assign: low
12-22 13:04 DEBUG    replaced with: low = $90unpack_sequence.6
12-22 13:04 DEBUG    on stmt: high = $90unpack_sequence.7
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:175)], incoming_blocks=[76, 255])
12-22 13:04 DEBUG    on stmt: $100binary_subtract.2 = high - low
12-22 13:04 DEBUG    on stmt: $102load_global.3 = global(SMALL_QUICKSORT: 15)
12-22 13:04 DEBUG    on stmt: $104compare_op.4 = $100binary_subtract.2 >= $102load_global.3
12-22 13:04 DEBUG    on stmt: bool106 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $106pred = call bool106($104compare_op.4, func=bool106, args=(Var($104compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $106pred, 108, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 108
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $110load_global.1 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: $112compare_op.2 = n.5 < $110load_global.1
12-22 13:04 DEBUG    on stmt: bool114 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $114pred, 120, 116
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 116
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $116load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 120
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x000001AEF35F7D30>)
12-22 13:04 DEBUG    on stmt: i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_subtract.8 = high - i
12-22 13:04 DEBUG    on stmt: $144binary_subtract.11 = i - low
12-22 13:04 DEBUG    on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
12-22 13:04 DEBUG    on stmt: bool148 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $148pred, 150, 194
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $154compare_op.2 = high > i
12-22 13:04 DEBUG    on stmt: bool156 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $156pred, 158, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 158
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const162.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $164binary_add.3 = i + $const162.2
12-22 13:04 DEBUG    on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n.5] = $168call_function.5
12-22 13:04 DEBUG    on stmt: $const178.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.5, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.2 = $180inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: n.7 = phi(incoming_values=[Var(n.2, quicksort.py:187), Var(n.5, quicksort.py:175)], incoming_blocks=[158, 150])
12-22 13:04 DEBUG    on stmt: $const186.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: high = i - $const186.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 194
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $198compare_op.2 = i > low
12-22 13:04 DEBUG    on stmt: bool200 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $200pred, 202, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 202
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const208.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $210binary_subtract.4 = i - $const208.3
12-22 13:04 DEBUG    on stmt: $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n.5] = $212call_function.5
12-22 13:04 DEBUG    on stmt: $const222.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.5, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.3 = $224inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: n.8 = phi(incoming_values=[Var(n.3, quicksort.py:192), Var(n.5, quicksort.py:175)], incoming_blocks=[202, 194])
12-22 13:04 DEBUG    on stmt: $const230.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: low = i + $const230.1
12-22 13:04 DEBUG    replaced with: low.1 = i + $const230.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $238load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x000001AEF35F7DC0>)
12-22 13:04 DEBUG    on stmt: $248call_function.5 = call $238load_deref.0(A, R, low, high, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $256return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $256return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 255
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: n.6 = phi(incoming_values=[Var(n.7, quicksort.py:175), Var(n.8, quicksort.py:175)], incoming_blocks=[184, 228])
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {76: [<numba.core.ir.Assign object at 0x000001AEF1D6FE50>],
             228: [<numba.core.ir.Assign object at 0x000001AEF311D430>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x000001AEF35F7EE0>)
12-22 13:04 DEBUG    on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_global.3 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 22, 26
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $24return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $24return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $28load_deref.1 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $30load_deref.2 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
12-22 13:04 DEBUG    on stmt: $36load_global.5 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: stack = $34build_list.4 * $36load_global.5
12-22 13:04 DEBUG    on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $44load_deref.8 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $46load_global.9 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const52.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
12-22 13:04 DEBUG    on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const60.16 = const(int, 0)
12-22 13:04 DEBUG    on stmt: stack[0] = $56call_function.14
12-22 13:04 DEBUG    on stmt: n = const(int, 1)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: n.4 = phi(incoming_values=[Var(n, quicksort.py:173), Var(n.5, quicksort.py:175)], incoming_blocks=[26, 238])
12-22 13:04 DEBUG    on stmt: $const70.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $72compare_op.2 = n.4 > $const70.1
12-22 13:04 DEBUG    on stmt: bool74 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $74pred, 76, 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 76
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $const78.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n.4, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.1 = $80inplace_subtract.2
12-22 13:04 DEBUG    on stmt: $88binary_subscr.5 = getitem(value=stack, index=n.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: low = $90unpack_sequence.6
12-22 13:04 DEBUG    on stmt: high = $90unpack_sequence.7
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:175)], incoming_blocks=[76, 255])
12-22 13:04 DEBUG    on stmt: $100binary_subtract.2 = high - low
12-22 13:04 DEBUG    find_def var='low' stmt=$100binary_subtract.2 = high - low
12-22 13:04 DEBUG    find_def_from_top label 96
12-22 13:04 DEBUG    insert phi node low.2 = phi(incoming_values=[], incoming_blocks=[]) at 96
12-22 13:04 DEBUG    find_def_from_bottom label 76
12-22 13:04 DEBUG    incoming_def low = $90unpack_sequence.6
12-22 13:04 DEBUG    find_def_from_bottom label 255
12-22 13:04 DEBUG    find_def_from_top label 255
12-22 13:04 DEBUG    insert phi node low.3 = phi(incoming_values=[], incoming_blocks=[]) at 255
12-22 13:04 DEBUG    find_def_from_bottom label 184
12-22 13:04 DEBUG    find_def_from_top label 184
12-22 13:04 DEBUG    idom 150 from label 184
12-22 13:04 DEBUG    find_def_from_bottom label 150
12-22 13:04 DEBUG    find_def_from_top label 150
12-22 13:04 DEBUG    idom 120 from label 150
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    incoming_def low.2 = phi(incoming_values=[Var(low, quicksort.py:177)], incoming_blocks=[76])
12-22 13:04 DEBUG    find_def_from_bottom label 228
12-22 13:04 DEBUG    incoming_def low.1 = i + $const230.1
12-22 13:04 DEBUG    incoming_def low.3 = phi(incoming_values=[Var(low.2, quicksort.py:179), Var(low.1, quicksort.py:193)], incoming_blocks=[184, 228])
12-22 13:04 DEBUG    replaced with: $100binary_subtract.2 = high - low.2
12-22 13:04 DEBUG    on stmt: $102load_global.3 = global(SMALL_QUICKSORT: 15)
12-22 13:04 DEBUG    on stmt: $104compare_op.4 = $100binary_subtract.2 >= $102load_global.3
12-22 13:04 DEBUG    on stmt: bool106 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $106pred = call bool106($104compare_op.4, func=bool106, args=(Var($104compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $106pred, 108, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 108
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $110load_global.1 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: $112compare_op.2 = n.5 < $110load_global.1
12-22 13:04 DEBUG    on stmt: bool114 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $114pred, 120, 116
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 116
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $116load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 120
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x000001AEF35F7D30>)
12-22 13:04 DEBUG    on stmt: i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='low' stmt=i = call $120load_deref.0(A, R, low, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: i = call $120load_deref.0(A, R, low.2, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:179), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_subtract.8 = high - i
12-22 13:04 DEBUG    on stmt: $144binary_subtract.11 = i - low
12-22 13:04 DEBUG    find_def var='low' stmt=$144binary_subtract.11 = i - low
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: $144binary_subtract.11 = i - low.2
12-22 13:04 DEBUG    on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
12-22 13:04 DEBUG    on stmt: bool148 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $148pred, 150, 194
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $154compare_op.2 = high > i
12-22 13:04 DEBUG    on stmt: bool156 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $156pred, 158, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 158
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const162.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $164binary_add.3 = i + $const162.2
12-22 13:04 DEBUG    on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n.5] = $168call_function.5
12-22 13:04 DEBUG    on stmt: $const178.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.5, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.2 = $180inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: n.7 = phi(incoming_values=[Var(n.2, quicksort.py:187), Var(n.5, quicksort.py:175)], incoming_blocks=[158, 150])
12-22 13:04 DEBUG    on stmt: $const186.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: high = i - $const186.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 194
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $198compare_op.2 = i > low
12-22 13:04 DEBUG    find_def var='low' stmt=$198compare_op.2 = i > low
12-22 13:04 DEBUG    find_def_from_top label 194
12-22 13:04 DEBUG    idom 120 from label 194
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: $198compare_op.2 = i > low.2
12-22 13:04 DEBUG    on stmt: bool200 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $200pred, 202, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 202
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const208.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $210binary_subtract.4 = i - $const208.3
12-22 13:04 DEBUG    on stmt: $212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='low' stmt=$212call_function.5 = call $202load_global.0(low, $210binary_subtract.4, func=$202load_global.0, args=[Var(low, quicksort.py:177), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 202
12-22 13:04 DEBUG    idom 194 from label 202
12-22 13:04 DEBUG    find_def_from_bottom label 194
12-22 13:04 DEBUG    find_def_from_top label 194
12-22 13:04 DEBUG    idom 120 from label 194
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: $212call_function.5 = call $202load_global.0(low.2, $210binary_subtract.4, func=$202load_global.0, args=[Var(low.2, quicksort.py:179), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n.5] = $212call_function.5
12-22 13:04 DEBUG    on stmt: $const222.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.5, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.3 = $224inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: n.8 = phi(incoming_values=[Var(n.3, quicksort.py:192), Var(n.5, quicksort.py:175)], incoming_blocks=[202, 194])
12-22 13:04 DEBUG    on stmt: $const230.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: low.1 = i + $const230.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $238load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x000001AEF35F7DC0>)
12-22 13:04 DEBUG    on stmt: $248call_function.5 = call $238load_deref.0(A, R, low, high, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='low' stmt=$248call_function.5 = call $238load_deref.0(A, R, low, high, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low, quicksort.py:177), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 238
12-22 13:04 DEBUG    idom 96 from label 238
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: $248call_function.5 = call $238load_deref.0(A, R, low.2, high, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:179), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: $256return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $256return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 255
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF2060610>
12-22 13:04 DEBUG    on stmt: n.6 = phi(incoming_values=[Var(n.7, quicksort.py:175), Var(n.8, quicksort.py:175)], incoming_blocks=[184, 228])
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    Fix SSA violator on var high
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x000001AEF35F7EE0>)
12-22 13:04 DEBUG    on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_global.3 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 22, 26
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $24return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $24return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $28load_deref.1 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $30load_deref.2 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
12-22 13:04 DEBUG    on stmt: $36load_global.5 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: stack = $34build_list.4 * $36load_global.5
12-22 13:04 DEBUG    on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $44load_deref.8 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $46load_global.9 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const52.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
12-22 13:04 DEBUG    on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const60.16 = const(int, 0)
12-22 13:04 DEBUG    on stmt: stack[0] = $56call_function.14
12-22 13:04 DEBUG    on stmt: n = const(int, 1)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: n.4 = phi(incoming_values=[Var(n, quicksort.py:173), Var(n.5, quicksort.py:175)], incoming_blocks=[26, 238])
12-22 13:04 DEBUG    on stmt: $const70.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $72compare_op.2 = n.4 > $const70.1
12-22 13:04 DEBUG    on stmt: bool74 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $74pred, 76, 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 76
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $const78.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n.4, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.1 = $80inplace_subtract.2
12-22 13:04 DEBUG    on stmt: $88binary_subscr.5 = getitem(value=stack, index=n.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: low = $90unpack_sequence.6
12-22 13:04 DEBUG    on stmt: high = $90unpack_sequence.7
12-22 13:04 DEBUG    first assign: high
12-22 13:04 DEBUG    replaced with: high = $90unpack_sequence.7
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: low.2 = phi(incoming_values=[Var(low, quicksort.py:177), Var(low.3, quicksort.py:179)], incoming_blocks=[76, 255])
12-22 13:04 DEBUG    on stmt: n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:175)], incoming_blocks=[76, 255])
12-22 13:04 DEBUG    on stmt: $100binary_subtract.2 = high - low.2
12-22 13:04 DEBUG    on stmt: $102load_global.3 = global(SMALL_QUICKSORT: 15)
12-22 13:04 DEBUG    on stmt: $104compare_op.4 = $100binary_subtract.2 >= $102load_global.3
12-22 13:04 DEBUG    on stmt: bool106 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $106pred = call bool106($104compare_op.4, func=bool106, args=(Var($104compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $106pred, 108, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 108
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $110load_global.1 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: $112compare_op.2 = n.5 < $110load_global.1
12-22 13:04 DEBUG    on stmt: bool114 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $114pred, 120, 116
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 116
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $116load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 120
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x000001AEF35F7D30>)
12-22 13:04 DEBUG    on stmt: i = call $120load_deref.0(A, R, low.2, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:179), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_subtract.8 = high - i
12-22 13:04 DEBUG    on stmt: $144binary_subtract.11 = i - low.2
12-22 13:04 DEBUG    on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
12-22 13:04 DEBUG    on stmt: bool148 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $148pred, 150, 194
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $154compare_op.2 = high > i
12-22 13:04 DEBUG    on stmt: bool156 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $156pred, 158, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 158
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const162.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $164binary_add.3 = i + $const162.2
12-22 13:04 DEBUG    on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n.5] = $168call_function.5
12-22 13:04 DEBUG    on stmt: $const178.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.5, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.2 = $180inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: n.7 = phi(incoming_values=[Var(n.2, quicksort.py:187), Var(n.5, quicksort.py:175)], incoming_blocks=[158, 150])
12-22 13:04 DEBUG    on stmt: $const186.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: high = i - $const186.1
12-22 13:04 DEBUG    replaced with: high.1 = i - $const186.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 194
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $198compare_op.2 = i > low.2
12-22 13:04 DEBUG    on stmt: bool200 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $200pred, 202, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 202
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const208.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $210binary_subtract.4 = i - $const208.3
12-22 13:04 DEBUG    on stmt: $212call_function.5 = call $202load_global.0(low.2, $210binary_subtract.4, func=$202load_global.0, args=[Var(low.2, quicksort.py:179), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n.5] = $212call_function.5
12-22 13:04 DEBUG    on stmt: $const222.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.5, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.3 = $224inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: n.8 = phi(incoming_values=[Var(n.3, quicksort.py:192), Var(n.5, quicksort.py:175)], incoming_blocks=[202, 194])
12-22 13:04 DEBUG    on stmt: $const230.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: low.1 = i + $const230.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $238load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x000001AEF35F7DC0>)
12-22 13:04 DEBUG    on stmt: $248call_function.5 = call $238load_deref.0(A, R, low.2, high, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:179), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: $256return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $256return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 255
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF311D7F0>
12-22 13:04 DEBUG    on stmt: low.3 = phi(incoming_values=[Var(low.2, quicksort.py:179), Var(low.1, quicksort.py:193)], incoming_blocks=[184, 228])
12-22 13:04 DEBUG    on stmt: n.6 = phi(incoming_values=[Var(n.7, quicksort.py:175), Var(n.8, quicksort.py:175)], incoming_blocks=[184, 228])
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {76: [<numba.core.ir.Assign object at 0x000001AEF31E3280>],
             184: [<numba.core.ir.Assign object at 0x000001AEF1D6FD60>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(make_res: <function make_quicksort_impl.<locals>.make_res at 0x000001AEF35F7EE0>)
12-22 13:04 DEBUG    on stmt: R = call $2load_deref.0(A, func=$2load_deref.0, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $10load_global.3 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $14call_function.5 = call $10load_global.3(A, func=$10load_global.3, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $18compare_op.7 = $14call_function.5 < $const16.6
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, quicksort.py:168),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 22, 26
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $24return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $24return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $26load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $28load_deref.1 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $30load_deref.2 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $32call_function.3 = call $26load_global.0($28load_deref.1, $30load_deref.2, func=$26load_global.0, args=[Var($28load_deref.1, quicksort.py:171), Var($30load_deref.2, quicksort.py:171)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $34build_list.4 = build_list(items=[Var($32call_function.3, quicksort.py:171)])
12-22 13:04 DEBUG    on stmt: $36load_global.5 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: stack = $34build_list.4 * $36load_global.5
12-22 13:04 DEBUG    on stmt: $42load_global.7 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $44load_deref.8 = freevar(zero: 0)
12-22 13:04 DEBUG    on stmt: $46load_global.9 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $46load_global.9(A, func=$46load_global.9, args=[Var(A, quicksort.py:164)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const52.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $54binary_subtract.13 = $50call_function.11 - $const52.12
12-22 13:04 DEBUG    on stmt: $56call_function.14 = call $42load_global.7($44load_deref.8, $54binary_subtract.13, func=$42load_global.7, args=[Var($44load_deref.8, quicksort.py:172), Var($54binary_subtract.13, quicksort.py:172)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const60.16 = const(int, 0)
12-22 13:04 DEBUG    on stmt: stack[0] = $56call_function.14
12-22 13:04 DEBUG    on stmt: n = const(int, 1)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: n.4 = phi(incoming_values=[Var(n, quicksort.py:173), Var(n.5, quicksort.py:175)], incoming_blocks=[26, 238])
12-22 13:04 DEBUG    on stmt: $const70.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $72compare_op.2 = n.4 > $const70.1
12-22 13:04 DEBUG    on stmt: bool74 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, quicksort.py:175),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $74pred, 76, 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 76
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $const78.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $80inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=n.4, rhs=$const78.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.1 = $80inplace_subtract.2
12-22 13:04 DEBUG    on stmt: $88binary_subscr.5 = getitem(value=stack, index=n.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.8 = exhaust_iter(value=$88binary_subscr.5, count=2)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.6 = static_getitem(value=$90unpack_sequence.8, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $90unpack_sequence.7 = static_getitem(value=$90unpack_sequence.8, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: low = $90unpack_sequence.6
12-22 13:04 DEBUG    on stmt: high = $90unpack_sequence.7
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: low.2 = phi(incoming_values=[Var(low, quicksort.py:177), Var(low.3, quicksort.py:179)], incoming_blocks=[76, 255])
12-22 13:04 DEBUG    on stmt: n.5 = phi(incoming_values=[Var(n.1, quicksort.py:176), Var(n.6, quicksort.py:175)], incoming_blocks=[76, 255])
12-22 13:04 DEBUG    on stmt: $100binary_subtract.2 = high - low.2
12-22 13:04 DEBUG    find_def var='high' stmt=$100binary_subtract.2 = high - low.2
12-22 13:04 DEBUG    find_def_from_top label 96
12-22 13:04 DEBUG    insert phi node high.2 = phi(incoming_values=[], incoming_blocks=[]) at 96
12-22 13:04 DEBUG    find_def_from_bottom label 76
12-22 13:04 DEBUG    incoming_def high = $90unpack_sequence.7
12-22 13:04 DEBUG    find_def_from_bottom label 255
12-22 13:04 DEBUG    find_def_from_top label 255
12-22 13:04 DEBUG    insert phi node high.3 = phi(incoming_values=[], incoming_blocks=[]) at 255
12-22 13:04 DEBUG    find_def_from_bottom label 184
12-22 13:04 DEBUG    incoming_def high.1 = i - $const186.1
12-22 13:04 DEBUG    find_def_from_bottom label 228
12-22 13:04 DEBUG    find_def_from_top label 228
12-22 13:04 DEBUG    idom 194 from label 228
12-22 13:04 DEBUG    find_def_from_bottom label 194
12-22 13:04 DEBUG    find_def_from_top label 194
12-22 13:04 DEBUG    idom 120 from label 194
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    incoming_def high.2 = phi(incoming_values=[Var(high, quicksort.py:177)], incoming_blocks=[76])
12-22 13:04 DEBUG    incoming_def high.3 = phi(incoming_values=[Var(high.1, quicksort.py:188), Var(high.2, quicksort.py:179)], incoming_blocks=[184, 228])
12-22 13:04 DEBUG    replaced with: $100binary_subtract.2 = high.2 - low.2
12-22 13:04 DEBUG    on stmt: $102load_global.3 = global(SMALL_QUICKSORT: 15)
12-22 13:04 DEBUG    on stmt: $104compare_op.4 = $100binary_subtract.2 >= $102load_global.3
12-22 13:04 DEBUG    on stmt: bool106 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $106pred = call bool106($104compare_op.4, func=bool106, args=(Var($104compare_op.4, quicksort.py:179),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $106pred, 108, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 108
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $110load_global.1 = global(MAX_STACK: 100)
12-22 13:04 DEBUG    on stmt: $112compare_op.2 = n.5 < $110load_global.1
12-22 13:04 DEBUG    on stmt: bool114 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $114pred = call bool114($112compare_op.2, func=bool114, args=(Var($112compare_op.2, quicksort.py:180),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $114pred, 120, 116
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 116
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $116load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 120
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $120load_deref.0 = freevar(partition: <function make_quicksort_impl.<locals>.partition at 0x000001AEF35F7D30>)
12-22 13:04 DEBUG    on stmt: i = call $120load_deref.0(A, R, low.2, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:179), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='high' stmt=i = call $120load_deref.0(A, R, low.2, high, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:179), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: i = call $120load_deref.0(A, R, low.2, high.2, func=$120load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:179), Var(high.2, quicksort.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_subtract.8 = high - i
12-22 13:04 DEBUG    find_def var='high' stmt=$138binary_subtract.8 = high - i
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: $138binary_subtract.8 = high.2 - i
12-22 13:04 DEBUG    on stmt: $144binary_subtract.11 = i - low.2
12-22 13:04 DEBUG    on stmt: $146compare_op.12 = $138binary_subtract.8 > $144binary_subtract.11
12-22 13:04 DEBUG    on stmt: bool148 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $148pred = call bool148($146compare_op.12, func=bool148, args=(Var($146compare_op.12, quicksort.py:183),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $148pred, 150, 194
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $154compare_op.2 = high > i
12-22 13:04 DEBUG    find_def var='high' stmt=$154compare_op.2 = high > i
12-22 13:04 DEBUG    find_def_from_top label 150
12-22 13:04 DEBUG    idom 120 from label 150
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: $154compare_op.2 = high.2 > i
12-22 13:04 DEBUG    on stmt: bool156 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $156pred = call bool156($154compare_op.2, func=bool156, args=(Var($154compare_op.2, quicksort.py:185),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $156pred, 158, 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 158
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $158load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const162.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $164binary_add.3 = i + $const162.2
12-22 13:04 DEBUG    on stmt: $168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='high' stmt=$168call_function.5 = call $158load_global.0($164binary_add.3, high, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 158
12-22 13:04 DEBUG    idom 150 from label 158
12-22 13:04 DEBUG    find_def_from_bottom label 150
12-22 13:04 DEBUG    find_def_from_top label 150
12-22 13:04 DEBUG    idom 120 from label 150
12-22 13:04 DEBUG    find_def_from_bottom label 120
12-22 13:04 DEBUG    find_def_from_top label 120
12-22 13:04 DEBUG    idom 108 from label 120
12-22 13:04 DEBUG    find_def_from_bottom label 108
12-22 13:04 DEBUG    find_def_from_top label 108
12-22 13:04 DEBUG    idom 96 from label 108
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: $168call_function.5 = call $158load_global.0($164binary_add.3, high.2, func=$158load_global.0, args=[Var($164binary_add.3, quicksort.py:186), Var(high.2, quicksort.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n.5] = $168call_function.5
12-22 13:04 DEBUG    on stmt: $const178.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.5, rhs=$const178.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.2 = $180inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 184
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 184
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: n.7 = phi(incoming_values=[Var(n.2, quicksort.py:187), Var(n.5, quicksort.py:175)], incoming_blocks=[158, 150])
12-22 13:04 DEBUG    on stmt: $const186.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: high.1 = i - $const186.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 194
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $198compare_op.2 = i > low.2
12-22 13:04 DEBUG    on stmt: bool200 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $200pred = call bool200($198compare_op.2, func=bool200, args=(Var($198compare_op.2, quicksort.py:190),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $200pred, 202, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 202
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $202load_global.0 = global(Partition: <class 'numba.misc.quicksort.Partition'>)
12-22 13:04 DEBUG    on stmt: $const208.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $210binary_subtract.4 = i - $const208.3
12-22 13:04 DEBUG    on stmt: $212call_function.5 = call $202load_global.0(low.2, $210binary_subtract.4, func=$202load_global.0, args=[Var(low.2, quicksort.py:179), Var($210binary_subtract.4, quicksort.py:191)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: stack[n.5] = $212call_function.5
12-22 13:04 DEBUG    on stmt: $const222.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $224inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.5, rhs=$const222.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: n.3 = $224inplace_add.10
12-22 13:04 DEBUG    on stmt: jump 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: n.8 = phi(incoming_values=[Var(n.3, quicksort.py:192), Var(n.5, quicksort.py:175)], incoming_blocks=[202, 194])
12-22 13:04 DEBUG    on stmt: $const230.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: low.1 = i + $const230.1
12-22 13:04 DEBUG    on stmt: jump 255
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $238load_deref.0 = freevar(insertion_sort: <function make_quicksort_impl.<locals>.insertion_sort at 0x000001AEF35F7DC0>)
12-22 13:04 DEBUG    on stmt: $248call_function.5 = call $238load_deref.0(A, R, low.2, high, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:179), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='high' stmt=$248call_function.5 = call $238load_deref.0(A, R, low.2, high, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:179), Var(high, quicksort.py:177)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 238
12-22 13:04 DEBUG    idom 96 from label 238
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: $248call_function.5 = call $238load_deref.0(A, R, low.2, high.2, func=$238load_deref.0, args=[Var(A, quicksort.py:164), Var(R, quicksort.py:166), Var(low.2, quicksort.py:179), Var(high.2, quicksort.py:179)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 68
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: $256return_value.1 = cast(value=R)
12-22 13:04 DEBUG    on stmt: return $256return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 255
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF1D6F880>
12-22 13:04 DEBUG    on stmt: low.3 = phi(incoming_values=[Var(low.2, quicksort.py:179), Var(low.1, quicksort.py:193)], incoming_blocks=[184, 228])
12-22 13:04 DEBUG    on stmt: n.6 = phi(incoming_values=[Var(n.7, quicksort.py:175), Var(n.8, quicksort.py:175)], incoming_blocks=[184, 228])
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=41)
           2	LOAD_GLOBAL(arg=0, lineno=43)
           4	LOAD_METHOD(arg=1, lineno=43)
           6	LOAD_FAST(arg=0, lineno=43)
           8	LOAD_ATTR(arg=2, lineno=43)
          10	CALL_METHOD(arg=1, lineno=43)
          12	RETURN_VALUE(arg=None, lineno=43)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=41)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=43)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=43)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=43)
12-22 13:04 DEBUG    stack ['$4load_method.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=43)
12-22 13:04 DEBUG    stack ['$4load_method.1', '$A6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=43)
12-22 13:04 DEBUG    stack ['$4load_method.1', '$8load_attr.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=43)
12-22 13:04 DEBUG    stack ['$10call_method.4']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$A6.2'}), (8, {'item': '$A6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    A = arg(0, name=A)                       ['A']
    $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=arange) ['$2load_global.0', '$4load_method.1']
    $8load_attr.3 = getattr(value=A, attr=size) ['$8load_attr.3', 'A']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, quicksort.py:43)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=arange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=A, attr=size)
12-22 13:04 DEBUG    on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, quicksort.py:43)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $12return_value.5 = cast(value=$10call_method.4)
12-22 13:04 DEBUG    on stmt: return $12return_value.5
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10call_method.4': [<numba.core.ir.Assign object at 0x000001AEF31C2B20>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x000001AEF31C2EB0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AEF336C220>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x000001AEF336C520>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x000001AEF31C29D0>],
             'A': [<numba.core.ir.Assign object at 0x000001AEF336C640>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4747)
           2	LOAD_DEREF(arg=0, lineno=4749)
           4	LOAD_CONST(arg=0, lineno=4749)
           6	COMPARE_OP(arg=9, lineno=4749)
           8	POP_JUMP_IF_FALSE(arg=14, lineno=4749)
          10	LOAD_DEREF(arg=0, lineno=4749)
          12	JUMP_FORWARD(arg=2, lineno=4749)
>         14	LOAD_FAST(arg=0, lineno=4749)
>         16	STORE_FAST(arg=4, lineno=4749)
          18	LOAD_DEREF(arg=2, lineno=4750)
          20	LOAD_CONST(arg=0, lineno=4750)
          22	COMPARE_OP(arg=9, lineno=4750)
          24	POP_JUMP_IF_FALSE(arg=30, lineno=4750)
          26	LOAD_DEREF(arg=2, lineno=4750)
          28	JUMP_FORWARD(arg=2, lineno=4750)
>         30	LOAD_FAST(arg=1, lineno=4750)
>         32	STORE_FAST(arg=5, lineno=4750)
          34	LOAD_DEREF(arg=1, lineno=4751)
          36	LOAD_CONST(arg=0, lineno=4751)
          38	COMPARE_OP(arg=9, lineno=4751)
          40	POP_JUMP_IF_FALSE(arg=46, lineno=4751)
          42	LOAD_DEREF(arg=1, lineno=4751)
          44	JUMP_FORWARD(arg=2, lineno=4751)
>         46	LOAD_FAST(arg=2, lineno=4751)
>         48	STORE_FAST(arg=6, lineno=4751)
          50	LOAD_FAST(arg=6, lineno=4753)
          52	LOAD_CONST(arg=0, lineno=4753)
          54	COMPARE_OP(arg=9, lineno=4753)
          56	POP_JUMP_IF_FALSE(arg=62, lineno=4753)
          58	LOAD_FAST(arg=6, lineno=4753)
          60	JUMP_FORWARD(arg=2, lineno=4753)
>         62	LOAD_CONST(arg=1, lineno=4753)
>         64	STORE_FAST(arg=7, lineno=4753)
          66	LOAD_FAST(arg=5, lineno=4754)
          68	LOAD_CONST(arg=0, lineno=4754)
          70	COMPARE_OP(arg=8, lineno=4754)
          72	POP_JUMP_IF_FALSE(arg=86, lineno=4754)
          74	LOAD_CONST(arg=2, lineno=4755)
          76	LOAD_FAST(arg=4, lineno=4755)
          78	ROT_TWO(arg=None, lineno=4755)
          80	STORE_FAST(arg=8, lineno=4755)
          82	STORE_FAST(arg=9, lineno=4755)
          84	JUMP_FORWARD(arg=10, lineno=4755)
>         86	LOAD_FAST(arg=4, lineno=4757)
          88	LOAD_FAST(arg=5, lineno=4757)
          90	ROT_TWO(arg=None, lineno=4757)
          92	STORE_FAST(arg=8, lineno=4757)
          94	STORE_FAST(arg=9, lineno=4757)
>         96	LOAD_FAST(arg=7, lineno=4759)
          98	LOAD_CONST(arg=2, lineno=4759)
         100	COMPARE_OP(arg=2, lineno=4759)
         102	POP_JUMP_IF_FALSE(arg=112, lineno=4759)
         104	LOAD_GLOBAL(arg=0, lineno=4760)
         106	LOAD_CONST(arg=3, lineno=4760)
         108	CALL_FUNCTION(arg=1, lineno=4760)
         110	RAISE_VARARGS(arg=1, lineno=4760)
>        112	LOAD_FAST(arg=9, lineno=4762)
         114	LOAD_FAST(arg=8, lineno=4762)
         116	BINARY_SUBTRACT(arg=None, lineno=4762)
         118	LOAD_FAST(arg=7, lineno=4762)
         120	BINARY_TRUE_DIVIDE(arg=None, lineno=4762)
         122	STORE_FAST(arg=10, lineno=4762)
         124	LOAD_GLOBAL(arg=1, lineno=4763)
         126	LOAD_GLOBAL(arg=2, lineno=4763)
         128	LOAD_METHOD(arg=3, lineno=4763)
         130	LOAD_FAST(arg=10, lineno=4763)
         132	LOAD_ATTR(arg=4, lineno=4763)
         134	CALL_METHOD(arg=1, lineno=4763)
         136	CALL_FUNCTION(arg=1, lineno=4763)
         138	STORE_FAST(arg=11, lineno=4763)
         140	LOAD_DEREF(arg=4, lineno=4766)
         142	LOAD_CONST(arg=4, lineno=4766)
         144	COMPARE_OP(arg=8, lineno=4766)
         146	POP_JUMP_IF_FALSE(arg=182, lineno=4766)
         148	LOAD_GLOBAL(arg=1, lineno=4767)
         150	LOAD_GLOBAL(arg=2, lineno=4767)
         152	LOAD_METHOD(arg=3, lineno=4767)
         154	LOAD_FAST(arg=10, lineno=4767)
         156	LOAD_ATTR(arg=5, lineno=4767)
         158	CALL_METHOD(arg=1, lineno=4767)
         160	CALL_FUNCTION(arg=1, lineno=4767)
         162	STORE_FAST(arg=12, lineno=4767)
         164	LOAD_GLOBAL(arg=6, lineno=4768)
         166	LOAD_GLOBAL(arg=7, lineno=4768)
         168	LOAD_FAST(arg=12, lineno=4768)
         170	LOAD_FAST(arg=11, lineno=4768)
         172	CALL_FUNCTION(arg=2, lineno=4768)
         174	LOAD_CONST(arg=2, lineno=4768)
         176	CALL_FUNCTION(arg=2, lineno=4768)
         178	STORE_FAST(arg=13, lineno=4768)
         180	JUMP_FORWARD(arg=10, lineno=4768)
>        182	LOAD_GLOBAL(arg=6, lineno=4770)
         184	LOAD_FAST(arg=11, lineno=4770)
         186	LOAD_CONST(arg=2, lineno=4770)
         188	CALL_FUNCTION(arg=2, lineno=4770)
         190	STORE_FAST(arg=13, lineno=4770)
>        192	LOAD_GLOBAL(arg=8, lineno=4771)
         194	LOAD_METHOD(arg=9, lineno=4771)
         196	LOAD_FAST(arg=13, lineno=4771)
         198	LOAD_DEREF(arg=3, lineno=4771)
         200	CALL_METHOD(arg=2, lineno=4771)
         202	STORE_FAST(arg=14, lineno=4771)
         204	LOAD_FAST(arg=8, lineno=4772)
         206	STORE_FAST(arg=15, lineno=4772)
         208	LOAD_GLOBAL(arg=10, lineno=4773)
         210	LOAD_FAST(arg=13, lineno=4773)
         212	CALL_FUNCTION(arg=1, lineno=4773)
         214	GET_ITER(arg=None, lineno=4773)
>        216	FOR_ITER(arg=20, lineno=4773)
         218	STORE_FAST(arg=16, lineno=4773)
         220	LOAD_FAST(arg=15, lineno=4774)
         222	LOAD_FAST(arg=16, lineno=4774)
         224	LOAD_FAST(arg=7, lineno=4774)
         226	BINARY_MULTIPLY(arg=None, lineno=4774)
         228	BINARY_ADD(arg=None, lineno=4774)
         230	LOAD_FAST(arg=14, lineno=4774)
         232	LOAD_FAST(arg=16, lineno=4774)
         234	STORE_SUBSCR(arg=None, lineno=4774)
         236	JUMP_ABSOLUTE(arg=216, lineno=4774)
>        238	LOAD_FAST(arg=14, lineno=4775)
         240	RETURN_VALUE(arg=None, lineno=4775)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4747)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=4749)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_CONST(arg=0, lineno=4749)
12-22 13:04 DEBUG    stack ['$2load_deref.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=COMPARE_OP(arg=9, lineno=4749)
12-22 13:04 DEBUG    stack ['$2load_deref.0', '$const4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=POP_JUMP_IF_FALSE(arg=14, lineno=4749)
12-22 13:04 DEBUG    stack ['$6compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=10 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_DEREF(arg=0, lineno=4749)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=JUMP_FORWARD(arg=2, lineno=4749)
12-22 13:04 DEBUG    stack ['$10load_deref.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=16, stack=('$10load_deref.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=14 nstack_initial=0), State(pc_initial=16 nstack_initial=1)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=14 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=4749)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=16, stack=('$start14.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=16 nstack_initial=1), State(pc_initial=16 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi16.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=16 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=16, inst=STORE_FAST(arg=4, lineno=4749)
12-22 13:04 DEBUG    stack ['$phi16.0']
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_DEREF(arg=2, lineno=4750)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_CONST(arg=0, lineno=4750)
12-22 13:04 DEBUG    stack ['$18load_deref.1']
12-22 13:04 DEBUG    dispatch pc=22, inst=COMPARE_OP(arg=9, lineno=4750)
12-22 13:04 DEBUG    stack ['$18load_deref.1', '$const20.2']
12-22 13:04 DEBUG    dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=30, lineno=4750)
12-22 13:04 DEBUG    stack ['$22compare_op.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=16 nstack_initial=1), State(pc_initial=26 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=26 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=26, inst=LOAD_DEREF(arg=2, lineno=4750)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=28, inst=JUMP_FORWARD(arg=2, lineno=4750)
12-22 13:04 DEBUG    stack ['$26load_deref.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=32, stack=('$26load_deref.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=30 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=4750)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=32, stack=('$stop30.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi32.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=32 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=32, inst=STORE_FAST(arg=5, lineno=4750)
12-22 13:04 DEBUG    stack ['$phi32.0']
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_DEREF(arg=1, lineno=4751)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_CONST(arg=0, lineno=4751)
12-22 13:04 DEBUG    stack ['$34load_deref.1']
12-22 13:04 DEBUG    dispatch pc=38, inst=COMPARE_OP(arg=9, lineno=4751)
12-22 13:04 DEBUG    stack ['$34load_deref.1', '$const36.2']
12-22 13:04 DEBUG    dispatch pc=40, inst=POP_JUMP_IF_FALSE(arg=46, lineno=4751)
12-22 13:04 DEBUG    stack ['$38compare_op.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=46, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=42 nstack_initial=0), State(pc_initial=46 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=46 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=42 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=42, inst=LOAD_DEREF(arg=1, lineno=4751)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=44, inst=JUMP_FORWARD(arg=2, lineno=4751)
12-22 13:04 DEBUG    stack ['$42load_deref.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=48, stack=('$42load_deref.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=46 nstack_initial=0), State(pc_initial=48 nstack_initial=1)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=46 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=4751)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=48, stack=('$step46.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=48 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi48.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=48 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=48, inst=STORE_FAST(arg=6, lineno=4751)
12-22 13:04 DEBUG    stack ['$phi48.0']
12-22 13:04 DEBUG    dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=4753)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=52, inst=LOAD_CONST(arg=0, lineno=4753)
12-22 13:04 DEBUG    stack ['$lit_step50.1']
12-22 13:04 DEBUG    dispatch pc=54, inst=COMPARE_OP(arg=9, lineno=4753)
12-22 13:04 DEBUG    stack ['$lit_step50.1', '$const52.2']
12-22 13:04 DEBUG    dispatch pc=56, inst=POP_JUMP_IF_FALSE(arg=62, lineno=4753)
12-22 13:04 DEBUG    stack ['$54compare_op.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=48 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=62 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=62 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=58 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=58, inst=LOAD_FAST(arg=6, lineno=4753)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=60, inst=JUMP_FORWARD(arg=2, lineno=4753)
12-22 13:04 DEBUG    stack ['$lit_step58.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=64, stack=('$lit_step58.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=64 nstack_initial=1)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=62 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=62, inst=LOAD_CONST(arg=1, lineno=4753)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=64, stack=('$const62.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=64 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi64.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=64 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=64, inst=STORE_FAST(arg=7, lineno=4753)
12-22 13:04 DEBUG    stack ['$phi64.0']
12-22 13:04 DEBUG    dispatch pc=66, inst=LOAD_FAST(arg=5, lineno=4754)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=68, inst=LOAD_CONST(arg=0, lineno=4754)
12-22 13:04 DEBUG    stack ['$lit_stop66.1']
12-22 13:04 DEBUG    dispatch pc=70, inst=COMPARE_OP(arg=8, lineno=4754)
12-22 13:04 DEBUG    stack ['$lit_stop66.1', '$const68.2']
12-22 13:04 DEBUG    dispatch pc=72, inst=POP_JUMP_IF_FALSE(arg=86, lineno=4754)
12-22 13:04 DEBUG    stack ['$70compare_op.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=74 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=74, inst=LOAD_CONST(arg=2, lineno=4755)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=4755)
12-22 13:04 DEBUG    stack ['$const74.0']
12-22 13:04 DEBUG    dispatch pc=78, inst=ROT_TWO(arg=None, lineno=4755)
12-22 13:04 DEBUG    stack ['$const74.0', '$lit_start76.1']
12-22 13:04 DEBUG    dispatch pc=80, inst=STORE_FAST(arg=8, lineno=4755)
12-22 13:04 DEBUG    stack ['$lit_start76.1', '$const74.0']
12-22 13:04 DEBUG    dispatch pc=82, inst=STORE_FAST(arg=9, lineno=4755)
12-22 13:04 DEBUG    stack ['$lit_start76.1']
12-22 13:04 DEBUG    dispatch pc=84, inst=JUMP_FORWARD(arg=10, lineno=4755)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=86 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=86, inst=LOAD_FAST(arg=4, lineno=4757)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=88, inst=LOAD_FAST(arg=5, lineno=4757)
12-22 13:04 DEBUG    stack ['$lit_start86.0']
12-22 13:04 DEBUG    dispatch pc=90, inst=ROT_TWO(arg=None, lineno=4757)
12-22 13:04 DEBUG    stack ['$lit_start86.0', '$lit_stop88.1']
12-22 13:04 DEBUG    dispatch pc=92, inst=STORE_FAST(arg=8, lineno=4757)
12-22 13:04 DEBUG    stack ['$lit_stop88.1', '$lit_start86.0']
12-22 13:04 DEBUG    dispatch pc=94, inst=STORE_FAST(arg=9, lineno=4757)
12-22 13:04 DEBUG    stack ['$lit_stop88.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=96, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=96 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=96, inst=LOAD_FAST(arg=7, lineno=4759)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=98, inst=LOAD_CONST(arg=2, lineno=4759)
12-22 13:04 DEBUG    stack ['$_step96.0']
12-22 13:04 DEBUG    dispatch pc=100, inst=COMPARE_OP(arg=2, lineno=4759)
12-22 13:04 DEBUG    stack ['$_step96.0', '$const98.1']
12-22 13:04 DEBUG    dispatch pc=102, inst=POP_JUMP_IF_FALSE(arg=112, lineno=4759)
12-22 13:04 DEBUG    stack ['$100compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=104 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=104 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=104, inst=LOAD_GLOBAL(arg=0, lineno=4760)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=106, inst=LOAD_CONST(arg=3, lineno=4760)
12-22 13:04 DEBUG    stack ['$104load_global.0']
12-22 13:04 DEBUG    dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=4760)
12-22 13:04 DEBUG    stack ['$104load_global.0', '$const106.1']
12-22 13:04 DEBUG    dispatch pc=110, inst=RAISE_VARARGS(arg=1, lineno=4760)
12-22 13:04 DEBUG    stack ['$108call_function.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=112 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=112 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=112, inst=LOAD_FAST(arg=9, lineno=4762)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=114, inst=LOAD_FAST(arg=8, lineno=4762)
12-22 13:04 DEBUG    stack ['$_stop112.0']
12-22 13:04 DEBUG    dispatch pc=116, inst=BINARY_SUBTRACT(arg=None, lineno=4762)
12-22 13:04 DEBUG    stack ['$_stop112.0', '$_start114.1']
12-22 13:04 DEBUG    dispatch pc=118, inst=LOAD_FAST(arg=7, lineno=4762)
12-22 13:04 DEBUG    stack ['$116binary_subtract.2']
12-22 13:04 DEBUG    dispatch pc=120, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=4762)
12-22 13:04 DEBUG    stack ['$116binary_subtract.2', '$_step118.3']
12-22 13:04 DEBUG    dispatch pc=122, inst=STORE_FAST(arg=10, lineno=4762)
12-22 13:04 DEBUG    stack ['$120binary_true_divide.4']
12-22 13:04 DEBUG    dispatch pc=124, inst=LOAD_GLOBAL(arg=1, lineno=4763)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=126, inst=LOAD_GLOBAL(arg=2, lineno=4763)
12-22 13:04 DEBUG    stack ['$124load_global.5']
12-22 13:04 DEBUG    dispatch pc=128, inst=LOAD_METHOD(arg=3, lineno=4763)
12-22 13:04 DEBUG    stack ['$124load_global.5', '$126load_global.6']
12-22 13:04 DEBUG    dispatch pc=130, inst=LOAD_FAST(arg=10, lineno=4763)
12-22 13:04 DEBUG    stack ['$124load_global.5', '$128load_method.7']
12-22 13:04 DEBUG    dispatch pc=132, inst=LOAD_ATTR(arg=4, lineno=4763)
12-22 13:04 DEBUG    stack ['$124load_global.5', '$128load_method.7', '$nitems_c130.8']
12-22 13:04 DEBUG    dispatch pc=134, inst=CALL_METHOD(arg=1, lineno=4763)
12-22 13:04 DEBUG    stack ['$124load_global.5', '$128load_method.7', '$132load_attr.9']
12-22 13:04 DEBUG    dispatch pc=136, inst=CALL_FUNCTION(arg=1, lineno=4763)
12-22 13:04 DEBUG    stack ['$124load_global.5', '$134call_method.10']
12-22 13:04 DEBUG    dispatch pc=138, inst=STORE_FAST(arg=11, lineno=4763)
12-22 13:04 DEBUG    stack ['$136call_function.11']
12-22 13:04 DEBUG    dispatch pc=140, inst=LOAD_DEREF(arg=4, lineno=4766)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=142, inst=LOAD_CONST(arg=4, lineno=4766)
12-22 13:04 DEBUG    stack ['$140load_deref.12']
12-22 13:04 DEBUG    dispatch pc=144, inst=COMPARE_OP(arg=8, lineno=4766)
12-22 13:04 DEBUG    stack ['$140load_deref.12', '$const142.13']
12-22 13:04 DEBUG    dispatch pc=146, inst=POP_JUMP_IF_FALSE(arg=182, lineno=4766)
12-22 13:04 DEBUG    stack ['$144compare_op.14']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=148, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=148 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=148 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=148, inst=LOAD_GLOBAL(arg=1, lineno=4767)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=150, inst=LOAD_GLOBAL(arg=2, lineno=4767)
12-22 13:04 DEBUG    stack ['$148load_global.0']
12-22 13:04 DEBUG    dispatch pc=152, inst=LOAD_METHOD(arg=3, lineno=4767)
12-22 13:04 DEBUG    stack ['$148load_global.0', '$150load_global.1']
12-22 13:04 DEBUG    dispatch pc=154, inst=LOAD_FAST(arg=10, lineno=4767)
12-22 13:04 DEBUG    stack ['$148load_global.0', '$152load_method.2']
12-22 13:04 DEBUG    dispatch pc=156, inst=LOAD_ATTR(arg=5, lineno=4767)
12-22 13:04 DEBUG    stack ['$148load_global.0', '$152load_method.2', '$nitems_c154.3']
12-22 13:04 DEBUG    dispatch pc=158, inst=CALL_METHOD(arg=1, lineno=4767)
12-22 13:04 DEBUG    stack ['$148load_global.0', '$152load_method.2', '$156load_attr.4']
12-22 13:04 DEBUG    dispatch pc=160, inst=CALL_FUNCTION(arg=1, lineno=4767)
12-22 13:04 DEBUG    stack ['$148load_global.0', '$158call_method.5']
12-22 13:04 DEBUG    dispatch pc=162, inst=STORE_FAST(arg=12, lineno=4767)
12-22 13:04 DEBUG    stack ['$160call_function.6']
12-22 13:04 DEBUG    dispatch pc=164, inst=LOAD_GLOBAL(arg=6, lineno=4768)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=166, inst=LOAD_GLOBAL(arg=7, lineno=4768)
12-22 13:04 DEBUG    stack ['$164load_global.7']
12-22 13:04 DEBUG    dispatch pc=168, inst=LOAD_FAST(arg=12, lineno=4768)
12-22 13:04 DEBUG    stack ['$164load_global.7', '$166load_global.8']
12-22 13:04 DEBUG    dispatch pc=170, inst=LOAD_FAST(arg=11, lineno=4768)
12-22 13:04 DEBUG    stack ['$164load_global.7', '$166load_global.8', '$nitems_i168.9']
12-22 13:04 DEBUG    dispatch pc=172, inst=CALL_FUNCTION(arg=2, lineno=4768)
12-22 13:04 DEBUG    stack ['$164load_global.7', '$166load_global.8', '$nitems_i168.9', '$nitems_r170.10']
12-22 13:04 DEBUG    dispatch pc=174, inst=LOAD_CONST(arg=2, lineno=4768)
12-22 13:04 DEBUG    stack ['$164load_global.7', '$172call_function.11']
12-22 13:04 DEBUG    dispatch pc=176, inst=CALL_FUNCTION(arg=2, lineno=4768)
12-22 13:04 DEBUG    stack ['$164load_global.7', '$172call_function.11', '$const174.12']
12-22 13:04 DEBUG    dispatch pc=178, inst=STORE_FAST(arg=13, lineno=4768)
12-22 13:04 DEBUG    stack ['$176call_function.13']
12-22 13:04 DEBUG    dispatch pc=180, inst=JUMP_FORWARD(arg=10, lineno=4768)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=192, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=182 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=182, inst=LOAD_GLOBAL(arg=6, lineno=4770)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=184, inst=LOAD_FAST(arg=11, lineno=4770)
12-22 13:04 DEBUG    stack ['$182load_global.0']
12-22 13:04 DEBUG    dispatch pc=186, inst=LOAD_CONST(arg=2, lineno=4770)
12-22 13:04 DEBUG    stack ['$182load_global.0', '$nitems_r184.1']
12-22 13:04 DEBUG    dispatch pc=188, inst=CALL_FUNCTION(arg=2, lineno=4770)
12-22 13:04 DEBUG    stack ['$182load_global.0', '$nitems_r184.1', '$const186.2']
12-22 13:04 DEBUG    dispatch pc=190, inst=STORE_FAST(arg=13, lineno=4770)
12-22 13:04 DEBUG    stack ['$188call_function.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=192, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=192 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=192 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=192, inst=LOAD_GLOBAL(arg=8, lineno=4771)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=194, inst=LOAD_METHOD(arg=9, lineno=4771)
12-22 13:04 DEBUG    stack ['$192load_global.0']
12-22 13:04 DEBUG    dispatch pc=196, inst=LOAD_FAST(arg=13, lineno=4771)
12-22 13:04 DEBUG    stack ['$194load_method.1']
12-22 13:04 DEBUG    dispatch pc=198, inst=LOAD_DEREF(arg=3, lineno=4771)
12-22 13:04 DEBUG    stack ['$194load_method.1', '$nitems196.2']
12-22 13:04 DEBUG    dispatch pc=200, inst=CALL_METHOD(arg=2, lineno=4771)
12-22 13:04 DEBUG    stack ['$194load_method.1', '$nitems196.2', '$198load_deref.3']
12-22 13:04 DEBUG    dispatch pc=202, inst=STORE_FAST(arg=14, lineno=4771)
12-22 13:04 DEBUG    stack ['$200call_method.4']
12-22 13:04 DEBUG    dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=4772)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=206, inst=STORE_FAST(arg=15, lineno=4772)
12-22 13:04 DEBUG    stack ['$_start204.5']
12-22 13:04 DEBUG    dispatch pc=208, inst=LOAD_GLOBAL(arg=10, lineno=4773)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=210, inst=LOAD_FAST(arg=13, lineno=4773)
12-22 13:04 DEBUG    stack ['$208load_global.6']
12-22 13:04 DEBUG    dispatch pc=212, inst=CALL_FUNCTION(arg=1, lineno=4773)
12-22 13:04 DEBUG    stack ['$208load_global.6', '$nitems210.7']
12-22 13:04 DEBUG    dispatch pc=214, inst=GET_ITER(arg=None, lineno=4773)
12-22 13:04 DEBUG    stack ['$212call_function.8']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=216, stack=('$214get_iter.9',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=192 nstack_initial=0), State(pc_initial=216 nstack_initial=1)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=216 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi216.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=216 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=216, inst=FOR_ITER(arg=20, lineno=4773)
12-22 13:04 DEBUG    stack ['$phi216.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=238, stack=(), blockstack=(), npush=0), Edge(pc=218, stack=('$phi216.0', '$216for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=238 nstack_initial=0), State(pc_initial=218 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=238 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=238, inst=LOAD_FAST(arg=14, lineno=4775)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=240, inst=RETURN_VALUE(arg=None, lineno=4775)
12-22 13:04 DEBUG    stack ['$arr238.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=218 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi218.0', '$phi218.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=218 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=218, inst=STORE_FAST(arg=16, lineno=4773)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1']
12-22 13:04 DEBUG    dispatch pc=220, inst=LOAD_FAST(arg=15, lineno=4774)
12-22 13:04 DEBUG    stack ['$phi218.0']
12-22 13:04 DEBUG    dispatch pc=222, inst=LOAD_FAST(arg=16, lineno=4774)
12-22 13:04 DEBUG    stack ['$phi218.0', '$val220.2']
12-22 13:04 DEBUG    dispatch pc=224, inst=LOAD_FAST(arg=7, lineno=4774)
12-22 13:04 DEBUG    stack ['$phi218.0', '$val220.2', '$i222.3']
12-22 13:04 DEBUG    dispatch pc=226, inst=BINARY_MULTIPLY(arg=None, lineno=4774)
12-22 13:04 DEBUG    stack ['$phi218.0', '$val220.2', '$i222.3', '$_step224.4']
12-22 13:04 DEBUG    dispatch pc=228, inst=BINARY_ADD(arg=None, lineno=4774)
12-22 13:04 DEBUG    stack ['$phi218.0', '$val220.2', '$226binary_multiply.5']
12-22 13:04 DEBUG    dispatch pc=230, inst=LOAD_FAST(arg=14, lineno=4774)
12-22 13:04 DEBUG    stack ['$phi218.0', '$228binary_add.6']
12-22 13:04 DEBUG    dispatch pc=232, inst=LOAD_FAST(arg=16, lineno=4774)
12-22 13:04 DEBUG    stack ['$phi218.0', '$228binary_add.6', '$arr230.7']
12-22 13:04 DEBUG    dispatch pc=234, inst=STORE_SUBSCR(arg=None, lineno=4774)
12-22 13:04 DEBUG    stack ['$phi218.0', '$228binary_add.6', '$arr230.7', '$i232.8']
12-22 13:04 DEBUG    dispatch pc=236, inst=JUMP_ABSOLUTE(arg=216, lineno=4774)
12-22 13:04 DEBUG    stack ['$phi218.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=216, stack=('$phi218.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=216 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=46 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=1): {'$phi48.0'},
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=1): {'$phi64.0'},
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=148 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=216 nstack_initial=1): {'$phi216.0'},
             State(pc_initial=218 nstack_initial=2): {'$phi218.1'},
             State(pc_initial=238 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi16.0': State(pc_initial=14 nstack_initial=0),
 '$phi216.0': State(pc_initial=192 nstack_initial=0),
 '$phi218.1': State(pc_initial=216 nstack_initial=1),
 '$phi32.0': State(pc_initial=26 nstack_initial=0),
 '$phi48.0': State(pc_initial=46 nstack_initial=0),
 '$phi64.0': State(pc_initial=62 nstack_initial=0)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$10load_deref.0',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$start14.0',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi216.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi218.0': {('$phi216.0',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi218.1': {('$216for_iter.2',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi32.0': {('$26load_deref.0',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$stop30.0', State(pc_initial=30 nstack_initial=0))},
             '$phi48.0': {('$42load_deref.0',
                           State(pc_initial=42 nstack_initial=0)),
                          ('$step46.0', State(pc_initial=46 nstack_initial=0))},
             '$phi64.0': {('$const62.0', State(pc_initial=62 nstack_initial=0)),
                          ('$lit_step58.0',
                           State(pc_initial=58 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$10load_deref.0',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$start14.0',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi216.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi216.0',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi218.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi218.1': {('$216for_iter.2',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi32.0': {('$26load_deref.0',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$stop30.0', State(pc_initial=30 nstack_initial=0))},
             '$phi48.0': {('$42load_deref.0',
                           State(pc_initial=42 nstack_initial=0)),
                          ('$step46.0', State(pc_initial=46 nstack_initial=0))},
             '$phi64.0': {('$const62.0', State(pc_initial=62 nstack_initial=0)),
                          ('$lit_step58.0',
                           State(pc_initial=58 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$10load_deref.0',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$start14.0',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi216.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi218.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi218.1': {('$216for_iter.2',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi32.0': {('$26load_deref.0',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$stop30.0', State(pc_initial=30 nstack_initial=0))},
             '$phi48.0': {('$42load_deref.0',
                           State(pc_initial=42 nstack_initial=0)),
                          ('$step46.0', State(pc_initial=46 nstack_initial=0))},
             '$phi64.0': {('$const62.0', State(pc_initial=62 nstack_initial=0)),
                          ('$lit_step58.0',
                           State(pc_initial=58 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$10load_deref.0',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$start14.0',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi216.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi218.0': {('$214get_iter.9',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi218.1': {('$216for_iter.2',
                            State(pc_initial=216 nstack_initial=1))},
             '$phi32.0': {('$26load_deref.0',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$stop30.0', State(pc_initial=30 nstack_initial=0))},
             '$phi48.0': {('$42load_deref.0',
                           State(pc_initial=42 nstack_initial=0)),
                          ('$step46.0', State(pc_initial=46 nstack_initial=0))},
             '$phi64.0': {('$const62.0', State(pc_initial=62 nstack_initial=0)),
                          ('$lit_step58.0',
                           State(pc_initial=58 nstack_initial=0))}})
12-22 13:04 DEBUG    keep phismap: {'$phi16.0': {('$10load_deref.0', State(pc_initial=10 nstack_initial=0)),
              ('$start14.0', State(pc_initial=14 nstack_initial=0))},
 '$phi216.0': {('$214get_iter.9', State(pc_initial=192 nstack_initial=0))},
 '$phi218.1': {('$216for_iter.2', State(pc_initial=216 nstack_initial=1))},
 '$phi32.0': {('$26load_deref.0', State(pc_initial=26 nstack_initial=0)),
              ('$stop30.0', State(pc_initial=30 nstack_initial=0))},
 '$phi48.0': {('$42load_deref.0', State(pc_initial=42 nstack_initial=0)),
              ('$step46.0', State(pc_initial=46 nstack_initial=0))},
 '$phi64.0': {('$const62.0', State(pc_initial=62 nstack_initial=0)),
              ('$lit_step58.0', State(pc_initial=58 nstack_initial=0))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=10 nstack_initial=0): {'$phi16.0': '$10load_deref.0'},
             State(pc_initial=14 nstack_initial=0): {'$phi16.0': '$start14.0'},
             State(pc_initial=26 nstack_initial=0): {'$phi32.0': '$26load_deref.0'},
             State(pc_initial=30 nstack_initial=0): {'$phi32.0': '$stop30.0'},
             State(pc_initial=42 nstack_initial=0): {'$phi48.0': '$42load_deref.0'},
             State(pc_initial=46 nstack_initial=0): {'$phi48.0': '$step46.0'},
             State(pc_initial=58 nstack_initial=0): {'$phi64.0': '$lit_step58.0'},
             State(pc_initial=62 nstack_initial=0): {'$phi64.0': '$const62.0'},
             State(pc_initial=192 nstack_initial=0): {'$phi216.0': '$214get_iter.9'},
             State(pc_initial=216 nstack_initial=1): {'$phi218.1': '$216for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'lhs': '$2load_deref.0', 'rhs': '$const4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$10load_deref.0'}), (12, {})), outgoing_phis={'$phi16.0': '$10load_deref.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$10load_deref.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$start14.0'}),), outgoing_phis={'$phi16.0': '$start14.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$start14.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'value': '$phi16.0'}), (18, {'res': '$18load_deref.1'}), (20, {'res': '$const20.2'}), (22, {'lhs': '$18load_deref.1', 'rhs': '$const20.2', 'res': '$22compare_op.3'}), (24, {'pred': '$22compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 30: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$26load_deref.0'}), (28, {})), outgoing_phis={'$phi32.0': '$26load_deref.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$26load_deref.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$stop30.0'}),), outgoing_phis={'$phi32.0': '$stop30.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$stop30.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'value': '$phi32.0'}), (34, {'res': '$34load_deref.1'}), (36, {'res': '$const36.2'}), (38, {'lhs': '$34load_deref.1', 'rhs': '$const36.2', 'res': '$38compare_op.3'}), (40, {'pred': '$38compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 46: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'res': '$42load_deref.0'}), (44, {})), outgoing_phis={'$phi48.0': '$42load_deref.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$42load_deref.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=46 nstack_initial=0):
AdaptBlockInfo(insts=((46, {'res': '$step46.0'}),), outgoing_phis={'$phi48.0': '$step46.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$step46.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'value': '$phi48.0'}), (50, {'res': '$lit_step50.1'}), (52, {'res': '$const52.2'}), (54, {'lhs': '$lit_step50.1', 'rhs': '$const52.2', 'res': '$54compare_op.3'}), (56, {'pred': '$54compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 62: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$lit_step58.0'}), (60, {})), outgoing_phis={'$phi64.0': '$lit_step58.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$lit_step58.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$const62.0'}),), outgoing_phis={'$phi64.0': '$const62.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$const62.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'value': '$phi64.0'}), (66, {'res': '$lit_stop66.1'}), (68, {'res': '$const68.2'}), (70, {'lhs': '$lit_stop66.1', 'rhs': '$const68.2', 'res': '$70compare_op.3'}), (72, {'pred': '$70compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: (), 86: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'res': '$lit_start76.1'}), (80, {'value': '$const74.0'}), (82, {'value': '$lit_start76.1'}), (84, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$lit_start86.0'}), (88, {'res': '$lit_stop88.1'}), (92, {'value': '$lit_start86.0'}), (94, {'value': '$lit_stop88.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={96: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$_step96.0'}), (98, {'res': '$const98.1'}), (100, {'lhs': '$_step96.0', 'rhs': '$const98.1', 'res': '$100compare_op.2'}), (102, {'pred': '$100compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 112: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$const106.1'}), (108, {'func': '$104load_global.0', 'args': ['$const106.1'], 'res': '$108call_function.2'}), (110, {'exc': '$108call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$_stop112.0'}), (114, {'res': '$_start114.1'}), (116, {'lhs': '$_stop112.0', 'rhs': '$_start114.1', 'res': '$116binary_subtract.2'}), (118, {'res': '$_step118.3'}), (120, {'lhs': '$116binary_subtract.2', 'rhs': '$_step118.3', 'res': '$120binary_true_divide.4'}), (122, {'value': '$120binary_true_divide.4'}), (124, {'res': '$124load_global.5'}), (126, {'res': '$126load_global.6'}), (128, {'item': '$126load_global.6', 'res': '$128load_method.7'}), (130, {'res': '$nitems_c130.8'}), (132, {'item': '$nitems_c130.8', 'res': '$132load_attr.9'}), (134, {'func': '$128load_method.7', 'args': ['$132load_attr.9'], 'res': '$134call_method.10'}), (136, {'func': '$124load_global.5', 'args': ['$134call_method.10'], 'res': '$136call_function.11'}), (138, {'value': '$136call_function.11'}), (140, {'res': '$140load_deref.12'}), (142, {'res': '$const142.13'}), (144, {'lhs': '$140load_deref.12', 'rhs': '$const142.13', 'res': '$144compare_op.14'}), (146, {'pred': '$144compare_op.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: (), 182: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=148 nstack_initial=0):
AdaptBlockInfo(insts=((148, {'res': '$148load_global.0'}), (150, {'res': '$150load_global.1'}), (152, {'item': '$150load_global.1', 'res': '$152load_method.2'}), (154, {'res': '$nitems_c154.3'}), (156, {'item': '$nitems_c154.3', 'res': '$156load_attr.4'}), (158, {'func': '$152load_method.2', 'args': ['$156load_attr.4'], 'res': '$158call_method.5'}), (160, {'func': '$148load_global.0', 'args': ['$158call_method.5'], 'res': '$160call_function.6'}), (162, {'value': '$160call_function.6'}), (164, {'res': '$164load_global.7'}), (166, {'res': '$166load_global.8'}), (168, {'res': '$nitems_i168.9'}), (170, {'res': '$nitems_r170.10'}), (172, {'func': '$166load_global.8', 'args': ['$nitems_i168.9', '$nitems_r170.10'], 'res': '$172call_function.11'}), (174, {'res': '$const174.12'}), (176, {'func': '$164load_global.7', 'args': ['$172call_function.11', '$const174.12'], 'res': '$176call_function.13'}), (178, {'value': '$176call_function.13'}), (180, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={192: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$182load_global.0'}), (184, {'res': '$nitems_r184.1'}), (186, {'res': '$const186.2'}), (188, {'func': '$182load_global.0', 'args': ['$nitems_r184.1', '$const186.2'], 'res': '$188call_function.3'}), (190, {'value': '$188call_function.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={192: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$192load_global.0'}), (194, {'item': '$192load_global.0', 'res': '$194load_method.1'}), (196, {'res': '$nitems196.2'}), (198, {'res': '$198load_deref.3'}), (200, {'func': '$194load_method.1', 'args': ['$nitems196.2', '$198load_deref.3'], 'res': '$200call_method.4'}), (202, {'value': '$200call_method.4'}), (204, {'res': '$_start204.5'}), (206, {'value': '$_start204.5'}), (208, {'res': '$208load_global.6'}), (210, {'res': '$nitems210.7'}), (212, {'func': '$208load_global.6', 'args': ['$nitems210.7'], 'res': '$212call_function.8'}), (214, {'value': '$212call_function.8', 'res': '$214get_iter.9'})), outgoing_phis={'$phi216.0': '$214get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={216: ('$214get_iter.9',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=216 nstack_initial=1):
AdaptBlockInfo(insts=((216, {'iterator': '$phi216.0', 'pair': '$216for_iter.1', 'indval': '$216for_iter.2', 'pred': '$216for_iter.3'}),), outgoing_phis={'$phi218.1': '$216for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={238: (), 218: ('$phi216.0', '$216for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=218 nstack_initial=2):
AdaptBlockInfo(insts=((218, {'value': '$phi218.1'}), (220, {'res': '$val220.2'}), (222, {'res': '$i222.3'}), (224, {'res': '$_step224.4'}), (226, {'lhs': '$i222.3', 'rhs': '$_step224.4', 'res': '$226binary_multiply.5'}), (228, {'lhs': '$val220.2', 'rhs': '$226binary_multiply.5', 'res': '$228binary_add.6'}), (230, {'res': '$arr230.7'}), (232, {'res': '$i232.8'}), (234, {'target': '$arr230.7', 'index': '$i232.8', 'value': '$228binary_add.6'}), (236, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={216: ('$phi218.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=238 nstack_initial=0):
AdaptBlockInfo(insts=((238, {'res': '$arr238.0'}), (240, {'retval': '$arr238.0', 'castval': '$240return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    start = arg(0, name=start)               ['start']
    stop = arg(1, name=stop)                 ['stop']
    step = arg(2, name=step)                 ['step']
    dtype = arg(3, name=dtype)               ['dtype']
    $2load_deref.0 = freevar(start_value: None) ['$2load_deref.0']
    $const4.1 = const(NoneType, None)        ['$const4.1']
    $6compare_op.2 = $2load_deref.0 is not $const4.1 ['$2load_deref.0', '$6compare_op.2', '$const4.1']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:4749),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
label 10:
    $10load_deref.0 = freevar(start_value: None) ['$10load_deref.0']
    $phi16.0 = $10load_deref.0               ['$10load_deref.0', '$phi16.0']
    jump 16                                  []
label 14:
    $phi16.0 = start                         ['$phi16.0', 'start']
    jump 16                                  []
label 16:
    lit_start = $phi16.0                     ['$phi16.0', 'lit_start']
    $18load_deref.1 = freevar(stop_value: None) ['$18load_deref.1']
    $const20.2 = const(NoneType, None)       ['$const20.2']
    $22compare_op.3 = $18load_deref.1 is not $const20.2 ['$18load_deref.1', '$22compare_op.3', '$const20.2']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.3, func=bool24, args=(Var($22compare_op.3, arrayobj.py:4750),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.3', '$24pred', 'bool24']
    branch $24pred, 26, 30                   ['$24pred']
label 26:
    $26load_deref.0 = freevar(stop_value: None) ['$26load_deref.0']
    $phi32.0 = $26load_deref.0               ['$26load_deref.0', '$phi32.0']
    jump 32                                  []
label 30:
    $phi32.0 = stop                          ['$phi32.0', 'stop']
    jump 32                                  []
label 32:
    lit_stop = $phi32.0                      ['$phi32.0', 'lit_stop']
    $34load_deref.1 = freevar(step_value: None) ['$34load_deref.1']
    $const36.2 = const(NoneType, None)       ['$const36.2']
    $38compare_op.3 = $34load_deref.1 is not $const36.2 ['$34load_deref.1', '$38compare_op.3', '$const36.2']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($38compare_op.3, func=bool40, args=(Var($38compare_op.3, arrayobj.py:4751),), kws=(), vararg=None, varkwarg=None, target=None) ['$38compare_op.3', '$40pred', 'bool40']
    branch $40pred, 42, 46                   ['$40pred']
label 42:
    $42load_deref.0 = freevar(step_value: None) ['$42load_deref.0']
    $phi48.0 = $42load_deref.0               ['$42load_deref.0', '$phi48.0']
    jump 48                                  []
label 46:
    $phi48.0 = step                          ['$phi48.0', 'step']
    jump 48                                  []
label 48:
    lit_step = $phi48.0                      ['$phi48.0', 'lit_step']
    $const52.2 = const(NoneType, None)       ['$const52.2']
    $54compare_op.3 = lit_step is not $const52.2 ['$54compare_op.3', '$const52.2', 'lit_step']
    bool56 = global(bool: <class 'bool'>)    ['bool56']
    $56pred = call bool56($54compare_op.3, func=bool56, args=(Var($54compare_op.3, arrayobj.py:4753),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.3', '$56pred', 'bool56']
    branch $56pred, 58, 62                   ['$56pred']
label 58:
    $phi64.0 = lit_step                      ['$phi64.0', 'lit_step']
    jump 64                                  []
label 62:
    $const62.0 = const(int, 1)               ['$const62.0']
    $phi64.0 = $const62.0                    ['$const62.0', '$phi64.0']
    jump 64                                  []
label 64:
    _step = $phi64.0                         ['$phi64.0', '_step']
    $const68.2 = const(NoneType, None)       ['$const68.2']
    $70compare_op.3 = lit_stop is $const68.2 ['$70compare_op.3', '$const68.2', 'lit_stop']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.3, func=bool72, args=(Var($70compare_op.3, arrayobj.py:4754),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.3', '$72pred', 'bool72']
    branch $72pred, 74, 86                   ['$72pred']
label 74:
    _start = const(int, 0)                   ['_start']
    _stop = lit_start                        ['_stop', 'lit_start']
    jump 96                                  []
label 86:
    _start = lit_start                       ['_start', 'lit_start']
    _stop = lit_stop                         ['_stop', 'lit_stop']
    jump 96                                  []
label 96:
    $const98.1 = const(int, 0)               ['$const98.1']
    $100compare_op.2 = _step == $const98.1   ['$100compare_op.2', '$const98.1', '_step']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4759),), kws=(), vararg=None, varkwarg=None, target=None) ['$100compare_op.2', '$102pred', 'bool102']
    branch $102pred, 104, 112                ['$102pred']
label 104:
    $104load_global.0 = global(ValueError: <class 'ValueError'>) ['$104load_global.0']
    $const106.1 = const(str, Maximum allowed size exceeded) ['$const106.1']
    $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4760)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_global.0', '$108call_function.2', '$const106.1']
    raise $108call_function.2                ['$108call_function.2']
label 112:
    $116binary_subtract.2 = _stop - _start   ['$116binary_subtract.2', '_start', '_stop']
    nitems_c = $116binary_subtract.2 / _step ['$116binary_subtract.2', '_step', 'nitems_c']
    $124load_global.5 = global(int: <class 'int'>) ['$124load_global.5']
    $126load_global.6 = global(math: <module 'math' (built-in)>) ['$126load_global.6']
    $128load_method.7 = getattr(value=$126load_global.6, attr=ceil) ['$126load_global.6', '$128load_method.7']
    $132load_attr.9 = getattr(value=nitems_c, attr=real) ['$132load_attr.9', 'nitems_c']
    $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_method.7', '$132load_attr.9', '$134call_method.10']
    nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None) ['$124load_global.5', '$134call_method.10', 'nitems_r']
    $140load_deref.12 = freevar(use_complex: False) ['$140load_deref.12']
    $const142.13 = const(bool, True)         ['$const142.13']
    $144compare_op.14 = $140load_deref.12 is $const142.13 ['$140load_deref.12', '$144compare_op.14', '$const142.13']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.14, func=bool146, args=(Var($144compare_op.14, arrayobj.py:4766),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.14', '$146pred', 'bool146']
    branch $146pred, 148, 182                ['$146pred']
label 148:
    $148load_global.0 = global(int: <class 'int'>) ['$148load_global.0']
    $150load_global.1 = global(math: <module 'math' (built-in)>) ['$150load_global.1']
    $152load_method.2 = getattr(value=$150load_global.1, attr=ceil) ['$150load_global.1', '$152load_method.2']
    $156load_attr.4 = getattr(value=nitems_c, attr=imag) ['$156load_attr.4', 'nitems_c']
    $158call_method.5 = call $152load_method.2($156load_attr.4, func=$152load_method.2, args=[Var($156load_attr.4, arrayobj.py:4767)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_method.2', '$156load_attr.4', '$158call_method.5']
    nitems_i = call $148load_global.0($158call_method.5, func=$148load_global.0, args=[Var($158call_method.5, arrayobj.py:4767)], kws=(), vararg=None, varkwarg=None, target=None) ['$148load_global.0', '$158call_method.5', 'nitems_i']
    $164load_global.7 = global(max: <built-in function max>) ['$164load_global.7']
    $166load_global.8 = global(min: <built-in function min>) ['$166load_global.8']
    $172call_function.11 = call $166load_global.8(nitems_i, nitems_r, func=$166load_global.8, args=[Var(nitems_i, arrayobj.py:4767), Var(nitems_r, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_global.8', '$172call_function.11', 'nitems_i', 'nitems_r']
    $const174.12 = const(int, 0)             ['$const174.12']
    nitems = call $164load_global.7($172call_function.11, $const174.12, func=$164load_global.7, args=[Var($172call_function.11, arrayobj.py:4768), Var($const174.12, arrayobj.py:4768)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_global.7', '$172call_function.11', '$const174.12', 'nitems']
    jump 192                                 []
label 182:
    $182load_global.0 = global(max: <built-in function max>) ['$182load_global.0']
    $const186.2 = const(int, 0)              ['$const186.2']
    nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4763), Var($const186.2, arrayobj.py:4770)], kws=(), vararg=None, varkwarg=None, target=None) ['$182load_global.0', '$const186.2', 'nitems', 'nitems_r']
    jump 192                                 []
label 192:
    $192load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$192load_global.0']
    $194load_method.1 = getattr(value=$192load_global.0, attr=empty) ['$192load_global.0', '$194load_method.1']
    $198load_deref.3 = freevar(true_dtype: int64) ['$198load_deref.3']
    arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4768), Var($198load_deref.3, arrayobj.py:4771)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_method.1', '$198load_deref.3', 'arr', 'nitems']
    val = _start                             ['_start', 'val']
    $208load_global.6 = global(range: <class 'range'>) ['$208load_global.6']
    $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4768)], kws=(), vararg=None, varkwarg=None, target=None) ['$208load_global.6', '$212call_function.8', 'nitems']
    $214get_iter.9 = getiter(value=$212call_function.8) ['$212call_function.8', '$214get_iter.9']
    $phi216.0 = $214get_iter.9               ['$214get_iter.9', '$phi216.0']
    jump 216                                 []
label 216:
    $216for_iter.1 = iternext(value=$phi216.0) ['$216for_iter.1', '$phi216.0']
    $216for_iter.2 = pair_first(value=$216for_iter.1) ['$216for_iter.1', '$216for_iter.2']
    $216for_iter.3 = pair_second(value=$216for_iter.1) ['$216for_iter.1', '$216for_iter.3']
    $phi218.1 = $216for_iter.2               ['$216for_iter.2', '$phi218.1']
    branch $216for_iter.3, 218, 238          ['$216for_iter.3']
label 218:
    i = $phi218.1                            ['$phi218.1', 'i']
    $226binary_multiply.5 = i * _step        ['$226binary_multiply.5', '_step', 'i']
    $228binary_add.6 = val + $226binary_multiply.5 ['$226binary_multiply.5', '$228binary_add.6', 'val']
    arr[i] = $228binary_add.6                ['$228binary_add.6', 'arr', 'i']
    jump 216                                 []
label 238:
    $240return_value.1 = cast(value=arr)     ['$240return_value.1', 'arr']
    return $240return_value.1                ['$240return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: start = arg(0, name=start)
12-22 13:04 DEBUG    on stmt: stop = arg(1, name=stop)
12-22 13:04 DEBUG    on stmt: step = arg(2, name=step)
12-22 13:04 DEBUG    on stmt: dtype = arg(3, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(start_value: None)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:4749),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 14
12-22 13:04 DEBUG    ==== SSA block analysis pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $phi16.0 = start
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block analysis pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: lit_start = $phi16.0
12-22 13:04 DEBUG    on stmt: $18load_deref.1 = freevar(stop_value: None)
12-22 13:04 DEBUG    on stmt: $const20.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $22compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.3, func=bool24, args=(Var($22compare_op.3, arrayobj.py:4750),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 30
12-22 13:04 DEBUG    ==== SSA block analysis pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $phi32.0 = stop
12-22 13:04 DEBUG    on stmt: jump 32
12-22 13:04 DEBUG    ==== SSA block analysis pass on 32
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: lit_stop = $phi32.0
12-22 13:04 DEBUG    on stmt: $34load_deref.1 = freevar(step_value: None)
12-22 13:04 DEBUG    on stmt: $const36.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $38compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool40 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $40pred = call bool40($38compare_op.3, func=bool40, args=(Var($38compare_op.3, arrayobj.py:4751),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 46
12-22 13:04 DEBUG    ==== SSA block analysis pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $phi48.0 = step
12-22 13:04 DEBUG    on stmt: jump 48
12-22 13:04 DEBUG    ==== SSA block analysis pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: lit_step = $phi48.0
12-22 13:04 DEBUG    on stmt: $const52.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $54compare_op.3 = lit_step is not $const52.2
12-22 13:04 DEBUG    on stmt: bool56 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $56pred = call bool56($54compare_op.3, func=bool56, args=(Var($54compare_op.3, arrayobj.py:4753),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $56pred, 58, 62
12-22 13:04 DEBUG    ==== SSA block analysis pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $phi64.0 = lit_step
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block analysis pass on 62
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $const62.0 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $phi64.0 = $const62.0
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block analysis pass on 64
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: _step = $phi64.0
12-22 13:04 DEBUG    on stmt: $const68.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $70compare_op.3 = lit_stop is $const68.2
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.3, func=bool72, args=(Var($70compare_op.3, arrayobj.py:4754),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 86
12-22 13:04 DEBUG    ==== SSA block analysis pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: _start = const(int, 0)
12-22 13:04 DEBUG    on stmt: _stop = lit_start
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block analysis pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: _start = lit_start
12-22 13:04 DEBUG    on stmt: _stop = lit_stop
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block analysis pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $const98.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $100compare_op.2 = _step == $const98.1
12-22 13:04 DEBUG    on stmt: bool102 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4759),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $102pred, 104, 112
12-22 13:04 DEBUG    ==== SSA block analysis pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4760)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
12-22 13:04 DEBUG    ==== SSA block analysis pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $116binary_subtract.2 = _stop - _start
12-22 13:04 DEBUG    on stmt: nitems_c = $116binary_subtract.2 / _step
12-22 13:04 DEBUG    on stmt: $124load_global.5 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
12-22 13:04 DEBUG    on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
12-22 13:04 DEBUG    on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $140load_deref.12 = freevar(use_complex: False)
12-22 13:04 DEBUG    on stmt: $const142.13 = const(bool, True)
12-22 13:04 DEBUG    on stmt: $144compare_op.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool146 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $146pred = call bool146($144compare_op.14, func=bool146, args=(Var($144compare_op.14, arrayobj.py:4766),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 182
12-22 13:04 DEBUG    ==== SSA block analysis pass on 182
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $182load_global.0 = global(max: <built-in function max>)
12-22 13:04 DEBUG    on stmt: $const186.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4763), Var($const186.2, arrayobj.py:4770)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 192
12-22 13:04 DEBUG    ==== SSA block analysis pass on 192
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $192load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: $198load_deref.3 = freevar(true_dtype: int64)
12-22 13:04 DEBUG    on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4768), Var($198load_deref.3, arrayobj.py:4771)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: val = _start
12-22 13:04 DEBUG    on stmt: $208load_global.6 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4768)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
12-22 13:04 DEBUG    on stmt: $phi216.0 = $214get_iter.9
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block analysis pass on 216
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $216for_iter.1 = iternext(value=$phi216.0)
12-22 13:04 DEBUG    on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi218.1 = $216for_iter.2
12-22 13:04 DEBUG    on stmt: branch $216for_iter.3, 218, 238
12-22 13:04 DEBUG    ==== SSA block analysis pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: i = $phi218.1
12-22 13:04 DEBUG    on stmt: $226binary_multiply.5 = i * _step
12-22 13:04 DEBUG    on stmt: $228binary_add.6 = val + $226binary_multiply.5
12-22 13:04 DEBUG    on stmt: arr[i] = $228binary_add.6
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block analysis pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33652E0>
12-22 13:04 DEBUG    on stmt: $240return_value.1 = cast(value=arr)
12-22 13:04 DEBUG    on stmt: return $240return_value.1
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$100compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF3308610>],
             '$102pred': [<numba.core.ir.Assign object at 0x000001AEF33083D0>],
             '$104load_global.0': [<numba.core.ir.Assign object at 0x000001AEF3308970>],
             '$108call_function.2': [<numba.core.ir.Assign object at 0x000001AEF3308220>],
             '$116binary_subtract.2': [<numba.core.ir.Assign object at 0x000001AEF3308460>],
             '$124load_global.5': [<numba.core.ir.Assign object at 0x000001AEF31AAB80>],
             '$126load_global.6': [<numba.core.ir.Assign object at 0x000001AEF31AA430>],
             '$128load_method.7': [<numba.core.ir.Assign object at 0x000001AEF31AA190>],
             '$132load_attr.9': [<numba.core.ir.Assign object at 0x000001AEF31AA550>],
             '$134call_method.10': [<numba.core.ir.Assign object at 0x000001AEF31AAAC0>],
             '$140load_deref.12': [<numba.core.ir.Assign object at 0x000001AEF31AA340>],
             '$144compare_op.14': [<numba.core.ir.Assign object at 0x000001AEF31A94C0>],
             '$146pred': [<numba.core.ir.Assign object at 0x000001AEF31A9280>],
             '$182load_global.0': [<numba.core.ir.Assign object at 0x000001AEF3230BB0>],
             '$18load_deref.1': [<numba.core.ir.Assign object at 0x000001AEF328B7F0>],
             '$192load_global.0': [<numba.core.ir.Assign object at 0x000001AEF31F6A30>],
             '$194load_method.1': [<numba.core.ir.Assign object at 0x000001AEF31F6C40>],
             '$198load_deref.3': [<numba.core.ir.Assign object at 0x000001AEF31F6B20>],
             '$208load_global.6': [<numba.core.ir.Assign object at 0x000001AEF32E9550>],
             '$212call_function.8': [<numba.core.ir.Assign object at 0x000001AEF3293FA0>],
             '$214get_iter.9': [<numba.core.ir.Assign object at 0x000001AEF3293700>],
             '$216for_iter.1': [<numba.core.ir.Assign object at 0x000001AEF3293400>],
             '$216for_iter.2': [<numba.core.ir.Assign object at 0x000001AEF32934F0>],
             '$216for_iter.3': [<numba.core.ir.Assign object at 0x000001AEF3293F40>],
             '$226binary_multiply.5': [<numba.core.ir.Assign object at 0x000001AEF323F700>],
             '$228binary_add.6': [<numba.core.ir.Assign object at 0x000001AEF3430430>],
             '$22compare_op.3': [<numba.core.ir.Assign object at 0x000001AEF328B6A0>],
             '$240return_value.1': [<numba.core.ir.Assign object at 0x000001AEF342B280>],
             '$24pred': [<numba.core.ir.Assign object at 0x000001AEF328B1F0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF3365490>],
             '$34load_deref.1': [<numba.core.ir.Assign object at 0x000001AEF3340040>],
             '$38compare_op.3': [<numba.core.ir.Assign object at 0x000001AEF1D6F910>],
             '$40pred': [<numba.core.ir.Assign object at 0x000001AEF331A790>],
             '$54compare_op.3': [<numba.core.ir.Assign object at 0x000001AEF33114C0>],
             '$56pred': [<numba.core.ir.Assign object at 0x000001AEF32B4400>],
             '$6compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF3305820>],
             '$70compare_op.3': [<numba.core.ir.Assign object at 0x000001AEF32B4550>],
             '$72pred': [<numba.core.ir.Assign object at 0x000001AEF32BB220>],
             '$8pred': [<numba.core.ir.Assign object at 0x000001AEF3305E80>],
             '$const106.1': [<numba.core.ir.Assign object at 0x000001AEF33086D0>],
             '$const142.13': [<numba.core.ir.Assign object at 0x000001AEF31A9AC0>],
             '$const186.2': [<numba.core.ir.Assign object at 0x000001AEF32305B0>],
             '$const20.2': [<numba.core.ir.Assign object at 0x000001AEF328B400>],
             '$const36.2': [<numba.core.ir.Assign object at 0x000001AEF31E3640>],
             '$const4.1': [<numba.core.ir.Assign object at 0x000001AEF3365130>],
             '$const52.2': [<numba.core.ir.Assign object at 0x000001AEF33111C0>],
             '$const62.0': [<numba.core.ir.Assign object at 0x000001AEF32B4EE0>],
             '$const68.2': [<numba.core.ir.Assign object at 0x000001AEF32B46A0>],
             '$const98.1': [<numba.core.ir.Assign object at 0x000001AEF32BBE80>],
             '$phi16.0': [<numba.core.ir.Assign object at 0x000001AEF3305CA0>],
             '$phi216.0': [<numba.core.ir.Assign object at 0x000001AEF31F6DC0>],
             '$phi218.1': [<numba.core.ir.Assign object at 0x000001AEF3293D90>],
             '$phi32.0': [<numba.core.ir.Assign object at 0x000001AEF328C610>],
             '$phi48.0': [<numba.core.ir.Assign object at 0x000001AEF331AE80>],
             '$phi64.0': [<numba.core.ir.Assign object at 0x000001AEF32B43D0>,
                          <numba.core.ir.Assign object at 0x000001AEF32B4040>],
             '_start': [<numba.core.ir.Assign object at 0x000001AEF32BBD00>,
                        <numba.core.ir.Assign object at 0x000001AEF32BB580>],
             '_step': [<numba.core.ir.Assign object at 0x000001AEF32B4C10>],
             '_stop': [<numba.core.ir.Assign object at 0x000001AEF32BB3D0>,
                       <numba.core.ir.Assign object at 0x000001AEF32BB250>],
             'arr': [<numba.core.ir.Assign object at 0x000001AEF31F6EB0>],
             'bool102': [<numba.core.ir.Assign object at 0x000001AEF3308E20>],
             'bool146': [<numba.core.ir.Assign object at 0x000001AEF31A9460>],
             'bool24': [<numba.core.ir.Assign object at 0x000001AEF328BC10>],
             'bool40': [<numba.core.ir.Assign object at 0x000001AEF331AF70>],
             'bool56': [<numba.core.ir.Assign object at 0x000001AEF3311430>],
             'bool72': [<numba.core.ir.Assign object at 0x000001AEF31DEE50>],
             'bool8': [<numba.core.ir.Assign object at 0x000001AEF3305430>],
             'dtype': [<numba.core.ir.Assign object at 0x000001AEF33657F0>],
             'i': [<numba.core.ir.Assign object at 0x000001AEF3293AF0>],
             'lit_start': [<numba.core.ir.Assign object at 0x000001AEF328BBE0>],
             'lit_step': [<numba.core.ir.Assign object at 0x000001AEF331A430>],
             'lit_stop': [<numba.core.ir.Assign object at 0x000001AEF328C340>],
             'nitems': [<numba.core.ir.Assign object at 0x000001AEF32303D0>],
             'nitems_c': [<numba.core.ir.Assign object at 0x000001AEF31AA400>],
             'nitems_r': [<numba.core.ir.Assign object at 0x000001AEF31AA580>],
             'start': [<numba.core.ir.Assign object at 0x000001AEF3365250>],
             'step': [<numba.core.ir.Assign object at 0x000001AEF33656A0>],
             'stop': [<numba.core.ir.Assign object at 0x000001AEF3365850>],
             'val': [<numba.core.ir.Assign object at 0x000001AEF32E9C40>]})
12-22 13:04 DEBUG    SSA violators {'_stop', '_start', '$phi64.0'}
12-22 13:04 DEBUG    Fix SSA violator on var _stop
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: start = arg(0, name=start)
12-22 13:04 DEBUG    on stmt: stop = arg(1, name=stop)
12-22 13:04 DEBUG    on stmt: step = arg(2, name=step)
12-22 13:04 DEBUG    on stmt: dtype = arg(3, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(start_value: None)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:4749),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 14
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $phi16.0 = start
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: lit_start = $phi16.0
12-22 13:04 DEBUG    on stmt: $18load_deref.1 = freevar(stop_value: None)
12-22 13:04 DEBUG    on stmt: $const20.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $22compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.3, func=bool24, args=(Var($22compare_op.3, arrayobj.py:4750),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 30
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $phi32.0 = stop
12-22 13:04 DEBUG    on stmt: jump 32
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 32
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: lit_stop = $phi32.0
12-22 13:04 DEBUG    on stmt: $34load_deref.1 = freevar(step_value: None)
12-22 13:04 DEBUG    on stmt: $const36.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $38compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool40 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $40pred = call bool40($38compare_op.3, func=bool40, args=(Var($38compare_op.3, arrayobj.py:4751),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 46
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $phi48.0 = step
12-22 13:04 DEBUG    on stmt: jump 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: lit_step = $phi48.0
12-22 13:04 DEBUG    on stmt: $const52.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $54compare_op.3 = lit_step is not $const52.2
12-22 13:04 DEBUG    on stmt: bool56 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $56pred = call bool56($54compare_op.3, func=bool56, args=(Var($54compare_op.3, arrayobj.py:4753),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $56pred, 58, 62
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $phi64.0 = lit_step
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 62
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $const62.0 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $phi64.0 = $const62.0
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 64
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: _step = $phi64.0
12-22 13:04 DEBUG    on stmt: $const68.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $70compare_op.3 = lit_stop is $const68.2
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.3, func=bool72, args=(Var($70compare_op.3, arrayobj.py:4754),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: _start = const(int, 0)
12-22 13:04 DEBUG    on stmt: _stop = lit_start
12-22 13:04 DEBUG    first assign: _stop
12-22 13:04 DEBUG    replaced with: _stop = lit_start
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: _start = lit_start
12-22 13:04 DEBUG    on stmt: _stop = lit_stop
12-22 13:04 DEBUG    replaced with: _stop.1 = lit_stop
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $const98.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $100compare_op.2 = _step == $const98.1
12-22 13:04 DEBUG    on stmt: bool102 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4759),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $102pred, 104, 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4760)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $116binary_subtract.2 = _stop - _start
12-22 13:04 DEBUG    on stmt: nitems_c = $116binary_subtract.2 / _step
12-22 13:04 DEBUG    on stmt: $124load_global.5 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
12-22 13:04 DEBUG    on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
12-22 13:04 DEBUG    on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $140load_deref.12 = freevar(use_complex: False)
12-22 13:04 DEBUG    on stmt: $const142.13 = const(bool, True)
12-22 13:04 DEBUG    on stmt: $144compare_op.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool146 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $146pred = call bool146($144compare_op.14, func=bool146, args=(Var($144compare_op.14, arrayobj.py:4766),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 182
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 182
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $182load_global.0 = global(max: <built-in function max>)
12-22 13:04 DEBUG    on stmt: $const186.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4763), Var($const186.2, arrayobj.py:4770)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 192
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 192
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $192load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: $198load_deref.3 = freevar(true_dtype: int64)
12-22 13:04 DEBUG    on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4768), Var($198load_deref.3, arrayobj.py:4771)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: val = _start
12-22 13:04 DEBUG    on stmt: $208load_global.6 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4768)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
12-22 13:04 DEBUG    on stmt: $phi216.0 = $214get_iter.9
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 216
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $216for_iter.1 = iternext(value=$phi216.0)
12-22 13:04 DEBUG    on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi218.1 = $216for_iter.2
12-22 13:04 DEBUG    on stmt: branch $216for_iter.3, 218, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: i = $phi218.1
12-22 13:04 DEBUG    on stmt: $226binary_multiply.5 = i * _step
12-22 13:04 DEBUG    on stmt: $228binary_add.6 = val + $226binary_multiply.5
12-22 13:04 DEBUG    on stmt: arr[i] = $228binary_add.6
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $240return_value.1 = cast(value=arr)
12-22 13:04 DEBUG    on stmt: return $240return_value.1
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {74: [<numba.core.ir.Assign object at 0x000001AEF328CC40>],
             86: [<numba.core.ir.Assign object at 0x000001AEF342B160>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: start = arg(0, name=start)
12-22 13:04 DEBUG    on stmt: stop = arg(1, name=stop)
12-22 13:04 DEBUG    on stmt: step = arg(2, name=step)
12-22 13:04 DEBUG    on stmt: dtype = arg(3, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(start_value: None)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:4749),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 14
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $phi16.0 = start
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: lit_start = $phi16.0
12-22 13:04 DEBUG    on stmt: $18load_deref.1 = freevar(stop_value: None)
12-22 13:04 DEBUG    on stmt: $const20.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $22compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.3, func=bool24, args=(Var($22compare_op.3, arrayobj.py:4750),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 30
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $phi32.0 = stop
12-22 13:04 DEBUG    on stmt: jump 32
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 32
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: lit_stop = $phi32.0
12-22 13:04 DEBUG    on stmt: $34load_deref.1 = freevar(step_value: None)
12-22 13:04 DEBUG    on stmt: $const36.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $38compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool40 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $40pred = call bool40($38compare_op.3, func=bool40, args=(Var($38compare_op.3, arrayobj.py:4751),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 46
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $phi48.0 = step
12-22 13:04 DEBUG    on stmt: jump 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: lit_step = $phi48.0
12-22 13:04 DEBUG    on stmt: $const52.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $54compare_op.3 = lit_step is not $const52.2
12-22 13:04 DEBUG    on stmt: bool56 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $56pred = call bool56($54compare_op.3, func=bool56, args=(Var($54compare_op.3, arrayobj.py:4753),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $56pred, 58, 62
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $phi64.0 = lit_step
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 62
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $const62.0 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $phi64.0 = $const62.0
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 64
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: _step = $phi64.0
12-22 13:04 DEBUG    on stmt: $const68.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $70compare_op.3 = lit_stop is $const68.2
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.3, func=bool72, args=(Var($70compare_op.3, arrayobj.py:4754),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: _start = const(int, 0)
12-22 13:04 DEBUG    on stmt: _stop = lit_start
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: _start = lit_start
12-22 13:04 DEBUG    on stmt: _stop.1 = lit_stop
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $const98.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $100compare_op.2 = _step == $const98.1
12-22 13:04 DEBUG    on stmt: bool102 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4759),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $102pred, 104, 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4760)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $116binary_subtract.2 = _stop - _start
12-22 13:04 DEBUG    find_def var='_stop' stmt=$116binary_subtract.2 = _stop - _start
12-22 13:04 DEBUG    find_def_from_top label 112
12-22 13:04 DEBUG    idom 96 from label 112
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    find_def_from_top label 96
12-22 13:04 DEBUG    insert phi node _stop.2 = phi(incoming_values=[], incoming_blocks=[]) at 96
12-22 13:04 DEBUG    find_def_from_bottom label 74
12-22 13:04 DEBUG    incoming_def _stop = lit_start
12-22 13:04 DEBUG    find_def_from_bottom label 86
12-22 13:04 DEBUG    incoming_def _stop.1 = lit_stop
12-22 13:04 DEBUG    replaced with: $116binary_subtract.2 = _stop.2 - _start
12-22 13:04 DEBUG    on stmt: nitems_c = $116binary_subtract.2 / _step
12-22 13:04 DEBUG    on stmt: $124load_global.5 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
12-22 13:04 DEBUG    on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
12-22 13:04 DEBUG    on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $140load_deref.12 = freevar(use_complex: False)
12-22 13:04 DEBUG    on stmt: $const142.13 = const(bool, True)
12-22 13:04 DEBUG    on stmt: $144compare_op.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool146 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $146pred = call bool146($144compare_op.14, func=bool146, args=(Var($144compare_op.14, arrayobj.py:4766),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 182
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 182
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $182load_global.0 = global(max: <built-in function max>)
12-22 13:04 DEBUG    on stmt: $const186.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4763), Var($const186.2, arrayobj.py:4770)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 192
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 192
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $192load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: $198load_deref.3 = freevar(true_dtype: int64)
12-22 13:04 DEBUG    on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4768), Var($198load_deref.3, arrayobj.py:4771)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: val = _start
12-22 13:04 DEBUG    on stmt: $208load_global.6 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4768)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
12-22 13:04 DEBUG    on stmt: $phi216.0 = $214get_iter.9
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 216
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $216for_iter.1 = iternext(value=$phi216.0)
12-22 13:04 DEBUG    on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi218.1 = $216for_iter.2
12-22 13:04 DEBUG    on stmt: branch $216for_iter.3, 218, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: i = $phi218.1
12-22 13:04 DEBUG    on stmt: $226binary_multiply.5 = i * _step
12-22 13:04 DEBUG    on stmt: $228binary_add.6 = val + $226binary_multiply.5
12-22 13:04 DEBUG    on stmt: arr[i] = $228binary_add.6
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF328B910>
12-22 13:04 DEBUG    on stmt: $240return_value.1 = cast(value=arr)
12-22 13:04 DEBUG    on stmt: return $240return_value.1
12-22 13:04 DEBUG    Fix SSA violator on var _start
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: start = arg(0, name=start)
12-22 13:04 DEBUG    on stmt: stop = arg(1, name=stop)
12-22 13:04 DEBUG    on stmt: step = arg(2, name=step)
12-22 13:04 DEBUG    on stmt: dtype = arg(3, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(start_value: None)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:4749),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 14
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: $phi16.0 = start
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: lit_start = $phi16.0
12-22 13:04 DEBUG    on stmt: $18load_deref.1 = freevar(stop_value: None)
12-22 13:04 DEBUG    on stmt: $const20.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $22compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.3, func=bool24, args=(Var($22compare_op.3, arrayobj.py:4750),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 30
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: $phi32.0 = stop
12-22 13:04 DEBUG    on stmt: jump 32
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 32
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: lit_stop = $phi32.0
12-22 13:04 DEBUG    on stmt: $34load_deref.1 = freevar(step_value: None)
12-22 13:04 DEBUG    on stmt: $const36.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $38compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool40 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $40pred = call bool40($38compare_op.3, func=bool40, args=(Var($38compare_op.3, arrayobj.py:4751),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 46
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: $phi48.0 = step
12-22 13:04 DEBUG    on stmt: jump 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: lit_step = $phi48.0
12-22 13:04 DEBUG    on stmt: $const52.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $54compare_op.3 = lit_step is not $const52.2
12-22 13:04 DEBUG    on stmt: bool56 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $56pred = call bool56($54compare_op.3, func=bool56, args=(Var($54compare_op.3, arrayobj.py:4753),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $56pred, 58, 62
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: $phi64.0 = lit_step
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 62
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: $const62.0 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $phi64.0 = $const62.0
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 64
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: _step = $phi64.0
12-22 13:04 DEBUG    on stmt: $const68.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $70compare_op.3 = lit_stop is $const68.2
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.3, func=bool72, args=(Var($70compare_op.3, arrayobj.py:4754),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: _start = const(int, 0)
12-22 13:04 DEBUG    first assign: _start
12-22 13:04 DEBUG    replaced with: _start = const(int, 0)
12-22 13:04 DEBUG    on stmt: _stop = lit_start
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: _start = lit_start
12-22 13:04 DEBUG    replaced with: _start.1 = lit_start
12-22 13:04 DEBUG    on stmt: _stop.1 = lit_stop
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: _stop.2 = phi(incoming_values=[Var(_stop, arrayobj.py:4755), Var(_stop.1, arrayobj.py:4757)], incoming_blocks=[74, 86])
12-22 13:04 DEBUG    on stmt: $const98.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $100compare_op.2 = _step == $const98.1
12-22 13:04 DEBUG    on stmt: bool102 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4759),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $102pred, 104, 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4760)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: $116binary_subtract.2 = _stop.2 - _start
12-22 13:04 DEBUG    on stmt: nitems_c = $116binary_subtract.2 / _step
12-22 13:04 DEBUG    on stmt: $124load_global.5 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
12-22 13:04 DEBUG    on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
12-22 13:04 DEBUG    on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $140load_deref.12 = freevar(use_complex: False)
12-22 13:04 DEBUG    on stmt: $const142.13 = const(bool, True)
12-22 13:04 DEBUG    on stmt: $144compare_op.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool146 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $146pred = call bool146($144compare_op.14, func=bool146, args=(Var($144compare_op.14, arrayobj.py:4766),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 182
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 182
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: $182load_global.0 = global(max: <built-in function max>)
12-22 13:04 DEBUG    on stmt: $const186.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4763), Var($const186.2, arrayobj.py:4770)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 192
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 192
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: $192load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: $198load_deref.3 = freevar(true_dtype: int64)
12-22 13:04 DEBUG    on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4768), Var($198load_deref.3, arrayobj.py:4771)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: val = _start
12-22 13:04 DEBUG    on stmt: $208load_global.6 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4768)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
12-22 13:04 DEBUG    on stmt: $phi216.0 = $214get_iter.9
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 216
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: $216for_iter.1 = iternext(value=$phi216.0)
12-22 13:04 DEBUG    on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi218.1 = $216for_iter.2
12-22 13:04 DEBUG    on stmt: branch $216for_iter.3, 218, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: i = $phi218.1
12-22 13:04 DEBUG    on stmt: $226binary_multiply.5 = i * _step
12-22 13:04 DEBUG    on stmt: $228binary_add.6 = val + $226binary_multiply.5
12-22 13:04 DEBUG    on stmt: arr[i] = $228binary_add.6
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF328C880>
12-22 13:04 DEBUG    on stmt: $240return_value.1 = cast(value=arr)
12-22 13:04 DEBUG    on stmt: return $240return_value.1
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {74: [<numba.core.ir.Assign object at 0x000001AEF342B7F0>],
             86: [<numba.core.ir.Assign object at 0x000001AEF342B640>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: start = arg(0, name=start)
12-22 13:04 DEBUG    on stmt: stop = arg(1, name=stop)
12-22 13:04 DEBUG    on stmt: step = arg(2, name=step)
12-22 13:04 DEBUG    on stmt: dtype = arg(3, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(start_value: None)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:4749),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 14
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: $phi16.0 = start
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: lit_start = $phi16.0
12-22 13:04 DEBUG    on stmt: $18load_deref.1 = freevar(stop_value: None)
12-22 13:04 DEBUG    on stmt: $const20.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $22compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.3, func=bool24, args=(Var($22compare_op.3, arrayobj.py:4750),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 30
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: $phi32.0 = stop
12-22 13:04 DEBUG    on stmt: jump 32
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 32
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: lit_stop = $phi32.0
12-22 13:04 DEBUG    on stmt: $34load_deref.1 = freevar(step_value: None)
12-22 13:04 DEBUG    on stmt: $const36.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $38compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool40 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $40pred = call bool40($38compare_op.3, func=bool40, args=(Var($38compare_op.3, arrayobj.py:4751),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 46
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: $phi48.0 = step
12-22 13:04 DEBUG    on stmt: jump 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: lit_step = $phi48.0
12-22 13:04 DEBUG    on stmt: $const52.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $54compare_op.3 = lit_step is not $const52.2
12-22 13:04 DEBUG    on stmt: bool56 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $56pred = call bool56($54compare_op.3, func=bool56, args=(Var($54compare_op.3, arrayobj.py:4753),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $56pred, 58, 62
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: $phi64.0 = lit_step
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 62
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: $const62.0 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $phi64.0 = $const62.0
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 64
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: _step = $phi64.0
12-22 13:04 DEBUG    on stmt: $const68.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $70compare_op.3 = lit_stop is $const68.2
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.3, func=bool72, args=(Var($70compare_op.3, arrayobj.py:4754),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: _start = const(int, 0)
12-22 13:04 DEBUG    on stmt: _stop = lit_start
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: _start.1 = lit_start
12-22 13:04 DEBUG    on stmt: _stop.1 = lit_stop
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: _stop.2 = phi(incoming_values=[Var(_stop, arrayobj.py:4755), Var(_stop.1, arrayobj.py:4757)], incoming_blocks=[74, 86])
12-22 13:04 DEBUG    on stmt: $const98.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $100compare_op.2 = _step == $const98.1
12-22 13:04 DEBUG    on stmt: bool102 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4759),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $102pred, 104, 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4760)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: $116binary_subtract.2 = _stop.2 - _start
12-22 13:04 DEBUG    find_def var='_start' stmt=$116binary_subtract.2 = _stop.2 - _start
12-22 13:04 DEBUG    find_def_from_top label 112
12-22 13:04 DEBUG    idom 96 from label 112
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    find_def_from_top label 96
12-22 13:04 DEBUG    insert phi node _start.2 = phi(incoming_values=[], incoming_blocks=[]) at 96
12-22 13:04 DEBUG    find_def_from_bottom label 74
12-22 13:04 DEBUG    incoming_def _start = const(int, 0)
12-22 13:04 DEBUG    find_def_from_bottom label 86
12-22 13:04 DEBUG    incoming_def _start.1 = lit_start
12-22 13:04 DEBUG    replaced with: $116binary_subtract.2 = _stop.2 - _start.2
12-22 13:04 DEBUG    on stmt: nitems_c = $116binary_subtract.2 / _step
12-22 13:04 DEBUG    on stmt: $124load_global.5 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
12-22 13:04 DEBUG    on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
12-22 13:04 DEBUG    on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $140load_deref.12 = freevar(use_complex: False)
12-22 13:04 DEBUG    on stmt: $const142.13 = const(bool, True)
12-22 13:04 DEBUG    on stmt: $144compare_op.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool146 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $146pred = call bool146($144compare_op.14, func=bool146, args=(Var($144compare_op.14, arrayobj.py:4766),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 182
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 182
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: $182load_global.0 = global(max: <built-in function max>)
12-22 13:04 DEBUG    on stmt: $const186.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4763), Var($const186.2, arrayobj.py:4770)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 192
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 192
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: $192load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: $198load_deref.3 = freevar(true_dtype: int64)
12-22 13:04 DEBUG    on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4768), Var($198load_deref.3, arrayobj.py:4771)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: val = _start
12-22 13:04 DEBUG    find_def var='_start' stmt=val = _start
12-22 13:04 DEBUG    find_def_from_top label 192
12-22 13:04 DEBUG    idom 182 from label 192
12-22 13:04 DEBUG    find_def_from_bottom label 182
12-22 13:04 DEBUG    find_def_from_top label 182
12-22 13:04 DEBUG    idom 112 from label 182
12-22 13:04 DEBUG    find_def_from_bottom label 112
12-22 13:04 DEBUG    find_def_from_top label 112
12-22 13:04 DEBUG    idom 96 from label 112
12-22 13:04 DEBUG    find_def_from_bottom label 96
12-22 13:04 DEBUG    replaced with: val = _start.2
12-22 13:04 DEBUG    on stmt: $208load_global.6 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4768)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
12-22 13:04 DEBUG    on stmt: $phi216.0 = $214get_iter.9
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 216
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: $216for_iter.1 = iternext(value=$phi216.0)
12-22 13:04 DEBUG    on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi218.1 = $216for_iter.2
12-22 13:04 DEBUG    on stmt: branch $216for_iter.3, 218, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: i = $phi218.1
12-22 13:04 DEBUG    on stmt: $226binary_multiply.5 = i * _step
12-22 13:04 DEBUG    on stmt: $228binary_add.6 = val + $226binary_multiply.5
12-22 13:04 DEBUG    on stmt: arr[i] = $228binary_add.6
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF331A1C0>
12-22 13:04 DEBUG    on stmt: $240return_value.1 = cast(value=arr)
12-22 13:04 DEBUG    on stmt: return $240return_value.1
12-22 13:04 DEBUG    Fix SSA violator on var $phi64.0
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: start = arg(0, name=start)
12-22 13:04 DEBUG    on stmt: stop = arg(1, name=stop)
12-22 13:04 DEBUG    on stmt: step = arg(2, name=step)
12-22 13:04 DEBUG    on stmt: dtype = arg(3, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(start_value: None)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:4749),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 14
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: $phi16.0 = start
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: lit_start = $phi16.0
12-22 13:04 DEBUG    on stmt: $18load_deref.1 = freevar(stop_value: None)
12-22 13:04 DEBUG    on stmt: $const20.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $22compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.3, func=bool24, args=(Var($22compare_op.3, arrayobj.py:4750),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 30
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: $phi32.0 = stop
12-22 13:04 DEBUG    on stmt: jump 32
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 32
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: lit_stop = $phi32.0
12-22 13:04 DEBUG    on stmt: $34load_deref.1 = freevar(step_value: None)
12-22 13:04 DEBUG    on stmt: $const36.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $38compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool40 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $40pred = call bool40($38compare_op.3, func=bool40, args=(Var($38compare_op.3, arrayobj.py:4751),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 46
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: $phi48.0 = step
12-22 13:04 DEBUG    on stmt: jump 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: lit_step = $phi48.0
12-22 13:04 DEBUG    on stmt: $const52.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $54compare_op.3 = lit_step is not $const52.2
12-22 13:04 DEBUG    on stmt: bool56 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $56pred = call bool56($54compare_op.3, func=bool56, args=(Var($54compare_op.3, arrayobj.py:4753),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $56pred, 58, 62
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: $phi64.0 = lit_step
12-22 13:04 DEBUG    first assign: $phi64.0
12-22 13:04 DEBUG    replaced with: $phi64.0 = lit_step
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 62
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: $const62.0 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $phi64.0 = $const62.0
12-22 13:04 DEBUG    replaced with: $phi64.0.1 = $const62.0
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 64
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: _step = $phi64.0
12-22 13:04 DEBUG    on stmt: $const68.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $70compare_op.3 = lit_stop is $const68.2
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.3, func=bool72, args=(Var($70compare_op.3, arrayobj.py:4754),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: _start = const(int, 0)
12-22 13:04 DEBUG    on stmt: _stop = lit_start
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: _start.1 = lit_start
12-22 13:04 DEBUG    on stmt: _stop.1 = lit_stop
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: _start.2 = phi(incoming_values=[Var(_start, arrayobj.py:4755), Var(_start.1, arrayobj.py:4757)], incoming_blocks=[74, 86])
12-22 13:04 DEBUG    on stmt: _stop.2 = phi(incoming_values=[Var(_stop, arrayobj.py:4755), Var(_stop.1, arrayobj.py:4757)], incoming_blocks=[74, 86])
12-22 13:04 DEBUG    on stmt: $const98.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $100compare_op.2 = _step == $const98.1
12-22 13:04 DEBUG    on stmt: bool102 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4759),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $102pred, 104, 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4760)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: $116binary_subtract.2 = _stop.2 - _start.2
12-22 13:04 DEBUG    on stmt: nitems_c = $116binary_subtract.2 / _step
12-22 13:04 DEBUG    on stmt: $124load_global.5 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
12-22 13:04 DEBUG    on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
12-22 13:04 DEBUG    on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $140load_deref.12 = freevar(use_complex: False)
12-22 13:04 DEBUG    on stmt: $const142.13 = const(bool, True)
12-22 13:04 DEBUG    on stmt: $144compare_op.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool146 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $146pred = call bool146($144compare_op.14, func=bool146, args=(Var($144compare_op.14, arrayobj.py:4766),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 182
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 182
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: $182load_global.0 = global(max: <built-in function max>)
12-22 13:04 DEBUG    on stmt: $const186.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4763), Var($const186.2, arrayobj.py:4770)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 192
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 192
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: $192load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: $198load_deref.3 = freevar(true_dtype: int64)
12-22 13:04 DEBUG    on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4768), Var($198load_deref.3, arrayobj.py:4771)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: val = _start.2
12-22 13:04 DEBUG    on stmt: $208load_global.6 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4768)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
12-22 13:04 DEBUG    on stmt: $phi216.0 = $214get_iter.9
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 216
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: $216for_iter.1 = iternext(value=$phi216.0)
12-22 13:04 DEBUG    on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi218.1 = $216for_iter.2
12-22 13:04 DEBUG    on stmt: branch $216for_iter.3, 218, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: i = $phi218.1
12-22 13:04 DEBUG    on stmt: $226binary_multiply.5 = i * _step
12-22 13:04 DEBUG    on stmt: $228binary_add.6 = val + $226binary_multiply.5
12-22 13:04 DEBUG    on stmt: arr[i] = $228binary_add.6
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF336C820>
12-22 13:04 DEBUG    on stmt: $240return_value.1 = cast(value=arr)
12-22 13:04 DEBUG    on stmt: return $240return_value.1
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x000001AEF31C2610>],
             62: [<numba.core.ir.Assign object at 0x000001AEF3416730>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: start = arg(0, name=start)
12-22 13:04 DEBUG    on stmt: stop = arg(1, name=stop)
12-22 13:04 DEBUG    on stmt: step = arg(2, name=step)
12-22 13:04 DEBUG    on stmt: dtype = arg(3, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_deref.0 = freevar(start_value: None)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:4749),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 14
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: $phi16.0 = start
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: lit_start = $phi16.0
12-22 13:04 DEBUG    on stmt: $18load_deref.1 = freevar(stop_value: None)
12-22 13:04 DEBUG    on stmt: $const20.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $22compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool24 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $24pred = call bool24($22compare_op.3, func=bool24, args=(Var($22compare_op.3, arrayobj.py:4750),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 30
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: $phi32.0 = stop
12-22 13:04 DEBUG    on stmt: jump 32
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 32
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: lit_stop = $phi32.0
12-22 13:04 DEBUG    on stmt: $34load_deref.1 = freevar(step_value: None)
12-22 13:04 DEBUG    on stmt: $const36.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $38compare_op.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool40 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $40pred = call bool40($38compare_op.3, func=bool40, args=(Var($38compare_op.3, arrayobj.py:4751),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 46
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: $phi48.0 = step
12-22 13:04 DEBUG    on stmt: jump 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: lit_step = $phi48.0
12-22 13:04 DEBUG    on stmt: $const52.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $54compare_op.3 = lit_step is not $const52.2
12-22 13:04 DEBUG    on stmt: bool56 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $56pred = call bool56($54compare_op.3, func=bool56, args=(Var($54compare_op.3, arrayobj.py:4753),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $56pred, 58, 62
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: $phi64.0 = lit_step
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 62
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: $const62.0 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $phi64.0.1 = $const62.0
12-22 13:04 DEBUG    on stmt: jump 64
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 64
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: _step = $phi64.0
12-22 13:04 DEBUG    find_def var='$phi64.0' stmt=_step = $phi64.0
12-22 13:04 DEBUG    find_def_from_top label 64
12-22 13:04 DEBUG    insert phi node $phi64.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 64
12-22 13:04 DEBUG    find_def_from_bottom label 58
12-22 13:04 DEBUG    incoming_def $phi64.0 = lit_step
12-22 13:04 DEBUG    find_def_from_bottom label 62
12-22 13:04 DEBUG    incoming_def $phi64.0.1 = $const62.0
12-22 13:04 DEBUG    replaced with: _step = $phi64.0.2
12-22 13:04 DEBUG    on stmt: $const68.2 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $70compare_op.3 = lit_stop is $const68.2
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.3, func=bool72, args=(Var($70compare_op.3, arrayobj.py:4754),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: _start = const(int, 0)
12-22 13:04 DEBUG    on stmt: _stop = lit_start
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: _start.1 = lit_start
12-22 13:04 DEBUG    on stmt: _stop.1 = lit_stop
12-22 13:04 DEBUG    on stmt: jump 96
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 96
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: _start.2 = phi(incoming_values=[Var(_start, arrayobj.py:4755), Var(_start.1, arrayobj.py:4757)], incoming_blocks=[74, 86])
12-22 13:04 DEBUG    on stmt: _stop.2 = phi(incoming_values=[Var(_stop, arrayobj.py:4755), Var(_stop.1, arrayobj.py:4757)], incoming_blocks=[74, 86])
12-22 13:04 DEBUG    on stmt: $const98.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $100compare_op.2 = _step == $const98.1
12-22 13:04 DEBUG    on stmt: bool102 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $102pred = call bool102($100compare_op.2, func=bool102, args=(Var($100compare_op.2, arrayobj.py:4759),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $102pred, 104, 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const106.1 = const(str, Maximum allowed size exceeded)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0($const106.1, func=$104load_global.0, args=[Var($const106.1, arrayobj.py:4760)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('Maximum allowed size exceeded')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: $116binary_subtract.2 = _stop.2 - _start.2
12-22 13:04 DEBUG    on stmt: nitems_c = $116binary_subtract.2 / _step
12-22 13:04 DEBUG    on stmt: $124load_global.5 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $126load_global.6 = global(math: <module 'math' (built-in)>)
12-22 13:04 DEBUG    on stmt: $128load_method.7 = getattr(value=$126load_global.6, attr=ceil)
12-22 13:04 DEBUG    on stmt: $132load_attr.9 = getattr(value=nitems_c, attr=real)
12-22 13:04 DEBUG    on stmt: $134call_method.10 = call $128load_method.7($132load_attr.9, func=$128load_method.7, args=[Var($132load_attr.9, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: nitems_r = call $124load_global.5($134call_method.10, func=$124load_global.5, args=[Var($134call_method.10, arrayobj.py:4763)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $140load_deref.12 = freevar(use_complex: False)
12-22 13:04 DEBUG    on stmt: $const142.13 = const(bool, True)
12-22 13:04 DEBUG    on stmt: $144compare_op.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: bool146 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $146pred = call bool146($144compare_op.14, func=bool146, args=(Var($144compare_op.14, arrayobj.py:4766),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 182
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 182
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: $182load_global.0 = global(max: <built-in function max>)
12-22 13:04 DEBUG    on stmt: $const186.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: nitems = call $182load_global.0(nitems_r, $const186.2, func=$182load_global.0, args=[Var(nitems_r, arrayobj.py:4763), Var($const186.2, arrayobj.py:4770)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 192
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 192
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: $192load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $194load_method.1 = getattr(value=$192load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: $198load_deref.3 = freevar(true_dtype: int64)
12-22 13:04 DEBUG    on stmt: arr = call $194load_method.1(nitems, $198load_deref.3, func=$194load_method.1, args=[Var(nitems, arrayobj.py:4768), Var($198load_deref.3, arrayobj.py:4771)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: val = _start.2
12-22 13:04 DEBUG    on stmt: $208load_global.6 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $212call_function.8 = call $208load_global.6(nitems, func=$208load_global.6, args=[Var(nitems, arrayobj.py:4768)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $214get_iter.9 = getiter(value=$212call_function.8)
12-22 13:04 DEBUG    on stmt: $phi216.0 = $214get_iter.9
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 216
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: $216for_iter.1 = iternext(value=$phi216.0)
12-22 13:04 DEBUG    on stmt: $216for_iter.2 = pair_first(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $216for_iter.3 = pair_second(value=$216for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi218.1 = $216for_iter.2
12-22 13:04 DEBUG    on stmt: branch $216for_iter.3, 218, 238
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: i = $phi218.1
12-22 13:04 DEBUG    on stmt: $226binary_multiply.5 = i * _step
12-22 13:04 DEBUG    on stmt: $228binary_add.6 = val + $226binary_multiply.5
12-22 13:04 DEBUG    on stmt: arr[i] = $228binary_add.6
12-22 13:04 DEBUG    on stmt: jump 216
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 238
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF342B970>
12-22 13:04 DEBUG    on stmt: $240return_value.1 = cast(value=arr)
12-22 13:04 DEBUG    on stmt: return $240return_value.1
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4369)
           2	LOAD_GLOBAL(arg=0, lineno=4370)
           4	LOAD_FAST(arg=0, lineno=4370)
           6	LOAD_FAST(arg=1, lineno=4370)
           8	LOAD_DEREF(arg=0, lineno=4370)
          10	CALL_FUNCTION(arg=3, lineno=4370)
          12	RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4369)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    stack ['$10call_function.4']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(int64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF33EB490>
12-22 13:04 DEBUG    on stmt: shape = arg(0, name=shape)
12-22 13:04 DEBUG    on stmt: dtype = arg(1, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
12-22 13:04 DEBUG    on stmt: $8load_deref.3 = freevar(retty: array(int64, 1d, C))
12-22 13:04 DEBUG    on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $12return_value.5 = cast(value=$10call_function.4)
12-22 13:04 DEBUG    on stmt: return $12return_value.5
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10call_function.4': [<numba.core.ir.Assign object at 0x000001AEF33EB310>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x000001AEF33EB730>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AEF34773A0>],
             '$8load_deref.3': [<numba.core.ir.Assign object at 0x000001AEF33EB970>],
             'dtype': [<numba.core.ir.Assign object at 0x000001AEF34778B0>],
             'shape': [<numba.core.ir.Assign object at 0x000001AEF3477A00>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=86)
           2	LOAD_FAST(arg=2, lineno=92)
           4	LOAD_CONST(arg=1, lineno=92)
           6	COMPARE_OP(arg=5, lineno=92)
           8	POP_JUMP_IF_TRUE(arg=14, lineno=92)
          10	LOAD_GLOBAL(arg=0, lineno=92)
          12	RAISE_VARARGS(arg=1, lineno=92)
>         14	LOAD_FAST(arg=3, lineno=93)
          16	LOAD_FAST(arg=2, lineno=93)
          18	COMPARE_OP(arg=4, lineno=93)
          20	POP_JUMP_IF_TRUE(arg=26, lineno=93)
          22	LOAD_GLOBAL(arg=0, lineno=93)
          24	RAISE_VARARGS(arg=1, lineno=93)
>         26	LOAD_FAST(arg=2, lineno=95)
          28	LOAD_FAST(arg=3, lineno=95)
          30	BINARY_ADD(arg=None, lineno=95)
          32	LOAD_CONST(arg=2, lineno=95)
          34	BINARY_RSHIFT(arg=None, lineno=95)
          36	STORE_FAST(arg=4, lineno=95)
          38	LOAD_DEREF(arg=1, lineno=102)
          40	LOAD_DEREF(arg=0, lineno=102)
          42	LOAD_FAST(arg=0, lineno=102)
          44	LOAD_FAST(arg=1, lineno=102)
          46	LOAD_FAST(arg=4, lineno=102)
          48	BINARY_SUBSCR(arg=None, lineno=102)
          50	CALL_FUNCTION(arg=2, lineno=102)
          52	LOAD_DEREF(arg=0, lineno=102)
          54	LOAD_FAST(arg=0, lineno=102)
          56	LOAD_FAST(arg=1, lineno=102)
          58	LOAD_FAST(arg=2, lineno=102)
          60	BINARY_SUBSCR(arg=None, lineno=102)
          62	CALL_FUNCTION(arg=2, lineno=102)
          64	CALL_FUNCTION(arg=2, lineno=102)
          66	POP_JUMP_IF_FALSE(arg=94, lineno=102)
          68	LOAD_FAST(arg=1, lineno=103)
          70	LOAD_FAST(arg=4, lineno=103)
          72	BINARY_SUBSCR(arg=None, lineno=103)
          74	LOAD_FAST(arg=1, lineno=103)
          76	LOAD_FAST(arg=2, lineno=103)
          78	BINARY_SUBSCR(arg=None, lineno=103)
          80	ROT_TWO(arg=None, lineno=103)
          82	LOAD_FAST(arg=1, lineno=103)
          84	LOAD_FAST(arg=2, lineno=103)
          86	STORE_SUBSCR(arg=None, lineno=103)
          88	LOAD_FAST(arg=1, lineno=103)
          90	LOAD_FAST(arg=4, lineno=103)
          92	STORE_SUBSCR(arg=None, lineno=103)
>         94	LOAD_DEREF(arg=1, lineno=104)
          96	LOAD_DEREF(arg=0, lineno=104)
          98	LOAD_FAST(arg=0, lineno=104)
         100	LOAD_FAST(arg=1, lineno=104)
         102	LOAD_FAST(arg=3, lineno=104)
         104	BINARY_SUBSCR(arg=None, lineno=104)
         106	CALL_FUNCTION(arg=2, lineno=104)
         108	LOAD_DEREF(arg=0, lineno=104)
         110	LOAD_FAST(arg=0, lineno=104)
         112	LOAD_FAST(arg=1, lineno=104)
         114	LOAD_FAST(arg=4, lineno=104)
         116	BINARY_SUBSCR(arg=None, lineno=104)
         118	CALL_FUNCTION(arg=2, lineno=104)
         120	CALL_FUNCTION(arg=2, lineno=104)
         122	POP_JUMP_IF_FALSE(arg=150, lineno=104)
         124	LOAD_FAST(arg=1, lineno=105)
         126	LOAD_FAST(arg=4, lineno=105)
         128	BINARY_SUBSCR(arg=None, lineno=105)
         130	LOAD_FAST(arg=1, lineno=105)
         132	LOAD_FAST(arg=3, lineno=105)
         134	BINARY_SUBSCR(arg=None, lineno=105)
         136	ROT_TWO(arg=None, lineno=105)
         138	LOAD_FAST(arg=1, lineno=105)
         140	LOAD_FAST(arg=3, lineno=105)
         142	STORE_SUBSCR(arg=None, lineno=105)
         144	LOAD_FAST(arg=1, lineno=105)
         146	LOAD_FAST(arg=4, lineno=105)
         148	STORE_SUBSCR(arg=None, lineno=105)
>        150	LOAD_DEREF(arg=1, lineno=106)
         152	LOAD_DEREF(arg=0, lineno=106)
         154	LOAD_FAST(arg=0, lineno=106)
         156	LOAD_FAST(arg=1, lineno=106)
         158	LOAD_FAST(arg=4, lineno=106)
         160	BINARY_SUBSCR(arg=None, lineno=106)
         162	CALL_FUNCTION(arg=2, lineno=106)
         164	LOAD_DEREF(arg=0, lineno=106)
         166	LOAD_FAST(arg=0, lineno=106)
         168	LOAD_FAST(arg=1, lineno=106)
         170	LOAD_FAST(arg=2, lineno=106)
         172	BINARY_SUBSCR(arg=None, lineno=106)
         174	CALL_FUNCTION(arg=2, lineno=106)
         176	CALL_FUNCTION(arg=2, lineno=106)
         178	POP_JUMP_IF_FALSE(arg=206, lineno=106)
         180	LOAD_FAST(arg=1, lineno=107)
         182	LOAD_FAST(arg=4, lineno=107)
         184	BINARY_SUBSCR(arg=None, lineno=107)
         186	LOAD_FAST(arg=1, lineno=107)
         188	LOAD_FAST(arg=2, lineno=107)
         190	BINARY_SUBSCR(arg=None, lineno=107)
         192	ROT_TWO(arg=None, lineno=107)
         194	LOAD_FAST(arg=1, lineno=107)
         196	LOAD_FAST(arg=2, lineno=107)
         198	STORE_SUBSCR(arg=None, lineno=107)
         200	LOAD_FAST(arg=1, lineno=107)
         202	LOAD_FAST(arg=4, lineno=107)
         204	STORE_SUBSCR(arg=None, lineno=107)
>        206	LOAD_DEREF(arg=0, lineno=108)
         208	LOAD_FAST(arg=0, lineno=108)
         210	LOAD_FAST(arg=1, lineno=108)
         212	LOAD_FAST(arg=4, lineno=108)
         214	BINARY_SUBSCR(arg=None, lineno=108)
         216	CALL_FUNCTION(arg=2, lineno=108)
         218	STORE_FAST(arg=5, lineno=108)
         220	LOAD_FAST(arg=1, lineno=111)
         222	LOAD_FAST(arg=4, lineno=111)
         224	BINARY_SUBSCR(arg=None, lineno=111)
         226	LOAD_FAST(arg=1, lineno=111)
         228	LOAD_FAST(arg=3, lineno=111)
         230	BINARY_SUBSCR(arg=None, lineno=111)
         232	ROT_TWO(arg=None, lineno=111)
         234	LOAD_FAST(arg=1, lineno=111)
         236	LOAD_FAST(arg=3, lineno=111)
         238	STORE_SUBSCR(arg=None, lineno=111)
         240	LOAD_FAST(arg=1, lineno=111)
         242	LOAD_FAST(arg=4, lineno=111)
         244	STORE_SUBSCR(arg=None, lineno=111)
         246	LOAD_FAST(arg=2, lineno=112)
         248	STORE_FAST(arg=6, lineno=112)
         250	LOAD_FAST(arg=3, lineno=113)
         252	LOAD_CONST(arg=2, lineno=113)
         254	BINARY_SUBTRACT(arg=None, lineno=113)
         256	STORE_FAST(arg=7, lineno=113)
>        258	LOAD_FAST(arg=6, lineno=115)
         260	LOAD_FAST(arg=3, lineno=115)
         262	COMPARE_OP(arg=0, lineno=115)
         264	NOP(arg=1, lineno=115)
         266	POP_JUMP_IF_FALSE(arg=302, lineno=115)
         268	LOAD_DEREF(arg=1, lineno=115)
         270	LOAD_DEREF(arg=0, lineno=115)
         272	LOAD_FAST(arg=0, lineno=115)
         274	LOAD_FAST(arg=1, lineno=115)
         276	LOAD_FAST(arg=6, lineno=115)
         278	BINARY_SUBSCR(arg=None, lineno=115)
         280	CALL_FUNCTION(arg=2, lineno=115)
         282	LOAD_FAST(arg=5, lineno=115)
         284	CALL_FUNCTION(arg=2, lineno=115)
         286	NOP(arg=1, lineno=115)
         288	POP_JUMP_IF_FALSE(arg=302, lineno=115)
         290	LOAD_FAST(arg=6, lineno=116)
         292	LOAD_CONST(arg=2, lineno=116)
         294	INPLACE_ADD(arg=None, lineno=116)
         296	STORE_FAST(arg=6, lineno=116)
         298	NOP(arg=1, lineno=116)
         300	JUMP_ABSOLUTE(arg=258, lineno=116)
>        302	LOAD_FAST(arg=7, lineno=117)
         304	LOAD_FAST(arg=2, lineno=117)
         306	COMPARE_OP(arg=5, lineno=117)
         308	NOP(arg=1, lineno=117)
         310	POP_JUMP_IF_FALSE(arg=346, lineno=117)
         312	LOAD_DEREF(arg=1, lineno=117)
         314	LOAD_FAST(arg=5, lineno=117)
         316	LOAD_DEREF(arg=0, lineno=117)
         318	LOAD_FAST(arg=0, lineno=117)
         320	LOAD_FAST(arg=1, lineno=117)
         322	LOAD_FAST(arg=7, lineno=117)
         324	BINARY_SUBSCR(arg=None, lineno=117)
         326	CALL_FUNCTION(arg=2, lineno=117)
         328	CALL_FUNCTION(arg=2, lineno=117)
         330	NOP(arg=1, lineno=117)
         332	POP_JUMP_IF_FALSE(arg=346, lineno=117)
         334	LOAD_FAST(arg=7, lineno=118)
         336	LOAD_CONST(arg=2, lineno=118)
         338	INPLACE_SUBTRACT(arg=None, lineno=118)
         340	STORE_FAST(arg=7, lineno=118)
         342	NOP(arg=1, lineno=118)
         344	JUMP_ABSOLUTE(arg=302, lineno=118)
>        346	LOAD_FAST(arg=6, lineno=119)
         348	LOAD_FAST(arg=7, lineno=119)
         350	COMPARE_OP(arg=5, lineno=119)
         352	NOP(arg=1, lineno=119)
         354	POP_JUMP_IF_FALSE(arg=360, lineno=119)
         356	NOP(arg=1, lineno=120)
         358	JUMP_ABSOLUTE(arg=406, lineno=120)
>        360	LOAD_FAST(arg=1, lineno=121)
         362	LOAD_FAST(arg=7, lineno=121)
         364	BINARY_SUBSCR(arg=None, lineno=121)
         366	LOAD_FAST(arg=1, lineno=121)
         368	LOAD_FAST(arg=6, lineno=121)
         370	BINARY_SUBSCR(arg=None, lineno=121)
         372	ROT_TWO(arg=None, lineno=121)
         374	LOAD_FAST(arg=1, lineno=121)
         376	LOAD_FAST(arg=6, lineno=121)
         378	STORE_SUBSCR(arg=None, lineno=121)
         380	LOAD_FAST(arg=1, lineno=121)
         382	LOAD_FAST(arg=7, lineno=121)
         384	STORE_SUBSCR(arg=None, lineno=121)
         386	LOAD_FAST(arg=6, lineno=122)
         388	LOAD_CONST(arg=2, lineno=122)
         390	INPLACE_ADD(arg=None, lineno=122)
         392	STORE_FAST(arg=6, lineno=122)
         394	LOAD_FAST(arg=7, lineno=123)
         396	LOAD_CONST(arg=2, lineno=123)
         398	INPLACE_SUBTRACT(arg=None, lineno=123)
         400	STORE_FAST(arg=7, lineno=123)
         402	NOP(arg=1, lineno=123)
         404	JUMP_ABSOLUTE(arg=258, lineno=123)
>        406	LOAD_FAST(arg=1, lineno=126)
         408	LOAD_FAST(arg=3, lineno=126)
         410	BINARY_SUBSCR(arg=None, lineno=126)
         412	LOAD_FAST(arg=1, lineno=126)
         414	LOAD_FAST(arg=6, lineno=126)
         416	BINARY_SUBSCR(arg=None, lineno=126)
         418	ROT_TWO(arg=None, lineno=126)
         420	LOAD_FAST(arg=1, lineno=126)
         422	LOAD_FAST(arg=6, lineno=126)
         424	STORE_SUBSCR(arg=None, lineno=126)
         426	LOAD_FAST(arg=1, lineno=126)
         428	LOAD_FAST(arg=3, lineno=126)
         430	STORE_SUBSCR(arg=None, lineno=126)
         432	LOAD_FAST(arg=6, lineno=127)
         434	RETURN_VALUE(arg=None, lineno=127)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=86)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=2, lineno=92)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=92)
12-22 13:04 DEBUG    stack ['$low2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=COMPARE_OP(arg=5, lineno=92)
12-22 13:04 DEBUG    stack ['$low2.0', '$const4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=POP_JUMP_IF_TRUE(arg=14, lineno=92)
12-22 13:04 DEBUG    stack ['$6compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=10 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=92)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=RAISE_VARARGS(arg=1, lineno=92)
12-22 13:04 DEBUG    stack ['$10load_global.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=14 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=14 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=93)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=93)
12-22 13:04 DEBUG    stack ['$high14.0']
12-22 13:04 DEBUG    dispatch pc=18, inst=COMPARE_OP(arg=4, lineno=93)
12-22 13:04 DEBUG    stack ['$high14.0', '$low16.1']
12-22 13:04 DEBUG    dispatch pc=20, inst=POP_JUMP_IF_TRUE(arg=26, lineno=93)
12-22 13:04 DEBUG    stack ['$18compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=22 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_GLOBAL(arg=0, lineno=93)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=24, inst=RAISE_VARARGS(arg=1, lineno=93)
12-22 13:04 DEBUG    stack ['$22load_global.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=26 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=26 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=95)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=28, inst=LOAD_FAST(arg=3, lineno=95)
12-22 13:04 DEBUG    stack ['$low26.0']
12-22 13:04 DEBUG    dispatch pc=30, inst=BINARY_ADD(arg=None, lineno=95)
12-22 13:04 DEBUG    stack ['$low26.0', '$high28.1']
12-22 13:04 DEBUG    dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=95)
12-22 13:04 DEBUG    stack ['$30binary_add.2']
12-22 13:04 DEBUG    dispatch pc=34, inst=BINARY_RSHIFT(arg=None, lineno=95)
12-22 13:04 DEBUG    stack ['$30binary_add.2', '$const32.3']
12-22 13:04 DEBUG    dispatch pc=36, inst=STORE_FAST(arg=4, lineno=95)
12-22 13:04 DEBUG    stack ['$34binary_rshift.4']
12-22 13:04 DEBUG    dispatch pc=38, inst=LOAD_DEREF(arg=1, lineno=102)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=40, inst=LOAD_DEREF(arg=0, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5']
12-22 13:04 DEBUG    dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$40load_deref.6']
12-22 13:04 DEBUG    dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$40load_deref.6', '$A42.7']
12-22 13:04 DEBUG    dispatch pc=46, inst=LOAD_FAST(arg=4, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$40load_deref.6', '$A42.7', '$R44.8']
12-22 13:04 DEBUG    dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$40load_deref.6', '$A42.7', '$R44.8', '$mid46.9']
12-22 13:04 DEBUG    dispatch pc=50, inst=CALL_FUNCTION(arg=2, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$40load_deref.6', '$A42.7', '$48binary_subscr.10']
12-22 13:04 DEBUG    dispatch pc=52, inst=LOAD_DEREF(arg=0, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$50call_function.11']
12-22 13:04 DEBUG    dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$50call_function.11', '$52load_deref.12']
12-22 13:04 DEBUG    dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$50call_function.11', '$52load_deref.12', '$A54.13']
12-22 13:04 DEBUG    dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$50call_function.11', '$52load_deref.12', '$A54.13', '$R56.14']
12-22 13:04 DEBUG    dispatch pc=60, inst=BINARY_SUBSCR(arg=None, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$50call_function.11', '$52load_deref.12', '$A54.13', '$R56.14', '$low58.15']
12-22 13:04 DEBUG    dispatch pc=62, inst=CALL_FUNCTION(arg=2, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$50call_function.11', '$52load_deref.12', '$A54.13', '$60binary_subscr.16']
12-22 13:04 DEBUG    dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=102)
12-22 13:04 DEBUG    stack ['$38load_deref.5', '$50call_function.11', '$62call_function.17']
12-22 13:04 DEBUG    dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=94, lineno=102)
12-22 13:04 DEBUG    stack ['$64call_function.18']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=94, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=68 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=68, inst=LOAD_FAST(arg=1, lineno=103)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=70, inst=LOAD_FAST(arg=4, lineno=103)
12-22 13:04 DEBUG    stack ['$R68.0']
12-22 13:04 DEBUG    dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=103)
12-22 13:04 DEBUG    stack ['$R68.0', '$mid70.1']
12-22 13:04 DEBUG    dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=103)
12-22 13:04 DEBUG    stack ['$72binary_subscr.2']
12-22 13:04 DEBUG    dispatch pc=76, inst=LOAD_FAST(arg=2, lineno=103)
12-22 13:04 DEBUG    stack ['$72binary_subscr.2', '$R74.3']
12-22 13:04 DEBUG    dispatch pc=78, inst=BINARY_SUBSCR(arg=None, lineno=103)
12-22 13:04 DEBUG    stack ['$72binary_subscr.2', '$R74.3', '$low76.4']
12-22 13:04 DEBUG    dispatch pc=80, inst=ROT_TWO(arg=None, lineno=103)
12-22 13:04 DEBUG    stack ['$72binary_subscr.2', '$78binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=82, inst=LOAD_FAST(arg=1, lineno=103)
12-22 13:04 DEBUG    stack ['$78binary_subscr.5', '$72binary_subscr.2']
12-22 13:04 DEBUG    dispatch pc=84, inst=LOAD_FAST(arg=2, lineno=103)
12-22 13:04 DEBUG    stack ['$78binary_subscr.5', '$72binary_subscr.2', '$R82.6']
12-22 13:04 DEBUG    dispatch pc=86, inst=STORE_SUBSCR(arg=None, lineno=103)
12-22 13:04 DEBUG    stack ['$78binary_subscr.5', '$72binary_subscr.2', '$R82.6', '$low84.7']
12-22 13:04 DEBUG    dispatch pc=88, inst=LOAD_FAST(arg=1, lineno=103)
12-22 13:04 DEBUG    stack ['$78binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=103)
12-22 13:04 DEBUG    stack ['$78binary_subscr.5', '$R88.8']
12-22 13:04 DEBUG    dispatch pc=92, inst=STORE_SUBSCR(arg=None, lineno=103)
12-22 13:04 DEBUG    stack ['$78binary_subscr.5', '$R88.8', '$mid90.9']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=94 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=94 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=94, inst=LOAD_DEREF(arg=1, lineno=104)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=96, inst=LOAD_DEREF(arg=0, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0']
12-22 13:04 DEBUG    dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$96load_deref.1']
12-22 13:04 DEBUG    dispatch pc=100, inst=LOAD_FAST(arg=1, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$96load_deref.1', '$A98.2']
12-22 13:04 DEBUG    dispatch pc=102, inst=LOAD_FAST(arg=3, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$96load_deref.1', '$A98.2', '$R100.3']
12-22 13:04 DEBUG    dispatch pc=104, inst=BINARY_SUBSCR(arg=None, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$96load_deref.1', '$A98.2', '$R100.3', '$high102.4']
12-22 13:04 DEBUG    dispatch pc=106, inst=CALL_FUNCTION(arg=2, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$96load_deref.1', '$A98.2', '$104binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=108, inst=LOAD_DEREF(arg=0, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$106call_function.6']
12-22 13:04 DEBUG    dispatch pc=110, inst=LOAD_FAST(arg=0, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$106call_function.6', '$108load_deref.7']
12-22 13:04 DEBUG    dispatch pc=112, inst=LOAD_FAST(arg=1, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$106call_function.6', '$108load_deref.7', '$A110.8']
12-22 13:04 DEBUG    dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$106call_function.6', '$108load_deref.7', '$A110.8', '$R112.9']
12-22 13:04 DEBUG    dispatch pc=116, inst=BINARY_SUBSCR(arg=None, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$106call_function.6', '$108load_deref.7', '$A110.8', '$R112.9', '$mid114.10']
12-22 13:04 DEBUG    dispatch pc=118, inst=CALL_FUNCTION(arg=2, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$106call_function.6', '$108load_deref.7', '$A110.8', '$116binary_subscr.11']
12-22 13:04 DEBUG    dispatch pc=120, inst=CALL_FUNCTION(arg=2, lineno=104)
12-22 13:04 DEBUG    stack ['$94load_deref.0', '$106call_function.6', '$118call_function.12']
12-22 13:04 DEBUG    dispatch pc=122, inst=POP_JUMP_IF_FALSE(arg=150, lineno=104)
12-22 13:04 DEBUG    stack ['$120call_function.13']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=124, stack=(), blockstack=(), npush=0), Edge(pc=150, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=124 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=124 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=105)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=126, inst=LOAD_FAST(arg=4, lineno=105)
12-22 13:04 DEBUG    stack ['$R124.0']
12-22 13:04 DEBUG    dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=105)
12-22 13:04 DEBUG    stack ['$R124.0', '$mid126.1']
12-22 13:04 DEBUG    dispatch pc=130, inst=LOAD_FAST(arg=1, lineno=105)
12-22 13:04 DEBUG    stack ['$128binary_subscr.2']
12-22 13:04 DEBUG    dispatch pc=132, inst=LOAD_FAST(arg=3, lineno=105)
12-22 13:04 DEBUG    stack ['$128binary_subscr.2', '$R130.3']
12-22 13:04 DEBUG    dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=105)
12-22 13:04 DEBUG    stack ['$128binary_subscr.2', '$R130.3', '$high132.4']
12-22 13:04 DEBUG    dispatch pc=136, inst=ROT_TWO(arg=None, lineno=105)
12-22 13:04 DEBUG    stack ['$128binary_subscr.2', '$134binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=138, inst=LOAD_FAST(arg=1, lineno=105)
12-22 13:04 DEBUG    stack ['$134binary_subscr.5', '$128binary_subscr.2']
12-22 13:04 DEBUG    dispatch pc=140, inst=LOAD_FAST(arg=3, lineno=105)
12-22 13:04 DEBUG    stack ['$134binary_subscr.5', '$128binary_subscr.2', '$R138.6']
12-22 13:04 DEBUG    dispatch pc=142, inst=STORE_SUBSCR(arg=None, lineno=105)
12-22 13:04 DEBUG    stack ['$134binary_subscr.5', '$128binary_subscr.2', '$R138.6', '$high140.7']
12-22 13:04 DEBUG    dispatch pc=144, inst=LOAD_FAST(arg=1, lineno=105)
12-22 13:04 DEBUG    stack ['$134binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=146, inst=LOAD_FAST(arg=4, lineno=105)
12-22 13:04 DEBUG    stack ['$134binary_subscr.5', '$R144.8']
12-22 13:04 DEBUG    dispatch pc=148, inst=STORE_SUBSCR(arg=None, lineno=105)
12-22 13:04 DEBUG    stack ['$134binary_subscr.5', '$R144.8', '$mid146.9']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=150, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=150 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=150, inst=LOAD_DEREF(arg=1, lineno=106)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=152, inst=LOAD_DEREF(arg=0, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0']
12-22 13:04 DEBUG    dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$152load_deref.1']
12-22 13:04 DEBUG    dispatch pc=156, inst=LOAD_FAST(arg=1, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$152load_deref.1', '$A154.2']
12-22 13:04 DEBUG    dispatch pc=158, inst=LOAD_FAST(arg=4, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$152load_deref.1', '$A154.2', '$R156.3']
12-22 13:04 DEBUG    dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$152load_deref.1', '$A154.2', '$R156.3', '$mid158.4']
12-22 13:04 DEBUG    dispatch pc=162, inst=CALL_FUNCTION(arg=2, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$152load_deref.1', '$A154.2', '$160binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=164, inst=LOAD_DEREF(arg=0, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$162call_function.6']
12-22 13:04 DEBUG    dispatch pc=166, inst=LOAD_FAST(arg=0, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$162call_function.6', '$164load_deref.7']
12-22 13:04 DEBUG    dispatch pc=168, inst=LOAD_FAST(arg=1, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$162call_function.6', '$164load_deref.7', '$A166.8']
12-22 13:04 DEBUG    dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$162call_function.6', '$164load_deref.7', '$A166.8', '$R168.9']
12-22 13:04 DEBUG    dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$162call_function.6', '$164load_deref.7', '$A166.8', '$R168.9', '$low170.10']
12-22 13:04 DEBUG    dispatch pc=174, inst=CALL_FUNCTION(arg=2, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$162call_function.6', '$164load_deref.7', '$A166.8', '$172binary_subscr.11']
12-22 13:04 DEBUG    dispatch pc=176, inst=CALL_FUNCTION(arg=2, lineno=106)
12-22 13:04 DEBUG    stack ['$150load_deref.0', '$162call_function.6', '$174call_function.12']
12-22 13:04 DEBUG    dispatch pc=178, inst=POP_JUMP_IF_FALSE(arg=206, lineno=106)
12-22 13:04 DEBUG    stack ['$176call_function.13']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=180, stack=(), blockstack=(), npush=0), Edge(pc=206, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=206 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=206 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=180 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=180, inst=LOAD_FAST(arg=1, lineno=107)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=182, inst=LOAD_FAST(arg=4, lineno=107)
12-22 13:04 DEBUG    stack ['$R180.0']
12-22 13:04 DEBUG    dispatch pc=184, inst=BINARY_SUBSCR(arg=None, lineno=107)
12-22 13:04 DEBUG    stack ['$R180.0', '$mid182.1']
12-22 13:04 DEBUG    dispatch pc=186, inst=LOAD_FAST(arg=1, lineno=107)
12-22 13:04 DEBUG    stack ['$184binary_subscr.2']
12-22 13:04 DEBUG    dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=107)
12-22 13:04 DEBUG    stack ['$184binary_subscr.2', '$R186.3']
12-22 13:04 DEBUG    dispatch pc=190, inst=BINARY_SUBSCR(arg=None, lineno=107)
12-22 13:04 DEBUG    stack ['$184binary_subscr.2', '$R186.3', '$low188.4']
12-22 13:04 DEBUG    dispatch pc=192, inst=ROT_TWO(arg=None, lineno=107)
12-22 13:04 DEBUG    stack ['$184binary_subscr.2', '$190binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=107)
12-22 13:04 DEBUG    stack ['$190binary_subscr.5', '$184binary_subscr.2']
12-22 13:04 DEBUG    dispatch pc=196, inst=LOAD_FAST(arg=2, lineno=107)
12-22 13:04 DEBUG    stack ['$190binary_subscr.5', '$184binary_subscr.2', '$R194.6']
12-22 13:04 DEBUG    dispatch pc=198, inst=STORE_SUBSCR(arg=None, lineno=107)
12-22 13:04 DEBUG    stack ['$190binary_subscr.5', '$184binary_subscr.2', '$R194.6', '$low196.7']
12-22 13:04 DEBUG    dispatch pc=200, inst=LOAD_FAST(arg=1, lineno=107)
12-22 13:04 DEBUG    stack ['$190binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=202, inst=LOAD_FAST(arg=4, lineno=107)
12-22 13:04 DEBUG    stack ['$190binary_subscr.5', '$R200.8']
12-22 13:04 DEBUG    dispatch pc=204, inst=STORE_SUBSCR(arg=None, lineno=107)
12-22 13:04 DEBUG    stack ['$190binary_subscr.5', '$R200.8', '$mid202.9']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=206, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=206 nstack_initial=0), State(pc_initial=206 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=206 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=206, inst=LOAD_DEREF(arg=0, lineno=108)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=108)
12-22 13:04 DEBUG    stack ['$206load_deref.0']
12-22 13:04 DEBUG    dispatch pc=210, inst=LOAD_FAST(arg=1, lineno=108)
12-22 13:04 DEBUG    stack ['$206load_deref.0', '$A208.1']
12-22 13:04 DEBUG    dispatch pc=212, inst=LOAD_FAST(arg=4, lineno=108)
12-22 13:04 DEBUG    stack ['$206load_deref.0', '$A208.1', '$R210.2']
12-22 13:04 DEBUG    dispatch pc=214, inst=BINARY_SUBSCR(arg=None, lineno=108)
12-22 13:04 DEBUG    stack ['$206load_deref.0', '$A208.1', '$R210.2', '$mid212.3']
12-22 13:04 DEBUG    dispatch pc=216, inst=CALL_FUNCTION(arg=2, lineno=108)
12-22 13:04 DEBUG    stack ['$206load_deref.0', '$A208.1', '$214binary_subscr.4']
12-22 13:04 DEBUG    dispatch pc=218, inst=STORE_FAST(arg=5, lineno=108)
12-22 13:04 DEBUG    stack ['$216call_function.5']
12-22 13:04 DEBUG    dispatch pc=220, inst=LOAD_FAST(arg=1, lineno=111)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=222, inst=LOAD_FAST(arg=4, lineno=111)
12-22 13:04 DEBUG    stack ['$R220.6']
12-22 13:04 DEBUG    dispatch pc=224, inst=BINARY_SUBSCR(arg=None, lineno=111)
12-22 13:04 DEBUG    stack ['$R220.6', '$mid222.7']
12-22 13:04 DEBUG    dispatch pc=226, inst=LOAD_FAST(arg=1, lineno=111)
12-22 13:04 DEBUG    stack ['$224binary_subscr.8']
12-22 13:04 DEBUG    dispatch pc=228, inst=LOAD_FAST(arg=3, lineno=111)
12-22 13:04 DEBUG    stack ['$224binary_subscr.8', '$R226.9']
12-22 13:04 DEBUG    dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=111)
12-22 13:04 DEBUG    stack ['$224binary_subscr.8', '$R226.9', '$high228.10']
12-22 13:04 DEBUG    dispatch pc=232, inst=ROT_TWO(arg=None, lineno=111)
12-22 13:04 DEBUG    stack ['$224binary_subscr.8', '$230binary_subscr.11']
12-22 13:04 DEBUG    dispatch pc=234, inst=LOAD_FAST(arg=1, lineno=111)
12-22 13:04 DEBUG    stack ['$230binary_subscr.11', '$224binary_subscr.8']
12-22 13:04 DEBUG    dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=111)
12-22 13:04 DEBUG    stack ['$230binary_subscr.11', '$224binary_subscr.8', '$R234.12']
12-22 13:04 DEBUG    dispatch pc=238, inst=STORE_SUBSCR(arg=None, lineno=111)
12-22 13:04 DEBUG    stack ['$230binary_subscr.11', '$224binary_subscr.8', '$R234.12', '$high236.13']
12-22 13:04 DEBUG    dispatch pc=240, inst=LOAD_FAST(arg=1, lineno=111)
12-22 13:04 DEBUG    stack ['$230binary_subscr.11']
12-22 13:04 DEBUG    dispatch pc=242, inst=LOAD_FAST(arg=4, lineno=111)
12-22 13:04 DEBUG    stack ['$230binary_subscr.11', '$R240.14']
12-22 13:04 DEBUG    dispatch pc=244, inst=STORE_SUBSCR(arg=None, lineno=111)
12-22 13:04 DEBUG    stack ['$230binary_subscr.11', '$R240.14', '$mid242.15']
12-22 13:04 DEBUG    dispatch pc=246, inst=LOAD_FAST(arg=2, lineno=112)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=248, inst=STORE_FAST(arg=6, lineno=112)
12-22 13:04 DEBUG    stack ['$low246.16']
12-22 13:04 DEBUG    dispatch pc=250, inst=LOAD_FAST(arg=3, lineno=113)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=252, inst=LOAD_CONST(arg=2, lineno=113)
12-22 13:04 DEBUG    stack ['$high250.17']
12-22 13:04 DEBUG    dispatch pc=254, inst=BINARY_SUBTRACT(arg=None, lineno=113)
12-22 13:04 DEBUG    stack ['$high250.17', '$const252.18']
12-22 13:04 DEBUG    dispatch pc=256, inst=STORE_FAST(arg=7, lineno=113)
12-22 13:04 DEBUG    stack ['$254binary_subtract.19']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=258, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=206 nstack_initial=0), State(pc_initial=258 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=258 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=258 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=258, inst=LOAD_FAST(arg=6, lineno=115)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=260, inst=LOAD_FAST(arg=3, lineno=115)
12-22 13:04 DEBUG    stack ['$i258.0']
12-22 13:04 DEBUG    dispatch pc=262, inst=COMPARE_OP(arg=0, lineno=115)
12-22 13:04 DEBUG    stack ['$i258.0', '$high260.1']
12-22 13:04 DEBUG    dispatch pc=264, inst=NOP(arg=1, lineno=115)
12-22 13:04 DEBUG    stack ['$262compare_op.2']
12-22 13:04 DEBUG    dispatch pc=266, inst=POP_JUMP_IF_FALSE(arg=302, lineno=115)
12-22 13:04 DEBUG    stack ['$262compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=268, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=268 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=268 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=268, inst=LOAD_DEREF(arg=1, lineno=115)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=270, inst=LOAD_DEREF(arg=0, lineno=115)
12-22 13:04 DEBUG    stack ['$268load_deref.0']
12-22 13:04 DEBUG    dispatch pc=272, inst=LOAD_FAST(arg=0, lineno=115)
12-22 13:04 DEBUG    stack ['$268load_deref.0', '$270load_deref.1']
12-22 13:04 DEBUG    dispatch pc=274, inst=LOAD_FAST(arg=1, lineno=115)
12-22 13:04 DEBUG    stack ['$268load_deref.0', '$270load_deref.1', '$A272.2']
12-22 13:04 DEBUG    dispatch pc=276, inst=LOAD_FAST(arg=6, lineno=115)
12-22 13:04 DEBUG    stack ['$268load_deref.0', '$270load_deref.1', '$A272.2', '$R274.3']
12-22 13:04 DEBUG    dispatch pc=278, inst=BINARY_SUBSCR(arg=None, lineno=115)
12-22 13:04 DEBUG    stack ['$268load_deref.0', '$270load_deref.1', '$A272.2', '$R274.3', '$i276.4']
12-22 13:04 DEBUG    dispatch pc=280, inst=CALL_FUNCTION(arg=2, lineno=115)
12-22 13:04 DEBUG    stack ['$268load_deref.0', '$270load_deref.1', '$A272.2', '$278binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=282, inst=LOAD_FAST(arg=5, lineno=115)
12-22 13:04 DEBUG    stack ['$268load_deref.0', '$280call_function.6']
12-22 13:04 DEBUG    dispatch pc=284, inst=CALL_FUNCTION(arg=2, lineno=115)
12-22 13:04 DEBUG    stack ['$268load_deref.0', '$280call_function.6', '$pivot282.7']
12-22 13:04 DEBUG    dispatch pc=286, inst=NOP(arg=1, lineno=115)
12-22 13:04 DEBUG    stack ['$284call_function.8']
12-22 13:04 DEBUG    dispatch pc=288, inst=POP_JUMP_IF_FALSE(arg=302, lineno=115)
12-22 13:04 DEBUG    stack ['$284call_function.8']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=290, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=290 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=302 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=302, inst=LOAD_FAST(arg=7, lineno=117)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=304, inst=LOAD_FAST(arg=2, lineno=117)
12-22 13:04 DEBUG    stack ['$j302.0']
12-22 13:04 DEBUG    dispatch pc=306, inst=COMPARE_OP(arg=5, lineno=117)
12-22 13:04 DEBUG    stack ['$j302.0', '$low304.1']
12-22 13:04 DEBUG    dispatch pc=308, inst=NOP(arg=1, lineno=117)
12-22 13:04 DEBUG    stack ['$306compare_op.2']
12-22 13:04 DEBUG    dispatch pc=310, inst=POP_JUMP_IF_FALSE(arg=346, lineno=117)
12-22 13:04 DEBUG    stack ['$306compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=346, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=290 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=312 nstack_initial=0), State(pc_initial=346 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=290 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=290, inst=LOAD_FAST(arg=6, lineno=116)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=292, inst=LOAD_CONST(arg=2, lineno=116)
12-22 13:04 DEBUG    stack ['$i290.0']
12-22 13:04 DEBUG    dispatch pc=294, inst=INPLACE_ADD(arg=None, lineno=116)
12-22 13:04 DEBUG    stack ['$i290.0', '$const292.1']
12-22 13:04 DEBUG    dispatch pc=296, inst=STORE_FAST(arg=6, lineno=116)
12-22 13:04 DEBUG    stack ['$294inplace_add.2']
12-22 13:04 DEBUG    dispatch pc=298, inst=NOP(arg=1, lineno=116)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=300, inst=JUMP_ABSOLUTE(arg=258, lineno=116)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=258, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=312 nstack_initial=0), State(pc_initial=346 nstack_initial=0), State(pc_initial=258 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=346 nstack_initial=0), State(pc_initial=258 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=312 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=312, inst=LOAD_DEREF(arg=1, lineno=117)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=314, inst=LOAD_FAST(arg=5, lineno=117)
12-22 13:04 DEBUG    stack ['$312load_deref.0']
12-22 13:04 DEBUG    dispatch pc=316, inst=LOAD_DEREF(arg=0, lineno=117)
12-22 13:04 DEBUG    stack ['$312load_deref.0', '$pivot314.1']
12-22 13:04 DEBUG    dispatch pc=318, inst=LOAD_FAST(arg=0, lineno=117)
12-22 13:04 DEBUG    stack ['$312load_deref.0', '$pivot314.1', '$316load_deref.2']
12-22 13:04 DEBUG    dispatch pc=320, inst=LOAD_FAST(arg=1, lineno=117)
12-22 13:04 DEBUG    stack ['$312load_deref.0', '$pivot314.1', '$316load_deref.2', '$A318.3']
12-22 13:04 DEBUG    dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=117)
12-22 13:04 DEBUG    stack ['$312load_deref.0', '$pivot314.1', '$316load_deref.2', '$A318.3', '$R320.4']
12-22 13:04 DEBUG    dispatch pc=324, inst=BINARY_SUBSCR(arg=None, lineno=117)
12-22 13:04 DEBUG    stack ['$312load_deref.0', '$pivot314.1', '$316load_deref.2', '$A318.3', '$R320.4', '$j322.5']
12-22 13:04 DEBUG    dispatch pc=326, inst=CALL_FUNCTION(arg=2, lineno=117)
12-22 13:04 DEBUG    stack ['$312load_deref.0', '$pivot314.1', '$316load_deref.2', '$A318.3', '$324binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=328, inst=CALL_FUNCTION(arg=2, lineno=117)
12-22 13:04 DEBUG    stack ['$312load_deref.0', '$pivot314.1', '$326call_function.7']
12-22 13:04 DEBUG    dispatch pc=330, inst=NOP(arg=1, lineno=117)
12-22 13:04 DEBUG    stack ['$328call_function.8']
12-22 13:04 DEBUG    dispatch pc=332, inst=POP_JUMP_IF_FALSE(arg=346, lineno=117)
12-22 13:04 DEBUG    stack ['$328call_function.8']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=334, stack=(), blockstack=(), npush=0), Edge(pc=346, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=346 nstack_initial=0), State(pc_initial=258 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=346 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=346 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=346, inst=LOAD_FAST(arg=6, lineno=119)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=348, inst=LOAD_FAST(arg=7, lineno=119)
12-22 13:04 DEBUG    stack ['$i346.0']
12-22 13:04 DEBUG    dispatch pc=350, inst=COMPARE_OP(arg=5, lineno=119)
12-22 13:04 DEBUG    stack ['$i346.0', '$j348.1']
12-22 13:04 DEBUG    dispatch pc=352, inst=NOP(arg=1, lineno=119)
12-22 13:04 DEBUG    stack ['$350compare_op.2']
12-22 13:04 DEBUG    dispatch pc=354, inst=POP_JUMP_IF_FALSE(arg=360, lineno=119)
12-22 13:04 DEBUG    stack ['$350compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=356, stack=(), blockstack=(), npush=0), Edge(pc=360, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=258 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=346 nstack_initial=0), State(pc_initial=356 nstack_initial=0), State(pc_initial=360 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=346 nstack_initial=0), State(pc_initial=356 nstack_initial=0), State(pc_initial=360 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=334 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=334, inst=LOAD_FAST(arg=7, lineno=118)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=336, inst=LOAD_CONST(arg=2, lineno=118)
12-22 13:04 DEBUG    stack ['$j334.0']
12-22 13:04 DEBUG    dispatch pc=338, inst=INPLACE_SUBTRACT(arg=None, lineno=118)
12-22 13:04 DEBUG    stack ['$j334.0', '$const336.1']
12-22 13:04 DEBUG    dispatch pc=340, inst=STORE_FAST(arg=7, lineno=118)
12-22 13:04 DEBUG    stack ['$338inplace_subtract.2']
12-22 13:04 DEBUG    dispatch pc=342, inst=NOP(arg=1, lineno=118)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=344, inst=JUMP_ABSOLUTE(arg=302, lineno=118)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=302, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=346 nstack_initial=0), State(pc_initial=356 nstack_initial=0), State(pc_initial=360 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=356 nstack_initial=0), State(pc_initial=360 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=356 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=356, inst=NOP(arg=1, lineno=120)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=358, inst=JUMP_ABSOLUTE(arg=406, lineno=120)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=406, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=360 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=406 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=360 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=360, inst=LOAD_FAST(arg=1, lineno=121)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=362, inst=LOAD_FAST(arg=7, lineno=121)
12-22 13:04 DEBUG    stack ['$R360.0']
12-22 13:04 DEBUG    dispatch pc=364, inst=BINARY_SUBSCR(arg=None, lineno=121)
12-22 13:04 DEBUG    stack ['$R360.0', '$j362.1']
12-22 13:04 DEBUG    dispatch pc=366, inst=LOAD_FAST(arg=1, lineno=121)
12-22 13:04 DEBUG    stack ['$364binary_subscr.2']
12-22 13:04 DEBUG    dispatch pc=368, inst=LOAD_FAST(arg=6, lineno=121)
12-22 13:04 DEBUG    stack ['$364binary_subscr.2', '$R366.3']
12-22 13:04 DEBUG    dispatch pc=370, inst=BINARY_SUBSCR(arg=None, lineno=121)
12-22 13:04 DEBUG    stack ['$364binary_subscr.2', '$R366.3', '$i368.4']
12-22 13:04 DEBUG    dispatch pc=372, inst=ROT_TWO(arg=None, lineno=121)
12-22 13:04 DEBUG    stack ['$364binary_subscr.2', '$370binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=374, inst=LOAD_FAST(arg=1, lineno=121)
12-22 13:04 DEBUG    stack ['$370binary_subscr.5', '$364binary_subscr.2']
12-22 13:04 DEBUG    dispatch pc=376, inst=LOAD_FAST(arg=6, lineno=121)
12-22 13:04 DEBUG    stack ['$370binary_subscr.5', '$364binary_subscr.2', '$R374.6']
12-22 13:04 DEBUG    dispatch pc=378, inst=STORE_SUBSCR(arg=None, lineno=121)
12-22 13:04 DEBUG    stack ['$370binary_subscr.5', '$364binary_subscr.2', '$R374.6', '$i376.7']
12-22 13:04 DEBUG    dispatch pc=380, inst=LOAD_FAST(arg=1, lineno=121)
12-22 13:04 DEBUG    stack ['$370binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=382, inst=LOAD_FAST(arg=7, lineno=121)
12-22 13:04 DEBUG    stack ['$370binary_subscr.5', '$R380.8']
12-22 13:04 DEBUG    dispatch pc=384, inst=STORE_SUBSCR(arg=None, lineno=121)
12-22 13:04 DEBUG    stack ['$370binary_subscr.5', '$R380.8', '$j382.9']
12-22 13:04 DEBUG    dispatch pc=386, inst=LOAD_FAST(arg=6, lineno=122)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=388, inst=LOAD_CONST(arg=2, lineno=122)
12-22 13:04 DEBUG    stack ['$i386.10']
12-22 13:04 DEBUG    dispatch pc=390, inst=INPLACE_ADD(arg=None, lineno=122)
12-22 13:04 DEBUG    stack ['$i386.10', '$const388.11']
12-22 13:04 DEBUG    dispatch pc=392, inst=STORE_FAST(arg=6, lineno=122)
12-22 13:04 DEBUG    stack ['$390inplace_add.12']
12-22 13:04 DEBUG    dispatch pc=394, inst=LOAD_FAST(arg=7, lineno=123)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=396, inst=LOAD_CONST(arg=2, lineno=123)
12-22 13:04 DEBUG    stack ['$j394.13']
12-22 13:04 DEBUG    dispatch pc=398, inst=INPLACE_SUBTRACT(arg=None, lineno=123)
12-22 13:04 DEBUG    stack ['$j394.13', '$const396.14']
12-22 13:04 DEBUG    dispatch pc=400, inst=STORE_FAST(arg=7, lineno=123)
12-22 13:04 DEBUG    stack ['$398inplace_subtract.15']
12-22 13:04 DEBUG    dispatch pc=402, inst=NOP(arg=1, lineno=123)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=404, inst=JUMP_ABSOLUTE(arg=258, lineno=123)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=258, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=406 nstack_initial=0), State(pc_initial=258 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=406 nstack_initial=0), State(pc_initial=258 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=406 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=406, inst=LOAD_FAST(arg=1, lineno=126)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=408, inst=LOAD_FAST(arg=3, lineno=126)
12-22 13:04 DEBUG    stack ['$R406.0']
12-22 13:04 DEBUG    dispatch pc=410, inst=BINARY_SUBSCR(arg=None, lineno=126)
12-22 13:04 DEBUG    stack ['$R406.0', '$high408.1']
12-22 13:04 DEBUG    dispatch pc=412, inst=LOAD_FAST(arg=1, lineno=126)
12-22 13:04 DEBUG    stack ['$410binary_subscr.2']
12-22 13:04 DEBUG    dispatch pc=414, inst=LOAD_FAST(arg=6, lineno=126)
12-22 13:04 DEBUG    stack ['$410binary_subscr.2', '$R412.3']
12-22 13:04 DEBUG    dispatch pc=416, inst=BINARY_SUBSCR(arg=None, lineno=126)
12-22 13:04 DEBUG    stack ['$410binary_subscr.2', '$R412.3', '$i414.4']
12-22 13:04 DEBUG    dispatch pc=418, inst=ROT_TWO(arg=None, lineno=126)
12-22 13:04 DEBUG    stack ['$410binary_subscr.2', '$416binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=420, inst=LOAD_FAST(arg=1, lineno=126)
12-22 13:04 DEBUG    stack ['$416binary_subscr.5', '$410binary_subscr.2']
12-22 13:04 DEBUG    dispatch pc=422, inst=LOAD_FAST(arg=6, lineno=126)
12-22 13:04 DEBUG    stack ['$416binary_subscr.5', '$410binary_subscr.2', '$R420.6']
12-22 13:04 DEBUG    dispatch pc=424, inst=STORE_SUBSCR(arg=None, lineno=126)
12-22 13:04 DEBUG    stack ['$416binary_subscr.5', '$410binary_subscr.2', '$R420.6', '$i422.7']
12-22 13:04 DEBUG    dispatch pc=426, inst=LOAD_FAST(arg=1, lineno=126)
12-22 13:04 DEBUG    stack ['$416binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=428, inst=LOAD_FAST(arg=3, lineno=126)
12-22 13:04 DEBUG    stack ['$416binary_subscr.5', '$R426.8']
12-22 13:04 DEBUG    dispatch pc=430, inst=STORE_SUBSCR(arg=None, lineno=126)
12-22 13:04 DEBUG    stack ['$416binary_subscr.5', '$R426.8', '$high428.9']
12-22 13:04 DEBUG    dispatch pc=432, inst=LOAD_FAST(arg=6, lineno=127)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=434, inst=RETURN_VALUE(arg=None, lineno=127)
12-22 13:04 DEBUG    stack ['$i432.10']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=258 nstack_initial=0)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=206 nstack_initial=0): set(),
             State(pc_initial=258 nstack_initial=0): set(),
             State(pc_initial=268 nstack_initial=0): set(),
             State(pc_initial=290 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=334 nstack_initial=0): set(),
             State(pc_initial=346 nstack_initial=0): set(),
             State(pc_initial=356 nstack_initial=0): set(),
             State(pc_initial=360 nstack_initial=0): set(),
             State(pc_initial=406 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$low2.0'}), (4, {'res': '$const4.1'}), (6, {'lhs': '$low2.0', 'rhs': '$const4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$10load_global.0'}), (12, {'exc': '$10load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$high14.0'}), (16, {'res': '$low16.1'}), (18, {'lhs': '$high14.0', 'rhs': '$low16.1', 'res': '$18compare_op.2'}), (20, {'pred': '$18compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 26: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$22load_global.0'}), (24, {'exc': '$22load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$low26.0'}), (28, {'res': '$high28.1'}), (30, {'lhs': '$low26.0', 'rhs': '$high28.1', 'res': '$30binary_add.2'}), (32, {'res': '$const32.3'}), (34, {'lhs': '$30binary_add.2', 'rhs': '$const32.3', 'res': '$34binary_rshift.4'}), (36, {'value': '$34binary_rshift.4'}), (38, {'res': '$38load_deref.5'}), (40, {'res': '$40load_deref.6'}), (42, {'res': '$A42.7'}), (44, {'res': '$R44.8'}), (46, {'res': '$mid46.9'}), (48, {'index': '$mid46.9', 'target': '$R44.8', 'res': '$48binary_subscr.10'}), (50, {'func': '$40load_deref.6', 'args': ['$A42.7', '$48binary_subscr.10'], 'res': '$50call_function.11'}), (52, {'res': '$52load_deref.12'}), (54, {'res': '$A54.13'}), (56, {'res': '$R56.14'}), (58, {'res': '$low58.15'}), (60, {'index': '$low58.15', 'target': '$R56.14', 'res': '$60binary_subscr.16'}), (62, {'func': '$52load_deref.12', 'args': ['$A54.13', '$60binary_subscr.16'], 'res': '$62call_function.17'}), (64, {'func': '$38load_deref.5', 'args': ['$50call_function.11', '$62call_function.17'], 'res': '$64call_function.18'}), (66, {'pred': '$64call_function.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 94: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$R68.0'}), (70, {'res': '$mid70.1'}), (72, {'index': '$mid70.1', 'target': '$R68.0', 'res': '$72binary_subscr.2'}), (74, {'res': '$R74.3'}), (76, {'res': '$low76.4'}), (78, {'index': '$low76.4', 'target': '$R74.3', 'res': '$78binary_subscr.5'}), (82, {'res': '$R82.6'}), (84, {'res': '$low84.7'}), (86, {'target': '$R82.6', 'index': '$low84.7', 'value': '$72binary_subscr.2'}), (88, {'res': '$R88.8'}), (90, {'res': '$mid90.9'}), (92, {'target': '$R88.8', 'index': '$mid90.9', 'value': '$78binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$94load_deref.0'}), (96, {'res': '$96load_deref.1'}), (98, {'res': '$A98.2'}), (100, {'res': '$R100.3'}), (102, {'res': '$high102.4'}), (104, {'index': '$high102.4', 'target': '$R100.3', 'res': '$104binary_subscr.5'}), (106, {'func': '$96load_deref.1', 'args': ['$A98.2', '$104binary_subscr.5'], 'res': '$106call_function.6'}), (108, {'res': '$108load_deref.7'}), (110, {'res': '$A110.8'}), (112, {'res': '$R112.9'}), (114, {'res': '$mid114.10'}), (116, {'index': '$mid114.10', 'target': '$R112.9', 'res': '$116binary_subscr.11'}), (118, {'func': '$108load_deref.7', 'args': ['$A110.8', '$116binary_subscr.11'], 'res': '$118call_function.12'}), (120, {'func': '$94load_deref.0', 'args': ['$106call_function.6', '$118call_function.12'], 'res': '$120call_function.13'}), (122, {'pred': '$120call_function.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: (), 150: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$R124.0'}), (126, {'res': '$mid126.1'}), (128, {'index': '$mid126.1', 'target': '$R124.0', 'res': '$128binary_subscr.2'}), (130, {'res': '$R130.3'}), (132, {'res': '$high132.4'}), (134, {'index': '$high132.4', 'target': '$R130.3', 'res': '$134binary_subscr.5'}), (138, {'res': '$R138.6'}), (140, {'res': '$high140.7'}), (142, {'target': '$R138.6', 'index': '$high140.7', 'value': '$128binary_subscr.2'}), (144, {'res': '$R144.8'}), (146, {'res': '$mid146.9'}), (148, {'target': '$R144.8', 'index': '$mid146.9', 'value': '$134binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={150: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$150load_deref.0'}), (152, {'res': '$152load_deref.1'}), (154, {'res': '$A154.2'}), (156, {'res': '$R156.3'}), (158, {'res': '$mid158.4'}), (160, {'index': '$mid158.4', 'target': '$R156.3', 'res': '$160binary_subscr.5'}), (162, {'func': '$152load_deref.1', 'args': ['$A154.2', '$160binary_subscr.5'], 'res': '$162call_function.6'}), (164, {'res': '$164load_deref.7'}), (166, {'res': '$A166.8'}), (168, {'res': '$R168.9'}), (170, {'res': '$low170.10'}), (172, {'index': '$low170.10', 'target': '$R168.9', 'res': '$172binary_subscr.11'}), (174, {'func': '$164load_deref.7', 'args': ['$A166.8', '$172binary_subscr.11'], 'res': '$174call_function.12'}), (176, {'func': '$150load_deref.0', 'args': ['$162call_function.6', '$174call_function.12'], 'res': '$176call_function.13'}), (178, {'pred': '$176call_function.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={180: (), 206: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {'res': '$R180.0'}), (182, {'res': '$mid182.1'}), (184, {'index': '$mid182.1', 'target': '$R180.0', 'res': '$184binary_subscr.2'}), (186, {'res': '$R186.3'}), (188, {'res': '$low188.4'}), (190, {'index': '$low188.4', 'target': '$R186.3', 'res': '$190binary_subscr.5'}), (194, {'res': '$R194.6'}), (196, {'res': '$low196.7'}), (198, {'target': '$R194.6', 'index': '$low196.7', 'value': '$184binary_subscr.2'}), (200, {'res': '$R200.8'}), (202, {'res': '$mid202.9'}), (204, {'target': '$R200.8', 'index': '$mid202.9', 'value': '$190binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={206: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=206 nstack_initial=0):
AdaptBlockInfo(insts=((206, {'res': '$206load_deref.0'}), (208, {'res': '$A208.1'}), (210, {'res': '$R210.2'}), (212, {'res': '$mid212.3'}), (214, {'index': '$mid212.3', 'target': '$R210.2', 'res': '$214binary_subscr.4'}), (216, {'func': '$206load_deref.0', 'args': ['$A208.1', '$214binary_subscr.4'], 'res': '$216call_function.5'}), (218, {'value': '$216call_function.5'}), (220, {'res': '$R220.6'}), (222, {'res': '$mid222.7'}), (224, {'index': '$mid222.7', 'target': '$R220.6', 'res': '$224binary_subscr.8'}), (226, {'res': '$R226.9'}), (228, {'res': '$high228.10'}), (230, {'index': '$high228.10', 'target': '$R226.9', 'res': '$230binary_subscr.11'}), (234, {'res': '$R234.12'}), (236, {'res': '$high236.13'}), (238, {'target': '$R234.12', 'index': '$high236.13', 'value': '$224binary_subscr.8'}), (240, {'res': '$R240.14'}), (242, {'res': '$mid242.15'}), (244, {'target': '$R240.14', 'index': '$mid242.15', 'value': '$230binary_subscr.11'}), (246, {'res': '$low246.16'}), (248, {'value': '$low246.16'}), (250, {'res': '$high250.17'}), (252, {'res': '$const252.18'}), (254, {'lhs': '$high250.17', 'rhs': '$const252.18', 'res': '$254binary_subtract.19'}), (256, {'value': '$254binary_subtract.19'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={258: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=258 nstack_initial=0):
AdaptBlockInfo(insts=((258, {'res': '$i258.0'}), (260, {'res': '$high260.1'}), (262, {'lhs': '$i258.0', 'rhs': '$high260.1', 'res': '$262compare_op.2'}), (264, {}), (266, {'pred': '$262compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={268: (), 302: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=268 nstack_initial=0):
AdaptBlockInfo(insts=((268, {'res': '$268load_deref.0'}), (270, {'res': '$270load_deref.1'}), (272, {'res': '$A272.2'}), (274, {'res': '$R274.3'}), (276, {'res': '$i276.4'}), (278, {'index': '$i276.4', 'target': '$R274.3', 'res': '$278binary_subscr.5'}), (280, {'func': '$270load_deref.1', 'args': ['$A272.2', '$278binary_subscr.5'], 'res': '$280call_function.6'}), (282, {'res': '$pivot282.7'}), (284, {'func': '$268load_deref.0', 'args': ['$280call_function.6', '$pivot282.7'], 'res': '$284call_function.8'}), (286, {}), (288, {'pred': '$284call_function.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={290: (), 302: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=290 nstack_initial=0):
AdaptBlockInfo(insts=((290, {'res': '$i290.0'}), (292, {'res': '$const292.1'}), (294, {'lhs': '$i290.0', 'rhs': '$const292.1', 'res': '$294inplace_add.2'}), (296, {'value': '$294inplace_add.2'}), (298, {}), (300, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={258: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$j302.0'}), (304, {'res': '$low304.1'}), (306, {'lhs': '$j302.0', 'rhs': '$low304.1', 'res': '$306compare_op.2'}), (308, {}), (310, {'pred': '$306compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 346: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$312load_deref.0'}), (314, {'res': '$pivot314.1'}), (316, {'res': '$316load_deref.2'}), (318, {'res': '$A318.3'}), (320, {'res': '$R320.4'}), (322, {'res': '$j322.5'}), (324, {'index': '$j322.5', 'target': '$R320.4', 'res': '$324binary_subscr.6'}), (326, {'func': '$316load_deref.2', 'args': ['$A318.3', '$324binary_subscr.6'], 'res': '$326call_function.7'}), (328, {'func': '$312load_deref.0', 'args': ['$pivot314.1', '$326call_function.7'], 'res': '$328call_function.8'}), (330, {}), (332, {'pred': '$328call_function.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: (), 346: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=334 nstack_initial=0):
AdaptBlockInfo(insts=((334, {'res': '$j334.0'}), (336, {'res': '$const336.1'}), (338, {'lhs': '$j334.0', 'rhs': '$const336.1', 'res': '$338inplace_subtract.2'}), (340, {'value': '$338inplace_subtract.2'}), (342, {}), (344, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=346 nstack_initial=0):
AdaptBlockInfo(insts=((346, {'res': '$i346.0'}), (348, {'res': '$j348.1'}), (350, {'lhs': '$i346.0', 'rhs': '$j348.1', 'res': '$350compare_op.2'}), (352, {}), (354, {'pred': '$350compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={356: (), 360: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=356 nstack_initial=0):
AdaptBlockInfo(insts=((356, {}), (358, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={406: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=360 nstack_initial=0):
AdaptBlockInfo(insts=((360, {'res': '$R360.0'}), (362, {'res': '$j362.1'}), (364, {'index': '$j362.1', 'target': '$R360.0', 'res': '$364binary_subscr.2'}), (366, {'res': '$R366.3'}), (368, {'res': '$i368.4'}), (370, {'index': '$i368.4', 'target': '$R366.3', 'res': '$370binary_subscr.5'}), (374, {'res': '$R374.6'}), (376, {'res': '$i376.7'}), (378, {'target': '$R374.6', 'index': '$i376.7', 'value': '$364binary_subscr.2'}), (380, {'res': '$R380.8'}), (382, {'res': '$j382.9'}), (384, {'target': '$R380.8', 'index': '$j382.9', 'value': '$370binary_subscr.5'}), (386, {'res': '$i386.10'}), (388, {'res': '$const388.11'}), (390, {'lhs': '$i386.10', 'rhs': '$const388.11', 'res': '$390inplace_add.12'}), (392, {'value': '$390inplace_add.12'}), (394, {'res': '$j394.13'}), (396, {'res': '$const396.14'}), (398, {'lhs': '$j394.13', 'rhs': '$const396.14', 'res': '$398inplace_subtract.15'}), (400, {'value': '$398inplace_subtract.15'}), (402, {}), (404, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={258: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=406 nstack_initial=0):
AdaptBlockInfo(insts=((406, {'res': '$R406.0'}), (408, {'res': '$high408.1'}), (410, {'index': '$high408.1', 'target': '$R406.0', 'res': '$410binary_subscr.2'}), (412, {'res': '$R412.3'}), (414, {'res': '$i414.4'}), (416, {'index': '$i414.4', 'target': '$R412.3', 'res': '$416binary_subscr.5'}), (420, {'res': '$R420.6'}), (422, {'res': '$i422.7'}), (424, {'target': '$R420.6', 'index': '$i422.7', 'value': '$410binary_subscr.2'}), (426, {'res': '$R426.8'}), (428, {'res': '$high428.9'}), (430, {'target': '$R426.8', 'index': '$high428.9', 'value': '$416binary_subscr.5'}), (432, {'res': '$i432.10'}), (434, {'retval': '$i432.10', 'castval': '$434return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    A = arg(0, name=A)                       ['A']
    R = arg(1, name=R)                       ['R']
    low = arg(2, name=low)                   ['low']
    high = arg(3, name=high)                 ['high']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6compare_op.2 = low >= $const4.1        ['$6compare_op.2', '$const4.1', 'low']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 14, 10                    ['$8pred']
label 10:
    $10load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$10load_global.0']
    raise $10load_global.0                   ['$10load_global.0']
label 14:
    $18compare_op.2 = high > low             ['$18compare_op.2', 'high', 'low']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    branch $20pred, 26, 22                   ['$20pred']
label 22:
    $22load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$22load_global.0']
    raise $22load_global.0                   ['$22load_global.0']
label 26:
    $30binary_add.2 = low + high             ['$30binary_add.2', 'high', 'low']
    $const32.3 = const(int, 1)               ['$const32.3']
    mid = $30binary_add.2 >> $const32.3      ['$30binary_add.2', '$const32.3', 'mid']
    $38load_deref.5 = freevar(LT: <function lt_floats at 0x000001AEF1617310>) ['$38load_deref.5']
    $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>) ['$40load_deref.6']
    $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$48binary_subscr.10', 'R', 'mid']
    $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_deref.6', '$48binary_subscr.10', '$50call_function.11', 'A']
    $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>) ['$52load_deref.12']
    $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>) ['$60binary_subscr.16', 'R', 'low']
    $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_deref.12', '$60binary_subscr.16', '$62call_function.17', 'A']
    $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_deref.5', '$50call_function.11', '$62call_function.17', '$64call_function.18']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None) ['$64call_function.18', '$66pred', 'bool66']
    branch $66pred, 68, 94                   ['$66pred']
label 68:
    $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$72binary_subscr.2', 'R', 'mid']
    $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>) ['$78binary_subscr.5', 'R', 'low']
    R[low] = $72binary_subscr.2              ['$72binary_subscr.2', 'R', 'low']
    R[mid] = $78binary_subscr.5              ['$78binary_subscr.5', 'R', 'mid']
    jump 94                                  []
label 94:
    $94load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>) ['$94load_deref.0']
    $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>) ['$96load_deref.1']
    $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>) ['$104binary_subscr.5', 'R', 'high']
    $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None) ['$104binary_subscr.5', '$106call_function.6', '$96load_deref.1', 'A']
    $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>) ['$108load_deref.7']
    $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$116binary_subscr.11', 'R', 'mid']
    $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None) ['$108load_deref.7', '$116binary_subscr.11', '$118call_function.12', 'A']
    $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None) ['$106call_function.6', '$118call_function.12', '$120call_function.13', '$94load_deref.0']
    bool122 = global(bool: <class 'bool'>)   ['bool122']
    $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None) ['$120call_function.13', '$122pred', 'bool122']
    branch $122pred, 124, 150                ['$122pred']
label 124:
    $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$128binary_subscr.2', 'R', 'mid']
    $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>) ['$134binary_subscr.5', 'R', 'high']
    R[high] = $128binary_subscr.2            ['$128binary_subscr.2', 'R', 'high']
    R[mid] = $134binary_subscr.5             ['$134binary_subscr.5', 'R', 'mid']
    jump 150                                 []
label 150:
    $150load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>) ['$150load_deref.0']
    $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>) ['$152load_deref.1']
    $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$160binary_subscr.5', 'R', 'mid']
    $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_deref.1', '$160binary_subscr.5', '$162call_function.6', 'A']
    $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>) ['$164load_deref.7']
    $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>) ['$172binary_subscr.11', 'R', 'low']
    $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$164load_deref.7', '$172binary_subscr.11', '$174call_function.12', 'A']
    $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$150load_deref.0', '$162call_function.6', '$174call_function.12', '$176call_function.13']
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call_function.13', '$178pred', 'bool178']
    branch $178pred, 180, 206                ['$178pred']
label 180:
    $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$184binary_subscr.2', 'R', 'mid']
    $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>) ['$190binary_subscr.5', 'R', 'low']
    R[low] = $184binary_subscr.2             ['$184binary_subscr.2', 'R', 'low']
    R[mid] = $190binary_subscr.5             ['$190binary_subscr.5', 'R', 'mid']
    jump 206                                 []
label 206:
    $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>) ['$206load_deref.0']
    $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$214binary_subscr.4', 'R', 'mid']
    pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None) ['$206load_deref.0', '$214binary_subscr.4', 'A', 'pivot']
    $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>) ['$224binary_subscr.8', 'R', 'mid']
    $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>) ['$230binary_subscr.11', 'R', 'high']
    R[high] = $224binary_subscr.8            ['$224binary_subscr.8', 'R', 'high']
    R[mid] = $230binary_subscr.11            ['$230binary_subscr.11', 'R', 'mid']
    i = low                                  ['i', 'low']
    $const252.18 = const(int, 1)             ['$const252.18']
    j = high - $const252.18                  ['$const252.18', 'high', 'j']
    jump 258                                 []
label 258:
    $262compare_op.2 = i < high              ['$262compare_op.2', 'high', 'i']
    bool266 = global(bool: <class 'bool'>)   ['bool266']
    $266pred = call bool266($262compare_op.2, func=bool266, args=(Var($262compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None) ['$262compare_op.2', '$266pred', 'bool266']
    branch $266pred, 268, 302                ['$266pred']
label 268:
    $268load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>) ['$268load_deref.0']
    $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>) ['$270load_deref.1']
    $278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>) ['$278binary_subscr.5', 'R', 'i']
    $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None) ['$270load_deref.1', '$278binary_subscr.5', '$280call_function.6', 'A']
    $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None) ['$268load_deref.0', '$280call_function.6', '$284call_function.8', 'pivot']
    bool288 = global(bool: <class 'bool'>)   ['bool288']
    $288pred = call bool288($284call_function.8, func=bool288, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None) ['$284call_function.8', '$288pred', 'bool288']
    branch $288pred, 290, 302                ['$288pred']
label 290:
    $const292.1 = const(int, 1)              ['$const292.1']
    $294inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const292.1, static_lhs=Undefined, static_rhs=Undefined) ['$294inplace_add.2', '$const292.1', 'i']
    i = $294inplace_add.2                    ['$294inplace_add.2', 'i']
    jump 258                                 []
label 302:
    $306compare_op.2 = j >= low              ['$306compare_op.2', 'j', 'low']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($306compare_op.2, func=bool310, args=(Var($306compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None) ['$306compare_op.2', '$310pred', 'bool310']
    branch $310pred, 312, 346                ['$310pred']
label 312:
    $312load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>) ['$312load_deref.0']
    $316load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>) ['$316load_deref.2']
    $324binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>) ['$324binary_subscr.6', 'R', 'j']
    $326call_function.7 = call $316load_deref.2(A, $324binary_subscr.6, func=$316load_deref.2, args=[Var(A, quicksort.py:86), Var($324binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None) ['$316load_deref.2', '$324binary_subscr.6', '$326call_function.7', 'A']
    $328call_function.8 = call $312load_deref.0(pivot, $326call_function.7, func=$312load_deref.0, args=[Var(pivot, quicksort.py:108), Var($326call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None) ['$312load_deref.0', '$326call_function.7', '$328call_function.8', 'pivot']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($328call_function.8, func=bool332, args=(Var($328call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None) ['$328call_function.8', '$332pred', 'bool332']
    branch $332pred, 334, 346                ['$332pred']
label 334:
    $const336.1 = const(int, 1)              ['$const336.1']
    $338inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const336.1, static_lhs=Undefined, static_rhs=Undefined) ['$338inplace_subtract.2', '$const336.1', 'j']
    j = $338inplace_subtract.2               ['$338inplace_subtract.2', 'j']
    jump 302                                 []
label 346:
    $350compare_op.2 = i >= j                ['$350compare_op.2', 'i', 'j']
    bool354 = global(bool: <class 'bool'>)   ['bool354']
    $354pred = call bool354($350compare_op.2, func=bool354, args=(Var($350compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None) ['$350compare_op.2', '$354pred', 'bool354']
    branch $354pred, 356, 360                ['$354pred']
label 356:
    jump 406                                 []
label 360:
    $364binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>) ['$364binary_subscr.2', 'R', 'j']
    $370binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>) ['$370binary_subscr.5', 'R', 'i']
    R[i] = $364binary_subscr.2               ['$364binary_subscr.2', 'R', 'i']
    R[j] = $370binary_subscr.5               ['$370binary_subscr.5', 'R', 'j']
    $const388.11 = const(int, 1)             ['$const388.11']
    $390inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const388.11, static_lhs=Undefined, static_rhs=Undefined) ['$390inplace_add.12', '$const388.11', 'i']
    i = $390inplace_add.12                   ['$390inplace_add.12', 'i']
    $const396.14 = const(int, 1)             ['$const396.14']
    $398inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const396.14, static_lhs=Undefined, static_rhs=Undefined) ['$398inplace_subtract.15', '$const396.14', 'j']
    j = $398inplace_subtract.15              ['$398inplace_subtract.15', 'j']
    jump 258                                 []
label 406:
    $410binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>) ['$410binary_subscr.2', 'R', 'high']
    $416binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>) ['$416binary_subscr.5', 'R', 'i']
    R[i] = $410binary_subscr.2               ['$410binary_subscr.2', 'R', 'i']
    R[high] = $416binary_subscr.5            ['$416binary_subscr.5', 'R', 'high']
    $434return_value.11 = cast(value=i)      ['$434return_value.11', 'i']
    return $434return_value.11               ['$434return_value.11']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: R = arg(1, name=R)
12-22 13:04 DEBUG    on stmt: low = arg(2, name=low)
12-22 13:04 DEBUG    on stmt: high = arg(3, name=high)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = low >= $const4.1
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $8pred, 14, 10
12-22 13:04 DEBUG    ==== SSA block analysis pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $10load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block analysis pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $18compare_op.2 = high > low
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 26, 22
12-22 13:04 DEBUG    ==== SSA block analysis pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $22load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block analysis pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $30binary_add.2 = low + high
12-22 13:04 DEBUG    on stmt: $const32.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: mid = $30binary_add.2 >> $const32.3
12-22 13:04 DEBUG    on stmt: $38load_deref.5 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool66 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $66pred, 68, 94
12-22 13:04 DEBUG    ==== SSA block analysis pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[low] = $72binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $78binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 94
12-22 13:04 DEBUG    ==== SSA block analysis pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $94load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool122 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $122pred, 124, 150
12-22 13:04 DEBUG    ==== SSA block analysis pass on 124
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[high] = $128binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $134binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 150
12-22 13:04 DEBUG    ==== SSA block analysis pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $150load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool178 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $178pred, 180, 206
12-22 13:04 DEBUG    ==== SSA block analysis pass on 180
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[low] = $184binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $190binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 206
12-22 13:04 DEBUG    ==== SSA block analysis pass on 206
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[high] = $224binary_subscr.8
12-22 13:04 DEBUG    on stmt: R[mid] = $230binary_subscr.11
12-22 13:04 DEBUG    on stmt: i = low
12-22 13:04 DEBUG    on stmt: $const252.18 = const(int, 1)
12-22 13:04 DEBUG    on stmt: j = high - $const252.18
12-22 13:04 DEBUG    on stmt: jump 258
12-22 13:04 DEBUG    ==== SSA block analysis pass on 258
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $262compare_op.2 = i < high
12-22 13:04 DEBUG    on stmt: bool266 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $266pred = call bool266($262compare_op.2, func=bool266, args=(Var($262compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $266pred, 268, 302
12-22 13:04 DEBUG    ==== SSA block analysis pass on 268
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $268load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool288 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $288pred = call bool288($284call_function.8, func=bool288, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $288pred, 290, 302
12-22 13:04 DEBUG    ==== SSA block analysis pass on 290
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $const292.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $294inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const292.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: i = $294inplace_add.2
12-22 13:04 DEBUG    on stmt: jump 407
12-22 13:04 DEBUG    ==== SSA block analysis pass on 302
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $306compare_op.2 = j >= low
12-22 13:04 DEBUG    on stmt: bool310 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $310pred = call bool310($306compare_op.2, func=bool310, args=(Var($306compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $310pred, 312, 346
12-22 13:04 DEBUG    ==== SSA block analysis pass on 312
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $312load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $316load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $324binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326call_function.7 = call $316load_deref.2(A, $324binary_subscr.6, func=$316load_deref.2, args=[Var(A, quicksort.py:86), Var($324binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $328call_function.8 = call $312load_deref.0(pivot, $326call_function.7, func=$312load_deref.0, args=[Var(pivot, quicksort.py:108), Var($326call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool332 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $332pred = call bool332($328call_function.8, func=bool332, args=(Var($328call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $332pred, 334, 346
12-22 13:04 DEBUG    ==== SSA block analysis pass on 334
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $const336.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $338inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const336.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j = $338inplace_subtract.2
12-22 13:04 DEBUG    on stmt: jump 302
12-22 13:04 DEBUG    ==== SSA block analysis pass on 346
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $350compare_op.2 = i >= j
12-22 13:04 DEBUG    on stmt: bool354 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $354pred = call bool354($350compare_op.2, func=bool354, args=(Var($350compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $354pred, 356, 360
12-22 13:04 DEBUG    ==== SSA block analysis pass on 356
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: jump 406
12-22 13:04 DEBUG    ==== SSA block analysis pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $364binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $370binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[i] = $364binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[j] = $370binary_subscr.5
12-22 13:04 DEBUG    on stmt: $const388.11 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $390inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const388.11, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: i = $390inplace_add.12
12-22 13:04 DEBUG    on stmt: $const396.14 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $398inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const396.14, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j = $398inplace_subtract.15
12-22 13:04 DEBUG    on stmt: jump 407
12-22 13:04 DEBUG    ==== SSA block analysis pass on 406
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: $410binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $416binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[i] = $410binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[high] = $416binary_subscr.5
12-22 13:04 DEBUG    on stmt: $434return_value.11 = cast(value=i)
12-22 13:04 DEBUG    on stmt: return $434return_value.11
12-22 13:04 DEBUG    ==== SSA block analysis pass on 407
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF35EDB50>
12-22 13:04 DEBUG    on stmt: jump 258
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$104binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF35E0DC0>],
             '$106call_function.6': [<numba.core.ir.Assign object at 0x000001AEF35E0F70>],
             '$108load_deref.7': [<numba.core.ir.Assign object at 0x000001AEF35E02B0>],
             '$10load_global.0': [<numba.core.ir.Assign object at 0x000001AEF3523F70>],
             '$116binary_subscr.11': [<numba.core.ir.Assign object at 0x000001AEF35EE7C0>],
             '$118call_function.12': [<numba.core.ir.Assign object at 0x000001AEF35EE190>],
             '$120call_function.13': [<numba.core.ir.Assign object at 0x000001AEF35EEE80>],
             '$122pred': [<numba.core.ir.Assign object at 0x000001AEF35EED90>],
             '$128binary_subscr.2': [<numba.core.ir.Assign object at 0x000001AEF35EE5E0>],
             '$134binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF35EE340>],
             '$150load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF35D9550>],
             '$152load_deref.1': [<numba.core.ir.Assign object at 0x000001AEF35D99D0>],
             '$160binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF35D9A30>],
             '$162call_function.6': [<numba.core.ir.Assign object at 0x000001AEF35D9040>],
             '$164load_deref.7': [<numba.core.ir.Assign object at 0x000001AEF35D9D90>],
             '$172binary_subscr.11': [<numba.core.ir.Assign object at 0x000001AEF35E2D30>],
             '$174call_function.12': [<numba.core.ir.Assign object at 0x000001AEF35E2460>],
             '$176call_function.13': [<numba.core.ir.Assign object at 0x000001AEF35E2160>],
             '$178pred': [<numba.core.ir.Assign object at 0x000001AEF35E2910>],
             '$184binary_subscr.2': [<numba.core.ir.Assign object at 0x000001AEF35E2580>],
             '$18compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF358A5E0>],
             '$190binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF35C1AF0>],
             '$206load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF35C1C40>],
             '$20pred': [<numba.core.ir.Assign object at 0x000001AEF358AA90>],
             '$214binary_subscr.4': [<numba.core.ir.Assign object at 0x000001AEF35C1490>],
             '$224binary_subscr.8': [<numba.core.ir.Assign object at 0x000001AEF34717C0>],
             '$22load_global.0': [<numba.core.ir.Assign object at 0x000001AEF358AE20>],
             '$230binary_subscr.11': [<numba.core.ir.Assign object at 0x000001AEF3471520>],
             '$262compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF34FB9D0>],
             '$266pred': [<numba.core.ir.Assign object at 0x000001AF17AF43D0>],
             '$268load_deref.0': [<numba.core.ir.Assign object at 0x000001AF17AF45B0>],
             '$270load_deref.1': [<numba.core.ir.Assign object at 0x000001AF17AF4730>],
             '$278binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AF17AF4C10>],
             '$280call_function.6': [<numba.core.ir.Assign object at 0x000001AF17AF4DC0>],
             '$284call_function.8': [<numba.core.ir.Assign object at 0x000001AEF38690A0>],
             '$288pred': [<numba.core.ir.Assign object at 0x000001AEF3869310>],
             '$294inplace_add.2': [<numba.core.ir.Assign object at 0x000001AEF38696D0>],
             '$306compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF3869C70>],
             '$30binary_add.2': [<numba.core.ir.Assign object at 0x000001AEF361C3D0>],
             '$310pred': [<numba.core.ir.Assign object at 0x000001AEF3869F10>],
             '$312load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF35B3130>],
             '$316load_deref.2': [<numba.core.ir.Assign object at 0x000001AEF35B33D0>],
             '$324binary_subscr.6': [<numba.core.ir.Assign object at 0x000001AEF35B38B0>],
             '$326call_function.7': [<numba.core.ir.Assign object at 0x000001AEF35B3A60>],
             '$328call_function.8': [<numba.core.ir.Assign object at 0x000001AEF35B3BE0>],
             '$332pred': [<numba.core.ir.Assign object at 0x000001AEF35B3E50>],
             '$338inplace_subtract.2': [<numba.core.ir.Assign object at 0x000001AEF35E4250>],
             '$350compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF35E47F0>],
             '$354pred': [<numba.core.ir.Assign object at 0x000001AEF35E4A90>],
             '$364binary_subscr.2': [<numba.core.ir.Assign object at 0x000001AEF35ED070>],
             '$370binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF35ED430>],
             '$38load_deref.5': [<numba.core.ir.Assign object at 0x000001AEF35D8A60>],
             '$390inplace_add.12': [<numba.core.ir.Assign object at 0x000001AEF35EDE50>],
             '$398inplace_subtract.15': [<numba.core.ir.Assign object at 0x000001AEF35D36D0>],
             '$40load_deref.6': [<numba.core.ir.Assign object at 0x000001AEF35D8C40>],
             '$410binary_subscr.2': [<numba.core.ir.Assign object at 0x000001AEF35D3790>],
             '$416binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF35D3C70>],
             '$434return_value.11': [<numba.core.ir.Assign object at 0x000001AEF35C7E80>],
             '$48binary_subscr.10': [<numba.core.ir.Assign object at 0x000001AEF34E9D00>],
             '$50call_function.11': [<numba.core.ir.Assign object at 0x000001AEF35D8DC0>],
             '$52load_deref.12': [<numba.core.ir.Assign object at 0x000001AEF35D8B80>],
             '$60binary_subscr.16': [<numba.core.ir.Assign object at 0x000001AEF35D80D0>],
             '$62call_function.17': [<numba.core.ir.Assign object at 0x000001AEF35D73D0>],
             '$64call_function.18': [<numba.core.ir.Assign object at 0x000001AEF35D7370>],
             '$66pred': [<numba.core.ir.Assign object at 0x000001AEF35D77F0>],
             '$6compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF35233A0>],
             '$72binary_subscr.2': [<numba.core.ir.Assign object at 0x000001AEF35D7520>],
             '$78binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF35D7130>],
             '$8pred': [<numba.core.ir.Assign object at 0x000001AEF3523130>],
             '$94load_deref.0': [<numba.core.ir.Assign object at 0x000001AEF35E08B0>],
             '$96load_deref.1': [<numba.core.ir.Assign object at 0x000001AEF35E0220>],
             '$const252.18': [<numba.core.ir.Assign object at 0x000001AEF34FB370>],
             '$const292.1': [<numba.core.ir.Assign object at 0x000001AEF3869550>],
             '$const32.3': [<numba.core.ir.Assign object at 0x000001AEF35D8850>],
             '$const336.1': [<numba.core.ir.Assign object at 0x000001AEF35E40D0>],
             '$const388.11': [<numba.core.ir.Assign object at 0x000001AEF35EDCD0>],
             '$const396.14': [<numba.core.ir.Assign object at 0x000001AEF35D3520>],
             '$const4.1': [<numba.core.ir.Assign object at 0x000001AEF35232B0>],
             'A': [<numba.core.ir.Assign object at 0x000001AEF3611340>],
             'R': [<numba.core.ir.Assign object at 0x000001AEF36112E0>],
             'bool122': [<numba.core.ir.Assign object at 0x000001AEF35EECD0>],
             'bool178': [<numba.core.ir.Assign object at 0x000001AEF35E2850>],
             'bool20': [<numba.core.ir.Assign object at 0x000001AEF358A400>],
             'bool266': [<numba.core.ir.Assign object at 0x000001AF17AF4250>],
             'bool288': [<numba.core.ir.Assign object at 0x000001AEF38691F0>],
             'bool310': [<numba.core.ir.Assign object at 0x000001AEF3869DF0>],
             'bool332': [<numba.core.ir.Assign object at 0x000001AEF35B3D30>],
             'bool354': [<numba.core.ir.Assign object at 0x000001AEF35E4970>],
             'bool66': [<numba.core.ir.Assign object at 0x000001AEF35D7EE0>],
             'bool8': [<numba.core.ir.Assign object at 0x000001AEF35230A0>],
             'high': [<numba.core.ir.Assign object at 0x000001AEF3523850>],
             'i': [<numba.core.ir.Assign object at 0x000001AEF34FB400>,
                   <numba.core.ir.Assign object at 0x000001AEF3869790>,
                   <numba.core.ir.Assign object at 0x000001AEF35EDF10>],
             'j': [<numba.core.ir.Assign object at 0x000001AEF34FB040>,
                   <numba.core.ir.Assign object at 0x000001AEF35E4310>,
                   <numba.core.ir.Assign object at 0x000001AEF35D3700>],
             'low': [<numba.core.ir.Assign object at 0x000001AEF3611A00>],
             'mid': [<numba.core.ir.Assign object at 0x000001AEF35D8610>],
             'pivot': [<numba.core.ir.Assign object at 0x000001AEF35C15E0>]})
12-22 13:04 DEBUG    SSA violators {'j', 'i'}
12-22 13:04 DEBUG    Fix SSA violator on var j
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: R = arg(1, name=R)
12-22 13:04 DEBUG    on stmt: low = arg(2, name=low)
12-22 13:04 DEBUG    on stmt: high = arg(3, name=high)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = low >= $const4.1
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $8pred, 14, 10
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $10load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $18compare_op.2 = high > low
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 26, 22
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $22load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $30binary_add.2 = low + high
12-22 13:04 DEBUG    on stmt: $const32.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: mid = $30binary_add.2 >> $const32.3
12-22 13:04 DEBUG    on stmt: $38load_deref.5 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool66 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $66pred, 68, 94
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[low] = $72binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $78binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 94
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $94load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool122 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $122pred, 124, 150
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 124
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[high] = $128binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $134binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 150
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $150load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool178 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $178pred, 180, 206
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 180
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[low] = $184binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $190binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 206
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 206
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[high] = $224binary_subscr.8
12-22 13:04 DEBUG    on stmt: R[mid] = $230binary_subscr.11
12-22 13:04 DEBUG    on stmt: i = low
12-22 13:04 DEBUG    on stmt: $const252.18 = const(int, 1)
12-22 13:04 DEBUG    on stmt: j = high - $const252.18
12-22 13:04 DEBUG    first assign: j
12-22 13:04 DEBUG    replaced with: j = high - $const252.18
12-22 13:04 DEBUG    on stmt: jump 258
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 258
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $262compare_op.2 = i < high
12-22 13:04 DEBUG    on stmt: bool266 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $266pred = call bool266($262compare_op.2, func=bool266, args=(Var($262compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $266pred, 268, 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 268
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $268load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool288 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $288pred = call bool288($284call_function.8, func=bool288, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $288pred, 290, 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 290
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $const292.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $294inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const292.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: i = $294inplace_add.2
12-22 13:04 DEBUG    on stmt: jump 407
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 302
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $306compare_op.2 = j >= low
12-22 13:04 DEBUG    on stmt: bool310 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $310pred = call bool310($306compare_op.2, func=bool310, args=(Var($306compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $310pred, 312, 346
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 312
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $312load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $316load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $324binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326call_function.7 = call $316load_deref.2(A, $324binary_subscr.6, func=$316load_deref.2, args=[Var(A, quicksort.py:86), Var($324binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $328call_function.8 = call $312load_deref.0(pivot, $326call_function.7, func=$312load_deref.0, args=[Var(pivot, quicksort.py:108), Var($326call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool332 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $332pred = call bool332($328call_function.8, func=bool332, args=(Var($328call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $332pred, 334, 346
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 334
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $const336.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $338inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const336.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j = $338inplace_subtract.2
12-22 13:04 DEBUG    replaced with: j.1 = $338inplace_subtract.2
12-22 13:04 DEBUG    on stmt: jump 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 346
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $350compare_op.2 = i >= j
12-22 13:04 DEBUG    on stmt: bool354 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $354pred = call bool354($350compare_op.2, func=bool354, args=(Var($350compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $354pred, 356, 360
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 356
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: jump 406
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $364binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $370binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[i] = $364binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[j] = $370binary_subscr.5
12-22 13:04 DEBUG    on stmt: $const388.11 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $390inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const388.11, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: i = $390inplace_add.12
12-22 13:04 DEBUG    on stmt: $const396.14 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $398inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const396.14, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j = $398inplace_subtract.15
12-22 13:04 DEBUG    replaced with: j.2 = $398inplace_subtract.15
12-22 13:04 DEBUG    on stmt: jump 407
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 406
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $410binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $416binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[i] = $410binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[high] = $416binary_subscr.5
12-22 13:04 DEBUG    on stmt: $434return_value.11 = cast(value=i)
12-22 13:04 DEBUG    on stmt: return $434return_value.11
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 407
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: jump 258
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {206: [<numba.core.ir.Assign object at 0x000001AEF35DA940>],
             334: [<numba.core.ir.Assign object at 0x000001AEF35DADF0>],
             360: [<numba.core.ir.Assign object at 0x000001AEF35DA310>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: R = arg(1, name=R)
12-22 13:04 DEBUG    on stmt: low = arg(2, name=low)
12-22 13:04 DEBUG    on stmt: high = arg(3, name=high)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = low >= $const4.1
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $8pred, 14, 10
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $10load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $18compare_op.2 = high > low
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 26, 22
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $22load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $30binary_add.2 = low + high
12-22 13:04 DEBUG    on stmt: $const32.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: mid = $30binary_add.2 >> $const32.3
12-22 13:04 DEBUG    on stmt: $38load_deref.5 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool66 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $66pred, 68, 94
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[low] = $72binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $78binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 94
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $94load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool122 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $122pred, 124, 150
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 124
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[high] = $128binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $134binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 150
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $150load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool178 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $178pred, 180, 206
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 180
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[low] = $184binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $190binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 206
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 206
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[high] = $224binary_subscr.8
12-22 13:04 DEBUG    on stmt: R[mid] = $230binary_subscr.11
12-22 13:04 DEBUG    on stmt: i = low
12-22 13:04 DEBUG    on stmt: $const252.18 = const(int, 1)
12-22 13:04 DEBUG    on stmt: j = high - $const252.18
12-22 13:04 DEBUG    on stmt: jump 258
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 258
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $262compare_op.2 = i < high
12-22 13:04 DEBUG    on stmt: bool266 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $266pred = call bool266($262compare_op.2, func=bool266, args=(Var($262compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $266pred, 268, 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 268
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $268load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool288 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $288pred = call bool288($284call_function.8, func=bool288, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $288pred, 290, 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 290
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $const292.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $294inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const292.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: i = $294inplace_add.2
12-22 13:04 DEBUG    on stmt: jump 407
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 302
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $306compare_op.2 = j >= low
12-22 13:04 DEBUG    find_def var='j' stmt=$306compare_op.2 = j >= low
12-22 13:04 DEBUG    find_def_from_top label 302
12-22 13:04 DEBUG    insert phi node j.3 = phi(incoming_values=[], incoming_blocks=[]) at 302
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    find_def_from_top label 258
12-22 13:04 DEBUG    insert phi node j.4 = phi(incoming_values=[], incoming_blocks=[]) at 258
12-22 13:04 DEBUG    find_def_from_bottom label 206
12-22 13:04 DEBUG    incoming_def j = high - $const252.18
12-22 13:04 DEBUG    find_def_from_bottom label 407
12-22 13:04 DEBUG    find_def_from_top label 407
12-22 13:04 DEBUG    insert phi node j.5 = phi(incoming_values=[], incoming_blocks=[]) at 407
12-22 13:04 DEBUG    find_def_from_bottom label 360
12-22 13:04 DEBUG    incoming_def j.2 = $398inplace_subtract.15
12-22 13:04 DEBUG    find_def_from_bottom label 290
12-22 13:04 DEBUG    find_def_from_top label 290
12-22 13:04 DEBUG    idom 268 from label 290
12-22 13:04 DEBUG    find_def_from_bottom label 268
12-22 13:04 DEBUG    find_def_from_top label 268
12-22 13:04 DEBUG    idom 258 from label 268
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    incoming_def j.4 = phi(incoming_values=[Var(j, quicksort.py:113)], incoming_blocks=[206])
12-22 13:04 DEBUG    incoming_def j.5 = phi(incoming_values=[Var(j.2, quicksort.py:123), Var(j.4, quicksort.py:117)], incoming_blocks=[360, 290])
12-22 13:04 DEBUG    incoming_def j.4 = phi(incoming_values=[Var(j, quicksort.py:113), Var(j.5, quicksort.py:117)], incoming_blocks=[206, 407])
12-22 13:04 DEBUG    find_def_from_bottom label 268
12-22 13:04 DEBUG    find_def_from_top label 268
12-22 13:04 DEBUG    idom 258 from label 268
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    incoming_def j.4 = phi(incoming_values=[Var(j, quicksort.py:113), Var(j.5, quicksort.py:117)], incoming_blocks=[206, 407])
12-22 13:04 DEBUG    find_def_from_bottom label 334
12-22 13:04 DEBUG    incoming_def j.1 = $338inplace_subtract.2
12-22 13:04 DEBUG    replaced with: $306compare_op.2 = j.3 >= low
12-22 13:04 DEBUG    on stmt: bool310 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $310pred = call bool310($306compare_op.2, func=bool310, args=(Var($306compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $310pred, 312, 346
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 312
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $312load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $316load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $324binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='j' stmt=$324binary_subscr.6 = getitem(value=R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 312
12-22 13:04 DEBUG    idom 302 from label 312
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    replaced with: $324binary_subscr.6 = getitem(value=R, index=j.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326call_function.7 = call $316load_deref.2(A, $324binary_subscr.6, func=$316load_deref.2, args=[Var(A, quicksort.py:86), Var($324binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $328call_function.8 = call $312load_deref.0(pivot, $326call_function.7, func=$312load_deref.0, args=[Var(pivot, quicksort.py:108), Var($326call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool332 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $332pred = call bool332($328call_function.8, func=bool332, args=(Var($328call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $332pred, 334, 346
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 334
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $const336.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $338inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const336.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='j' stmt=$338inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const336.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 334
12-22 13:04 DEBUG    idom 312 from label 334
12-22 13:04 DEBUG    find_def_from_bottom label 312
12-22 13:04 DEBUG    find_def_from_top label 312
12-22 13:04 DEBUG    idom 302 from label 312
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    replaced with: $338inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j.3, rhs=$const336.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j.1 = $338inplace_subtract.2
12-22 13:04 DEBUG    on stmt: jump 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 346
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $350compare_op.2 = i >= j
12-22 13:04 DEBUG    find_def var='j' stmt=$350compare_op.2 = i >= j
12-22 13:04 DEBUG    find_def_from_top label 346
12-22 13:04 DEBUG    idom 302 from label 346
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    replaced with: $350compare_op.2 = i >= j.3
12-22 13:04 DEBUG    on stmt: bool354 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $354pred = call bool354($350compare_op.2, func=bool354, args=(Var($350compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $354pred, 356, 360
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 356
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: jump 406
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $364binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='j' stmt=$364binary_subscr.2 = getitem(value=R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 360
12-22 13:04 DEBUG    idom 346 from label 360
12-22 13:04 DEBUG    find_def_from_bottom label 346
12-22 13:04 DEBUG    find_def_from_top label 346
12-22 13:04 DEBUG    idom 302 from label 346
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    replaced with: $364binary_subscr.2 = getitem(value=R, index=j.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $370binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[i] = $364binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[j] = $370binary_subscr.5
12-22 13:04 DEBUG    find_def var='j' stmt=R[j] = $370binary_subscr.5
12-22 13:04 DEBUG    find_def_from_top label 360
12-22 13:04 DEBUG    idom 346 from label 360
12-22 13:04 DEBUG    find_def_from_bottom label 346
12-22 13:04 DEBUG    find_def_from_top label 346
12-22 13:04 DEBUG    idom 302 from label 346
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    replaced with: R[j.3] = $370binary_subscr.5
12-22 13:04 DEBUG    on stmt: $const388.11 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $390inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const388.11, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: i = $390inplace_add.12
12-22 13:04 DEBUG    on stmt: $const396.14 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $398inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const396.14, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='j' stmt=$398inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const396.14, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 360
12-22 13:04 DEBUG    idom 346 from label 360
12-22 13:04 DEBUG    find_def_from_bottom label 346
12-22 13:04 DEBUG    find_def_from_top label 346
12-22 13:04 DEBUG    idom 302 from label 346
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    replaced with: $398inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j.3, rhs=$const396.14, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j.2 = $398inplace_subtract.15
12-22 13:04 DEBUG    on stmt: jump 407
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 406
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $410binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $416binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[i] = $410binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[high] = $416binary_subscr.5
12-22 13:04 DEBUG    on stmt: $434return_value.11 = cast(value=i)
12-22 13:04 DEBUG    on stmt: return $434return_value.11
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 407
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: jump 258
12-22 13:04 DEBUG    Fix SSA violator on var i
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: R = arg(1, name=R)
12-22 13:04 DEBUG    on stmt: low = arg(2, name=low)
12-22 13:04 DEBUG    on stmt: high = arg(3, name=high)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = low >= $const4.1
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $8pred, 14, 10
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $10load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $18compare_op.2 = high > low
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 26, 22
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $22load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $30binary_add.2 = low + high
12-22 13:04 DEBUG    on stmt: $const32.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: mid = $30binary_add.2 >> $const32.3
12-22 13:04 DEBUG    on stmt: $38load_deref.5 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool66 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $66pred, 68, 94
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[low] = $72binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $78binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 94
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $94load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool122 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $122pred, 124, 150
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 124
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[high] = $128binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $134binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 150
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $150load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool178 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $178pred, 180, 206
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 180
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[low] = $184binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $190binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 206
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 206
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[high] = $224binary_subscr.8
12-22 13:04 DEBUG    on stmt: R[mid] = $230binary_subscr.11
12-22 13:04 DEBUG    on stmt: i = low
12-22 13:04 DEBUG    first assign: i
12-22 13:04 DEBUG    replaced with: i = low
12-22 13:04 DEBUG    on stmt: $const252.18 = const(int, 1)
12-22 13:04 DEBUG    on stmt: j = high - $const252.18
12-22 13:04 DEBUG    on stmt: jump 258
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 258
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: j.4 = phi(incoming_values=[Var(j, quicksort.py:113), Var(j.5, quicksort.py:117)], incoming_blocks=[206, 407])
12-22 13:04 DEBUG    on stmt: $262compare_op.2 = i < high
12-22 13:04 DEBUG    on stmt: bool266 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $266pred = call bool266($262compare_op.2, func=bool266, args=(Var($262compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $266pred, 268, 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 268
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $268load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool288 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $288pred = call bool288($284call_function.8, func=bool288, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $288pred, 290, 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 290
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $const292.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $294inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const292.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: i = $294inplace_add.2
12-22 13:04 DEBUG    replaced with: i.1 = $294inplace_add.2
12-22 13:04 DEBUG    on stmt: jump 407
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 302
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: j.3 = phi(incoming_values=[Var(j.4, quicksort.py:117), Var(j.4, quicksort.py:117), Var(j.1, quicksort.py:118)], incoming_blocks=[258, 268, 334])
12-22 13:04 DEBUG    on stmt: $306compare_op.2 = j.3 >= low
12-22 13:04 DEBUG    on stmt: bool310 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $310pred = call bool310($306compare_op.2, func=bool310, args=(Var($306compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $310pred, 312, 346
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 312
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $312load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $316load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $324binary_subscr.6 = getitem(value=R, index=j.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326call_function.7 = call $316load_deref.2(A, $324binary_subscr.6, func=$316load_deref.2, args=[Var(A, quicksort.py:86), Var($324binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $328call_function.8 = call $312load_deref.0(pivot, $326call_function.7, func=$312load_deref.0, args=[Var(pivot, quicksort.py:108), Var($326call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool332 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $332pred = call bool332($328call_function.8, func=bool332, args=(Var($328call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $332pred, 334, 346
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 334
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $const336.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $338inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j.3, rhs=$const336.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j.1 = $338inplace_subtract.2
12-22 13:04 DEBUG    on stmt: jump 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 346
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $350compare_op.2 = i >= j.3
12-22 13:04 DEBUG    on stmt: bool354 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $354pred = call bool354($350compare_op.2, func=bool354, args=(Var($350compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $354pred, 356, 360
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 356
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: jump 406
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $364binary_subscr.2 = getitem(value=R, index=j.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $370binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[i] = $364binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[j.3] = $370binary_subscr.5
12-22 13:04 DEBUG    on stmt: $const388.11 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $390inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const388.11, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: i = $390inplace_add.12
12-22 13:04 DEBUG    replaced with: i.2 = $390inplace_add.12
12-22 13:04 DEBUG    on stmt: $const396.14 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $398inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j.3, rhs=$const396.14, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j.2 = $398inplace_subtract.15
12-22 13:04 DEBUG    on stmt: jump 407
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 406
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: $410binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $416binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[i] = $410binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[high] = $416binary_subscr.5
12-22 13:04 DEBUG    on stmt: $434return_value.11 = cast(value=i)
12-22 13:04 DEBUG    on stmt: return $434return_value.11
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 407
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF318C6D0>
12-22 13:04 DEBUG    on stmt: j.5 = phi(incoming_values=[Var(j.2, quicksort.py:123), Var(j.4, quicksort.py:117)], incoming_blocks=[360, 290])
12-22 13:04 DEBUG    on stmt: jump 258
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {206: [<numba.core.ir.Assign object at 0x000001AEF35DA640>],
             290: [<numba.core.ir.Assign object at 0x000001AEF35DA9A0>],
             360: [<numba.core.ir.Assign object at 0x000001AEF35C7430>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: R = arg(1, name=R)
12-22 13:04 DEBUG    on stmt: low = arg(2, name=low)
12-22 13:04 DEBUG    on stmt: high = arg(3, name=high)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = low >= $const4.1
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $8pred, 14, 10
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $10load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $18compare_op.2 = high > low
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:93),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 26, 22
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $22load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $30binary_add.2 = low + high
12-22 13:04 DEBUG    on stmt: $const32.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: mid = $30binary_add.2 >> $const32.3
12-22 13:04 DEBUG    on stmt: $38load_deref.5 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $40load_deref.6 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.10 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50call_function.11 = call $40load_deref.6(A, $48binary_subscr.10, func=$40load_deref.6, args=[Var(A, quicksort.py:86), Var($48binary_subscr.10, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $52load_deref.12 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $60binary_subscr.16 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $62call_function.17 = call $52load_deref.12(A, $60binary_subscr.16, func=$52load_deref.12, args=[Var(A, quicksort.py:86), Var($60binary_subscr.16, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $64call_function.18 = call $38load_deref.5($50call_function.11, $62call_function.17, func=$38load_deref.5, args=[Var($50call_function.11, quicksort.py:102), Var($62call_function.17, quicksort.py:102)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool66 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $66pred = call bool66($64call_function.18, func=bool66, args=(Var($64call_function.18, quicksort.py:102),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $66pred, 68, 94
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 68
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $72binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[low] = $72binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $78binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 94
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 94
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $94load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $96load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $104binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $106call_function.6 = call $96load_deref.1(A, $104binary_subscr.5, func=$96load_deref.1, args=[Var(A, quicksort.py:86), Var($104binary_subscr.5, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $108load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $116binary_subscr.11 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $118call_function.12 = call $108load_deref.7(A, $116binary_subscr.11, func=$108load_deref.7, args=[Var(A, quicksort.py:86), Var($116binary_subscr.11, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $120call_function.13 = call $94load_deref.0($106call_function.6, $118call_function.12, func=$94load_deref.0, args=[Var($106call_function.6, quicksort.py:104), Var($118call_function.12, quicksort.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool122 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $122pred = call bool122($120call_function.13, func=bool122, args=(Var($120call_function.13, quicksort.py:104),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $122pred, 124, 150
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 124
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $128binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $134binary_subscr.5 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[high] = $128binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $134binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 150
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 150
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $150load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $152load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $160binary_subscr.5 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $162call_function.6 = call $152load_deref.1(A, $160binary_subscr.5, func=$152load_deref.1, args=[Var(A, quicksort.py:86), Var($160binary_subscr.5, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $164load_deref.7 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $172binary_subscr.11 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $174call_function.12 = call $164load_deref.7(A, $172binary_subscr.11, func=$164load_deref.7, args=[Var(A, quicksort.py:86), Var($172binary_subscr.11, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $176call_function.13 = call $150load_deref.0($162call_function.6, $174call_function.12, func=$150load_deref.0, args=[Var($162call_function.6, quicksort.py:106), Var($174call_function.12, quicksort.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool178 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $178pred = call bool178($176call_function.13, func=bool178, args=(Var($176call_function.13, quicksort.py:106),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $178pred, 180, 206
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 180
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $184binary_subscr.2 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $190binary_subscr.5 = getitem(value=R, index=low, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[low] = $184binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[mid] = $190binary_subscr.5
12-22 13:04 DEBUG    on stmt: jump 206
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 206
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $206load_deref.0 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $214binary_subscr.4 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: pivot = call $206load_deref.0(A, $214binary_subscr.4, func=$206load_deref.0, args=[Var(A, quicksort.py:86), Var($214binary_subscr.4, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $224binary_subscr.8 = getitem(value=R, index=mid, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $230binary_subscr.11 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[high] = $224binary_subscr.8
12-22 13:04 DEBUG    on stmt: R[mid] = $230binary_subscr.11
12-22 13:04 DEBUG    on stmt: i = low
12-22 13:04 DEBUG    on stmt: $const252.18 = const(int, 1)
12-22 13:04 DEBUG    on stmt: j = high - $const252.18
12-22 13:04 DEBUG    on stmt: jump 258
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 258
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: j.4 = phi(incoming_values=[Var(j, quicksort.py:113), Var(j.5, quicksort.py:117)], incoming_blocks=[206, 407])
12-22 13:04 DEBUG    on stmt: $262compare_op.2 = i < high
12-22 13:04 DEBUG    find_def var='i' stmt=$262compare_op.2 = i < high
12-22 13:04 DEBUG    find_def_from_top label 258
12-22 13:04 DEBUG    insert phi node i.3 = phi(incoming_values=[], incoming_blocks=[]) at 258
12-22 13:04 DEBUG    find_def_from_bottom label 206
12-22 13:04 DEBUG    incoming_def i = low
12-22 13:04 DEBUG    find_def_from_bottom label 407
12-22 13:04 DEBUG    find_def_from_top label 407
12-22 13:04 DEBUG    insert phi node i.4 = phi(incoming_values=[], incoming_blocks=[]) at 407
12-22 13:04 DEBUG    find_def_from_bottom label 360
12-22 13:04 DEBUG    incoming_def i.2 = $390inplace_add.12
12-22 13:04 DEBUG    find_def_from_bottom label 290
12-22 13:04 DEBUG    incoming_def i.1 = $294inplace_add.2
12-22 13:04 DEBUG    incoming_def i.4 = phi(incoming_values=[Var(i.2, quicksort.py:122), Var(i.1, quicksort.py:116)], incoming_blocks=[360, 290])
12-22 13:04 DEBUG    replaced with: $262compare_op.2 = i.3 < high
12-22 13:04 DEBUG    on stmt: bool266 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $266pred = call bool266($262compare_op.2, func=bool266, args=(Var($262compare_op.2, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $266pred, 268, 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 268
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $268load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $270load_deref.1 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='i' stmt=$278binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 268
12-22 13:04 DEBUG    idom 258 from label 268
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    replaced with: $278binary_subscr.5 = getitem(value=R, index=i.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $280call_function.6 = call $270load_deref.1(A, $278binary_subscr.5, func=$270load_deref.1, args=[Var(A, quicksort.py:86), Var($278binary_subscr.5, quicksort.py:115)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $284call_function.8 = call $268load_deref.0($280call_function.6, pivot, func=$268load_deref.0, args=[Var($280call_function.6, quicksort.py:115), Var(pivot, quicksort.py:108)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool288 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $288pred = call bool288($284call_function.8, func=bool288, args=(Var($284call_function.8, quicksort.py:115),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $288pred, 290, 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 290
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $const292.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $294inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const292.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='i' stmt=$294inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const292.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 290
12-22 13:04 DEBUG    idom 268 from label 290
12-22 13:04 DEBUG    find_def_from_bottom label 268
12-22 13:04 DEBUG    find_def_from_top label 268
12-22 13:04 DEBUG    idom 258 from label 268
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    replaced with: $294inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i.3, rhs=$const292.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: i.1 = $294inplace_add.2
12-22 13:04 DEBUG    on stmt: jump 407
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 302
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: j.3 = phi(incoming_values=[Var(j.4, quicksort.py:117), Var(j.4, quicksort.py:117), Var(j.1, quicksort.py:118)], incoming_blocks=[258, 268, 334])
12-22 13:04 DEBUG    on stmt: $306compare_op.2 = j.3 >= low
12-22 13:04 DEBUG    on stmt: bool310 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $310pred = call bool310($306compare_op.2, func=bool310, args=(Var($306compare_op.2, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $310pred, 312, 346
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 312
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $312load_deref.0 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $316load_deref.2 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $324binary_subscr.6 = getitem(value=R, index=j.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326call_function.7 = call $316load_deref.2(A, $324binary_subscr.6, func=$316load_deref.2, args=[Var(A, quicksort.py:86), Var($324binary_subscr.6, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $328call_function.8 = call $312load_deref.0(pivot, $326call_function.7, func=$312load_deref.0, args=[Var(pivot, quicksort.py:108), Var($326call_function.7, quicksort.py:117)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool332 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $332pred = call bool332($328call_function.8, func=bool332, args=(Var($328call_function.8, quicksort.py:117),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $332pred, 334, 346
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 334
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $const336.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $338inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j.3, rhs=$const336.1, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j.1 = $338inplace_subtract.2
12-22 13:04 DEBUG    on stmt: jump 302
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 346
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $350compare_op.2 = i >= j.3
12-22 13:04 DEBUG    find_def var='i' stmt=$350compare_op.2 = i >= j.3
12-22 13:04 DEBUG    find_def_from_top label 346
12-22 13:04 DEBUG    idom 302 from label 346
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    find_def_from_top label 302
12-22 13:04 DEBUG    idom 258 from label 302
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    replaced with: $350compare_op.2 = i.3 >= j.3
12-22 13:04 DEBUG    on stmt: bool354 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $354pred = call bool354($350compare_op.2, func=bool354, args=(Var($350compare_op.2, quicksort.py:119),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $354pred, 356, 360
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 356
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: jump 406
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $364binary_subscr.2 = getitem(value=R, index=j.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $370binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='i' stmt=$370binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 360
12-22 13:04 DEBUG    idom 346 from label 360
12-22 13:04 DEBUG    find_def_from_bottom label 346
12-22 13:04 DEBUG    find_def_from_top label 346
12-22 13:04 DEBUG    idom 302 from label 346
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    find_def_from_top label 302
12-22 13:04 DEBUG    idom 258 from label 302
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    replaced with: $370binary_subscr.5 = getitem(value=R, index=i.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[i] = $364binary_subscr.2
12-22 13:04 DEBUG    find_def var='i' stmt=R[i] = $364binary_subscr.2
12-22 13:04 DEBUG    find_def_from_top label 360
12-22 13:04 DEBUG    idom 346 from label 360
12-22 13:04 DEBUG    find_def_from_bottom label 346
12-22 13:04 DEBUG    find_def_from_top label 346
12-22 13:04 DEBUG    idom 302 from label 346
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    find_def_from_top label 302
12-22 13:04 DEBUG    idom 258 from label 302
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    replaced with: R[i.3] = $364binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[j.3] = $370binary_subscr.5
12-22 13:04 DEBUG    on stmt: $const388.11 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $390inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const388.11, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='i' stmt=$390inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i, rhs=$const388.11, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 360
12-22 13:04 DEBUG    idom 346 from label 360
12-22 13:04 DEBUG    find_def_from_bottom label 346
12-22 13:04 DEBUG    find_def_from_top label 346
12-22 13:04 DEBUG    idom 302 from label 346
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    find_def_from_top label 302
12-22 13:04 DEBUG    idom 258 from label 302
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    replaced with: $390inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=i.3, rhs=$const388.11, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: i.2 = $390inplace_add.12
12-22 13:04 DEBUG    on stmt: $const396.14 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $398inplace_subtract.15 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j.3, rhs=$const396.14, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j.2 = $398inplace_subtract.15
12-22 13:04 DEBUG    on stmt: jump 407
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 406
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: $410binary_subscr.2 = getitem(value=R, index=high, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $416binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='i' stmt=$416binary_subscr.5 = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 406
12-22 13:04 DEBUG    idom 356 from label 406
12-22 13:04 DEBUG    find_def_from_bottom label 356
12-22 13:04 DEBUG    find_def_from_top label 356
12-22 13:04 DEBUG    idom 346 from label 356
12-22 13:04 DEBUG    find_def_from_bottom label 346
12-22 13:04 DEBUG    find_def_from_top label 346
12-22 13:04 DEBUG    idom 302 from label 346
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    find_def_from_top label 302
12-22 13:04 DEBUG    idom 258 from label 302
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    replaced with: $416binary_subscr.5 = getitem(value=R, index=i.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[i] = $410binary_subscr.2
12-22 13:04 DEBUG    find_def var='i' stmt=R[i] = $410binary_subscr.2
12-22 13:04 DEBUG    find_def_from_top label 406
12-22 13:04 DEBUG    idom 356 from label 406
12-22 13:04 DEBUG    find_def_from_bottom label 356
12-22 13:04 DEBUG    find_def_from_top label 356
12-22 13:04 DEBUG    idom 346 from label 356
12-22 13:04 DEBUG    find_def_from_bottom label 346
12-22 13:04 DEBUG    find_def_from_top label 346
12-22 13:04 DEBUG    idom 302 from label 346
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    find_def_from_top label 302
12-22 13:04 DEBUG    idom 258 from label 302
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    replaced with: R[i.3] = $410binary_subscr.2
12-22 13:04 DEBUG    on stmt: R[high] = $416binary_subscr.5
12-22 13:04 DEBUG    on stmt: $434return_value.11 = cast(value=i)
12-22 13:04 DEBUG    find_def var='i' stmt=$434return_value.11 = cast(value=i)
12-22 13:04 DEBUG    find_def_from_top label 406
12-22 13:04 DEBUG    idom 356 from label 406
12-22 13:04 DEBUG    find_def_from_bottom label 356
12-22 13:04 DEBUG    find_def_from_top label 356
12-22 13:04 DEBUG    idom 346 from label 356
12-22 13:04 DEBUG    find_def_from_bottom label 346
12-22 13:04 DEBUG    find_def_from_top label 346
12-22 13:04 DEBUG    idom 302 from label 346
12-22 13:04 DEBUG    find_def_from_bottom label 302
12-22 13:04 DEBUG    find_def_from_top label 302
12-22 13:04 DEBUG    idom 258 from label 302
12-22 13:04 DEBUG    find_def_from_bottom label 258
12-22 13:04 DEBUG    replaced with: $434return_value.11 = cast(value=i.3)
12-22 13:04 DEBUG    on stmt: return $434return_value.11
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 407
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF3340C10>
12-22 13:04 DEBUG    on stmt: j.5 = phi(incoming_values=[Var(j.2, quicksort.py:123), Var(j.4, quicksort.py:117)], incoming_blocks=[360, 290])
12-22 13:04 DEBUG    on stmt: jump 258
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=45)
           2	LOAD_FAST(arg=0, lineno=47)
           4	LOAD_FAST(arg=1, lineno=47)
           6	BINARY_SUBSCR(arg=None, lineno=47)
           8	RETURN_VALUE(arg=None, lineno=47)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=45)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=47)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=47)
12-22 13:04 DEBUG    stack ['$A2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=47)
12-22 13:04 DEBUG    stack ['$A2.0', '$idx_or_val4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=47)
12-22 13:04 DEBUG    stack ['$6binary_subscr.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$A2.0'}), (4, {'res': '$idx_or_val4.1'}), (6, {'index': '$idx_or_val4.1', 'target': '$A2.0', 'res': '$6binary_subscr.2'}), (8, {'retval': '$6binary_subscr.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    A = arg(0, name=A)                       ['A']
    idx_or_val = arg(1, name=idx_or_val)     ['idx_or_val']
    $6binary_subscr.2 = getitem(value=A, index=idx_or_val, fn=<built-in function getitem>) ['$6binary_subscr.2', 'A', 'idx_or_val']
    $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF3187190>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: idx_or_val = arg(1, name=idx_or_val)
12-22 13:04 DEBUG    on stmt: $6binary_subscr.2 = getitem(value=A, index=idx_or_val, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $8return_value.3 = cast(value=$6binary_subscr.2)
12-22 13:04 DEBUG    on stmt: return $8return_value.3
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$6binary_subscr.2': [<numba.core.ir.Assign object at 0x000001AEF319EA60>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x000001AEF3611F40>],
             'A': [<numba.core.ir.Assign object at 0x000001AEF3199B20>],
             'idx_or_val': [<numba.core.ir.Assign object at 0x000001AEF3199AF0>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=6317)
           2	LOAD_FAST(arg=0, lineno=6322)
           4	LOAD_FAST(arg=1, lineno=6322)
           6	COMPARE_OP(arg=0, lineno=6322)
           8	JUMP_IF_TRUE_OR_POP(arg=30, lineno=6322)
          10	LOAD_GLOBAL(arg=0, lineno=6322)
          12	LOAD_METHOD(arg=1, lineno=6322)
          14	LOAD_FAST(arg=1, lineno=6322)
          16	CALL_METHOD(arg=1, lineno=6322)
          18	JUMP_IF_FALSE_OR_POP(arg=30, lineno=6322)
          20	LOAD_GLOBAL(arg=0, lineno=6322)
          22	LOAD_METHOD(arg=1, lineno=6322)
          24	LOAD_FAST(arg=0, lineno=6322)
          26	CALL_METHOD(arg=1, lineno=6322)
          28	UNARY_NOT(arg=None, lineno=6322)
>         30	RETURN_VALUE(arg=None, lineno=6322)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=6317)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=6322)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=6322)
12-22 13:04 DEBUG    stack ['$a2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=COMPARE_OP(arg=0, lineno=6322)
12-22 13:04 DEBUG    stack ['$a2.0', '$b4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=JUMP_IF_TRUE_OR_POP(arg=30, lineno=6322)
12-22 13:04 DEBUG    stack ['$6compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=('$6compare_op.2',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=10 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=6322)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_METHOD(arg=1, lineno=6322)
12-22 13:04 DEBUG    stack ['$10load_global.0']
12-22 13:04 DEBUG    dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=6322)
12-22 13:04 DEBUG    stack ['$12load_method.1']
12-22 13:04 DEBUG    dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=6322)
12-22 13:04 DEBUG    stack ['$12load_method.1', '$b14.2']
12-22 13:04 DEBUG    dispatch pc=18, inst=JUMP_IF_FALSE_OR_POP(arg=30, lineno=6322)
12-22 13:04 DEBUG    stack ['$16call_method.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=20, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=('$16call_method.3',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1), State(pc_initial=20 nstack_initial=0), State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi30.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=30 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=30, inst=RETURN_VALUE(arg=None, lineno=6322)
12-22 13:04 DEBUG    stack ['$phi30.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=20 nstack_initial=0), State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=20 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_GLOBAL(arg=0, lineno=6322)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_METHOD(arg=1, lineno=6322)
12-22 13:04 DEBUG    stack ['$20load_global.0']
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=6322)
12-22 13:04 DEBUG    stack ['$22load_method.1']
12-22 13:04 DEBUG    dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=6322)
12-22 13:04 DEBUG    stack ['$22load_method.1', '$a24.2']
12-22 13:04 DEBUG    dispatch pc=28, inst=UNARY_NOT(arg=None, lineno=6322)
12-22 13:04 DEBUG    stack ['$26call_method.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=30, stack=('$28unary_not.4',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1), State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'}})
12-22 13:04 DEBUG    defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$16call_method.3',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$28unary_not.4',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$6compare_op.2',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$16call_method.3',
                           State(pc_initial=10 nstack_initial=0)),
                          ('$28unary_not.4',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$6compare_op.2',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:04 DEBUG    keep phismap: {'$phi30.0': {('$16call_method.3', State(pc_initial=10 nstack_initial=0)),
              ('$28unary_not.4', State(pc_initial=20 nstack_initial=0)),
              ('$6compare_op.2', State(pc_initial=0 nstack_initial=0))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$6compare_op.2'},
             State(pc_initial=10 nstack_initial=0): {'$phi30.0': '$16call_method.3'},
             State(pc_initial=20 nstack_initial=0): {'$phi30.0': '$28unary_not.4'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$b4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$b4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={'$phi30.0': '$6compare_op.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 30: ('$6compare_op.2',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$10load_global.0'}), (12, {'item': '$10load_global.0', 'res': '$12load_method.1'}), (14, {'res': '$b14.2'}), (16, {'func': '$12load_method.1', 'args': ['$b14.2'], 'res': '$16call_method.3'}), (18, {'pred': '$16call_method.3'})), outgoing_phis={'$phi30.0': '$16call_method.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: (), 30: ('$16call_method.3',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3', 'res': '$28unary_not.4'})), outgoing_phis={'$phi30.0': '$28unary_not.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28unary_not.4',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'retval': '$phi30.0', 'castval': '$30return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $6compare_op.2 = a < b                   ['$6compare_op.2', 'a', 'b']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:6322),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    $phi30.0 = $6compare_op.2                ['$6compare_op.2', '$phi30.0']
    branch $8pred, 30, 10                    ['$8pred']
label 10:
    $10load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$10load_global.0']
    $12load_method.1 = getattr(value=$10load_global.0, attr=isnan) ['$10load_global.0', '$12load_method.1']
    $16call_method.3 = call $12load_method.1(b, func=$12load_method.1, args=[Var(b, arrayobj.py:6317)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_method.1', '$16call_method.3', 'b']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($16call_method.3, func=bool18, args=(Var($16call_method.3, arrayobj.py:6322),), kws=(), vararg=None, varkwarg=None, target=None) ['$16call_method.3', '$18pred', 'bool18']
    $phi30.0 = $16call_method.3              ['$16call_method.3', '$phi30.0']
    branch $18pred, 20, 30                   ['$18pred']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=isnan) ['$20load_global.0', '$22load_method.1']
    $26call_method.3 = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arrayobj.py:6317)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', '$26call_method.3', 'a']
    $28unary_not.4 = unary(fn=<built-in function not_>, value=$26call_method.3) ['$26call_method.3', '$28unary_not.4']
    $phi30.0 = $28unary_not.4                ['$28unary_not.4', '$phi30.0']
    jump 30                                  []
label 30:
    $30return_value.1 = cast(value=$phi30.0) ['$30return_value.1', '$phi30.0']
    return $30return_value.1                 ['$30return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34A2220>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = a < b
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:6322),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $phi30.0 = $6compare_op.2
12-22 13:04 DEBUG    on stmt: branch $8pred, 30, 10
12-22 13:04 DEBUG    ==== SSA block analysis pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34A2220>
12-22 13:04 DEBUG    on stmt: $10load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $12load_method.1 = getattr(value=$10load_global.0, attr=isnan)
12-22 13:04 DEBUG    on stmt: $16call_method.3 = call $12load_method.1(b, func=$12load_method.1, args=[Var(b, arrayobj.py:6317)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool18 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $18pred = call bool18($16call_method.3, func=bool18, args=(Var($16call_method.3, arrayobj.py:6322),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $phi30.0 = $16call_method.3
12-22 13:04 DEBUG    on stmt: branch $18pred, 20, 30
12-22 13:04 DEBUG    ==== SSA block analysis pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34A2220>
12-22 13:04 DEBUG    on stmt: $20load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=isnan)
12-22 13:04 DEBUG    on stmt: $26call_method.3 = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arrayobj.py:6317)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28unary_not.4 = unary(fn=<built-in function not_>, value=$26call_method.3)
12-22 13:04 DEBUG    on stmt: $phi30.0 = $28unary_not.4
12-22 13:04 DEBUG    on stmt: jump 30
12-22 13:04 DEBUG    ==== SSA block analysis pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34A2220>
12-22 13:04 DEBUG    on stmt: $30return_value.1 = cast(value=$phi30.0)
12-22 13:04 DEBUG    on stmt: return $30return_value.1
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10load_global.0': [<numba.core.ir.Assign object at 0x000001AEF34A0280>],
             '$12load_method.1': [<numba.core.ir.Assign object at 0x000001AEF34A0400>],
             '$16call_method.3': [<numba.core.ir.Assign object at 0x000001AEF34A06D0>],
             '$18pred': [<numba.core.ir.Assign object at 0x000001AEF34A0940>],
             '$20load_global.0': [<numba.core.ir.Assign object at 0x000001AEF34A0BE0>],
             '$22load_method.1': [<numba.core.ir.Assign object at 0x000001AEF34A0D60>],
             '$26call_method.3': [<numba.core.ir.Assign object at 0x000001AEF34A9070>],
             '$28unary_not.4': [<numba.core.ir.Assign object at 0x000001AEF34A91C0>],
             '$30return_value.1': [<numba.core.ir.Assign object at 0x000001AEF34A9460>],
             '$6compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF347DD00>],
             '$8pred': [<numba.core.ir.Assign object at 0x000001AEF347DFA0>],
             '$phi30.0': [<numba.core.ir.Assign object at 0x000001AEF347DB80>,
                          <numba.core.ir.Assign object at 0x000001AEF347D250>,
                          <numba.core.ir.Assign object at 0x000001AEF34A0E80>],
             'a': [<numba.core.ir.Assign object at 0x000001AEF347D820>],
             'b': [<numba.core.ir.Assign object at 0x000001AEF347D940>],
             'bool18': [<numba.core.ir.Assign object at 0x000001AEF34A0820>],
             'bool8': [<numba.core.ir.Assign object at 0x000001AEF347DE80>]})
12-22 13:04 DEBUG    SSA violators {'$phi30.0'}
12-22 13:04 DEBUG    Fix SSA violator on var $phi30.0
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A2490>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = a < b
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:6322),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $phi30.0 = $6compare_op.2
12-22 13:04 DEBUG    first assign: $phi30.0
12-22 13:04 DEBUG    replaced with: $phi30.0 = $6compare_op.2
12-22 13:04 DEBUG    on stmt: branch $8pred, 30, 10
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A2490>
12-22 13:04 DEBUG    on stmt: $10load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $12load_method.1 = getattr(value=$10load_global.0, attr=isnan)
12-22 13:04 DEBUG    on stmt: $16call_method.3 = call $12load_method.1(b, func=$12load_method.1, args=[Var(b, arrayobj.py:6317)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool18 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $18pred = call bool18($16call_method.3, func=bool18, args=(Var($16call_method.3, arrayobj.py:6322),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $phi30.0 = $16call_method.3
12-22 13:04 DEBUG    replaced with: $phi30.0.1 = $16call_method.3
12-22 13:04 DEBUG    on stmt: branch $18pred, 20, 30
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A2490>
12-22 13:04 DEBUG    on stmt: $20load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=isnan)
12-22 13:04 DEBUG    on stmt: $26call_method.3 = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arrayobj.py:6317)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28unary_not.4 = unary(fn=<built-in function not_>, value=$26call_method.3)
12-22 13:04 DEBUG    on stmt: $phi30.0 = $28unary_not.4
12-22 13:04 DEBUG    replaced with: $phi30.0.2 = $28unary_not.4
12-22 13:04 DEBUG    on stmt: jump 30
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A2490>
12-22 13:04 DEBUG    on stmt: $30return_value.1 = cast(value=$phi30.0)
12-22 13:04 DEBUG    on stmt: return $30return_value.1
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001AEF34A2310>],
             10: [<numba.core.ir.Assign object at 0x000001AEF34A26A0>],
             20: [<numba.core.ir.Assign object at 0x000001AEF34A2160>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34A27C0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(1, name=b)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = a < b
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, arrayobj.py:6322),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $phi30.0 = $6compare_op.2
12-22 13:04 DEBUG    on stmt: branch $8pred, 30, 10
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34A27C0>
12-22 13:04 DEBUG    on stmt: $10load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $12load_method.1 = getattr(value=$10load_global.0, attr=isnan)
12-22 13:04 DEBUG    on stmt: $16call_method.3 = call $12load_method.1(b, func=$12load_method.1, args=[Var(b, arrayobj.py:6317)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool18 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $18pred = call bool18($16call_method.3, func=bool18, args=(Var($16call_method.3, arrayobj.py:6322),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $phi30.0.1 = $16call_method.3
12-22 13:04 DEBUG    on stmt: branch $18pred, 20, 30
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34A27C0>
12-22 13:04 DEBUG    on stmt: $20load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=isnan)
12-22 13:04 DEBUG    on stmt: $26call_method.3 = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arrayobj.py:6317)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28unary_not.4 = unary(fn=<built-in function not_>, value=$26call_method.3)
12-22 13:04 DEBUG    on stmt: $phi30.0.2 = $28unary_not.4
12-22 13:04 DEBUG    on stmt: jump 30
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 30
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34A27C0>
12-22 13:04 DEBUG    on stmt: $30return_value.1 = cast(value=$phi30.0)
12-22 13:04 DEBUG    find_def var='$phi30.0' stmt=$30return_value.1 = cast(value=$phi30.0)
12-22 13:04 DEBUG    find_def_from_top label 30
12-22 13:04 DEBUG    insert phi node $phi30.0.3 = phi(incoming_values=[], incoming_blocks=[]) at 30
12-22 13:04 DEBUG    find_def_from_bottom label 0
12-22 13:04 DEBUG    incoming_def $phi30.0 = $6compare_op.2
12-22 13:04 DEBUG    find_def_from_bottom label 10
12-22 13:04 DEBUG    incoming_def $phi30.0.1 = $16call_method.3
12-22 13:04 DEBUG    find_def_from_bottom label 20
12-22 13:04 DEBUG    incoming_def $phi30.0.2 = $28unary_not.4
12-22 13:04 DEBUG    replaced with: $30return_value.1 = cast(value=$phi30.0.3)
12-22 13:04 DEBUG    on stmt: return $30return_value.1
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=66)
           2	LOAD_FAST(arg=2, lineno=71)
           4	LOAD_CONST(arg=1, lineno=71)
           6	COMPARE_OP(arg=5, lineno=71)
           8	POP_JUMP_IF_TRUE(arg=14, lineno=71)
          10	LOAD_GLOBAL(arg=0, lineno=71)
          12	RAISE_VARARGS(arg=1, lineno=71)
>         14	LOAD_FAST(arg=3, lineno=72)
          16	LOAD_FAST(arg=2, lineno=72)
          18	COMPARE_OP(arg=1, lineno=72)
          20	POP_JUMP_IF_FALSE(arg=26, lineno=72)
          22	LOAD_CONST(arg=2, lineno=73)
          24	RETURN_VALUE(arg=None, lineno=73)
>         26	LOAD_GLOBAL(arg=1, lineno=75)
          28	LOAD_FAST(arg=2, lineno=75)
          30	LOAD_CONST(arg=3, lineno=75)
          32	BINARY_ADD(arg=None, lineno=75)
          34	LOAD_FAST(arg=3, lineno=75)
          36	LOAD_CONST(arg=3, lineno=75)
          38	BINARY_ADD(arg=None, lineno=75)
          40	CALL_FUNCTION(arg=2, lineno=75)
          42	GET_ITER(arg=None, lineno=75)
>         44	FOR_ITER(arg=92, lineno=75)
          46	STORE_FAST(arg=4, lineno=75)
          48	LOAD_FAST(arg=1, lineno=76)
          50	LOAD_FAST(arg=4, lineno=76)
          52	BINARY_SUBSCR(arg=None, lineno=76)
          54	STORE_FAST(arg=5, lineno=76)
          56	LOAD_DEREF(arg=0, lineno=77)
          58	LOAD_FAST(arg=0, lineno=77)
          60	LOAD_FAST(arg=5, lineno=77)
          62	CALL_FUNCTION(arg=2, lineno=77)
          64	STORE_FAST(arg=6, lineno=77)
          66	LOAD_FAST(arg=4, lineno=79)
          68	STORE_FAST(arg=7, lineno=79)
>         70	LOAD_FAST(arg=7, lineno=80)
          72	LOAD_FAST(arg=2, lineno=80)
          74	COMPARE_OP(arg=4, lineno=80)
          76	POP_JUMP_IF_FALSE(arg=128, lineno=80)
          78	LOAD_DEREF(arg=1, lineno=80)
          80	LOAD_FAST(arg=6, lineno=80)
          82	LOAD_DEREF(arg=0, lineno=80)
          84	LOAD_FAST(arg=0, lineno=80)
          86	LOAD_FAST(arg=1, lineno=80)
          88	LOAD_FAST(arg=7, lineno=80)
          90	LOAD_CONST(arg=3, lineno=80)
          92	BINARY_SUBTRACT(arg=None, lineno=80)
          94	BINARY_SUBSCR(arg=None, lineno=80)
          96	CALL_FUNCTION(arg=2, lineno=80)
          98	CALL_FUNCTION(arg=2, lineno=80)
         100	POP_JUMP_IF_FALSE(arg=128, lineno=80)
         102	LOAD_FAST(arg=1, lineno=82)
         104	LOAD_FAST(arg=7, lineno=82)
         106	LOAD_CONST(arg=3, lineno=82)
         108	BINARY_SUBTRACT(arg=None, lineno=82)
         110	BINARY_SUBSCR(arg=None, lineno=82)
         112	LOAD_FAST(arg=1, lineno=82)
         114	LOAD_FAST(arg=7, lineno=82)
         116	STORE_SUBSCR(arg=None, lineno=82)
         118	LOAD_FAST(arg=7, lineno=83)
         120	LOAD_CONST(arg=3, lineno=83)
         122	INPLACE_SUBTRACT(arg=None, lineno=83)
         124	STORE_FAST(arg=7, lineno=83)
         126	JUMP_ABSOLUTE(arg=70, lineno=83)
>        128	LOAD_FAST(arg=5, lineno=84)
         130	LOAD_FAST(arg=1, lineno=84)
         132	LOAD_FAST(arg=7, lineno=84)
         134	STORE_SUBSCR(arg=None, lineno=84)
         136	JUMP_ABSOLUTE(arg=44, lineno=84)
>        138	LOAD_CONST(arg=2, lineno=84)
         140	RETURN_VALUE(arg=None, lineno=84)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=66)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=2, lineno=71)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=71)
12-22 13:04 DEBUG    stack ['$low2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=COMPARE_OP(arg=5, lineno=71)
12-22 13:04 DEBUG    stack ['$low2.0', '$const4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=POP_JUMP_IF_TRUE(arg=14, lineno=71)
12-22 13:04 DEBUG    stack ['$6compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=10 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=71)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=RAISE_VARARGS(arg=1, lineno=71)
12-22 13:04 DEBUG    stack ['$10load_global.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=14 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=14 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=72)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=72)
12-22 13:04 DEBUG    stack ['$high14.0']
12-22 13:04 DEBUG    dispatch pc=18, inst=COMPARE_OP(arg=1, lineno=72)
12-22 13:04 DEBUG    stack ['$high14.0', '$low16.1']
12-22 13:04 DEBUG    dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=26, lineno=72)
12-22 13:04 DEBUG    stack ['$18compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=22 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=73)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=73)
12-22 13:04 DEBUG    stack ['$const22.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=26 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=26 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=26, inst=LOAD_GLOBAL(arg=1, lineno=75)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=28, inst=LOAD_FAST(arg=2, lineno=75)
12-22 13:04 DEBUG    stack ['$26load_global.0']
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=75)
12-22 13:04 DEBUG    stack ['$26load_global.0', '$low28.1']
12-22 13:04 DEBUG    dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=75)
12-22 13:04 DEBUG    stack ['$26load_global.0', '$low28.1', '$const30.2']
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_FAST(arg=3, lineno=75)
12-22 13:04 DEBUG    stack ['$26load_global.0', '$32binary_add.3']
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=75)
12-22 13:04 DEBUG    stack ['$26load_global.0', '$32binary_add.3', '$high34.4']
12-22 13:04 DEBUG    dispatch pc=38, inst=BINARY_ADD(arg=None, lineno=75)
12-22 13:04 DEBUG    stack ['$26load_global.0', '$32binary_add.3', '$high34.4', '$const36.5']
12-22 13:04 DEBUG    dispatch pc=40, inst=CALL_FUNCTION(arg=2, lineno=75)
12-22 13:04 DEBUG    stack ['$26load_global.0', '$32binary_add.3', '$38binary_add.6']
12-22 13:04 DEBUG    dispatch pc=42, inst=GET_ITER(arg=None, lineno=75)
12-22 13:04 DEBUG    stack ['$40call_function.7']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=44, stack=('$42get_iter.8',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=44 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi44.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=44 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=44, inst=FOR_ITER(arg=92, lineno=75)
12-22 13:04 DEBUG    stack ['$phi44.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=46, stack=('$phi44.0', '$44for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=46 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=138 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=138, inst=LOAD_CONST(arg=2, lineno=84)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=140, inst=RETURN_VALUE(arg=None, lineno=84)
12-22 13:04 DEBUG    stack ['$const138.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=46 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi46.0', '$phi46.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=46 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=46, inst=STORE_FAST(arg=4, lineno=75)
12-22 13:04 DEBUG    stack ['$phi46.0', '$phi46.1']
12-22 13:04 DEBUG    dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=76)
12-22 13:04 DEBUG    stack ['$phi46.0']
12-22 13:04 DEBUG    dispatch pc=50, inst=LOAD_FAST(arg=4, lineno=76)
12-22 13:04 DEBUG    stack ['$phi46.0', '$R48.2']
12-22 13:04 DEBUG    dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=76)
12-22 13:04 DEBUG    stack ['$phi46.0', '$R48.2', '$i50.3']
12-22 13:04 DEBUG    dispatch pc=54, inst=STORE_FAST(arg=5, lineno=76)
12-22 13:04 DEBUG    stack ['$phi46.0', '$52binary_subscr.4']
12-22 13:04 DEBUG    dispatch pc=56, inst=LOAD_DEREF(arg=0, lineno=77)
12-22 13:04 DEBUG    stack ['$phi46.0']
12-22 13:04 DEBUG    dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=77)
12-22 13:04 DEBUG    stack ['$phi46.0', '$56load_deref.5']
12-22 13:04 DEBUG    dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=77)
12-22 13:04 DEBUG    stack ['$phi46.0', '$56load_deref.5', '$A58.6']
12-22 13:04 DEBUG    dispatch pc=62, inst=CALL_FUNCTION(arg=2, lineno=77)
12-22 13:04 DEBUG    stack ['$phi46.0', '$56load_deref.5', '$A58.6', '$k60.7']
12-22 13:04 DEBUG    dispatch pc=64, inst=STORE_FAST(arg=6, lineno=77)
12-22 13:04 DEBUG    stack ['$phi46.0', '$62call_function.8']
12-22 13:04 DEBUG    dispatch pc=66, inst=LOAD_FAST(arg=4, lineno=79)
12-22 13:04 DEBUG    stack ['$phi46.0']
12-22 13:04 DEBUG    dispatch pc=68, inst=STORE_FAST(arg=7, lineno=79)
12-22 13:04 DEBUG    stack ['$phi46.0', '$i66.9']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=70, stack=('$phi46.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=70 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi70.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=70 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=70, inst=LOAD_FAST(arg=7, lineno=80)
12-22 13:04 DEBUG    stack ['$phi70.0']
12-22 13:04 DEBUG    dispatch pc=72, inst=LOAD_FAST(arg=2, lineno=80)
12-22 13:04 DEBUG    stack ['$phi70.0', '$j70.1']
12-22 13:04 DEBUG    dispatch pc=74, inst=COMPARE_OP(arg=4, lineno=80)
12-22 13:04 DEBUG    stack ['$phi70.0', '$j70.1', '$low72.2']
12-22 13:04 DEBUG    dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=128, lineno=80)
12-22 13:04 DEBUG    stack ['$phi70.0', '$74compare_op.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=78, stack=('$phi70.0',), blockstack=(), npush=0), Edge(pc=128, stack=('$phi70.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=78 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi78.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=78 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=78, inst=LOAD_DEREF(arg=1, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0']
12-22 13:04 DEBUG    dispatch pc=80, inst=LOAD_FAST(arg=6, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0', '$78load_deref.1']
12-22 13:04 DEBUG    dispatch pc=82, inst=LOAD_DEREF(arg=0, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0', '$78load_deref.1', '$v80.2']
12-22 13:04 DEBUG    dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3']
12-22 13:04 DEBUG    dispatch pc=86, inst=LOAD_FAST(arg=1, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4']
12-22 13:04 DEBUG    dispatch pc=88, inst=LOAD_FAST(arg=7, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4', '$R86.5']
12-22 13:04 DEBUG    dispatch pc=90, inst=LOAD_CONST(arg=3, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4', '$R86.5', '$j88.6']
12-22 13:04 DEBUG    dispatch pc=92, inst=BINARY_SUBTRACT(arg=None, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4', '$R86.5', '$j88.6', '$const90.7']
12-22 13:04 DEBUG    dispatch pc=94, inst=BINARY_SUBSCR(arg=None, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4', '$R86.5', '$92binary_subtract.8']
12-22 13:04 DEBUG    dispatch pc=96, inst=CALL_FUNCTION(arg=2, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$82load_deref.3', '$A84.4', '$94binary_subscr.9']
12-22 13:04 DEBUG    dispatch pc=98, inst=CALL_FUNCTION(arg=2, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0', '$78load_deref.1', '$v80.2', '$96call_function.10']
12-22 13:04 DEBUG    dispatch pc=100, inst=POP_JUMP_IF_FALSE(arg=128, lineno=80)
12-22 13:04 DEBUG    stack ['$phi78.0', '$98call_function.11']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=102, stack=('$phi78.0',), blockstack=(), npush=0), Edge(pc=128, stack=('$phi78.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=102 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi128.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=128 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=128, inst=LOAD_FAST(arg=5, lineno=84)
12-22 13:04 DEBUG    stack ['$phi128.0']
12-22 13:04 DEBUG    dispatch pc=130, inst=LOAD_FAST(arg=1, lineno=84)
12-22 13:04 DEBUG    stack ['$phi128.0', '$k128.1']
12-22 13:04 DEBUG    dispatch pc=132, inst=LOAD_FAST(arg=7, lineno=84)
12-22 13:04 DEBUG    stack ['$phi128.0', '$k128.1', '$R130.2']
12-22 13:04 DEBUG    dispatch pc=134, inst=STORE_SUBSCR(arg=None, lineno=84)
12-22 13:04 DEBUG    stack ['$phi128.0', '$k128.1', '$R130.2', '$j132.3']
12-22 13:04 DEBUG    dispatch pc=136, inst=JUMP_ABSOLUTE(arg=44, lineno=84)
12-22 13:04 DEBUG    stack ['$phi128.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=44, stack=('$phi128.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=128 nstack_initial=1), State(pc_initial=44 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi102.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=102 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=82)
12-22 13:04 DEBUG    stack ['$phi102.0']
12-22 13:04 DEBUG    dispatch pc=104, inst=LOAD_FAST(arg=7, lineno=82)
12-22 13:04 DEBUG    stack ['$phi102.0', '$R102.1']
12-22 13:04 DEBUG    dispatch pc=106, inst=LOAD_CONST(arg=3, lineno=82)
12-22 13:04 DEBUG    stack ['$phi102.0', '$R102.1', '$j104.2']
12-22 13:04 DEBUG    dispatch pc=108, inst=BINARY_SUBTRACT(arg=None, lineno=82)
12-22 13:04 DEBUG    stack ['$phi102.0', '$R102.1', '$j104.2', '$const106.3']
12-22 13:04 DEBUG    dispatch pc=110, inst=BINARY_SUBSCR(arg=None, lineno=82)
12-22 13:04 DEBUG    stack ['$phi102.0', '$R102.1', '$108binary_subtract.4']
12-22 13:04 DEBUG    dispatch pc=112, inst=LOAD_FAST(arg=1, lineno=82)
12-22 13:04 DEBUG    stack ['$phi102.0', '$110binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=114, inst=LOAD_FAST(arg=7, lineno=82)
12-22 13:04 DEBUG    stack ['$phi102.0', '$110binary_subscr.5', '$R112.6']
12-22 13:04 DEBUG    dispatch pc=116, inst=STORE_SUBSCR(arg=None, lineno=82)
12-22 13:04 DEBUG    stack ['$phi102.0', '$110binary_subscr.5', '$R112.6', '$j114.7']
12-22 13:04 DEBUG    dispatch pc=118, inst=LOAD_FAST(arg=7, lineno=83)
12-22 13:04 DEBUG    stack ['$phi102.0']
12-22 13:04 DEBUG    dispatch pc=120, inst=LOAD_CONST(arg=3, lineno=83)
12-22 13:04 DEBUG    stack ['$phi102.0', '$j118.8']
12-22 13:04 DEBUG    dispatch pc=122, inst=INPLACE_SUBTRACT(arg=None, lineno=83)
12-22 13:04 DEBUG    stack ['$phi102.0', '$j118.8', '$const120.9']
12-22 13:04 DEBUG    dispatch pc=124, inst=STORE_FAST(arg=7, lineno=83)
12-22 13:04 DEBUG    stack ['$phi102.0', '$122inplace_subtract.10']
12-22 13:04 DEBUG    dispatch pc=126, inst=JUMP_ABSOLUTE(arg=70, lineno=83)
12-22 13:04 DEBUG    stack ['$phi102.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=70, stack=('$phi102.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=44 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=70 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=1): {'$phi44.0'},
             State(pc_initial=46 nstack_initial=2): {'$phi46.1'},
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=78 nstack_initial=1): set(),
             State(pc_initial=102 nstack_initial=1): set(),
             State(pc_initial=128 nstack_initial=1): set(),
             State(pc_initial=138 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi44.0': State(pc_initial=26 nstack_initial=0),
 '$phi46.1': State(pc_initial=44 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi78.0', State(pc_initial=78 nstack_initial=1))},
             '$phi128.0': {('$phi70.0', State(pc_initial=70 nstack_initial=1)),
                           ('$phi78.0', State(pc_initial=78 nstack_initial=1))},
             '$phi44.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$phi128.0',
                           State(pc_initial=128 nstack_initial=1))},
             '$phi46.0': {('$phi44.0', State(pc_initial=44 nstack_initial=1))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))},
             '$phi70.0': {('$phi102.0', State(pc_initial=102 nstack_initial=1)),
                          ('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi78.0': {('$phi70.0', State(pc_initial=70 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi70.0', State(pc_initial=70 nstack_initial=1))},
             '$phi128.0': {('$phi102.0',
                            State(pc_initial=102 nstack_initial=1)),
                           ('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi44.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$phi102.0', State(pc_initial=102 nstack_initial=1)),
                          ('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi46.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$phi102.0', State(pc_initial=102 nstack_initial=1)),
                          ('$phi46.0', State(pc_initial=46 nstack_initial=2))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))},
             '$phi70.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=1))},
             '$phi78.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$42get_iter.8',
                            State(pc_initial=26 nstack_initial=0))},
             '$phi128.0': {('$42get_iter.8',
                            State(pc_initial=26 nstack_initial=0))},
             '$phi44.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))},
             '$phi46.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))},
             '$phi70.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))},
             '$phi78.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$42get_iter.8',
                            State(pc_initial=26 nstack_initial=0))},
             '$phi128.0': {('$42get_iter.8',
                            State(pc_initial=26 nstack_initial=0))},
             '$phi44.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))},
             '$phi46.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))},
             '$phi46.1': {('$44for_iter.2',
                           State(pc_initial=44 nstack_initial=1))},
             '$phi70.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))},
             '$phi78.0': {('$42get_iter.8',
                           State(pc_initial=26 nstack_initial=0))}})
12-22 13:04 DEBUG    keep phismap: {'$phi44.0': {('$42get_iter.8', State(pc_initial=26 nstack_initial=0))},
 '$phi46.1': {('$44for_iter.2', State(pc_initial=44 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=26 nstack_initial=0): {'$phi44.0': '$42get_iter.8'},
             State(pc_initial=44 nstack_initial=1): {'$phi46.1': '$44for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$low2.0'}), (4, {'res': '$const4.1'}), (6, {'lhs': '$low2.0', 'rhs': '$const4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$10load_global.0'}), (12, {'exc': '$10load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$high14.0'}), (16, {'res': '$low16.1'}), (18, {'lhs': '$high14.0', 'rhs': '$low16.1', 'res': '$18compare_op.2'}), (20, {'pred': '$18compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 26: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$const22.0'}), (24, {'retval': '$const22.0', 'castval': '$24return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$26load_global.0'}), (28, {'res': '$low28.1'}), (30, {'res': '$const30.2'}), (32, {'lhs': '$low28.1', 'rhs': '$const30.2', 'res': '$32binary_add.3'}), (34, {'res': '$high34.4'}), (36, {'res': '$const36.5'}), (38, {'lhs': '$high34.4', 'rhs': '$const36.5', 'res': '$38binary_add.6'}), (40, {'func': '$26load_global.0', 'args': ['$32binary_add.3', '$38binary_add.6'], 'res': '$40call_function.7'}), (42, {'value': '$40call_function.7', 'res': '$42get_iter.8'})), outgoing_phis={'$phi44.0': '$42get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: ('$42get_iter.8',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((44, {'iterator': '$phi44.0', 'pair': '$44for_iter.1', 'indval': '$44for_iter.2', 'pred': '$44for_iter.3'}),), outgoing_phis={'$phi46.1': '$44for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 46: ('$phi44.0', '$44for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=46 nstack_initial=2):
AdaptBlockInfo(insts=((46, {'value': '$phi46.1'}), (48, {'res': '$R48.2'}), (50, {'res': '$i50.3'}), (52, {'index': '$i50.3', 'target': '$R48.2', 'res': '$52binary_subscr.4'}), (54, {'value': '$52binary_subscr.4'}), (56, {'res': '$56load_deref.5'}), (58, {'res': '$A58.6'}), (60, {'res': '$k60.7'}), (62, {'func': '$56load_deref.5', 'args': ['$A58.6', '$k60.7'], 'res': '$62call_function.8'}), (64, {'value': '$62call_function.8'}), (66, {'res': '$i66.9'}), (68, {'value': '$i66.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: ('$phi46.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((70, {'res': '$j70.1'}), (72, {'res': '$low72.2'}), (74, {'lhs': '$j70.1', 'rhs': '$low72.2', 'res': '$74compare_op.3'}), (76, {'pred': '$74compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ('$phi70.0',), 128: ('$phi70.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=78 nstack_initial=1):
AdaptBlockInfo(insts=((78, {'res': '$78load_deref.1'}), (80, {'res': '$v80.2'}), (82, {'res': '$82load_deref.3'}), (84, {'res': '$A84.4'}), (86, {'res': '$R86.5'}), (88, {'res': '$j88.6'}), (90, {'res': '$const90.7'}), (92, {'lhs': '$j88.6', 'rhs': '$const90.7', 'res': '$92binary_subtract.8'}), (94, {'index': '$92binary_subtract.8', 'target': '$R86.5', 'res': '$94binary_subscr.9'}), (96, {'func': '$82load_deref.3', 'args': ['$A84.4', '$94binary_subscr.9'], 'res': '$96call_function.10'}), (98, {'func': '$78load_deref.1', 'args': ['$v80.2', '$96call_function.10'], 'res': '$98call_function.11'}), (100, {'pred': '$98call_function.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ('$phi78.0',), 128: ('$phi78.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=102 nstack_initial=1):
AdaptBlockInfo(insts=((102, {'res': '$R102.1'}), (104, {'res': '$j104.2'}), (106, {'res': '$const106.3'}), (108, {'lhs': '$j104.2', 'rhs': '$const106.3', 'res': '$108binary_subtract.4'}), (110, {'index': '$108binary_subtract.4', 'target': '$R102.1', 'res': '$110binary_subscr.5'}), (112, {'res': '$R112.6'}), (114, {'res': '$j114.7'}), (116, {'target': '$R112.6', 'index': '$j114.7', 'value': '$110binary_subscr.5'}), (118, {'res': '$j118.8'}), (120, {'res': '$const120.9'}), (122, {'lhs': '$j118.8', 'rhs': '$const120.9', 'res': '$122inplace_subtract.10'}), (124, {'value': '$122inplace_subtract.10'}), (126, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: ('$phi102.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=128 nstack_initial=1):
AdaptBlockInfo(insts=((128, {'res': '$k128.1'}), (130, {'res': '$R130.2'}), (132, {'res': '$j132.3'}), (134, {'target': '$R130.2', 'index': '$j132.3', 'value': '$k128.1'}), (136, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: ('$phi128.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$const138.0'}), (140, {'retval': '$const138.0', 'castval': '$140return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    A = arg(0, name=A)                       ['A']
    R = arg(1, name=R)                       ['R']
    low = arg(2, name=low)                   ['low']
    high = arg(3, name=high)                 ['high']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6compare_op.2 = low >= $const4.1        ['$6compare_op.2', '$const4.1', 'low']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:71),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 14, 10                    ['$8pred']
label 10:
    $10load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$10load_global.0']
    raise $10load_global.0                   ['$10load_global.0']
label 14:
    $18compare_op.2 = high <= low            ['$18compare_op.2', 'high', 'low']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:72),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    branch $20pred, 22, 26                   ['$20pred']
label 22:
    $const22.0 = const(NoneType, None)       ['$const22.0']
    $24return_value.1 = cast(value=$const22.0) ['$24return_value.1', '$const22.0']
    return $24return_value.1                 ['$24return_value.1']
label 26:
    $26load_global.0 = global(range: <class 'range'>) ['$26load_global.0']
    $const30.2 = const(int, 1)               ['$const30.2']
    $32binary_add.3 = low + $const30.2       ['$32binary_add.3', '$const30.2', 'low']
    $const36.5 = const(int, 1)               ['$const36.5']
    $38binary_add.6 = high + $const36.5      ['$38binary_add.6', '$const36.5', 'high']
    $40call_function.7 = call $26load_global.0($32binary_add.3, $38binary_add.6, func=$26load_global.0, args=[Var($32binary_add.3, quicksort.py:75), Var($38binary_add.6, quicksort.py:75)], kws=(), vararg=None, varkwarg=None, target=None) ['$26load_global.0', '$32binary_add.3', '$38binary_add.6', '$40call_function.7']
    $42get_iter.8 = getiter(value=$40call_function.7) ['$40call_function.7', '$42get_iter.8']
    $phi44.0 = $42get_iter.8                 ['$42get_iter.8', '$phi44.0']
    jump 44                                  []
label 44:
    $44for_iter.1 = iternext(value=$phi44.0) ['$44for_iter.1', '$phi44.0']
    $44for_iter.2 = pair_first(value=$44for_iter.1) ['$44for_iter.1', '$44for_iter.2']
    $44for_iter.3 = pair_second(value=$44for_iter.1) ['$44for_iter.1', '$44for_iter.3']
    $phi46.1 = $44for_iter.2                 ['$44for_iter.2', '$phi46.1']
    branch $44for_iter.3, 46, 138            ['$44for_iter.3']
label 46:
    i = $phi46.1                             ['$phi46.1', 'i']
    k = getitem(value=R, index=i, fn=<built-in function getitem>) ['R', 'i', 'k']
    $56load_deref.5 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>) ['$56load_deref.5']
    v = call $56load_deref.5(A, k, func=$56load_deref.5, args=[Var(A, quicksort.py:66), Var(k, quicksort.py:76)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_deref.5', 'A', 'k', 'v']
    j = i                                    ['i', 'j']
    jump 70                                  []
label 70:
    $74compare_op.3 = j > low                ['$74compare_op.3', 'j', 'low']
    bool76 = global(bool: <class 'bool'>)    ['bool76']
    $76pred = call bool76($74compare_op.3, func=bool76, args=(Var($74compare_op.3, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None) ['$74compare_op.3', '$76pred', 'bool76']
    branch $76pred, 78, 128                  ['$76pred']
label 78:
    $78load_deref.1 = freevar(LT: <function lt_floats at 0x000001AEF1617310>) ['$78load_deref.1']
    $82load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>) ['$82load_deref.3']
    $const90.7 = const(int, 1)               ['$const90.7']
    $92binary_subtract.8 = j - $const90.7    ['$92binary_subtract.8', '$const90.7', 'j']
    $94binary_subscr.9 = getitem(value=R, index=$92binary_subtract.8, fn=<built-in function getitem>) ['$92binary_subtract.8', '$94binary_subscr.9', 'R']
    $96call_function.10 = call $82load_deref.3(A, $94binary_subscr.9, func=$82load_deref.3, args=[Var(A, quicksort.py:66), Var($94binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None) ['$82load_deref.3', '$94binary_subscr.9', '$96call_function.10', 'A']
    $98call_function.11 = call $78load_deref.1(v, $96call_function.10, func=$78load_deref.1, args=[Var(v, quicksort.py:77), Var($96call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None) ['$78load_deref.1', '$96call_function.10', '$98call_function.11', 'v']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98call_function.11, func=bool100, args=(Var($98call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98call_function.11', 'bool100']
    branch $100pred, 102, 128                ['$100pred']
label 102:
    $const106.3 = const(int, 1)              ['$const106.3']
    $108binary_subtract.4 = j - $const106.3  ['$108binary_subtract.4', '$const106.3', 'j']
    $110binary_subscr.5 = getitem(value=R, index=$108binary_subtract.4, fn=<built-in function getitem>) ['$108binary_subtract.4', '$110binary_subscr.5', 'R']
    R[j] = $110binary_subscr.5               ['$110binary_subscr.5', 'R', 'j']
    $const120.9 = const(int, 1)              ['$const120.9']
    $122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined) ['$122inplace_subtract.10', '$const120.9', 'j']
    j = $122inplace_subtract.10              ['$122inplace_subtract.10', 'j']
    jump 70                                  []
label 128:
    R[j] = k                                 ['R', 'j', 'k']
    jump 44                                  []
label 138:
    $const138.0 = const(NoneType, None)      ['$const138.0']
    $140return_value.1 = cast(value=$const138.0) ['$140return_value.1', '$const138.0']
    return $140return_value.1                ['$140return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: R = arg(1, name=R)
12-22 13:04 DEBUG    on stmt: low = arg(2, name=low)
12-22 13:04 DEBUG    on stmt: high = arg(3, name=high)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = low >= $const4.1
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:71),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $8pred, 14, 10
12-22 13:04 DEBUG    ==== SSA block analysis pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: $10load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block analysis pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: $18compare_op.2 = high <= low
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 22, 26
12-22 13:04 DEBUG    ==== SSA block analysis pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: $const22.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $24return_value.1 = cast(value=$const22.0)
12-22 13:04 DEBUG    on stmt: return $24return_value.1
12-22 13:04 DEBUG    ==== SSA block analysis pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: $26load_global.0 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const30.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $32binary_add.3 = low + $const30.2
12-22 13:04 DEBUG    on stmt: $const36.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38binary_add.6 = high + $const36.5
12-22 13:04 DEBUG    on stmt: $40call_function.7 = call $26load_global.0($32binary_add.3, $38binary_add.6, func=$26load_global.0, args=[Var($32binary_add.3, quicksort.py:75), Var($38binary_add.6, quicksort.py:75)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $42get_iter.8 = getiter(value=$40call_function.7)
12-22 13:04 DEBUG    on stmt: $phi44.0 = $42get_iter.8
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block analysis pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: $44for_iter.1 = iternext(value=$phi44.0)
12-22 13:04 DEBUG    on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi46.1 = $44for_iter.2
12-22 13:04 DEBUG    on stmt: branch $44for_iter.3, 46, 138
12-22 13:04 DEBUG    ==== SSA block analysis pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: i = $phi46.1
12-22 13:04 DEBUG    on stmt: k = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $56load_deref.5 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: v = call $56load_deref.5(A, k, func=$56load_deref.5, args=[Var(A, quicksort.py:66), Var(k, quicksort.py:76)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: j = i
12-22 13:04 DEBUG    on stmt: jump 70
12-22 13:04 DEBUG    ==== SSA block analysis pass on 70
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: $74compare_op.3 = j > low
12-22 13:04 DEBUG    on stmt: bool76 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $76pred = call bool76($74compare_op.3, func=bool76, args=(Var($74compare_op.3, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $76pred, 78, 128
12-22 13:04 DEBUG    ==== SSA block analysis pass on 78
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: $78load_deref.1 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $82load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $const90.7 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $92binary_subtract.8 = j - $const90.7
12-22 13:04 DEBUG    on stmt: $94binary_subscr.9 = getitem(value=R, index=$92binary_subtract.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $96call_function.10 = call $82load_deref.3(A, $94binary_subscr.9, func=$82load_deref.3, args=[Var(A, quicksort.py:66), Var($94binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98call_function.11 = call $78load_deref.1(v, $96call_function.10, func=$78load_deref.1, args=[Var(v, quicksort.py:77), Var($96call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool100 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $100pred = call bool100($98call_function.11, func=bool100, args=(Var($98call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $100pred, 102, 128
12-22 13:04 DEBUG    ==== SSA block analysis pass on 102
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: $const106.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $108binary_subtract.4 = j - $const106.3
12-22 13:04 DEBUG    on stmt: $110binary_subscr.5 = getitem(value=R, index=$108binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[j] = $110binary_subscr.5
12-22 13:04 DEBUG    on stmt: $const120.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j = $122inplace_subtract.10
12-22 13:04 DEBUG    on stmt: jump 70
12-22 13:04 DEBUG    ==== SSA block analysis pass on 128
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: R[j] = k
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block analysis pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32AEC40>
12-22 13:04 DEBUG    on stmt: $const138.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $140return_value.1 = cast(value=$const138.0)
12-22 13:04 DEBUG    on stmt: return $140return_value.1
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$100pred': [<numba.core.ir.Assign object at 0x000001AEF37CE610>],
             '$108binary_subtract.4': [<numba.core.ir.Assign object at 0x000001AEF37CEAF0>],
             '$10load_global.0': [<numba.core.ir.Assign object at 0x000001AEF3833DC0>],
             '$110binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF37CEC70>],
             '$122inplace_subtract.10': [<numba.core.ir.Assign object at 0x000001AEF37CC3D0>],
             '$140return_value.1': [<numba.core.ir.Assign object at 0x000001AEF37CCBB0>],
             '$18compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF35E4EB0>],
             '$20pred': [<numba.core.ir.Assign object at 0x000001AEF34891C0>],
             '$24return_value.1': [<numba.core.ir.Assign object at 0x000001AEF399DEE0>],
             '$26load_global.0': [<numba.core.ir.Assign object at 0x000001AEF35ED3D0>],
             '$32binary_add.3': [<numba.core.ir.Assign object at 0x000001AEF35DA4F0>],
             '$38binary_add.6': [<numba.core.ir.Assign object at 0x000001AEF35DABE0>],
             '$40call_function.7': [<numba.core.ir.Assign object at 0x000001AEF3847FA0>],
             '$42get_iter.8': [<numba.core.ir.Assign object at 0x000001AEF3A74EB0>],
             '$44for_iter.1': [<numba.core.ir.Assign object at 0x000001AEF37A0C10>],
             '$44for_iter.2': [<numba.core.ir.Assign object at 0x000001AEF37A0D30>],
             '$44for_iter.3': [<numba.core.ir.Assign object at 0x000001AEF37A0E50>],
             '$56load_deref.5': [<numba.core.ir.Assign object at 0x000001AF17AFD790>],
             '$6compare_op.2': [<numba.core.ir.Assign object at 0x000001AEF34EE820>],
             '$74compare_op.3': [<numba.core.ir.Assign object at 0x000001AEF37B4130>],
             '$76pred': [<numba.core.ir.Assign object at 0x000001AEF37B43D0>],
             '$78load_deref.1': [<numba.core.ir.Assign object at 0x000001AEF37B45B0>],
             '$82load_deref.3': [<numba.core.ir.Assign object at 0x000001AEF37B4850>],
             '$8pred': [<numba.core.ir.Assign object at 0x000001AEF3187460>],
             '$92binary_subtract.8': [<numba.core.ir.Assign object at 0x000001AEF37B4EB0>],
             '$94binary_subscr.9': [<numba.core.ir.Assign object at 0x000001AEF37CE070>],
             '$96call_function.10': [<numba.core.ir.Assign object at 0x000001AEF37CE220>],
             '$98call_function.11': [<numba.core.ir.Assign object at 0x000001AEF37CE3A0>],
             '$const106.3': [<numba.core.ir.Assign object at 0x000001AEF37CE970>],
             '$const120.9': [<numba.core.ir.Assign object at 0x000001AEF37CC250>],
             '$const138.0': [<numba.core.ir.Assign object at 0x000001AEF37CCA30>],
             '$const22.0': [<numba.core.ir.Assign object at 0x000001AEF397F9D0>],
             '$const30.2': [<numba.core.ir.Assign object at 0x000001AEF35DABB0>],
             '$const36.5': [<numba.core.ir.Assign object at 0x000001AEF35DA910>],
             '$const4.1': [<numba.core.ir.Assign object at 0x000001AEF34EEB20>],
             '$const90.7': [<numba.core.ir.Assign object at 0x000001AEF37B4D30>],
             '$phi44.0': [<numba.core.ir.Assign object at 0x000001AEF35DA790>],
             '$phi46.1': [<numba.core.ir.Assign object at 0x000001AEF37A0B20>],
             'A': [<numba.core.ir.Assign object at 0x000001AEF36119A0>],
             'R': [<numba.core.ir.Assign object at 0x000001AEF35B3850>],
             'bool100': [<numba.core.ir.Assign object at 0x000001AEF37CE4F0>],
             'bool20': [<numba.core.ir.Assign object at 0x000001AEF35E4250>],
             'bool76': [<numba.core.ir.Assign object at 0x000001AEF37B42B0>],
             'bool8': [<numba.core.ir.Assign object at 0x000001AEF31873D0>],
             'high': [<numba.core.ir.Assign object at 0x000001AEF35D3AF0>],
             'i': [<numba.core.ir.Assign object at 0x000001AF17AFD130>],
             'j': [<numba.core.ir.Assign object at 0x000001AF17AFDEB0>,
                   <numba.core.ir.Assign object at 0x000001AEF37CC490>],
             'k': [<numba.core.ir.Assign object at 0x000001AF17AFD4F0>],
             'low': [<numba.core.ir.Assign object at 0x000001AEF35D39D0>],
             'v': [<numba.core.ir.Assign object at 0x000001AF17AFDB80>]})
12-22 13:04 DEBUG    SSA violators {'j'}
12-22 13:04 DEBUG    Fix SSA violator on var j
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: R = arg(1, name=R)
12-22 13:04 DEBUG    on stmt: low = arg(2, name=low)
12-22 13:04 DEBUG    on stmt: high = arg(3, name=high)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = low >= $const4.1
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:71),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $8pred, 14, 10
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $10load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $18compare_op.2 = high <= low
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 22, 26
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $const22.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $24return_value.1 = cast(value=$const22.0)
12-22 13:04 DEBUG    on stmt: return $24return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $26load_global.0 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const30.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $32binary_add.3 = low + $const30.2
12-22 13:04 DEBUG    on stmt: $const36.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38binary_add.6 = high + $const36.5
12-22 13:04 DEBUG    on stmt: $40call_function.7 = call $26load_global.0($32binary_add.3, $38binary_add.6, func=$26load_global.0, args=[Var($32binary_add.3, quicksort.py:75), Var($38binary_add.6, quicksort.py:75)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $42get_iter.8 = getiter(value=$40call_function.7)
12-22 13:04 DEBUG    on stmt: $phi44.0 = $42get_iter.8
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $44for_iter.1 = iternext(value=$phi44.0)
12-22 13:04 DEBUG    on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi46.1 = $44for_iter.2
12-22 13:04 DEBUG    on stmt: branch $44for_iter.3, 46, 138
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: i = $phi46.1
12-22 13:04 DEBUG    on stmt: k = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $56load_deref.5 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: v = call $56load_deref.5(A, k, func=$56load_deref.5, args=[Var(A, quicksort.py:66), Var(k, quicksort.py:76)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: j = i
12-22 13:04 DEBUG    first assign: j
12-22 13:04 DEBUG    replaced with: j = i
12-22 13:04 DEBUG    on stmt: jump 70
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 70
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $74compare_op.3 = j > low
12-22 13:04 DEBUG    on stmt: bool76 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $76pred = call bool76($74compare_op.3, func=bool76, args=(Var($74compare_op.3, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $76pred, 78, 128
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 78
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $78load_deref.1 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $82load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $const90.7 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $92binary_subtract.8 = j - $const90.7
12-22 13:04 DEBUG    on stmt: $94binary_subscr.9 = getitem(value=R, index=$92binary_subtract.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $96call_function.10 = call $82load_deref.3(A, $94binary_subscr.9, func=$82load_deref.3, args=[Var(A, quicksort.py:66), Var($94binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98call_function.11 = call $78load_deref.1(v, $96call_function.10, func=$78load_deref.1, args=[Var(v, quicksort.py:77), Var($96call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool100 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $100pred = call bool100($98call_function.11, func=bool100, args=(Var($98call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $100pred, 102, 128
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 102
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $const106.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $108binary_subtract.4 = j - $const106.3
12-22 13:04 DEBUG    on stmt: $110binary_subscr.5 = getitem(value=R, index=$108binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[j] = $110binary_subscr.5
12-22 13:04 DEBUG    on stmt: $const120.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j = $122inplace_subtract.10
12-22 13:04 DEBUG    replaced with: j.1 = $122inplace_subtract.10
12-22 13:04 DEBUG    on stmt: jump 70
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 128
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: R[j] = k
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $const138.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $140return_value.1 = cast(value=$const138.0)
12-22 13:04 DEBUG    on stmt: return $140return_value.1
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {46: [<numba.core.ir.Assign object at 0x000001AEF37BF8E0>],
             102: [<numba.core.ir.Assign object at 0x000001AEF37BFA90>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: A = arg(0, name=A)
12-22 13:04 DEBUG    on stmt: R = arg(1, name=R)
12-22 13:04 DEBUG    on stmt: low = arg(2, name=low)
12-22 13:04 DEBUG    on stmt: high = arg(3, name=high)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = low >= $const4.1
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, quicksort.py:71),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $8pred, 14, 10
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $10load_global.0 = global(AssertionError: <class 'AssertionError'>)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'AssertionError'>
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $18compare_op.2 = high <= low
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, quicksort.py:72),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 22, 26
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $const22.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $24return_value.1 = cast(value=$const22.0)
12-22 13:04 DEBUG    on stmt: return $24return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $26load_global.0 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const30.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $32binary_add.3 = low + $const30.2
12-22 13:04 DEBUG    on stmt: $const36.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38binary_add.6 = high + $const36.5
12-22 13:04 DEBUG    on stmt: $40call_function.7 = call $26load_global.0($32binary_add.3, $38binary_add.6, func=$26load_global.0, args=[Var($32binary_add.3, quicksort.py:75), Var($38binary_add.6, quicksort.py:75)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $42get_iter.8 = getiter(value=$40call_function.7)
12-22 13:04 DEBUG    on stmt: $phi44.0 = $42get_iter.8
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 44
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $44for_iter.1 = iternext(value=$phi44.0)
12-22 13:04 DEBUG    on stmt: $44for_iter.2 = pair_first(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $44for_iter.3 = pair_second(value=$44for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi46.1 = $44for_iter.2
12-22 13:04 DEBUG    on stmt: branch $44for_iter.3, 46, 138
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 46
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: i = $phi46.1
12-22 13:04 DEBUG    on stmt: k = getitem(value=R, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $56load_deref.5 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: v = call $56load_deref.5(A, k, func=$56load_deref.5, args=[Var(A, quicksort.py:66), Var(k, quicksort.py:76)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: j = i
12-22 13:04 DEBUG    on stmt: jump 70
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 70
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $74compare_op.3 = j > low
12-22 13:04 DEBUG    find_def var='j' stmt=$74compare_op.3 = j > low
12-22 13:04 DEBUG    find_def_from_top label 70
12-22 13:04 DEBUG    insert phi node j.2 = phi(incoming_values=[], incoming_blocks=[]) at 70
12-22 13:04 DEBUG    find_def_from_bottom label 102
12-22 13:04 DEBUG    incoming_def j.1 = $122inplace_subtract.10
12-22 13:04 DEBUG    find_def_from_bottom label 46
12-22 13:04 DEBUG    incoming_def j = i
12-22 13:04 DEBUG    replaced with: $74compare_op.3 = j.2 > low
12-22 13:04 DEBUG    on stmt: bool76 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $76pred = call bool76($74compare_op.3, func=bool76, args=(Var($74compare_op.3, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $76pred, 78, 128
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 78
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $78load_deref.1 = freevar(LT: <function lt_floats at 0x000001AEF1617310>)
12-22 13:04 DEBUG    on stmt: $82load_deref.3 = freevar(GET: <function make_quicksort_impl.<locals>.GET at 0x000001AEF35F7C10>)
12-22 13:04 DEBUG    on stmt: $const90.7 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $92binary_subtract.8 = j - $const90.7
12-22 13:04 DEBUG    find_def var='j' stmt=$92binary_subtract.8 = j - $const90.7
12-22 13:04 DEBUG    find_def_from_top label 78
12-22 13:04 DEBUG    idom 70 from label 78
12-22 13:04 DEBUG    find_def_from_bottom label 70
12-22 13:04 DEBUG    replaced with: $92binary_subtract.8 = j.2 - $const90.7
12-22 13:04 DEBUG    on stmt: $94binary_subscr.9 = getitem(value=R, index=$92binary_subtract.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $96call_function.10 = call $82load_deref.3(A, $94binary_subscr.9, func=$82load_deref.3, args=[Var(A, quicksort.py:66), Var($94binary_subscr.9, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98call_function.11 = call $78load_deref.1(v, $96call_function.10, func=$78load_deref.1, args=[Var(v, quicksort.py:77), Var($96call_function.10, quicksort.py:80)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool100 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $100pred = call bool100($98call_function.11, func=bool100, args=(Var($98call_function.11, quicksort.py:80),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $100pred, 102, 128
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 102
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $const106.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $108binary_subtract.4 = j - $const106.3
12-22 13:04 DEBUG    find_def var='j' stmt=$108binary_subtract.4 = j - $const106.3
12-22 13:04 DEBUG    find_def_from_top label 102
12-22 13:04 DEBUG    idom 78 from label 102
12-22 13:04 DEBUG    find_def_from_bottom label 78
12-22 13:04 DEBUG    find_def_from_top label 78
12-22 13:04 DEBUG    idom 70 from label 78
12-22 13:04 DEBUG    find_def_from_bottom label 70
12-22 13:04 DEBUG    replaced with: $108binary_subtract.4 = j.2 - $const106.3
12-22 13:04 DEBUG    on stmt: $110binary_subscr.5 = getitem(value=R, index=$108binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: R[j] = $110binary_subscr.5
12-22 13:04 DEBUG    find_def var='j' stmt=R[j] = $110binary_subscr.5
12-22 13:04 DEBUG    find_def_from_top label 102
12-22 13:04 DEBUG    idom 78 from label 102
12-22 13:04 DEBUG    find_def_from_bottom label 78
12-22 13:04 DEBUG    find_def_from_top label 78
12-22 13:04 DEBUG    idom 70 from label 78
12-22 13:04 DEBUG    find_def_from_bottom label 70
12-22 13:04 DEBUG    replaced with: R[j.2] = $110binary_subscr.5
12-22 13:04 DEBUG    on stmt: $const120.9 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='j' stmt=$122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 102
12-22 13:04 DEBUG    idom 78 from label 102
12-22 13:04 DEBUG    find_def_from_bottom label 78
12-22 13:04 DEBUG    find_def_from_top label 78
12-22 13:04 DEBUG    idom 70 from label 78
12-22 13:04 DEBUG    find_def_from_bottom label 70
12-22 13:04 DEBUG    replaced with: $122inplace_subtract.10 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=j.2, rhs=$const120.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: j.1 = $122inplace_subtract.10
12-22 13:04 DEBUG    on stmt: jump 70
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 128
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: R[j] = k
12-22 13:04 DEBUG    find_def var='j' stmt=R[j] = k
12-22 13:04 DEBUG    find_def_from_top label 128
12-22 13:04 DEBUG    idom 70 from label 128
12-22 13:04 DEBUG    find_def_from_bottom label 70
12-22 13:04 DEBUG    replaced with: R[j.2] = k
12-22 13:04 DEBUG    on stmt: jump 44
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF37CCF70>
12-22 13:04 DEBUG    on stmt: $const138.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $140return_value.1 = cast(value=$const138.0)
12-22 13:04 DEBUG    on stmt: return $140return_value.1
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=142)
           2	LOAD_GLOBAL(arg=0, lineno=190)
           4	LOAD_METHOD(arg=1, lineno=190)
           6	LOAD_FAST(arg=1, lineno=190)
           8	CALL_METHOD(arg=1, lineno=190)
          10	LOAD_FAST(arg=4, lineno=190)
          12	BINARY_MULTIPLY(arg=None, lineno=190)
          14	STORE_FAST(arg=5, lineno=190)
          16	LOAD_GLOBAL(arg=0, lineno=191)
          18	LOAD_ATTR(arg=2, lineno=191)
          20	LOAD_FAST(arg=0, lineno=191)
          22	LOAD_ATTR(arg=3, lineno=191)
          24	LOAD_CONST(arg=1, lineno=191)
          26	BINARY_SUBSCR(arg=None, lineno=191)
          28	LOAD_GLOBAL(arg=0, lineno=191)
          30	LOAD_ATTR(arg=4, lineno=191)
          32	LOAD_CONST(arg=2, lineno=191)
          34	CALL_FUNCTION_KW(arg=2, lineno=191)
          36	STORE_FAST(arg=6, lineno=191)
          38	LOAD_GLOBAL(arg=0, lineno=192)
          40	LOAD_ATTR(arg=2, lineno=192)
          42	LOAD_FAST(arg=0, lineno=192)
          44	LOAD_ATTR(arg=3, lineno=192)
          46	LOAD_CONST(arg=1, lineno=192)
          48	BINARY_SUBSCR(arg=None, lineno=192)
          50	LOAD_GLOBAL(arg=0, lineno=192)
          52	LOAD_ATTR(arg=4, lineno=192)
          54	LOAD_CONST(arg=2, lineno=192)
          56	CALL_FUNCTION_KW(arg=2, lineno=192)
          58	STORE_FAST(arg=7, lineno=192)
          60	LOAD_GLOBAL(arg=0, lineno=194)
          62	LOAD_METHOD(arg=5, lineno=194)
          64	LOAD_FAST(arg=0, lineno=194)
          66	CALL_METHOD(arg=1, lineno=194)
          68	STORE_FAST(arg=8, lineno=194)
          70	LOAD_GLOBAL(arg=6, lineno=196)
          72	LOAD_FAST(arg=0, lineno=196)
          74	LOAD_ATTR(arg=3, lineno=196)
          76	LOAD_CONST(arg=1, lineno=196)
          78	BINARY_SUBSCR(arg=None, lineno=196)
          80	CALL_FUNCTION(arg=1, lineno=196)
          82	GET_ITER(arg=None, lineno=196)
>         84	NOP(arg=1, lineno=196)
          86	FOR_ITER(arg=476, lineno=196)
          88	STORE_FAST(arg=9, lineno=196)
          90	LOAD_CONST(arg=3, lineno=197)
          92	STORE_FAST(arg=10, lineno=197)
          94	LOAD_GLOBAL(arg=7, lineno=198)
          96	STORE_FAST(arg=11, lineno=198)
          98	LOAD_CONST(arg=4, lineno=199)
         100	STORE_FAST(arg=12, lineno=199)
         102	LOAD_FAST(arg=0, lineno=202)
         104	LOAD_FAST(arg=9, lineno=202)
         106	BINARY_SUBSCR(arg=None, lineno=202)
         108	STORE_FAST(arg=13, lineno=202)
         110	LOAD_FAST(arg=13, lineno=203)
         112	LOAD_FAST(arg=13, lineno=203)
         114	LOAD_CONST(arg=3, lineno=203)
         116	COMPARE_OP(arg=4, lineno=203)
         118	BINARY_SUBSCR(arg=None, lineno=203)
         120	STORE_FAST(arg=14, lineno=203)
         122	LOAD_FAST(arg=14, lineno=204)
         124	LOAD_ATTR(arg=3, lineno=204)
         126	LOAD_CONST(arg=1, lineno=204)
         128	BINARY_SUBSCR(arg=None, lineno=204)
         130	LOAD_FAST(arg=3, lineno=204)
         132	COMPARE_OP(arg=5, lineno=204)
         134	POP_JUMP_IF_FALSE(arg=246, lineno=204)
         136	LOAD_GLOBAL(arg=8, lineno=205)
         138	LOAD_GLOBAL(arg=0, lineno=205)
         140	LOAD_METHOD(arg=9, lineno=205)
         142	LOAD_FAST(arg=3, lineno=205)
         144	CALL_METHOD(arg=1, lineno=205)
         146	CALL_FUNCTION(arg=1, lineno=205)
         148	STORE_FAST(arg=15, lineno=205)
         150	LOAD_FAST(arg=3, lineno=206)
         152	LOAD_FAST(arg=15, lineno=206)
         154	BINARY_SUBTRACT(arg=None, lineno=206)
         156	STORE_FAST(arg=16, lineno=206)
         158	LOAD_FAST(arg=15, lineno=207)
         160	LOAD_CONST(arg=1, lineno=207)
         162	COMPARE_OP(arg=4, lineno=207)
         164	POP_JUMP_IF_FALSE(arg=228, lineno=207)
         166	LOAD_FAST(arg=14, lineno=208)
         168	LOAD_FAST(arg=15, lineno=208)
         170	LOAD_CONST(arg=5, lineno=208)
         172	BINARY_SUBTRACT(arg=None, lineno=208)
         174	BINARY_SUBSCR(arg=None, lineno=208)
         176	LOAD_FAST(arg=6, lineno=208)
         178	LOAD_FAST(arg=9, lineno=208)
         180	STORE_SUBSCR(arg=None, lineno=208)
         182	LOAD_FAST(arg=16, lineno=209)
         184	LOAD_GLOBAL(arg=10, lineno=209)
         186	COMPARE_OP(arg=4, lineno=209)
         188	POP_JUMP_IF_FALSE(arg=244, lineno=209)
         190	LOAD_FAST(arg=6, lineno=210)
         192	LOAD_FAST(arg=9, lineno=210)
         194	DUP_TOP_TWO(arg=None, lineno=210)
         196	BINARY_SUBSCR(arg=None, lineno=210)
         198	LOAD_FAST(arg=16, lineno=210)
         200	LOAD_FAST(arg=14, lineno=211)
         202	LOAD_FAST(arg=15, lineno=211)
         204	BINARY_SUBSCR(arg=None, lineno=211)
         206	LOAD_FAST(arg=14, lineno=211)
         208	LOAD_FAST(arg=15, lineno=211)
         210	LOAD_CONST(arg=5, lineno=211)
         212	BINARY_SUBTRACT(arg=None, lineno=211)
         214	BINARY_SUBSCR(arg=None, lineno=211)
         216	BINARY_SUBTRACT(arg=None, lineno=211)
         218	BINARY_MULTIPLY(arg=None, lineno=210)
         220	INPLACE_ADD(arg=None, lineno=210)
         222	ROT_THREE(arg=None, lineno=210)
         224	STORE_SUBSCR(arg=None, lineno=210)
         226	JUMP_FORWARD(arg=16, lineno=210)
>        228	LOAD_FAST(arg=16, lineno=214)
         230	LOAD_FAST(arg=14, lineno=214)
         232	LOAD_CONST(arg=1, lineno=214)
         234	BINARY_SUBSCR(arg=None, lineno=214)
         236	BINARY_MULTIPLY(arg=None, lineno=214)
         238	LOAD_FAST(arg=6, lineno=214)
         240	LOAD_FAST(arg=9, lineno=214)
         242	STORE_SUBSCR(arg=None, lineno=214)
>        244	JUMP_FORWARD(arg=30, lineno=214)
>        246	LOAD_FAST(arg=14, lineno=215)
         248	LOAD_ATTR(arg=3, lineno=215)
         250	LOAD_CONST(arg=1, lineno=215)
         252	BINARY_SUBSCR(arg=None, lineno=215)
         254	LOAD_CONST(arg=1, lineno=215)
         256	COMPARE_OP(arg=4, lineno=215)
         258	NOP(arg=1, lineno=215)
         260	POP_JUMP_IF_FALSE(arg=276, lineno=215)
         262	LOAD_GLOBAL(arg=0, lineno=216)
         264	LOAD_METHOD(arg=11, lineno=216)
         266	LOAD_FAST(arg=14, lineno=216)
         268	CALL_METHOD(arg=1, lineno=216)
         270	LOAD_FAST(arg=6, lineno=216)
         272	LOAD_FAST(arg=9, lineno=216)
         274	STORE_SUBSCR(arg=None, lineno=216)
>        276	LOAD_GLOBAL(arg=6, lineno=218)
         278	LOAD_FAST(arg=2, lineno=218)
         280	CALL_FUNCTION(arg=1, lineno=218)
         282	GET_ITER(arg=None, lineno=218)
>        284	FOR_ITER(arg=184, lineno=218)
         286	STORE_FAST(arg=17, lineno=218)
         288	LOAD_CONST(arg=3, lineno=220)
         290	STORE_FAST(arg=18, lineno=220)
         292	LOAD_GLOBAL(arg=6, lineno=221)
         294	LOAD_CONST(arg=5, lineno=221)
         296	LOAD_FAST(arg=0, lineno=221)
         298	LOAD_ATTR(arg=3, lineno=221)
         300	LOAD_CONST(arg=5, lineno=221)
         302	BINARY_SUBSCR(arg=None, lineno=221)
         304	CALL_FUNCTION(arg=2, lineno=221)
         306	GET_ITER(arg=None, lineno=221)
>        308	FOR_ITER(arg=66, lineno=221)
         310	STORE_FAST(arg=19, lineno=221)
         312	LOAD_FAST(arg=0, lineno=222)
         314	LOAD_FAST(arg=9, lineno=222)
         316	LOAD_FAST(arg=19, lineno=222)
         318	BUILD_TUPLE(arg=2, lineno=222)
         320	BINARY_SUBSCR(arg=None, lineno=222)
         322	LOAD_FAST(arg=6, lineno=222)
         324	LOAD_FAST(arg=9, lineno=222)
         326	BINARY_SUBSCR(arg=None, lineno=222)
         328	BINARY_SUBTRACT(arg=None, lineno=222)
         330	STORE_FAST(arg=20, lineno=222)
         332	LOAD_FAST(arg=20, lineno=223)
         334	LOAD_CONST(arg=1, lineno=223)
         336	COMPARE_OP(arg=4, lineno=223)
         338	NOP(arg=1, lineno=223)
         340	POP_JUMP_IF_FALSE(arg=364, lineno=223)
         342	LOAD_FAST(arg=18, lineno=224)
         344	LOAD_GLOBAL(arg=0, lineno=224)
         346	LOAD_METHOD(arg=12, lineno=224)
         348	LOAD_FAST(arg=20, lineno=224)
         350	LOAD_FAST(arg=12, lineno=224)
         352	BINARY_TRUE_DIVIDE(arg=None, lineno=224)
         354	UNARY_NEGATIVE(arg=None, lineno=224)
         356	CALL_METHOD(arg=1, lineno=224)
         358	INPLACE_ADD(arg=None, lineno=224)
         360	STORE_FAST(arg=18, lineno=224)
         362	JUMP_FORWARD(arg=8, lineno=224)
>        364	LOAD_FAST(arg=18, lineno=226)
         366	LOAD_CONST(arg=4, lineno=226)
         368	INPLACE_ADD(arg=None, lineno=226)
         370	STORE_FAST(arg=18, lineno=226)
>        372	NOP(arg=1, lineno=226)
         374	JUMP_ABSOLUTE(arg=308, lineno=226)
>        376	LOAD_GLOBAL(arg=0, lineno=228)
         378	LOAD_METHOD(arg=13, lineno=228)
         380	LOAD_FAST(arg=18, lineno=228)
         382	LOAD_FAST(arg=5, lineno=228)
         384	BINARY_SUBTRACT(arg=None, lineno=228)
         386	CALL_METHOD(arg=1, lineno=228)
         388	LOAD_GLOBAL(arg=10, lineno=228)
         390	COMPARE_OP(arg=0, lineno=228)
         392	NOP(arg=1, lineno=228)
         394	POP_JUMP_IF_FALSE(arg=402, lineno=228)
         396	POP_TOP(arg=None, lineno=229)
         398	NOP(arg=1, lineno=229)
         400	JUMP_ABSOLUTE(arg=470, lineno=229)
>        402	LOAD_FAST(arg=18, lineno=231)
         404	LOAD_FAST(arg=5, lineno=231)
         406	COMPARE_OP(arg=4, lineno=231)
         408	NOP(arg=1, lineno=231)
         410	POP_JUMP_IF_FALSE(arg=430, lineno=231)
         412	LOAD_FAST(arg=12, lineno=232)
         414	STORE_FAST(arg=11, lineno=232)
         416	LOAD_FAST(arg=10, lineno=233)
         418	LOAD_FAST(arg=11, lineno=233)
         420	BINARY_ADD(arg=None, lineno=233)
         422	LOAD_CONST(arg=6, lineno=233)
         424	BINARY_TRUE_DIVIDE(arg=None, lineno=233)
         426	STORE_FAST(arg=12, lineno=233)
         428	JUMP_FORWARD(arg=36, lineno=233)
>        430	LOAD_FAST(arg=12, lineno=235)
         432	STORE_FAST(arg=10, lineno=235)
         434	LOAD_FAST(arg=11, lineno=236)
         436	LOAD_GLOBAL(arg=7, lineno=236)
         438	COMPARE_OP(arg=2, lineno=236)
         440	NOP(arg=1, lineno=236)
         442	POP_JUMP_IF_FALSE(arg=454, lineno=236)
         444	LOAD_FAST(arg=12, lineno=237)
         446	LOAD_CONST(arg=7, lineno=237)
         448	INPLACE_MULTIPLY(arg=None, lineno=237)
         450	STORE_FAST(arg=12, lineno=237)
         452	JUMP_FORWARD(arg=12, lineno=237)
>        454	LOAD_FAST(arg=10, lineno=239)
         456	LOAD_FAST(arg=11, lineno=239)
         458	BINARY_ADD(arg=None, lineno=239)
         460	LOAD_CONST(arg=6, lineno=239)
         462	BINARY_TRUE_DIVIDE(arg=None, lineno=239)
         464	STORE_FAST(arg=12, lineno=239)
>        466	NOP(arg=1, lineno=239)
         468	JUMP_ABSOLUTE(arg=284, lineno=239)
>        470	LOAD_FAST(arg=12, lineno=241)
         472	LOAD_FAST(arg=7, lineno=241)
         474	LOAD_FAST(arg=9, lineno=241)
         476	STORE_SUBSCR(arg=None, lineno=241)
         478	LOAD_FAST(arg=6, lineno=244)
         480	LOAD_FAST(arg=9, lineno=244)
         482	BINARY_SUBSCR(arg=None, lineno=244)
         484	LOAD_CONST(arg=3, lineno=244)
         486	COMPARE_OP(arg=4, lineno=244)
         488	NOP(arg=2, lineno=244)
         490	POP_JUMP_IF_FALSE(arg=534, lineno=244)
         492	LOAD_GLOBAL(arg=0, lineno=245)
         494	LOAD_METHOD(arg=5, lineno=245)
         496	LOAD_FAST(arg=13, lineno=245)
         498	CALL_METHOD(arg=1, lineno=245)
         500	STORE_FAST(arg=21, lineno=245)
         502	LOAD_FAST(arg=7, lineno=246)
         504	LOAD_FAST(arg=9, lineno=246)
         506	BINARY_SUBSCR(arg=None, lineno=246)
         508	LOAD_GLOBAL(arg=14, lineno=246)
         510	LOAD_FAST(arg=21, lineno=246)
         512	BINARY_MULTIPLY(arg=None, lineno=246)
         514	COMPARE_OP(arg=0, lineno=246)
         516	NOP(arg=2, lineno=246)
         518	POP_JUMP_IF_FALSE(arg=562, lineno=246)
         520	LOAD_GLOBAL(arg=14, lineno=247)
         522	LOAD_FAST(arg=21, lineno=247)
         524	BINARY_MULTIPLY(arg=None, lineno=247)
         526	LOAD_FAST(arg=7, lineno=247)
         528	LOAD_FAST(arg=9, lineno=247)
         530	STORE_SUBSCR(arg=None, lineno=247)
         532	JUMP_ABSOLUTE(arg=84, lineno=247)
>        534	LOAD_FAST(arg=7, lineno=249)
         536	LOAD_FAST(arg=9, lineno=249)
         538	BINARY_SUBSCR(arg=None, lineno=249)
         540	LOAD_GLOBAL(arg=14, lineno=249)
         542	LOAD_FAST(arg=8, lineno=249)
         544	BINARY_MULTIPLY(arg=None, lineno=249)
         546	COMPARE_OP(arg=0, lineno=249)
         548	POP_JUMP_IF_FALSE(arg=84, lineno=249)
         550	LOAD_GLOBAL(arg=14, lineno=250)
         552	LOAD_FAST(arg=8, lineno=250)
         554	BINARY_MULTIPLY(arg=None, lineno=250)
         556	LOAD_FAST(arg=7, lineno=250)
         558	LOAD_FAST(arg=9, lineno=250)
         560	STORE_SUBSCR(arg=None, lineno=250)
>        562	JUMP_ABSOLUTE(arg=84, lineno=250)
>        564	LOAD_FAST(arg=7, lineno=252)
         566	LOAD_FAST(arg=6, lineno=252)
         568	BUILD_TUPLE(arg=2, lineno=252)
         570	RETURN_VALUE(arg=None, lineno=252)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=142)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=190)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=190)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=190)
12-22 13:04 DEBUG    stack ['$4load_method.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=CALL_METHOD(arg=1, lineno=190)
12-22 13:04 DEBUG    stack ['$4load_method.1', '$k6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_FAST(arg=4, lineno=190)
12-22 13:04 DEBUG    stack ['$8call_method.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=BINARY_MULTIPLY(arg=None, lineno=190)
12-22 13:04 DEBUG    stack ['$8call_method.3', '$bandwidth10.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=STORE_FAST(arg=5, lineno=190)
12-22 13:04 DEBUG    stack ['$12binary_multiply.5']
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_GLOBAL(arg=0, lineno=191)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_ATTR(arg=2, lineno=191)
12-22 13:04 DEBUG    stack ['$16load_global.6']
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=191)
12-22 13:04 DEBUG    stack ['$18load_attr.7']
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=191)
12-22 13:04 DEBUG    stack ['$18load_attr.7', '$distances20.8']
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=191)
12-22 13:04 DEBUG    stack ['$18load_attr.7', '$22load_attr.9']
12-22 13:04 DEBUG    dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=191)
12-22 13:04 DEBUG    stack ['$18load_attr.7', '$22load_attr.9', '$const24.10']
12-22 13:04 DEBUG    dispatch pc=28, inst=LOAD_GLOBAL(arg=0, lineno=191)
12-22 13:04 DEBUG    stack ['$18load_attr.7', '$26binary_subscr.11']
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_ATTR(arg=4, lineno=191)
12-22 13:04 DEBUG    stack ['$18load_attr.7', '$26binary_subscr.11', '$28load_global.12']
12-22 13:04 DEBUG    dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=191)
12-22 13:04 DEBUG    stack ['$18load_attr.7', '$26binary_subscr.11', '$30load_attr.13']
12-22 13:04 DEBUG    dispatch pc=34, inst=CALL_FUNCTION_KW(arg=2, lineno=191)
12-22 13:04 DEBUG    stack ['$18load_attr.7', '$26binary_subscr.11', '$30load_attr.13', '$const32.14']
12-22 13:04 DEBUG    dispatch pc=36, inst=STORE_FAST(arg=6, lineno=191)
12-22 13:04 DEBUG    stack ['$34call_function_kw.15']
12-22 13:04 DEBUG    dispatch pc=38, inst=LOAD_GLOBAL(arg=0, lineno=192)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=40, inst=LOAD_ATTR(arg=2, lineno=192)
12-22 13:04 DEBUG    stack ['$38load_global.16']
12-22 13:04 DEBUG    dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=192)
12-22 13:04 DEBUG    stack ['$40load_attr.17']
12-22 13:04 DEBUG    dispatch pc=44, inst=LOAD_ATTR(arg=3, lineno=192)
12-22 13:04 DEBUG    stack ['$40load_attr.17', '$distances42.18']
12-22 13:04 DEBUG    dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=192)
12-22 13:04 DEBUG    stack ['$40load_attr.17', '$44load_attr.19']
12-22 13:04 DEBUG    dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=192)
12-22 13:04 DEBUG    stack ['$40load_attr.17', '$44load_attr.19', '$const46.20']
12-22 13:04 DEBUG    dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=192)
12-22 13:04 DEBUG    stack ['$40load_attr.17', '$48binary_subscr.21']
12-22 13:04 DEBUG    dispatch pc=52, inst=LOAD_ATTR(arg=4, lineno=192)
12-22 13:04 DEBUG    stack ['$40load_attr.17', '$48binary_subscr.21', '$50load_global.22']
12-22 13:04 DEBUG    dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=192)
12-22 13:04 DEBUG    stack ['$40load_attr.17', '$48binary_subscr.21', '$52load_attr.23']
12-22 13:04 DEBUG    dispatch pc=56, inst=CALL_FUNCTION_KW(arg=2, lineno=192)
12-22 13:04 DEBUG    stack ['$40load_attr.17', '$48binary_subscr.21', '$52load_attr.23', '$const54.24']
12-22 13:04 DEBUG    dispatch pc=58, inst=STORE_FAST(arg=7, lineno=192)
12-22 13:04 DEBUG    stack ['$56call_function_kw.25']
12-22 13:04 DEBUG    dispatch pc=60, inst=LOAD_GLOBAL(arg=0, lineno=194)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=62, inst=LOAD_METHOD(arg=5, lineno=194)
12-22 13:04 DEBUG    stack ['$60load_global.26']
12-22 13:04 DEBUG    dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=194)
12-22 13:04 DEBUG    stack ['$62load_method.27']
12-22 13:04 DEBUG    dispatch pc=66, inst=CALL_METHOD(arg=1, lineno=194)
12-22 13:04 DEBUG    stack ['$62load_method.27', '$distances64.28']
12-22 13:04 DEBUG    dispatch pc=68, inst=STORE_FAST(arg=8, lineno=194)
12-22 13:04 DEBUG    stack ['$66call_method.29']
12-22 13:04 DEBUG    dispatch pc=70, inst=LOAD_GLOBAL(arg=6, lineno=196)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=72, inst=LOAD_FAST(arg=0, lineno=196)
12-22 13:04 DEBUG    stack ['$70load_global.30']
12-22 13:04 DEBUG    dispatch pc=74, inst=LOAD_ATTR(arg=3, lineno=196)
12-22 13:04 DEBUG    stack ['$70load_global.30', '$distances72.31']
12-22 13:04 DEBUG    dispatch pc=76, inst=LOAD_CONST(arg=1, lineno=196)
12-22 13:04 DEBUG    stack ['$70load_global.30', '$74load_attr.32']
12-22 13:04 DEBUG    dispatch pc=78, inst=BINARY_SUBSCR(arg=None, lineno=196)
12-22 13:04 DEBUG    stack ['$70load_global.30', '$74load_attr.32', '$const76.33']
12-22 13:04 DEBUG    dispatch pc=80, inst=CALL_FUNCTION(arg=1, lineno=196)
12-22 13:04 DEBUG    stack ['$70load_global.30', '$78binary_subscr.34']
12-22 13:04 DEBUG    dispatch pc=82, inst=GET_ITER(arg=None, lineno=196)
12-22 13:04 DEBUG    stack ['$80call_function.35']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=84, stack=('$82get_iter.36',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=84 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi84.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=84 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=84, inst=NOP(arg=1, lineno=196)
12-22 13:04 DEBUG    stack ['$phi84.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=86, stack=('$phi84.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=86 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi86.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=86 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=86, inst=FOR_ITER(arg=476, lineno=196)
12-22 13:04 DEBUG    stack ['$phi86.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=564, stack=(), blockstack=(), npush=0), Edge(pc=88, stack=('$phi86.0', '$86for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=564 nstack_initial=0), State(pc_initial=88 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=564 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=564, inst=LOAD_FAST(arg=7, lineno=252)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=566, inst=LOAD_FAST(arg=6, lineno=252)
12-22 13:04 DEBUG    stack ['$result564.0']
12-22 13:04 DEBUG    dispatch pc=568, inst=BUILD_TUPLE(arg=2, lineno=252)
12-22 13:04 DEBUG    stack ['$result564.0', '$rho566.1']
12-22 13:04 DEBUG    dispatch pc=570, inst=RETURN_VALUE(arg=None, lineno=252)
12-22 13:04 DEBUG    stack ['$568build_tuple.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=88 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi88.0', '$phi88.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=88 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=88, inst=STORE_FAST(arg=9, lineno=196)
12-22 13:04 DEBUG    stack ['$phi88.0', '$phi88.1']
12-22 13:04 DEBUG    dispatch pc=90, inst=LOAD_CONST(arg=3, lineno=197)
12-22 13:04 DEBUG    stack ['$phi88.0']
12-22 13:04 DEBUG    dispatch pc=92, inst=STORE_FAST(arg=10, lineno=197)
12-22 13:04 DEBUG    stack ['$phi88.0', '$const90.2']
12-22 13:04 DEBUG    dispatch pc=94, inst=LOAD_GLOBAL(arg=7, lineno=198)
12-22 13:04 DEBUG    stack ['$phi88.0']
12-22 13:04 DEBUG    dispatch pc=96, inst=STORE_FAST(arg=11, lineno=198)
12-22 13:04 DEBUG    stack ['$phi88.0', '$94load_global.3']
12-22 13:04 DEBUG    dispatch pc=98, inst=LOAD_CONST(arg=4, lineno=199)
12-22 13:04 DEBUG    stack ['$phi88.0']
12-22 13:04 DEBUG    dispatch pc=100, inst=STORE_FAST(arg=12, lineno=199)
12-22 13:04 DEBUG    stack ['$phi88.0', '$const98.4']
12-22 13:04 DEBUG    dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=202)
12-22 13:04 DEBUG    stack ['$phi88.0']
12-22 13:04 DEBUG    dispatch pc=104, inst=LOAD_FAST(arg=9, lineno=202)
12-22 13:04 DEBUG    stack ['$phi88.0', '$distances102.5']
12-22 13:04 DEBUG    dispatch pc=106, inst=BINARY_SUBSCR(arg=None, lineno=202)
12-22 13:04 DEBUG    stack ['$phi88.0', '$distances102.5', '$i104.6']
12-22 13:04 DEBUG    dispatch pc=108, inst=STORE_FAST(arg=13, lineno=202)
12-22 13:04 DEBUG    stack ['$phi88.0', '$106binary_subscr.7']
12-22 13:04 DEBUG    dispatch pc=110, inst=LOAD_FAST(arg=13, lineno=203)
12-22 13:04 DEBUG    stack ['$phi88.0']
12-22 13:04 DEBUG    dispatch pc=112, inst=LOAD_FAST(arg=13, lineno=203)
12-22 13:04 DEBUG    stack ['$phi88.0', '$ith_distances110.8']
12-22 13:04 DEBUG    dispatch pc=114, inst=LOAD_CONST(arg=3, lineno=203)
12-22 13:04 DEBUG    stack ['$phi88.0', '$ith_distances110.8', '$ith_distances112.9']
12-22 13:04 DEBUG    dispatch pc=116, inst=COMPARE_OP(arg=4, lineno=203)
12-22 13:04 DEBUG    stack ['$phi88.0', '$ith_distances110.8', '$ith_distances112.9', '$const114.10']
12-22 13:04 DEBUG    dispatch pc=118, inst=BINARY_SUBSCR(arg=None, lineno=203)
12-22 13:04 DEBUG    stack ['$phi88.0', '$ith_distances110.8', '$116compare_op.11']
12-22 13:04 DEBUG    dispatch pc=120, inst=STORE_FAST(arg=14, lineno=203)
12-22 13:04 DEBUG    stack ['$phi88.0', '$118binary_subscr.12']
12-22 13:04 DEBUG    dispatch pc=122, inst=LOAD_FAST(arg=14, lineno=204)
12-22 13:04 DEBUG    stack ['$phi88.0']
12-22 13:04 DEBUG    dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=204)
12-22 13:04 DEBUG    stack ['$phi88.0', '$non_zero_dists122.13']
12-22 13:04 DEBUG    dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=204)
12-22 13:04 DEBUG    stack ['$phi88.0', '$124load_attr.14']
12-22 13:04 DEBUG    dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=204)
12-22 13:04 DEBUG    stack ['$phi88.0', '$124load_attr.14', '$const126.15']
12-22 13:04 DEBUG    dispatch pc=130, inst=LOAD_FAST(arg=3, lineno=204)
12-22 13:04 DEBUG    stack ['$phi88.0', '$128binary_subscr.16']
12-22 13:04 DEBUG    dispatch pc=132, inst=COMPARE_OP(arg=5, lineno=204)
12-22 13:04 DEBUG    stack ['$phi88.0', '$128binary_subscr.16', '$local_connectivity130.17']
12-22 13:04 DEBUG    dispatch pc=134, inst=POP_JUMP_IF_FALSE(arg=246, lineno=204)
12-22 13:04 DEBUG    stack ['$phi88.0', '$132compare_op.18']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=136, stack=('$phi88.0',), blockstack=(), npush=0), Edge(pc=246, stack=('$phi88.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=136 nstack_initial=1), State(pc_initial=246 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi136.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=136 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=136, inst=LOAD_GLOBAL(arg=8, lineno=205)
12-22 13:04 DEBUG    stack ['$phi136.0']
12-22 13:04 DEBUG    dispatch pc=138, inst=LOAD_GLOBAL(arg=0, lineno=205)
12-22 13:04 DEBUG    stack ['$phi136.0', '$136load_global.1']
12-22 13:04 DEBUG    dispatch pc=140, inst=LOAD_METHOD(arg=9, lineno=205)
12-22 13:04 DEBUG    stack ['$phi136.0', '$136load_global.1', '$138load_global.2']
12-22 13:04 DEBUG    dispatch pc=142, inst=LOAD_FAST(arg=3, lineno=205)
12-22 13:04 DEBUG    stack ['$phi136.0', '$136load_global.1', '$140load_method.3']
12-22 13:04 DEBUG    dispatch pc=144, inst=CALL_METHOD(arg=1, lineno=205)
12-22 13:04 DEBUG    stack ['$phi136.0', '$136load_global.1', '$140load_method.3', '$local_connectivity142.4']
12-22 13:04 DEBUG    dispatch pc=146, inst=CALL_FUNCTION(arg=1, lineno=205)
12-22 13:04 DEBUG    stack ['$phi136.0', '$136load_global.1', '$144call_method.5']
12-22 13:04 DEBUG    dispatch pc=148, inst=STORE_FAST(arg=15, lineno=205)
12-22 13:04 DEBUG    stack ['$phi136.0', '$146call_function.6']
12-22 13:04 DEBUG    dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=206)
12-22 13:04 DEBUG    stack ['$phi136.0']
12-22 13:04 DEBUG    dispatch pc=152, inst=LOAD_FAST(arg=15, lineno=206)
12-22 13:04 DEBUG    stack ['$phi136.0', '$local_connectivity150.7']
12-22 13:04 DEBUG    dispatch pc=154, inst=BINARY_SUBTRACT(arg=None, lineno=206)
12-22 13:04 DEBUG    stack ['$phi136.0', '$local_connectivity150.7', '$index152.8']
12-22 13:04 DEBUG    dispatch pc=156, inst=STORE_FAST(arg=16, lineno=206)
12-22 13:04 DEBUG    stack ['$phi136.0', '$154binary_subtract.9']
12-22 13:04 DEBUG    dispatch pc=158, inst=LOAD_FAST(arg=15, lineno=207)
12-22 13:04 DEBUG    stack ['$phi136.0']
12-22 13:04 DEBUG    dispatch pc=160, inst=LOAD_CONST(arg=1, lineno=207)
12-22 13:04 DEBUG    stack ['$phi136.0', '$index158.10']
12-22 13:04 DEBUG    dispatch pc=162, inst=COMPARE_OP(arg=4, lineno=207)
12-22 13:04 DEBUG    stack ['$phi136.0', '$index158.10', '$const160.11']
12-22 13:04 DEBUG    dispatch pc=164, inst=POP_JUMP_IF_FALSE(arg=228, lineno=207)
12-22 13:04 DEBUG    stack ['$phi136.0', '$162compare_op.12']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=166, stack=('$phi136.0',), blockstack=(), npush=0), Edge(pc=228, stack=('$phi136.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=246 nstack_initial=1), State(pc_initial=166 nstack_initial=1), State(pc_initial=228 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi246.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=246 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=246, inst=LOAD_FAST(arg=14, lineno=215)
12-22 13:04 DEBUG    stack ['$phi246.0']
12-22 13:04 DEBUG    dispatch pc=248, inst=LOAD_ATTR(arg=3, lineno=215)
12-22 13:04 DEBUG    stack ['$phi246.0', '$non_zero_dists246.1']
12-22 13:04 DEBUG    dispatch pc=250, inst=LOAD_CONST(arg=1, lineno=215)
12-22 13:04 DEBUG    stack ['$phi246.0', '$248load_attr.2']
12-22 13:04 DEBUG    dispatch pc=252, inst=BINARY_SUBSCR(arg=None, lineno=215)
12-22 13:04 DEBUG    stack ['$phi246.0', '$248load_attr.2', '$const250.3']
12-22 13:04 DEBUG    dispatch pc=254, inst=LOAD_CONST(arg=1, lineno=215)
12-22 13:04 DEBUG    stack ['$phi246.0', '$252binary_subscr.4']
12-22 13:04 DEBUG    dispatch pc=256, inst=COMPARE_OP(arg=4, lineno=215)
12-22 13:04 DEBUG    stack ['$phi246.0', '$252binary_subscr.4', '$const254.5']
12-22 13:04 DEBUG    dispatch pc=258, inst=NOP(arg=1, lineno=215)
12-22 13:04 DEBUG    stack ['$phi246.0', '$256compare_op.6']
12-22 13:04 DEBUG    dispatch pc=260, inst=POP_JUMP_IF_FALSE(arg=276, lineno=215)
12-22 13:04 DEBUG    stack ['$phi246.0', '$256compare_op.6']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=262, stack=('$phi246.0',), blockstack=(), npush=0), Edge(pc=276, stack=('$phi246.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=166 nstack_initial=1), State(pc_initial=228 nstack_initial=1), State(pc_initial=262 nstack_initial=1), State(pc_initial=276 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi166.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=166 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=166, inst=LOAD_FAST(arg=14, lineno=208)
12-22 13:04 DEBUG    stack ['$phi166.0']
12-22 13:04 DEBUG    dispatch pc=168, inst=LOAD_FAST(arg=15, lineno=208)
12-22 13:04 DEBUG    stack ['$phi166.0', '$non_zero_dists166.1']
12-22 13:04 DEBUG    dispatch pc=170, inst=LOAD_CONST(arg=5, lineno=208)
12-22 13:04 DEBUG    stack ['$phi166.0', '$non_zero_dists166.1', '$index168.2']
12-22 13:04 DEBUG    dispatch pc=172, inst=BINARY_SUBTRACT(arg=None, lineno=208)
12-22 13:04 DEBUG    stack ['$phi166.0', '$non_zero_dists166.1', '$index168.2', '$const170.3']
12-22 13:04 DEBUG    dispatch pc=174, inst=BINARY_SUBSCR(arg=None, lineno=208)
12-22 13:04 DEBUG    stack ['$phi166.0', '$non_zero_dists166.1', '$172binary_subtract.4']
12-22 13:04 DEBUG    dispatch pc=176, inst=LOAD_FAST(arg=6, lineno=208)
12-22 13:04 DEBUG    stack ['$phi166.0', '$174binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=178, inst=LOAD_FAST(arg=9, lineno=208)
12-22 13:04 DEBUG    stack ['$phi166.0', '$174binary_subscr.5', '$rho176.6']
12-22 13:04 DEBUG    dispatch pc=180, inst=STORE_SUBSCR(arg=None, lineno=208)
12-22 13:04 DEBUG    stack ['$phi166.0', '$174binary_subscr.5', '$rho176.6', '$i178.7']
12-22 13:04 DEBUG    dispatch pc=182, inst=LOAD_FAST(arg=16, lineno=209)
12-22 13:04 DEBUG    stack ['$phi166.0']
12-22 13:04 DEBUG    dispatch pc=184, inst=LOAD_GLOBAL(arg=10, lineno=209)
12-22 13:04 DEBUG    stack ['$phi166.0', '$interpolation182.8']
12-22 13:04 DEBUG    dispatch pc=186, inst=COMPARE_OP(arg=4, lineno=209)
12-22 13:04 DEBUG    stack ['$phi166.0', '$interpolation182.8', '$184load_global.9']
12-22 13:04 DEBUG    dispatch pc=188, inst=POP_JUMP_IF_FALSE(arg=244, lineno=209)
12-22 13:04 DEBUG    stack ['$phi166.0', '$186compare_op.10']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=190, stack=('$phi166.0',), blockstack=(), npush=0), Edge(pc=244, stack=('$phi166.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=228 nstack_initial=1), State(pc_initial=262 nstack_initial=1), State(pc_initial=276 nstack_initial=1), State(pc_initial=190 nstack_initial=1), State(pc_initial=244 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi228.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=228 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=228, inst=LOAD_FAST(arg=16, lineno=214)
12-22 13:04 DEBUG    stack ['$phi228.0']
12-22 13:04 DEBUG    dispatch pc=230, inst=LOAD_FAST(arg=14, lineno=214)
12-22 13:04 DEBUG    stack ['$phi228.0', '$interpolation228.1']
12-22 13:04 DEBUG    dispatch pc=232, inst=LOAD_CONST(arg=1, lineno=214)
12-22 13:04 DEBUG    stack ['$phi228.0', '$interpolation228.1', '$non_zero_dists230.2']
12-22 13:04 DEBUG    dispatch pc=234, inst=BINARY_SUBSCR(arg=None, lineno=214)
12-22 13:04 DEBUG    stack ['$phi228.0', '$interpolation228.1', '$non_zero_dists230.2', '$const232.3']
12-22 13:04 DEBUG    dispatch pc=236, inst=BINARY_MULTIPLY(arg=None, lineno=214)
12-22 13:04 DEBUG    stack ['$phi228.0', '$interpolation228.1', '$234binary_subscr.4']
12-22 13:04 DEBUG    dispatch pc=238, inst=LOAD_FAST(arg=6, lineno=214)
12-22 13:04 DEBUG    stack ['$phi228.0', '$236binary_multiply.5']
12-22 13:04 DEBUG    dispatch pc=240, inst=LOAD_FAST(arg=9, lineno=214)
12-22 13:04 DEBUG    stack ['$phi228.0', '$236binary_multiply.5', '$rho238.6']
12-22 13:04 DEBUG    dispatch pc=242, inst=STORE_SUBSCR(arg=None, lineno=214)
12-22 13:04 DEBUG    stack ['$phi228.0', '$236binary_multiply.5', '$rho238.6', '$i240.7']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=244, stack=('$phi228.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=276 nstack_initial=1), State(pc_initial=190 nstack_initial=1), State(pc_initial=244 nstack_initial=1), State(pc_initial=244 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi262.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=262 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=262, inst=LOAD_GLOBAL(arg=0, lineno=216)
12-22 13:04 DEBUG    stack ['$phi262.0']
12-22 13:04 DEBUG    dispatch pc=264, inst=LOAD_METHOD(arg=11, lineno=216)
12-22 13:04 DEBUG    stack ['$phi262.0', '$262load_global.1']
12-22 13:04 DEBUG    dispatch pc=266, inst=LOAD_FAST(arg=14, lineno=216)
12-22 13:04 DEBUG    stack ['$phi262.0', '$264load_method.2']
12-22 13:04 DEBUG    dispatch pc=268, inst=CALL_METHOD(arg=1, lineno=216)
12-22 13:04 DEBUG    stack ['$phi262.0', '$264load_method.2', '$non_zero_dists266.3']
12-22 13:04 DEBUG    dispatch pc=270, inst=LOAD_FAST(arg=6, lineno=216)
12-22 13:04 DEBUG    stack ['$phi262.0', '$268call_method.4']
12-22 13:04 DEBUG    dispatch pc=272, inst=LOAD_FAST(arg=9, lineno=216)
12-22 13:04 DEBUG    stack ['$phi262.0', '$268call_method.4', '$rho270.5']
12-22 13:04 DEBUG    dispatch pc=274, inst=STORE_SUBSCR(arg=None, lineno=216)
12-22 13:04 DEBUG    stack ['$phi262.0', '$268call_method.4', '$rho270.5', '$i272.6']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=276, stack=('$phi262.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=276 nstack_initial=1), State(pc_initial=190 nstack_initial=1), State(pc_initial=244 nstack_initial=1), State(pc_initial=244 nstack_initial=1), State(pc_initial=276 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi276.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=276 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=276, inst=LOAD_GLOBAL(arg=6, lineno=218)
12-22 13:04 DEBUG    stack ['$phi276.0']
12-22 13:04 DEBUG    dispatch pc=278, inst=LOAD_FAST(arg=2, lineno=218)
12-22 13:04 DEBUG    stack ['$phi276.0', '$276load_global.1']
12-22 13:04 DEBUG    dispatch pc=280, inst=CALL_FUNCTION(arg=1, lineno=218)
12-22 13:04 DEBUG    stack ['$phi276.0', '$276load_global.1', '$n_iter278.2']
12-22 13:04 DEBUG    dispatch pc=282, inst=GET_ITER(arg=None, lineno=218)
12-22 13:04 DEBUG    stack ['$phi276.0', '$280call_function.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=284, stack=('$phi276.0', '$282get_iter.4'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=190 nstack_initial=1), State(pc_initial=244 nstack_initial=1), State(pc_initial=244 nstack_initial=1), State(pc_initial=276 nstack_initial=1), State(pc_initial=284 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi190.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=190 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=190, inst=LOAD_FAST(arg=6, lineno=210)
12-22 13:04 DEBUG    stack ['$phi190.0']
12-22 13:04 DEBUG    dispatch pc=192, inst=LOAD_FAST(arg=9, lineno=210)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1']
12-22 13:04 DEBUG    dispatch pc=194, inst=DUP_TOP_TWO(arg=None, lineno=210)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2']
12-22 13:04 DEBUG    dispatch pc=196, inst=BINARY_SUBSCR(arg=None, lineno=210)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$194dup_top_two.3', '$194dup_top_two.4']
12-22 13:04 DEBUG    dispatch pc=198, inst=LOAD_FAST(arg=16, lineno=210)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=200, inst=LOAD_FAST(arg=14, lineno=211)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5', '$interpolation198.6']
12-22 13:04 DEBUG    dispatch pc=202, inst=LOAD_FAST(arg=15, lineno=211)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5', '$interpolation198.6', '$non_zero_dists200.7']
12-22 13:04 DEBUG    dispatch pc=204, inst=BINARY_SUBSCR(arg=None, lineno=211)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5', '$interpolation198.6', '$non_zero_dists200.7', '$index202.8']
12-22 13:04 DEBUG    dispatch pc=206, inst=LOAD_FAST(arg=14, lineno=211)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5', '$interpolation198.6', '$204binary_subscr.9']
12-22 13:04 DEBUG    dispatch pc=208, inst=LOAD_FAST(arg=15, lineno=211)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5', '$interpolation198.6', '$204binary_subscr.9', '$non_zero_dists206.10']
12-22 13:04 DEBUG    dispatch pc=210, inst=LOAD_CONST(arg=5, lineno=211)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5', '$interpolation198.6', '$204binary_subscr.9', '$non_zero_dists206.10', '$index208.11']
12-22 13:04 DEBUG    dispatch pc=212, inst=BINARY_SUBTRACT(arg=None, lineno=211)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5', '$interpolation198.6', '$204binary_subscr.9', '$non_zero_dists206.10', '$index208.11', '$const210.12']
12-22 13:04 DEBUG    dispatch pc=214, inst=BINARY_SUBSCR(arg=None, lineno=211)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5', '$interpolation198.6', '$204binary_subscr.9', '$non_zero_dists206.10', '$212binary_subtract.13']
12-22 13:04 DEBUG    dispatch pc=216, inst=BINARY_SUBTRACT(arg=None, lineno=211)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5', '$interpolation198.6', '$204binary_subscr.9', '$214binary_subscr.14']
12-22 13:04 DEBUG    dispatch pc=218, inst=BINARY_MULTIPLY(arg=None, lineno=210)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5', '$interpolation198.6', '$216binary_subtract.15']
12-22 13:04 DEBUG    dispatch pc=220, inst=INPLACE_ADD(arg=None, lineno=210)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$196binary_subscr.5', '$218binary_multiply.16']
12-22 13:04 DEBUG    dispatch pc=222, inst=ROT_THREE(arg=None, lineno=210)
12-22 13:04 DEBUG    stack ['$phi190.0', '$rho190.1', '$i192.2', '$220inplace_add.17']
12-22 13:04 DEBUG    dispatch pc=224, inst=STORE_SUBSCR(arg=None, lineno=210)
12-22 13:04 DEBUG    stack ['$phi190.0', '$220inplace_add.17', '$rho190.1', '$i192.2']
12-22 13:04 DEBUG    dispatch pc=226, inst=JUMP_FORWARD(arg=16, lineno=210)
12-22 13:04 DEBUG    stack ['$phi190.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=244, stack=('$phi190.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=244 nstack_initial=1), State(pc_initial=244 nstack_initial=1), State(pc_initial=276 nstack_initial=1), State(pc_initial=284 nstack_initial=2), State(pc_initial=244 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi244.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=244 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=244, inst=JUMP_FORWARD(arg=30, lineno=214)
12-22 13:04 DEBUG    stack ['$phi244.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=276, stack=('$phi244.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=244 nstack_initial=1), State(pc_initial=276 nstack_initial=1), State(pc_initial=284 nstack_initial=2), State(pc_initial=244 nstack_initial=1), State(pc_initial=276 nstack_initial=1)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=276 nstack_initial=1), State(pc_initial=284 nstack_initial=2), State(pc_initial=244 nstack_initial=1), State(pc_initial=276 nstack_initial=1)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=284 nstack_initial=2), State(pc_initial=244 nstack_initial=1), State(pc_initial=276 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi284.0', '$phi284.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=284 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=284, inst=FOR_ITER(arg=184, lineno=218)
12-22 13:04 DEBUG    stack ['$phi284.0', '$phi284.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=470, stack=('$phi284.0',), blockstack=(), npush=0), Edge(pc=286, stack=('$phi284.0', '$phi284.1', '$284for_iter.3'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=244 nstack_initial=1), State(pc_initial=276 nstack_initial=1), State(pc_initial=470 nstack_initial=1), State(pc_initial=286 nstack_initial=3)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=276 nstack_initial=1), State(pc_initial=470 nstack_initial=1), State(pc_initial=286 nstack_initial=3)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=470 nstack_initial=1), State(pc_initial=286 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi470.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=470 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=470, inst=LOAD_FAST(arg=12, lineno=241)
12-22 13:04 DEBUG    stack ['$phi470.0']
12-22 13:04 DEBUG    dispatch pc=472, inst=LOAD_FAST(arg=7, lineno=241)
12-22 13:04 DEBUG    stack ['$phi470.0', '$mid470.1']
12-22 13:04 DEBUG    dispatch pc=474, inst=LOAD_FAST(arg=9, lineno=241)
12-22 13:04 DEBUG    stack ['$phi470.0', '$mid470.1', '$result472.2']
12-22 13:04 DEBUG    dispatch pc=476, inst=STORE_SUBSCR(arg=None, lineno=241)
12-22 13:04 DEBUG    stack ['$phi470.0', '$mid470.1', '$result472.2', '$i474.3']
12-22 13:04 DEBUG    dispatch pc=478, inst=LOAD_FAST(arg=6, lineno=244)
12-22 13:04 DEBUG    stack ['$phi470.0']
12-22 13:04 DEBUG    dispatch pc=480, inst=LOAD_FAST(arg=9, lineno=244)
12-22 13:04 DEBUG    stack ['$phi470.0', '$rho478.4']
12-22 13:04 DEBUG    dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=244)
12-22 13:04 DEBUG    stack ['$phi470.0', '$rho478.4', '$i480.5']
12-22 13:04 DEBUG    dispatch pc=484, inst=LOAD_CONST(arg=3, lineno=244)
12-22 13:04 DEBUG    stack ['$phi470.0', '$482binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=486, inst=COMPARE_OP(arg=4, lineno=244)
12-22 13:04 DEBUG    stack ['$phi470.0', '$482binary_subscr.6', '$const484.7']
12-22 13:04 DEBUG    dispatch pc=488, inst=NOP(arg=2, lineno=244)
12-22 13:04 DEBUG    stack ['$phi470.0', '$486compare_op.8']
12-22 13:04 DEBUG    dispatch pc=490, inst=POP_JUMP_IF_FALSE(arg=534, lineno=244)
12-22 13:04 DEBUG    stack ['$phi470.0', '$486compare_op.8']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=492, stack=('$phi470.0',), blockstack=(), npush=0), Edge(pc=534, stack=('$phi470.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=286 nstack_initial=3), State(pc_initial=492 nstack_initial=1), State(pc_initial=534 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi286.0', '$phi286.1', '$phi286.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=286 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=286, inst=STORE_FAST(arg=17, lineno=218)
12-22 13:04 DEBUG    stack ['$phi286.0', '$phi286.1', '$phi286.2']
12-22 13:04 DEBUG    dispatch pc=288, inst=LOAD_CONST(arg=3, lineno=220)
12-22 13:04 DEBUG    stack ['$phi286.0', '$phi286.1']
12-22 13:04 DEBUG    dispatch pc=290, inst=STORE_FAST(arg=18, lineno=220)
12-22 13:04 DEBUG    stack ['$phi286.0', '$phi286.1', '$const288.3']
12-22 13:04 DEBUG    dispatch pc=292, inst=LOAD_GLOBAL(arg=6, lineno=221)
12-22 13:04 DEBUG    stack ['$phi286.0', '$phi286.1']
12-22 13:04 DEBUG    dispatch pc=294, inst=LOAD_CONST(arg=5, lineno=221)
12-22 13:04 DEBUG    stack ['$phi286.0', '$phi286.1', '$292load_global.4']
12-22 13:04 DEBUG    dispatch pc=296, inst=LOAD_FAST(arg=0, lineno=221)
12-22 13:04 DEBUG    stack ['$phi286.0', '$phi286.1', '$292load_global.4', '$const294.5']
12-22 13:04 DEBUG    dispatch pc=298, inst=LOAD_ATTR(arg=3, lineno=221)
12-22 13:04 DEBUG    stack ['$phi286.0', '$phi286.1', '$292load_global.4', '$const294.5', '$distances296.6']
12-22 13:04 DEBUG    dispatch pc=300, inst=LOAD_CONST(arg=5, lineno=221)
12-22 13:04 DEBUG    stack ['$phi286.0', '$phi286.1', '$292load_global.4', '$const294.5', '$298load_attr.7']
12-22 13:04 DEBUG    dispatch pc=302, inst=BINARY_SUBSCR(arg=None, lineno=221)
12-22 13:04 DEBUG    stack ['$phi286.0', '$phi286.1', '$292load_global.4', '$const294.5', '$298load_attr.7', '$const300.8']
12-22 13:04 DEBUG    dispatch pc=304, inst=CALL_FUNCTION(arg=2, lineno=221)
12-22 13:04 DEBUG    stack ['$phi286.0', '$phi286.1', '$292load_global.4', '$const294.5', '$302binary_subscr.9']
12-22 13:04 DEBUG    dispatch pc=306, inst=GET_ITER(arg=None, lineno=221)
12-22 13:04 DEBUG    stack ['$phi286.0', '$phi286.1', '$304call_function.10']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=308, stack=('$phi286.0', '$phi286.1', '$306get_iter.11'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=492 nstack_initial=1), State(pc_initial=534 nstack_initial=1), State(pc_initial=308 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi492.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=492 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=492, inst=LOAD_GLOBAL(arg=0, lineno=245)
12-22 13:04 DEBUG    stack ['$phi492.0']
12-22 13:04 DEBUG    dispatch pc=494, inst=LOAD_METHOD(arg=5, lineno=245)
12-22 13:04 DEBUG    stack ['$phi492.0', '$492load_global.1']
12-22 13:04 DEBUG    dispatch pc=496, inst=LOAD_FAST(arg=13, lineno=245)
12-22 13:04 DEBUG    stack ['$phi492.0', '$494load_method.2']
12-22 13:04 DEBUG    dispatch pc=498, inst=CALL_METHOD(arg=1, lineno=245)
12-22 13:04 DEBUG    stack ['$phi492.0', '$494load_method.2', '$ith_distances496.3']
12-22 13:04 DEBUG    dispatch pc=500, inst=STORE_FAST(arg=21, lineno=245)
12-22 13:04 DEBUG    stack ['$phi492.0', '$498call_method.4']
12-22 13:04 DEBUG    dispatch pc=502, inst=LOAD_FAST(arg=7, lineno=246)
12-22 13:04 DEBUG    stack ['$phi492.0']
12-22 13:04 DEBUG    dispatch pc=504, inst=LOAD_FAST(arg=9, lineno=246)
12-22 13:04 DEBUG    stack ['$phi492.0', '$result502.5']
12-22 13:04 DEBUG    dispatch pc=506, inst=BINARY_SUBSCR(arg=None, lineno=246)
12-22 13:04 DEBUG    stack ['$phi492.0', '$result502.5', '$i504.6']
12-22 13:04 DEBUG    dispatch pc=508, inst=LOAD_GLOBAL(arg=14, lineno=246)
12-22 13:04 DEBUG    stack ['$phi492.0', '$506binary_subscr.7']
12-22 13:04 DEBUG    dispatch pc=510, inst=LOAD_FAST(arg=21, lineno=246)
12-22 13:04 DEBUG    stack ['$phi492.0', '$506binary_subscr.7', '$508load_global.8']
12-22 13:04 DEBUG    dispatch pc=512, inst=BINARY_MULTIPLY(arg=None, lineno=246)
12-22 13:04 DEBUG    stack ['$phi492.0', '$506binary_subscr.7', '$508load_global.8', '$mean_ith_distances510.9']
12-22 13:04 DEBUG    dispatch pc=514, inst=COMPARE_OP(arg=0, lineno=246)
12-22 13:04 DEBUG    stack ['$phi492.0', '$506binary_subscr.7', '$512binary_multiply.10']
12-22 13:04 DEBUG    dispatch pc=516, inst=NOP(arg=2, lineno=246)
12-22 13:04 DEBUG    stack ['$phi492.0', '$514compare_op.11']
12-22 13:04 DEBUG    dispatch pc=518, inst=POP_JUMP_IF_FALSE(arg=562, lineno=246)
12-22 13:04 DEBUG    stack ['$phi492.0', '$514compare_op.11']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=520, stack=('$phi492.0',), blockstack=(), npush=0), Edge(pc=562, stack=('$phi492.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=534 nstack_initial=1), State(pc_initial=308 nstack_initial=3), State(pc_initial=520 nstack_initial=1), State(pc_initial=562 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi534.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=534 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=534, inst=LOAD_FAST(arg=7, lineno=249)
12-22 13:04 DEBUG    stack ['$phi534.0']
12-22 13:04 DEBUG    dispatch pc=536, inst=LOAD_FAST(arg=9, lineno=249)
12-22 13:04 DEBUG    stack ['$phi534.0', '$result534.1']
12-22 13:04 DEBUG    dispatch pc=538, inst=BINARY_SUBSCR(arg=None, lineno=249)
12-22 13:04 DEBUG    stack ['$phi534.0', '$result534.1', '$i536.2']
12-22 13:04 DEBUG    dispatch pc=540, inst=LOAD_GLOBAL(arg=14, lineno=249)
12-22 13:04 DEBUG    stack ['$phi534.0', '$538binary_subscr.3']
12-22 13:04 DEBUG    dispatch pc=542, inst=LOAD_FAST(arg=8, lineno=249)
12-22 13:04 DEBUG    stack ['$phi534.0', '$538binary_subscr.3', '$540load_global.4']
12-22 13:04 DEBUG    dispatch pc=544, inst=BINARY_MULTIPLY(arg=None, lineno=249)
12-22 13:04 DEBUG    stack ['$phi534.0', '$538binary_subscr.3', '$540load_global.4', '$mean_distances542.5']
12-22 13:04 DEBUG    dispatch pc=546, inst=COMPARE_OP(arg=0, lineno=249)
12-22 13:04 DEBUG    stack ['$phi534.0', '$538binary_subscr.3', '$544binary_multiply.6']
12-22 13:04 DEBUG    dispatch pc=548, inst=POP_JUMP_IF_FALSE(arg=84, lineno=249)
12-22 13:04 DEBUG    stack ['$phi534.0', '$546compare_op.7']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=550, stack=('$phi534.0',), blockstack=(), npush=0), Edge(pc=84, stack=('$phi534.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=308 nstack_initial=3), State(pc_initial=520 nstack_initial=1), State(pc_initial=562 nstack_initial=1), State(pc_initial=550 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi308.0', '$phi308.1', '$phi308.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=308 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=308, inst=FOR_ITER(arg=66, lineno=221)
12-22 13:04 DEBUG    stack ['$phi308.0', '$phi308.1', '$phi308.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=376, stack=('$phi308.0', '$phi308.1'), blockstack=(), npush=0), Edge(pc=310, stack=('$phi308.0', '$phi308.1', '$phi308.2', '$308for_iter.4'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=520 nstack_initial=1), State(pc_initial=562 nstack_initial=1), State(pc_initial=550 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=376 nstack_initial=2), State(pc_initial=310 nstack_initial=4)])
12-22 13:04 DEBUG    stack: ['$phi520.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=520 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=520, inst=LOAD_GLOBAL(arg=14, lineno=247)
12-22 13:04 DEBUG    stack ['$phi520.0']
12-22 13:04 DEBUG    dispatch pc=522, inst=LOAD_FAST(arg=21, lineno=247)
12-22 13:04 DEBUG    stack ['$phi520.0', '$520load_global.1']
12-22 13:04 DEBUG    dispatch pc=524, inst=BINARY_MULTIPLY(arg=None, lineno=247)
12-22 13:04 DEBUG    stack ['$phi520.0', '$520load_global.1', '$mean_ith_distances522.2']
12-22 13:04 DEBUG    dispatch pc=526, inst=LOAD_FAST(arg=7, lineno=247)
12-22 13:04 DEBUG    stack ['$phi520.0', '$524binary_multiply.3']
12-22 13:04 DEBUG    dispatch pc=528, inst=LOAD_FAST(arg=9, lineno=247)
12-22 13:04 DEBUG    stack ['$phi520.0', '$524binary_multiply.3', '$result526.4']
12-22 13:04 DEBUG    dispatch pc=530, inst=STORE_SUBSCR(arg=None, lineno=247)
12-22 13:04 DEBUG    stack ['$phi520.0', '$524binary_multiply.3', '$result526.4', '$i528.5']
12-22 13:04 DEBUG    dispatch pc=532, inst=JUMP_ABSOLUTE(arg=84, lineno=247)
12-22 13:04 DEBUG    stack ['$phi520.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=84, stack=('$phi520.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=562 nstack_initial=1), State(pc_initial=550 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=376 nstack_initial=2), State(pc_initial=310 nstack_initial=4), State(pc_initial=84 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi562.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=562 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=562, inst=JUMP_ABSOLUTE(arg=84, lineno=250)
12-22 13:04 DEBUG    stack ['$phi562.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=84, stack=('$phi562.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=550 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=376 nstack_initial=2), State(pc_initial=310 nstack_initial=4), State(pc_initial=84 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi550.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=550 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=550, inst=LOAD_GLOBAL(arg=14, lineno=250)
12-22 13:04 DEBUG    stack ['$phi550.0']
12-22 13:04 DEBUG    dispatch pc=552, inst=LOAD_FAST(arg=8, lineno=250)
12-22 13:04 DEBUG    stack ['$phi550.0', '$550load_global.1']
12-22 13:04 DEBUG    dispatch pc=554, inst=BINARY_MULTIPLY(arg=None, lineno=250)
12-22 13:04 DEBUG    stack ['$phi550.0', '$550load_global.1', '$mean_distances552.2']
12-22 13:04 DEBUG    dispatch pc=556, inst=LOAD_FAST(arg=7, lineno=250)
12-22 13:04 DEBUG    stack ['$phi550.0', '$554binary_multiply.3']
12-22 13:04 DEBUG    dispatch pc=558, inst=LOAD_FAST(arg=9, lineno=250)
12-22 13:04 DEBUG    stack ['$phi550.0', '$554binary_multiply.3', '$result556.4']
12-22 13:04 DEBUG    dispatch pc=560, inst=STORE_SUBSCR(arg=None, lineno=250)
12-22 13:04 DEBUG    stack ['$phi550.0', '$554binary_multiply.3', '$result556.4', '$i558.5']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=562, stack=('$phi550.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=376 nstack_initial=2), State(pc_initial=310 nstack_initial=4), State(pc_initial=84 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=562 nstack_initial=1)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=376 nstack_initial=2), State(pc_initial=310 nstack_initial=4), State(pc_initial=84 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=562 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi376.0', '$phi376.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=376 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=376, inst=LOAD_GLOBAL(arg=0, lineno=228)
12-22 13:04 DEBUG    stack ['$phi376.0', '$phi376.1']
12-22 13:04 DEBUG    dispatch pc=378, inst=LOAD_METHOD(arg=13, lineno=228)
12-22 13:04 DEBUG    stack ['$phi376.0', '$phi376.1', '$376load_global.2']
12-22 13:04 DEBUG    dispatch pc=380, inst=LOAD_FAST(arg=18, lineno=228)
12-22 13:04 DEBUG    stack ['$phi376.0', '$phi376.1', '$378load_method.3']
12-22 13:04 DEBUG    dispatch pc=382, inst=LOAD_FAST(arg=5, lineno=228)
12-22 13:04 DEBUG    stack ['$phi376.0', '$phi376.1', '$378load_method.3', '$psum380.4']
12-22 13:04 DEBUG    dispatch pc=384, inst=BINARY_SUBTRACT(arg=None, lineno=228)
12-22 13:04 DEBUG    stack ['$phi376.0', '$phi376.1', '$378load_method.3', '$psum380.4', '$target382.5']
12-22 13:04 DEBUG    dispatch pc=386, inst=CALL_METHOD(arg=1, lineno=228)
12-22 13:04 DEBUG    stack ['$phi376.0', '$phi376.1', '$378load_method.3', '$384binary_subtract.6']
12-22 13:04 DEBUG    dispatch pc=388, inst=LOAD_GLOBAL(arg=10, lineno=228)
12-22 13:04 DEBUG    stack ['$phi376.0', '$phi376.1', '$386call_method.7']
12-22 13:04 DEBUG    dispatch pc=390, inst=COMPARE_OP(arg=0, lineno=228)
12-22 13:04 DEBUG    stack ['$phi376.0', '$phi376.1', '$386call_method.7', '$388load_global.8']
12-22 13:04 DEBUG    dispatch pc=392, inst=NOP(arg=1, lineno=228)
12-22 13:04 DEBUG    stack ['$phi376.0', '$phi376.1', '$390compare_op.9']
12-22 13:04 DEBUG    dispatch pc=394, inst=POP_JUMP_IF_FALSE(arg=402, lineno=228)
12-22 13:04 DEBUG    stack ['$phi376.0', '$phi376.1', '$390compare_op.9']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=396, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0), Edge(pc=402, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=310 nstack_initial=4), State(pc_initial=84 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=562 nstack_initial=1), State(pc_initial=396 nstack_initial=2), State(pc_initial=402 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi310.0', '$phi310.1', '$phi310.2', '$phi310.3']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=310 nstack_initial=4)
12-22 13:04 DEBUG    dispatch pc=310, inst=STORE_FAST(arg=19, lineno=221)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$phi310.3']
12-22 13:04 DEBUG    dispatch pc=312, inst=LOAD_FAST(arg=0, lineno=222)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2']
12-22 13:04 DEBUG    dispatch pc=314, inst=LOAD_FAST(arg=9, lineno=222)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$distances312.4']
12-22 13:04 DEBUG    dispatch pc=316, inst=LOAD_FAST(arg=19, lineno=222)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$distances312.4', '$i314.5']
12-22 13:04 DEBUG    dispatch pc=318, inst=BUILD_TUPLE(arg=2, lineno=222)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$distances312.4', '$i314.5', '$j316.6']
12-22 13:04 DEBUG    dispatch pc=320, inst=BINARY_SUBSCR(arg=None, lineno=222)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$distances312.4', '$318build_tuple.7']
12-22 13:04 DEBUG    dispatch pc=322, inst=LOAD_FAST(arg=6, lineno=222)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$320binary_subscr.8']
12-22 13:04 DEBUG    dispatch pc=324, inst=LOAD_FAST(arg=9, lineno=222)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$320binary_subscr.8', '$rho322.9']
12-22 13:04 DEBUG    dispatch pc=326, inst=BINARY_SUBSCR(arg=None, lineno=222)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$320binary_subscr.8', '$rho322.9', '$i324.10']
12-22 13:04 DEBUG    dispatch pc=328, inst=BINARY_SUBTRACT(arg=None, lineno=222)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$320binary_subscr.8', '$326binary_subscr.11']
12-22 13:04 DEBUG    dispatch pc=330, inst=STORE_FAST(arg=20, lineno=222)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$328binary_subtract.12']
12-22 13:04 DEBUG    dispatch pc=332, inst=LOAD_FAST(arg=20, lineno=223)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2']
12-22 13:04 DEBUG    dispatch pc=334, inst=LOAD_CONST(arg=1, lineno=223)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$d332.13']
12-22 13:04 DEBUG    dispatch pc=336, inst=COMPARE_OP(arg=4, lineno=223)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$d332.13', '$const334.14']
12-22 13:04 DEBUG    dispatch pc=338, inst=NOP(arg=1, lineno=223)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$336compare_op.15']
12-22 13:04 DEBUG    dispatch pc=340, inst=POP_JUMP_IF_FALSE(arg=364, lineno=223)
12-22 13:04 DEBUG    stack ['$phi310.0', '$phi310.1', '$phi310.2', '$336compare_op.15']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=342, stack=('$phi310.0', '$phi310.1', '$phi310.2'), blockstack=(), npush=0), Edge(pc=364, stack=('$phi310.0', '$phi310.1', '$phi310.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=562 nstack_initial=1), State(pc_initial=396 nstack_initial=2), State(pc_initial=402 nstack_initial=2), State(pc_initial=342 nstack_initial=3), State(pc_initial=364 nstack_initial=3)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=562 nstack_initial=1), State(pc_initial=396 nstack_initial=2), State(pc_initial=402 nstack_initial=2), State(pc_initial=342 nstack_initial=3), State(pc_initial=364 nstack_initial=3)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=562 nstack_initial=1), State(pc_initial=396 nstack_initial=2), State(pc_initial=402 nstack_initial=2), State(pc_initial=342 nstack_initial=3), State(pc_initial=364 nstack_initial=3)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=396 nstack_initial=2), State(pc_initial=402 nstack_initial=2), State(pc_initial=342 nstack_initial=3), State(pc_initial=364 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi396.0', '$phi396.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=396 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=396, inst=POP_TOP(arg=None, lineno=229)
12-22 13:04 DEBUG    stack ['$phi396.0', '$phi396.1']
12-22 13:04 DEBUG    dispatch pc=398, inst=NOP(arg=1, lineno=229)
12-22 13:04 DEBUG    stack ['$phi396.0']
12-22 13:04 DEBUG    dispatch pc=400, inst=JUMP_ABSOLUTE(arg=470, lineno=229)
12-22 13:04 DEBUG    stack ['$phi396.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=470, stack=('$phi396.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=402 nstack_initial=2), State(pc_initial=342 nstack_initial=3), State(pc_initial=364 nstack_initial=3), State(pc_initial=470 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi402.0', '$phi402.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=402 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=402, inst=LOAD_FAST(arg=18, lineno=231)
12-22 13:04 DEBUG    stack ['$phi402.0', '$phi402.1']
12-22 13:04 DEBUG    dispatch pc=404, inst=LOAD_FAST(arg=5, lineno=231)
12-22 13:04 DEBUG    stack ['$phi402.0', '$phi402.1', '$psum402.2']
12-22 13:04 DEBUG    dispatch pc=406, inst=COMPARE_OP(arg=4, lineno=231)
12-22 13:04 DEBUG    stack ['$phi402.0', '$phi402.1', '$psum402.2', '$target404.3']
12-22 13:04 DEBUG    dispatch pc=408, inst=NOP(arg=1, lineno=231)
12-22 13:04 DEBUG    stack ['$phi402.0', '$phi402.1', '$406compare_op.4']
12-22 13:04 DEBUG    dispatch pc=410, inst=POP_JUMP_IF_FALSE(arg=430, lineno=231)
12-22 13:04 DEBUG    stack ['$phi402.0', '$phi402.1', '$406compare_op.4']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=412, stack=('$phi402.0', '$phi402.1'), blockstack=(), npush=0), Edge(pc=430, stack=('$phi402.0', '$phi402.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=342 nstack_initial=3), State(pc_initial=364 nstack_initial=3), State(pc_initial=470 nstack_initial=1), State(pc_initial=412 nstack_initial=2), State(pc_initial=430 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi342.0', '$phi342.1', '$phi342.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=342 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=342, inst=LOAD_FAST(arg=18, lineno=224)
12-22 13:04 DEBUG    stack ['$phi342.0', '$phi342.1', '$phi342.2']
12-22 13:04 DEBUG    dispatch pc=344, inst=LOAD_GLOBAL(arg=0, lineno=224)
12-22 13:04 DEBUG    stack ['$phi342.0', '$phi342.1', '$phi342.2', '$psum342.3']
12-22 13:04 DEBUG    dispatch pc=346, inst=LOAD_METHOD(arg=12, lineno=224)
12-22 13:04 DEBUG    stack ['$phi342.0', '$phi342.1', '$phi342.2', '$psum342.3', '$344load_global.4']
12-22 13:04 DEBUG    dispatch pc=348, inst=LOAD_FAST(arg=20, lineno=224)
12-22 13:04 DEBUG    stack ['$phi342.0', '$phi342.1', '$phi342.2', '$psum342.3', '$346load_method.5']
12-22 13:04 DEBUG    dispatch pc=350, inst=LOAD_FAST(arg=12, lineno=224)
12-22 13:04 DEBUG    stack ['$phi342.0', '$phi342.1', '$phi342.2', '$psum342.3', '$346load_method.5', '$d348.6']
12-22 13:04 DEBUG    dispatch pc=352, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=224)
12-22 13:04 DEBUG    stack ['$phi342.0', '$phi342.1', '$phi342.2', '$psum342.3', '$346load_method.5', '$d348.6', '$mid350.7']
12-22 13:04 DEBUG    dispatch pc=354, inst=UNARY_NEGATIVE(arg=None, lineno=224)
12-22 13:04 DEBUG    stack ['$phi342.0', '$phi342.1', '$phi342.2', '$psum342.3', '$346load_method.5', '$352binary_true_divide.8']
12-22 13:04 DEBUG    dispatch pc=356, inst=CALL_METHOD(arg=1, lineno=224)
12-22 13:04 DEBUG    stack ['$phi342.0', '$phi342.1', '$phi342.2', '$psum342.3', '$346load_method.5', '$354unary_negative.9']
12-22 13:04 DEBUG    dispatch pc=358, inst=INPLACE_ADD(arg=None, lineno=224)
12-22 13:04 DEBUG    stack ['$phi342.0', '$phi342.1', '$phi342.2', '$psum342.3', '$356call_method.10']
12-22 13:04 DEBUG    dispatch pc=360, inst=STORE_FAST(arg=18, lineno=224)
12-22 13:04 DEBUG    stack ['$phi342.0', '$phi342.1', '$phi342.2', '$358inplace_add.11']
12-22 13:04 DEBUG    dispatch pc=362, inst=JUMP_FORWARD(arg=8, lineno=224)
12-22 13:04 DEBUG    stack ['$phi342.0', '$phi342.1', '$phi342.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=372, stack=('$phi342.0', '$phi342.1', '$phi342.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=364 nstack_initial=3), State(pc_initial=470 nstack_initial=1), State(pc_initial=412 nstack_initial=2), State(pc_initial=430 nstack_initial=2), State(pc_initial=372 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi364.0', '$phi364.1', '$phi364.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=364 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=364, inst=LOAD_FAST(arg=18, lineno=226)
12-22 13:04 DEBUG    stack ['$phi364.0', '$phi364.1', '$phi364.2']
12-22 13:04 DEBUG    dispatch pc=366, inst=LOAD_CONST(arg=4, lineno=226)
12-22 13:04 DEBUG    stack ['$phi364.0', '$phi364.1', '$phi364.2', '$psum364.3']
12-22 13:04 DEBUG    dispatch pc=368, inst=INPLACE_ADD(arg=None, lineno=226)
12-22 13:04 DEBUG    stack ['$phi364.0', '$phi364.1', '$phi364.2', '$psum364.3', '$const366.4']
12-22 13:04 DEBUG    dispatch pc=370, inst=STORE_FAST(arg=18, lineno=226)
12-22 13:04 DEBUG    stack ['$phi364.0', '$phi364.1', '$phi364.2', '$368inplace_add.5']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=372, stack=('$phi364.0', '$phi364.1', '$phi364.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=470 nstack_initial=1), State(pc_initial=412 nstack_initial=2), State(pc_initial=430 nstack_initial=2), State(pc_initial=372 nstack_initial=3), State(pc_initial=372 nstack_initial=3)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=412 nstack_initial=2), State(pc_initial=430 nstack_initial=2), State(pc_initial=372 nstack_initial=3), State(pc_initial=372 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi412.0', '$phi412.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=412 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=412, inst=LOAD_FAST(arg=12, lineno=232)
12-22 13:04 DEBUG    stack ['$phi412.0', '$phi412.1']
12-22 13:04 DEBUG    dispatch pc=414, inst=STORE_FAST(arg=11, lineno=232)
12-22 13:04 DEBUG    stack ['$phi412.0', '$phi412.1', '$mid412.2']
12-22 13:04 DEBUG    dispatch pc=416, inst=LOAD_FAST(arg=10, lineno=233)
12-22 13:04 DEBUG    stack ['$phi412.0', '$phi412.1']
12-22 13:04 DEBUG    dispatch pc=418, inst=LOAD_FAST(arg=11, lineno=233)
12-22 13:04 DEBUG    stack ['$phi412.0', '$phi412.1', '$lo416.3']
12-22 13:04 DEBUG    dispatch pc=420, inst=BINARY_ADD(arg=None, lineno=233)
12-22 13:04 DEBUG    stack ['$phi412.0', '$phi412.1', '$lo416.3', '$hi418.4']
12-22 13:04 DEBUG    dispatch pc=422, inst=LOAD_CONST(arg=6, lineno=233)
12-22 13:04 DEBUG    stack ['$phi412.0', '$phi412.1', '$420binary_add.5']
12-22 13:04 DEBUG    dispatch pc=424, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=233)
12-22 13:04 DEBUG    stack ['$phi412.0', '$phi412.1', '$420binary_add.5', '$const422.6']
12-22 13:04 DEBUG    dispatch pc=426, inst=STORE_FAST(arg=12, lineno=233)
12-22 13:04 DEBUG    stack ['$phi412.0', '$phi412.1', '$424binary_true_divide.7']
12-22 13:04 DEBUG    dispatch pc=428, inst=JUMP_FORWARD(arg=36, lineno=233)
12-22 13:04 DEBUG    stack ['$phi412.0', '$phi412.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=466, stack=('$phi412.0', '$phi412.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=430 nstack_initial=2), State(pc_initial=372 nstack_initial=3), State(pc_initial=372 nstack_initial=3), State(pc_initial=466 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi430.0', '$phi430.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=430 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=430, inst=LOAD_FAST(arg=12, lineno=235)
12-22 13:04 DEBUG    stack ['$phi430.0', '$phi430.1']
12-22 13:04 DEBUG    dispatch pc=432, inst=STORE_FAST(arg=10, lineno=235)
12-22 13:04 DEBUG    stack ['$phi430.0', '$phi430.1', '$mid430.2']
12-22 13:04 DEBUG    dispatch pc=434, inst=LOAD_FAST(arg=11, lineno=236)
12-22 13:04 DEBUG    stack ['$phi430.0', '$phi430.1']
12-22 13:04 DEBUG    dispatch pc=436, inst=LOAD_GLOBAL(arg=7, lineno=236)
12-22 13:04 DEBUG    stack ['$phi430.0', '$phi430.1', '$hi434.3']
12-22 13:04 DEBUG    dispatch pc=438, inst=COMPARE_OP(arg=2, lineno=236)
12-22 13:04 DEBUG    stack ['$phi430.0', '$phi430.1', '$hi434.3', '$436load_global.4']
12-22 13:04 DEBUG    dispatch pc=440, inst=NOP(arg=1, lineno=236)
12-22 13:04 DEBUG    stack ['$phi430.0', '$phi430.1', '$438compare_op.5']
12-22 13:04 DEBUG    dispatch pc=442, inst=POP_JUMP_IF_FALSE(arg=454, lineno=236)
12-22 13:04 DEBUG    stack ['$phi430.0', '$phi430.1', '$438compare_op.5']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=444, stack=('$phi430.0', '$phi430.1'), blockstack=(), npush=0), Edge(pc=454, stack=('$phi430.0', '$phi430.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=372 nstack_initial=3), State(pc_initial=372 nstack_initial=3), State(pc_initial=466 nstack_initial=2), State(pc_initial=444 nstack_initial=2), State(pc_initial=454 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi372.0', '$phi372.1', '$phi372.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=372 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=372, inst=NOP(arg=1, lineno=226)
12-22 13:04 DEBUG    stack ['$phi372.0', '$phi372.1', '$phi372.2']
12-22 13:04 DEBUG    dispatch pc=374, inst=JUMP_ABSOLUTE(arg=308, lineno=226)
12-22 13:04 DEBUG    stack ['$phi372.0', '$phi372.1', '$phi372.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=308, stack=('$phi372.0', '$phi372.1', '$phi372.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=372 nstack_initial=3), State(pc_initial=466 nstack_initial=2), State(pc_initial=444 nstack_initial=2), State(pc_initial=454 nstack_initial=2), State(pc_initial=308 nstack_initial=3)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=466 nstack_initial=2), State(pc_initial=444 nstack_initial=2), State(pc_initial=454 nstack_initial=2), State(pc_initial=308 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi466.0', '$phi466.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=466 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=466, inst=NOP(arg=1, lineno=239)
12-22 13:04 DEBUG    stack ['$phi466.0', '$phi466.1']
12-22 13:04 DEBUG    dispatch pc=468, inst=JUMP_ABSOLUTE(arg=284, lineno=239)
12-22 13:04 DEBUG    stack ['$phi466.0', '$phi466.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=284, stack=('$phi466.0', '$phi466.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=444 nstack_initial=2), State(pc_initial=454 nstack_initial=2), State(pc_initial=308 nstack_initial=3), State(pc_initial=284 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi444.0', '$phi444.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=444 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=444, inst=LOAD_FAST(arg=12, lineno=237)
12-22 13:04 DEBUG    stack ['$phi444.0', '$phi444.1']
12-22 13:04 DEBUG    dispatch pc=446, inst=LOAD_CONST(arg=7, lineno=237)
12-22 13:04 DEBUG    stack ['$phi444.0', '$phi444.1', '$mid444.2']
12-22 13:04 DEBUG    dispatch pc=448, inst=INPLACE_MULTIPLY(arg=None, lineno=237)
12-22 13:04 DEBUG    stack ['$phi444.0', '$phi444.1', '$mid444.2', '$const446.3']
12-22 13:04 DEBUG    dispatch pc=450, inst=STORE_FAST(arg=12, lineno=237)
12-22 13:04 DEBUG    stack ['$phi444.0', '$phi444.1', '$448inplace_multiply.4']
12-22 13:04 DEBUG    dispatch pc=452, inst=JUMP_FORWARD(arg=12, lineno=237)
12-22 13:04 DEBUG    stack ['$phi444.0', '$phi444.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=466, stack=('$phi444.0', '$phi444.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=454 nstack_initial=2), State(pc_initial=308 nstack_initial=3), State(pc_initial=284 nstack_initial=2), State(pc_initial=466 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi454.0', '$phi454.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=454 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=454, inst=LOAD_FAST(arg=10, lineno=239)
12-22 13:04 DEBUG    stack ['$phi454.0', '$phi454.1']
12-22 13:04 DEBUG    dispatch pc=456, inst=LOAD_FAST(arg=11, lineno=239)
12-22 13:04 DEBUG    stack ['$phi454.0', '$phi454.1', '$lo454.2']
12-22 13:04 DEBUG    dispatch pc=458, inst=BINARY_ADD(arg=None, lineno=239)
12-22 13:04 DEBUG    stack ['$phi454.0', '$phi454.1', '$lo454.2', '$hi456.3']
12-22 13:04 DEBUG    dispatch pc=460, inst=LOAD_CONST(arg=6, lineno=239)
12-22 13:04 DEBUG    stack ['$phi454.0', '$phi454.1', '$458binary_add.4']
12-22 13:04 DEBUG    dispatch pc=462, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=239)
12-22 13:04 DEBUG    stack ['$phi454.0', '$phi454.1', '$458binary_add.4', '$const460.5']
12-22 13:04 DEBUG    dispatch pc=464, inst=STORE_FAST(arg=12, lineno=239)
12-22 13:04 DEBUG    stack ['$phi454.0', '$phi454.1', '$462binary_true_divide.6']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=466, stack=('$phi454.0', '$phi454.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=308 nstack_initial=3), State(pc_initial=284 nstack_initial=2), State(pc_initial=466 nstack_initial=2), State(pc_initial=466 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=284 nstack_initial=2), State(pc_initial=466 nstack_initial=2), State(pc_initial=466 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=466 nstack_initial=2), State(pc_initial=466 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=466 nstack_initial=2)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=1): set(),
             State(pc_initial=86 nstack_initial=1): {'$phi86.0'},
             State(pc_initial=88 nstack_initial=2): {'$phi88.1'},
             State(pc_initial=136 nstack_initial=1): set(),
             State(pc_initial=166 nstack_initial=1): set(),
             State(pc_initial=190 nstack_initial=1): set(),
             State(pc_initial=228 nstack_initial=1): set(),
             State(pc_initial=244 nstack_initial=1): set(),
             State(pc_initial=246 nstack_initial=1): set(),
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=276 nstack_initial=1): set(),
             State(pc_initial=284 nstack_initial=2): {'$phi284.1'},
             State(pc_initial=286 nstack_initial=3): {'$phi286.2'},
             State(pc_initial=308 nstack_initial=3): {'$phi308.2'},
             State(pc_initial=310 nstack_initial=4): {'$phi310.3'},
             State(pc_initial=342 nstack_initial=3): set(),
             State(pc_initial=364 nstack_initial=3): set(),
             State(pc_initial=372 nstack_initial=3): set(),
             State(pc_initial=376 nstack_initial=2): set(),
             State(pc_initial=396 nstack_initial=2): set(),
             State(pc_initial=402 nstack_initial=2): set(),
             State(pc_initial=412 nstack_initial=2): set(),
             State(pc_initial=430 nstack_initial=2): set(),
             State(pc_initial=444 nstack_initial=2): set(),
             State(pc_initial=454 nstack_initial=2): set(),
             State(pc_initial=466 nstack_initial=2): set(),
             State(pc_initial=470 nstack_initial=1): set(),
             State(pc_initial=492 nstack_initial=1): set(),
             State(pc_initial=520 nstack_initial=1): set(),
             State(pc_initial=534 nstack_initial=1): set(),
             State(pc_initial=550 nstack_initial=1): set(),
             State(pc_initial=562 nstack_initial=1): set(),
             State(pc_initial=564 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi284.1': State(pc_initial=276 nstack_initial=1),
 '$phi286.2': State(pc_initial=284 nstack_initial=2),
 '$phi308.2': State(pc_initial=286 nstack_initial=3),
 '$phi310.3': State(pc_initial=308 nstack_initial=3),
 '$phi84.0': State(pc_initial=0 nstack_initial=0),
 '$phi88.1': State(pc_initial=86 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi136.0': {('$phi88.0', State(pc_initial=88 nstack_initial=2))},
             '$phi166.0': {('$phi136.0',
                            State(pc_initial=136 nstack_initial=1))},
             '$phi190.0': {('$phi166.0',
                            State(pc_initial=166 nstack_initial=1))},
             '$phi228.0': {('$phi136.0',
                            State(pc_initial=136 nstack_initial=1))},
             '$phi244.0': {('$phi166.0',
                            State(pc_initial=166 nstack_initial=1)),
                           ('$phi190.0',
                            State(pc_initial=190 nstack_initial=1)),
                           ('$phi228.0',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi246.0': {('$phi88.0', State(pc_initial=88 nstack_initial=2))},
             '$phi262.0': {('$phi246.0',
                            State(pc_initial=246 nstack_initial=1))},
             '$phi276.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=1)),
                           ('$phi246.0',
                            State(pc_initial=246 nstack_initial=1)),
                           ('$phi262.0',
                            State(pc_initial=262 nstack_initial=1))},
             '$phi284.0': {('$phi276.0',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi466.0',
                            State(pc_initial=466 nstack_initial=2))},
             '$phi284.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi466.1',
                            State(pc_initial=466 nstack_initial=2))},
             '$phi286.0': {('$phi284.0',
                            State(pc_initial=284 nstack_initial=2))},
             '$phi286.1': {('$phi284.1',
                            State(pc_initial=284 nstack_initial=2))},
             '$phi286.2': {('$284for_iter.3',
                            State(pc_initial=284 nstack_initial=2))},
             '$phi308.0': {('$phi286.0',
                            State(pc_initial=286 nstack_initial=3)),
                           ('$phi372.0',
                            State(pc_initial=372 nstack_initial=3))},
             '$phi308.1': {('$phi286.1',
                            State(pc_initial=286 nstack_initial=3)),
                           ('$phi372.1',
                            State(pc_initial=372 nstack_initial=3))},
             '$phi308.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3)),
                           ('$phi372.2',
                            State(pc_initial=372 nstack_initial=3))},
             '$phi310.0': {('$phi308.0',
                            State(pc_initial=308 nstack_initial=3))},
             '$phi310.1': {('$phi308.1',
                            State(pc_initial=308 nstack_initial=3))},
             '$phi310.2': {('$phi308.2',
                            State(pc_initial=308 nstack_initial=3))},
             '$phi310.3': {('$308for_iter.4',
                            State(pc_initial=308 nstack_initial=3))},
             '$phi342.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=4))},
             '$phi342.1': {('$phi310.1',
                            State(pc_initial=310 nstack_initial=4))},
             '$phi342.2': {('$phi310.2',
                            State(pc_initial=310 nstack_initial=4))},
             '$phi364.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=4))},
             '$phi364.1': {('$phi310.1',
                            State(pc_initial=310 nstack_initial=4))},
             '$phi364.2': {('$phi310.2',
                            State(pc_initial=310 nstack_initial=4))},
             '$phi372.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi372.1': {('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi372.2': {('$phi342.2',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.2',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi376.0': {('$phi308.0',
                            State(pc_initial=308 nstack_initial=3))},
             '$phi376.1': {('$phi308.1',
                            State(pc_initial=308 nstack_initial=3))},
             '$phi396.0': {('$phi376.0',
                            State(pc_initial=376 nstack_initial=2))},
             '$phi396.1': {('$phi376.1',
                            State(pc_initial=376 nstack_initial=2))},
             '$phi402.0': {('$phi376.0',
                            State(pc_initial=376 nstack_initial=2))},
             '$phi402.1': {('$phi376.1',
                            State(pc_initial=376 nstack_initial=2))},
             '$phi412.0': {('$phi402.0',
                            State(pc_initial=402 nstack_initial=2))},
             '$phi412.1': {('$phi402.1',
                            State(pc_initial=402 nstack_initial=2))},
             '$phi430.0': {('$phi402.0',
                            State(pc_initial=402 nstack_initial=2))},
             '$phi430.1': {('$phi402.1',
                            State(pc_initial=402 nstack_initial=2))},
             '$phi444.0': {('$phi430.0',
                            State(pc_initial=430 nstack_initial=2))},
             '$phi444.1': {('$phi430.1',
                            State(pc_initial=430 nstack_initial=2))},
             '$phi454.0': {('$phi430.0',
                            State(pc_initial=430 nstack_initial=2))},
             '$phi454.1': {('$phi430.1',
                            State(pc_initial=430 nstack_initial=2))},
             '$phi466.0': {('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi466.1': {('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi470.0': {('$phi284.0',
                            State(pc_initial=284 nstack_initial=2)),
                           ('$phi396.0',
                            State(pc_initial=396 nstack_initial=2))},
             '$phi492.0': {('$phi470.0',
                            State(pc_initial=470 nstack_initial=1))},
             '$phi520.0': {('$phi492.0',
                            State(pc_initial=492 nstack_initial=1))},
             '$phi534.0': {('$phi470.0',
                            State(pc_initial=470 nstack_initial=1))},
             '$phi550.0': {('$phi534.0',
                            State(pc_initial=534 nstack_initial=1))},
             '$phi562.0': {('$phi492.0',
                            State(pc_initial=492 nstack_initial=1)),
                           ('$phi550.0',
                            State(pc_initial=550 nstack_initial=1))},
             '$phi84.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi520.0', State(pc_initial=520 nstack_initial=1)),
                          ('$phi534.0', State(pc_initial=534 nstack_initial=1)),
                          ('$phi562.0',
                           State(pc_initial=562 nstack_initial=1))},
             '$phi86.0': {('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi88.0': {('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi88.1': {('$86for_iter.2',
                           State(pc_initial=86 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi136.0': {('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi166.0': {('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi190.0': {('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi228.0': {('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi244.0': {('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi246.0': {('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi262.0': {('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi276.0': {('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi284.0': {('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi284.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi286.0': {('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi286.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi286.2': {('$284for_iter.3',
                            State(pc_initial=284 nstack_initial=2))},
             '$phi308.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi308.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi308.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3)),
                           ('$phi342.2',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.2',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi310.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi310.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi310.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3)),
                           ('$phi342.2',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.2',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi310.3': {('$308for_iter.4',
                            State(pc_initial=308 nstack_initial=3))},
             '$phi342.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi342.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi342.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3)),
                           ('$phi342.2',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.2',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi364.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi364.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi364.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3)),
                           ('$phi342.2',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.2',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi372.0': {('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi372.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi372.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi376.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi376.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi396.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi396.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi402.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi402.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi412.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi412.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi430.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi430.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi444.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi444.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi454.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi454.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.1',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi466.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi466.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi470.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi492.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi520.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi534.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi550.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi562.0': {('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2)),
                           ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi84.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi342.0', State(pc_initial=342 nstack_initial=3)),
                          ('$phi364.0', State(pc_initial=364 nstack_initial=3)),
                          ('$phi412.0', State(pc_initial=412 nstack_initial=2)),
                          ('$phi444.0', State(pc_initial=444 nstack_initial=2)),
                          ('$phi454.0', State(pc_initial=454 nstack_initial=2)),
                          ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi86.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi342.0', State(pc_initial=342 nstack_initial=3)),
                          ('$phi364.0', State(pc_initial=364 nstack_initial=3)),
                          ('$phi412.0', State(pc_initial=412 nstack_initial=2)),
                          ('$phi444.0', State(pc_initial=444 nstack_initial=2)),
                          ('$phi454.0', State(pc_initial=454 nstack_initial=2)),
                          ('$phi86.0', State(pc_initial=86 nstack_initial=1))},
             '$phi88.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi342.0', State(pc_initial=342 nstack_initial=3)),
                          ('$phi364.0', State(pc_initial=364 nstack_initial=3)),
                          ('$phi412.0', State(pc_initial=412 nstack_initial=2)),
                          ('$phi444.0', State(pc_initial=444 nstack_initial=2)),
                          ('$phi454.0',
                           State(pc_initial=454 nstack_initial=2))},
             '$phi88.1': {('$86for_iter.2',
                           State(pc_initial=86 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi136.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi166.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi190.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi228.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi244.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi246.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi262.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi276.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=2)),
                           ('$phi444.0',
                            State(pc_initial=444 nstack_initial=2)),
                           ('$phi454.0',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi284.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi284.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi286.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi342.0',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi286.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1)),
                           ('$phi342.1',
                            State(pc_initial=342 nstack_initial=3)),
                           ('$phi364.1',
                            State(pc_initial=364 nstack_initial=3))},
             '$phi286.2': {('$284for_iter.3',
                            State(pc_initial=284 nstack_initial=2))},
             '$phi308.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi308.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi308.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi310.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi310.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi310.3': {('$308for_iter.4',
                            State(pc_initial=308 nstack_initial=3))},
             '$phi342.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi342.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi342.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi364.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi364.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi372.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi372.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi372.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi376.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi396.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi396.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi402.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi402.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi412.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi412.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi430.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi430.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi444.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi444.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi454.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi454.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi466.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi466.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi470.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi492.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi520.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi534.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi550.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi562.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi86.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.1': {('$86for_iter.2',
                           State(pc_initial=86 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi136.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi166.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi190.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi228.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi244.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi246.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi262.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi276.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi284.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi284.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi286.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi286.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi286.2': {('$284for_iter.3',
                            State(pc_initial=284 nstack_initial=2))},
             '$phi308.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi308.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi308.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi310.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi310.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi310.3': {('$308for_iter.4',
                            State(pc_initial=308 nstack_initial=3))},
             '$phi342.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi342.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi342.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi364.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi364.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi372.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi372.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi372.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi376.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi396.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi396.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi402.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi402.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi412.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi412.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi430.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi430.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi444.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi444.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi454.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi454.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi466.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi466.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi470.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi492.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi520.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi534.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi550.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi562.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi86.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.1': {('$86for_iter.2',
                           State(pc_initial=86 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi136.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi166.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi190.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi228.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi244.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi246.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi262.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi276.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi284.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi284.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi286.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi286.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi286.2': {('$284for_iter.3',
                            State(pc_initial=284 nstack_initial=2))},
             '$phi308.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi308.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi308.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi310.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi310.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi310.3': {('$308for_iter.4',
                            State(pc_initial=308 nstack_initial=3))},
             '$phi342.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi342.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi342.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi364.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi364.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi372.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi372.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi372.2': {('$306get_iter.11',
                            State(pc_initial=286 nstack_initial=3))},
             '$phi376.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi396.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi396.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi402.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi402.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi412.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi412.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi430.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi430.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi444.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi444.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi454.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi454.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi466.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi466.1': {('$282get_iter.4',
                            State(pc_initial=276 nstack_initial=1))},
             '$phi470.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi492.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi520.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi534.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi550.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi562.0': {('$82get_iter.36',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi86.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.0': {('$82get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi88.1': {('$86for_iter.2',
                           State(pc_initial=86 nstack_initial=1))}})
12-22 13:04 DEBUG    keep phismap: {'$phi284.1': {('$282get_iter.4', State(pc_initial=276 nstack_initial=1))},
 '$phi286.2': {('$284for_iter.3', State(pc_initial=284 nstack_initial=2))},
 '$phi308.2': {('$306get_iter.11', State(pc_initial=286 nstack_initial=3))},
 '$phi310.3': {('$308for_iter.4', State(pc_initial=308 nstack_initial=3))},
 '$phi86.0': {('$82get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi88.1': {('$86for_iter.2', State(pc_initial=86 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi86.0': '$82get_iter.36'},
             State(pc_initial=86 nstack_initial=1): {'$phi88.1': '$86for_iter.2'},
             State(pc_initial=276 nstack_initial=1): {'$phi284.1': '$282get_iter.4'},
             State(pc_initial=284 nstack_initial=2): {'$phi286.2': '$284for_iter.3'},
             State(pc_initial=286 nstack_initial=3): {'$phi308.2': '$306get_iter.11'},
             State(pc_initial=308 nstack_initial=3): {'$phi310.3': '$308for_iter.4'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$k6.2'}), (8, {'func': '$4load_method.1', 'args': ['$k6.2'], 'res': '$8call_method.3'}), (10, {'res': '$bandwidth10.4'}), (12, {'lhs': '$8call_method.3', 'rhs': '$bandwidth10.4', 'res': '$12binary_multiply.5'}), (14, {'value': '$12binary_multiply.5'}), (16, {'res': '$16load_global.6'}), (18, {'item': '$16load_global.6', 'res': '$18load_attr.7'}), (20, {'res': '$distances20.8'}), (22, {'item': '$distances20.8', 'res': '$22load_attr.9'}), (24, {'res': '$const24.10'}), (26, {'index': '$const24.10', 'target': '$22load_attr.9', 'res': '$26binary_subscr.11'}), (28, {'res': '$28load_global.12'}), (30, {'item': '$28load_global.12', 'res': '$30load_attr.13'}), (32, {'res': '$const32.14'}), (34, {'func': '$18load_attr.7', 'args': ['$26binary_subscr.11', '$30load_attr.13'], 'names': '$const32.14', 'res': '$34call_function_kw.15'}), (36, {'value': '$34call_function_kw.15'}), (38, {'res': '$38load_global.16'}), (40, {'item': '$38load_global.16', 'res': '$40load_attr.17'}), (42, {'res': '$distances42.18'}), (44, {'item': '$distances42.18', 'res': '$44load_attr.19'}), (46, {'res': '$const46.20'}), (48, {'index': '$const46.20', 'target': '$44load_attr.19', 'res': '$48binary_subscr.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_attr.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$40load_attr.17', 'args': ['$48binary_subscr.21', '$52load_attr.23'], 'names': '$const54.24', 'res': '$56call_function_kw.25'}), (58, {'value': '$56call_function_kw.25'}), (60, {'res': '$60load_global.26'}), (62, {'item': '$60load_global.26', 'res': '$62load_method.27'}), (64, {'res': '$distances64.28'}), (66, {'func': '$62load_method.27', 'args': ['$distances64.28'], 'res': '$66call_method.29'}), (68, {'value': '$66call_method.29'}), (70, {'res': '$70load_global.30'}), (72, {'res': '$distances72.31'}), (74, {'item': '$distances72.31', 'res': '$74load_attr.32'}), (76, {'res': '$const76.33'}), (78, {'index': '$const76.33', 'target': '$74load_attr.32', 'res': '$78binary_subscr.34'}), (80, {'func': '$70load_global.30', 'args': ['$78binary_subscr.34'], 'res': '$80call_function.35'}), (82, {'value': '$80call_function.35', 'res': '$82get_iter.36'})), outgoing_phis={'$phi86.0': '$82get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$82get_iter.36',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((84, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={86: ('$phi84.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=86 nstack_initial=1):
AdaptBlockInfo(insts=((86, {'iterator': '$phi86.0', 'pair': '$86for_iter.1', 'indval': '$86for_iter.2', 'pred': '$86for_iter.3'}),), outgoing_phis={'$phi88.1': '$86for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={564: (), 88: ('$phi86.0', '$86for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=88 nstack_initial=2):
AdaptBlockInfo(insts=((88, {'value': '$phi88.1'}), (90, {'res': '$const90.2'}), (92, {'value': '$const90.2'}), (94, {'res': '$94load_global.3'}), (96, {'value': '$94load_global.3'}), (98, {'res': '$const98.4'}), (100, {'value': '$const98.4'}), (102, {'res': '$distances102.5'}), (104, {'res': '$i104.6'}), (106, {'index': '$i104.6', 'target': '$distances102.5', 'res': '$106binary_subscr.7'}), (108, {'value': '$106binary_subscr.7'}), (110, {'res': '$ith_distances110.8'}), (112, {'res': '$ith_distances112.9'}), (114, {'res': '$const114.10'}), (116, {'lhs': '$ith_distances112.9', 'rhs': '$const114.10', 'res': '$116compare_op.11'}), (118, {'index': '$116compare_op.11', 'target': '$ith_distances110.8', 'res': '$118binary_subscr.12'}), (120, {'value': '$118binary_subscr.12'}), (122, {'res': '$non_zero_dists122.13'}), (124, {'item': '$non_zero_dists122.13', 'res': '$124load_attr.14'}), (126, {'res': '$const126.15'}), (128, {'index': '$const126.15', 'target': '$124load_attr.14', 'res': '$128binary_subscr.16'}), (130, {'res': '$local_connectivity130.17'}), (132, {'lhs': '$128binary_subscr.16', 'rhs': '$local_connectivity130.17', 'res': '$132compare_op.18'}), (134, {'pred': '$132compare_op.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={136: ('$phi88.0',), 246: ('$phi88.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=136 nstack_initial=1):
AdaptBlockInfo(insts=((136, {'res': '$136load_global.1'}), (138, {'res': '$138load_global.2'}), (140, {'item': '$138load_global.2', 'res': '$140load_method.3'}), (142, {'res': '$local_connectivity142.4'}), (144, {'func': '$140load_method.3', 'args': ['$local_connectivity142.4'], 'res': '$144call_method.5'}), (146, {'func': '$136load_global.1', 'args': ['$144call_method.5'], 'res': '$146call_function.6'}), (148, {'value': '$146call_function.6'}), (150, {'res': '$local_connectivity150.7'}), (152, {'res': '$index152.8'}), (154, {'lhs': '$local_connectivity150.7', 'rhs': '$index152.8', 'res': '$154binary_subtract.9'}), (156, {'value': '$154binary_subtract.9'}), (158, {'res': '$index158.10'}), (160, {'res': '$const160.11'}), (162, {'lhs': '$index158.10', 'rhs': '$const160.11', 'res': '$162compare_op.12'}), (164, {'pred': '$162compare_op.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={166: ('$phi136.0',), 228: ('$phi136.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=166 nstack_initial=1):
AdaptBlockInfo(insts=((166, {'res': '$non_zero_dists166.1'}), (168, {'res': '$index168.2'}), (170, {'res': '$const170.3'}), (172, {'lhs': '$index168.2', 'rhs': '$const170.3', 'res': '$172binary_subtract.4'}), (174, {'index': '$172binary_subtract.4', 'target': '$non_zero_dists166.1', 'res': '$174binary_subscr.5'}), (176, {'res': '$rho176.6'}), (178, {'res': '$i178.7'}), (180, {'target': '$rho176.6', 'index': '$i178.7', 'value': '$174binary_subscr.5'}), (182, {'res': '$interpolation182.8'}), (184, {'res': '$184load_global.9'}), (186, {'lhs': '$interpolation182.8', 'rhs': '$184load_global.9', 'res': '$186compare_op.10'}), (188, {'pred': '$186compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ('$phi166.0',), 244: ('$phi166.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=190 nstack_initial=1):
AdaptBlockInfo(insts=((190, {'res': '$rho190.1'}), (192, {'res': '$i192.2'}), (194, {'orig': ['$rho190.1', '$i192.2'], 'duped': ['$194dup_top_two.3', '$194dup_top_two.4']}), (196, {'index': '$194dup_top_two.4', 'target': '$194dup_top_two.3', 'res': '$196binary_subscr.5'}), (198, {'res': '$interpolation198.6'}), (200, {'res': '$non_zero_dists200.7'}), (202, {'res': '$index202.8'}), (204, {'index': '$index202.8', 'target': '$non_zero_dists200.7', 'res': '$204binary_subscr.9'}), (206, {'res': '$non_zero_dists206.10'}), (208, {'res': '$index208.11'}), (210, {'res': '$const210.12'}), (212, {'lhs': '$index208.11', 'rhs': '$const210.12', 'res': '$212binary_subtract.13'}), (214, {'index': '$212binary_subtract.13', 'target': '$non_zero_dists206.10', 'res': '$214binary_subscr.14'}), (216, {'lhs': '$204binary_subscr.9', 'rhs': '$214binary_subscr.14', 'res': '$216binary_subtract.15'}), (218, {'lhs': '$interpolation198.6', 'rhs': '$216binary_subtract.15', 'res': '$218binary_multiply.16'}), (220, {'lhs': '$196binary_subscr.5', 'rhs': '$218binary_multiply.16', 'res': '$220inplace_add.17'}), (224, {'target': '$rho190.1', 'index': '$i192.2', 'value': '$220inplace_add.17'}), (226, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={244: ('$phi190.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=228 nstack_initial=1):
AdaptBlockInfo(insts=((228, {'res': '$interpolation228.1'}), (230, {'res': '$non_zero_dists230.2'}), (232, {'res': '$const232.3'}), (234, {'index': '$const232.3', 'target': '$non_zero_dists230.2', 'res': '$234binary_subscr.4'}), (236, {'lhs': '$interpolation228.1', 'rhs': '$234binary_subscr.4', 'res': '$236binary_multiply.5'}), (238, {'res': '$rho238.6'}), (240, {'res': '$i240.7'}), (242, {'target': '$rho238.6', 'index': '$i240.7', 'value': '$236binary_multiply.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={244: ('$phi228.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=244 nstack_initial=1):
AdaptBlockInfo(insts=((244, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ('$phi244.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=246 nstack_initial=1):
AdaptBlockInfo(insts=((246, {'res': '$non_zero_dists246.1'}), (248, {'item': '$non_zero_dists246.1', 'res': '$248load_attr.2'}), (250, {'res': '$const250.3'}), (252, {'index': '$const250.3', 'target': '$248load_attr.2', 'res': '$252binary_subscr.4'}), (254, {'res': '$const254.5'}), (256, {'lhs': '$252binary_subscr.4', 'rhs': '$const254.5', 'res': '$256compare_op.6'}), (258, {}), (260, {'pred': '$256compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi246.0',), 276: ('$phi246.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$262load_global.1'}), (264, {'item': '$262load_global.1', 'res': '$264load_method.2'}), (266, {'res': '$non_zero_dists266.3'}), (268, {'func': '$264load_method.2', 'args': ['$non_zero_dists266.3'], 'res': '$268call_method.4'}), (270, {'res': '$rho270.5'}), (272, {'res': '$i272.6'}), (274, {'target': '$rho270.5', 'index': '$i272.6', 'value': '$268call_method.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={276: ('$phi262.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=276 nstack_initial=1):
AdaptBlockInfo(insts=((276, {'res': '$276load_global.1'}), (278, {'res': '$n_iter278.2'}), (280, {'func': '$276load_global.1', 'args': ['$n_iter278.2'], 'res': '$280call_function.3'}), (282, {'value': '$280call_function.3', 'res': '$282get_iter.4'})), outgoing_phis={'$phi284.1': '$282get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={284: ('$phi276.0', '$282get_iter.4')})
12-22 13:04 DEBUG    block_infos State(pc_initial=284 nstack_initial=2):
AdaptBlockInfo(insts=((284, {'iterator': '$phi284.1', 'pair': '$284for_iter.2', 'indval': '$284for_iter.3', 'pred': '$284for_iter.4'}),), outgoing_phis={'$phi286.2': '$284for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={470: ('$phi284.0',), 286: ('$phi284.0', '$phi284.1', '$284for_iter.3')})
12-22 13:04 DEBUG    block_infos State(pc_initial=286 nstack_initial=3):
AdaptBlockInfo(insts=((286, {'value': '$phi286.2'}), (288, {'res': '$const288.3'}), (290, {'value': '$const288.3'}), (292, {'res': '$292load_global.4'}), (294, {'res': '$const294.5'}), (296, {'res': '$distances296.6'}), (298, {'item': '$distances296.6', 'res': '$298load_attr.7'}), (300, {'res': '$const300.8'}), (302, {'index': '$const300.8', 'target': '$298load_attr.7', 'res': '$302binary_subscr.9'}), (304, {'func': '$292load_global.4', 'args': ['$const294.5', '$302binary_subscr.9'], 'res': '$304call_function.10'}), (306, {'value': '$304call_function.10', 'res': '$306get_iter.11'})), outgoing_phis={'$phi308.2': '$306get_iter.11'}, blockstack=(), active_try_block=None, outgoing_edgepushed={308: ('$phi286.0', '$phi286.1', '$306get_iter.11')})
12-22 13:04 DEBUG    block_infos State(pc_initial=308 nstack_initial=3):
AdaptBlockInfo(insts=((308, {'iterator': '$phi308.2', 'pair': '$308for_iter.3', 'indval': '$308for_iter.4', 'pred': '$308for_iter.5'}),), outgoing_phis={'$phi310.3': '$308for_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={376: ('$phi308.0', '$phi308.1'), 310: ('$phi308.0', '$phi308.1', '$phi308.2', '$308for_iter.4')})
12-22 13:04 DEBUG    block_infos State(pc_initial=310 nstack_initial=4):
AdaptBlockInfo(insts=((310, {'value': '$phi310.3'}), (312, {'res': '$distances312.4'}), (314, {'res': '$i314.5'}), (316, {'res': '$j316.6'}), (318, {'items': ['$i314.5', '$j316.6'], 'res': '$318build_tuple.7'}), (320, {'index': '$318build_tuple.7', 'target': '$distances312.4', 'res': '$320binary_subscr.8'}), (322, {'res': '$rho322.9'}), (324, {'res': '$i324.10'}), (326, {'index': '$i324.10', 'target': '$rho322.9', 'res': '$326binary_subscr.11'}), (328, {'lhs': '$320binary_subscr.8', 'rhs': '$326binary_subscr.11', 'res': '$328binary_subtract.12'}), (330, {'value': '$328binary_subtract.12'}), (332, {'res': '$d332.13'}), (334, {'res': '$const334.14'}), (336, {'lhs': '$d332.13', 'rhs': '$const334.14', 'res': '$336compare_op.15'}), (338, {}), (340, {'pred': '$336compare_op.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={342: ('$phi310.0', '$phi310.1', '$phi310.2'), 364: ('$phi310.0', '$phi310.1', '$phi310.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=342 nstack_initial=3):
AdaptBlockInfo(insts=((342, {'res': '$psum342.3'}), (344, {'res': '$344load_global.4'}), (346, {'item': '$344load_global.4', 'res': '$346load_method.5'}), (348, {'res': '$d348.6'}), (350, {'res': '$mid350.7'}), (352, {'lhs': '$d348.6', 'rhs': '$mid350.7', 'res': '$352binary_true_divide.8'}), (354, {'value': '$352binary_true_divide.8', 'res': '$354unary_negative.9'}), (356, {'func': '$346load_method.5', 'args': ['$354unary_negative.9'], 'res': '$356call_method.10'}), (358, {'lhs': '$psum342.3', 'rhs': '$356call_method.10', 'res': '$358inplace_add.11'}), (360, {'value': '$358inplace_add.11'}), (362, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={372: ('$phi342.0', '$phi342.1', '$phi342.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=364 nstack_initial=3):
AdaptBlockInfo(insts=((364, {'res': '$psum364.3'}), (366, {'res': '$const366.4'}), (368, {'lhs': '$psum364.3', 'rhs': '$const366.4', 'res': '$368inplace_add.5'}), (370, {'value': '$368inplace_add.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={372: ('$phi364.0', '$phi364.1', '$phi364.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=372 nstack_initial=3):
AdaptBlockInfo(insts=((372, {}), (374, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={308: ('$phi372.0', '$phi372.1', '$phi372.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=376 nstack_initial=2):
AdaptBlockInfo(insts=((376, {'res': '$376load_global.2'}), (378, {'item': '$376load_global.2', 'res': '$378load_method.3'}), (380, {'res': '$psum380.4'}), (382, {'res': '$target382.5'}), (384, {'lhs': '$psum380.4', 'rhs': '$target382.5', 'res': '$384binary_subtract.6'}), (386, {'func': '$378load_method.3', 'args': ['$384binary_subtract.6'], 'res': '$386call_method.7'}), (388, {'res': '$388load_global.8'}), (390, {'lhs': '$386call_method.7', 'rhs': '$388load_global.8', 'res': '$390compare_op.9'}), (392, {}), (394, {'pred': '$390compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={396: ('$phi376.0', '$phi376.1'), 402: ('$phi376.0', '$phi376.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=396 nstack_initial=2):
AdaptBlockInfo(insts=((398, {}), (400, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={470: ('$phi396.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=402 nstack_initial=2):
AdaptBlockInfo(insts=((402, {'res': '$psum402.2'}), (404, {'res': '$target404.3'}), (406, {'lhs': '$psum402.2', 'rhs': '$target404.3', 'res': '$406compare_op.4'}), (408, {}), (410, {'pred': '$406compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={412: ('$phi402.0', '$phi402.1'), 430: ('$phi402.0', '$phi402.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=412 nstack_initial=2):
AdaptBlockInfo(insts=((412, {'res': '$mid412.2'}), (414, {'value': '$mid412.2'}), (416, {'res': '$lo416.3'}), (418, {'res': '$hi418.4'}), (420, {'lhs': '$lo416.3', 'rhs': '$hi418.4', 'res': '$420binary_add.5'}), (422, {'res': '$const422.6'}), (424, {'lhs': '$420binary_add.5', 'rhs': '$const422.6', 'res': '$424binary_true_divide.7'}), (426, {'value': '$424binary_true_divide.7'}), (428, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={466: ('$phi412.0', '$phi412.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=430 nstack_initial=2):
AdaptBlockInfo(insts=((430, {'res': '$mid430.2'}), (432, {'value': '$mid430.2'}), (434, {'res': '$hi434.3'}), (436, {'res': '$436load_global.4'}), (438, {'lhs': '$hi434.3', 'rhs': '$436load_global.4', 'res': '$438compare_op.5'}), (440, {}), (442, {'pred': '$438compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={444: ('$phi430.0', '$phi430.1'), 454: ('$phi430.0', '$phi430.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=444 nstack_initial=2):
AdaptBlockInfo(insts=((444, {'res': '$mid444.2'}), (446, {'res': '$const446.3'}), (448, {'lhs': '$mid444.2', 'rhs': '$const446.3', 'res': '$448inplace_multiply.4'}), (450, {'value': '$448inplace_multiply.4'}), (452, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={466: ('$phi444.0', '$phi444.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=454 nstack_initial=2):
AdaptBlockInfo(insts=((454, {'res': '$lo454.2'}), (456, {'res': '$hi456.3'}), (458, {'lhs': '$lo454.2', 'rhs': '$hi456.3', 'res': '$458binary_add.4'}), (460, {'res': '$const460.5'}), (462, {'lhs': '$458binary_add.4', 'rhs': '$const460.5', 'res': '$462binary_true_divide.6'}), (464, {'value': '$462binary_true_divide.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={466: ('$phi454.0', '$phi454.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=466 nstack_initial=2):
AdaptBlockInfo(insts=((466, {}), (468, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={284: ('$phi466.0', '$phi466.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=470 nstack_initial=1):
AdaptBlockInfo(insts=((470, {'res': '$mid470.1'}), (472, {'res': '$result472.2'}), (474, {'res': '$i474.3'}), (476, {'target': '$result472.2', 'index': '$i474.3', 'value': '$mid470.1'}), (478, {'res': '$rho478.4'}), (480, {'res': '$i480.5'}), (482, {'index': '$i480.5', 'target': '$rho478.4', 'res': '$482binary_subscr.6'}), (484, {'res': '$const484.7'}), (486, {'lhs': '$482binary_subscr.6', 'rhs': '$const484.7', 'res': '$486compare_op.8'}), (488, {}), (490, {'pred': '$486compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={492: ('$phi470.0',), 534: ('$phi470.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=492 nstack_initial=1):
AdaptBlockInfo(insts=((492, {'res': '$492load_global.1'}), (494, {'item': '$492load_global.1', 'res': '$494load_method.2'}), (496, {'res': '$ith_distances496.3'}), (498, {'func': '$494load_method.2', 'args': ['$ith_distances496.3'], 'res': '$498call_method.4'}), (500, {'value': '$498call_method.4'}), (502, {'res': '$result502.5'}), (504, {'res': '$i504.6'}), (506, {'index': '$i504.6', 'target': '$result502.5', 'res': '$506binary_subscr.7'}), (508, {'res': '$508load_global.8'}), (510, {'res': '$mean_ith_distances510.9'}), (512, {'lhs': '$508load_global.8', 'rhs': '$mean_ith_distances510.9', 'res': '$512binary_multiply.10'}), (514, {'lhs': '$506binary_subscr.7', 'rhs': '$512binary_multiply.10', 'res': '$514compare_op.11'}), (516, {}), (518, {'pred': '$514compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={520: ('$phi492.0',), 562: ('$phi492.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=520 nstack_initial=1):
AdaptBlockInfo(insts=((520, {'res': '$520load_global.1'}), (522, {'res': '$mean_ith_distances522.2'}), (524, {'lhs': '$520load_global.1', 'rhs': '$mean_ith_distances522.2', 'res': '$524binary_multiply.3'}), (526, {'res': '$result526.4'}), (528, {'res': '$i528.5'}), (530, {'target': '$result526.4', 'index': '$i528.5', 'value': '$524binary_multiply.3'}), (532, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi520.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=534 nstack_initial=1):
AdaptBlockInfo(insts=((534, {'res': '$result534.1'}), (536, {'res': '$i536.2'}), (538, {'index': '$i536.2', 'target': '$result534.1', 'res': '$538binary_subscr.3'}), (540, {'res': '$540load_global.4'}), (542, {'res': '$mean_distances542.5'}), (544, {'lhs': '$540load_global.4', 'rhs': '$mean_distances542.5', 'res': '$544binary_multiply.6'}), (546, {'lhs': '$538binary_subscr.3', 'rhs': '$544binary_multiply.6', 'res': '$546compare_op.7'}), (548, {'pred': '$546compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={550: ('$phi534.0',), 84: ('$phi534.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=550 nstack_initial=1):
AdaptBlockInfo(insts=((550, {'res': '$550load_global.1'}), (552, {'res': '$mean_distances552.2'}), (554, {'lhs': '$550load_global.1', 'rhs': '$mean_distances552.2', 'res': '$554binary_multiply.3'}), (556, {'res': '$result556.4'}), (558, {'res': '$i558.5'}), (560, {'target': '$result556.4', 'index': '$i558.5', 'value': '$554binary_multiply.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={562: ('$phi550.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=562 nstack_initial=1):
AdaptBlockInfo(insts=((562, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi562.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=564 nstack_initial=0):
AdaptBlockInfo(insts=((564, {'res': '$result564.0'}), (566, {'res': '$rho566.1'}), (568, {'items': ['$result564.0', '$rho566.1'], 'res': '$568build_tuple.2'}), (570, {'retval': '$568build_tuple.2', 'castval': '$570return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    distances = arg(0, name=distances)       ['distances']
    k = arg(1, name=k)                       ['k']
    n_iter = arg(2, name=n_iter)             ['n_iter']
    local_connectivity = arg(3, name=local_connectivity) ['local_connectivity']
    bandwidth = arg(4, name=bandwidth)       ['bandwidth']
    $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=log2) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'k']
    target = $8call_method.3 * bandwidth     ['$8call_method.3', 'bandwidth', 'target']
    $16load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.6']
    $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros) ['$16load_global.6', '$18load_attr.7']
    $22load_attr.9 = getattr(value=distances, attr=shape) ['$22load_attr.9', 'distances']
    $const24.10 = const(int, 0)              ['$const24.10']
    $26binary_subscr.11 = getitem(value=$22load_attr.9, index=$const24.10, fn=<built-in function getitem>) ['$22load_attr.9', '$26binary_subscr.11', '$const24.10']
    $28load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$28load_global.12']
    $30load_attr.13 = getattr(value=$28load_global.12, attr=float32) ['$28load_global.12', '$30load_attr.13']
    rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:191)], kws=[('dtype', Var($30load_attr.13, umap_.py:191))], vararg=None, varkwarg=None, target=None) ['$18load_attr.7', '$26binary_subscr.11', '$30load_attr.13', 'rho']
    $38load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$38load_global.16']
    $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros) ['$38load_global.16', '$40load_attr.17']
    $44load_attr.19 = getattr(value=distances, attr=shape) ['$44load_attr.19', 'distances']
    $const46.20 = const(int, 0)              ['$const46.20']
    $48binary_subscr.21 = getitem(value=$44load_attr.19, index=$const46.20, fn=<built-in function getitem>) ['$44load_attr.19', '$48binary_subscr.21', '$const46.20']
    $50load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$50load_global.22']
    $52load_attr.23 = getattr(value=$50load_global.22, attr=float32) ['$50load_global.22', '$52load_attr.23']
    result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:192)], kws=[('dtype', Var($52load_attr.23, umap_.py:192))], vararg=None, varkwarg=None, target=None) ['$40load_attr.17', '$48binary_subscr.21', '$52load_attr.23', 'result']
    $60load_global.26 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$60load_global.26']
    $62load_method.27 = getattr(value=$60load_global.26, attr=mean) ['$60load_global.26', '$62load_method.27']
    mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None) ['$62load_method.27', 'distances', 'mean_distances']
    $70load_global.30 = global(range: <class 'range'>) ['$70load_global.30']
    $74load_attr.32 = getattr(value=distances, attr=shape) ['$74load_attr.32', 'distances']
    $const76.33 = const(int, 0)              ['$const76.33']
    $78binary_subscr.34 = getitem(value=$74load_attr.32, index=$const76.33, fn=<built-in function getitem>) ['$74load_attr.32', '$78binary_subscr.34', '$const76.33']
    $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:196)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_global.30', '$78binary_subscr.34', '$80call_function.35']
    $82get_iter.36 = getiter(value=$80call_function.35) ['$80call_function.35', '$82get_iter.36']
    $phi86.0 = $82get_iter.36                ['$82get_iter.36', '$phi86.0']
    jump 84                                  []
label 84:
    jump 86                                  []
label 86:
    $86for_iter.1 = iternext(value=$phi86.0) ['$86for_iter.1', '$phi86.0']
    $86for_iter.2 = pair_first(value=$86for_iter.1) ['$86for_iter.1', '$86for_iter.2']
    $86for_iter.3 = pair_second(value=$86for_iter.1) ['$86for_iter.1', '$86for_iter.3']
    $phi88.1 = $86for_iter.2                 ['$86for_iter.2', '$phi88.1']
    branch $86for_iter.3, 88, 564            ['$86for_iter.3']
label 88:
    i = $phi88.1                             ['$phi88.1', 'i']
    lo = const(float, 0.0)                   ['lo']
    hi = global(NPY_INFINITY: inf)           ['hi']
    mid = const(float, 1.0)                  ['mid']
    ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>) ['distances', 'i', 'ith_distances']
    $const114.10 = const(float, 0.0)         ['$const114.10']
    $116compare_op.11 = ith_distances > $const114.10 ['$116compare_op.11', '$const114.10', 'ith_distances']
    non_zero_dists = getitem(value=ith_distances, index=$116compare_op.11, fn=<built-in function getitem>) ['$116compare_op.11', 'ith_distances', 'non_zero_dists']
    $124load_attr.14 = getattr(value=non_zero_dists, attr=shape) ['$124load_attr.14', 'non_zero_dists']
    $const126.15 = const(int, 0)             ['$const126.15']
    $128binary_subscr.16 = getitem(value=$124load_attr.14, index=$const126.15, fn=<built-in function getitem>) ['$124load_attr.14', '$128binary_subscr.16', '$const126.15']
    $132compare_op.18 = $128binary_subscr.16 >= local_connectivity ['$128binary_subscr.16', '$132compare_op.18', 'local_connectivity']
    bool134 = global(bool: <class 'bool'>)   ['bool134']
    $134pred = call bool134($132compare_op.18, func=bool134, args=(Var($132compare_op.18, umap_.py:204),), kws=(), vararg=None, varkwarg=None, target=None) ['$132compare_op.18', '$134pred', 'bool134']
    branch $134pred, 136, 246                ['$134pred']
label 136:
    $136load_global.1 = global(int: <class 'int'>) ['$136load_global.1']
    $138load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$138load_global.2']
    $140load_method.3 = getattr(value=$138load_global.2, attr=floor) ['$138load_global.2', '$140load_method.3']
    $144call_method.5 = call $140load_method.3(local_connectivity, func=$140load_method.3, args=[Var(local_connectivity, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_method.3', '$144call_method.5', 'local_connectivity']
    index = call $136load_global.1($144call_method.5, func=$136load_global.1, args=[Var($144call_method.5, umap_.py:205)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_global.1', '$144call_method.5', 'index']
    interpolation = local_connectivity - index ['index', 'interpolation', 'local_connectivity']
    $const160.11 = const(int, 0)             ['$const160.11']
    $162compare_op.12 = index > $const160.11 ['$162compare_op.12', '$const160.11', 'index']
    bool164 = global(bool: <class 'bool'>)   ['bool164']
    $164pred = call bool164($162compare_op.12, func=bool164, args=(Var($162compare_op.12, umap_.py:207),), kws=(), vararg=None, varkwarg=None, target=None) ['$162compare_op.12', '$164pred', 'bool164']
    branch $164pred, 166, 228                ['$164pred']
label 166:
    $const170.3 = const(int, 1)              ['$const170.3']
    $172binary_subtract.4 = index - $const170.3 ['$172binary_subtract.4', '$const170.3', 'index']
    $174binary_subscr.5 = getitem(value=non_zero_dists, index=$172binary_subtract.4, fn=<built-in function getitem>) ['$172binary_subtract.4', '$174binary_subscr.5', 'non_zero_dists']
    rho[i] = $174binary_subscr.5             ['$174binary_subscr.5', 'i', 'rho']
    $184load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05) ['$184load_global.9']
    $186compare_op.10 = interpolation > $184load_global.9 ['$184load_global.9', '$186compare_op.10', 'interpolation']
    bool188 = global(bool: <class 'bool'>)   ['bool188']
    $188pred = call bool188($186compare_op.10, func=bool188, args=(Var($186compare_op.10, umap_.py:209),), kws=(), vararg=None, varkwarg=None, target=None) ['$186compare_op.10', '$188pred', 'bool188']
    branch $188pred, 190, 244                ['$188pred']
label 190:
    $196binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>) ['$196binary_subscr.5', 'i', 'rho']
    $204binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>) ['$204binary_subscr.9', 'index', 'non_zero_dists']
    $const210.12 = const(int, 1)             ['$const210.12']
    $212binary_subtract.13 = index - $const210.12 ['$212binary_subtract.13', '$const210.12', 'index']
    $214binary_subscr.14 = getitem(value=non_zero_dists, index=$212binary_subtract.13, fn=<built-in function getitem>) ['$212binary_subtract.13', '$214binary_subscr.14', 'non_zero_dists']
    $216binary_subtract.15 = $204binary_subscr.9 - $214binary_subscr.14 ['$204binary_subscr.9', '$214binary_subscr.14', '$216binary_subtract.15']
    $218binary_multiply.16 = interpolation * $216binary_subtract.15 ['$216binary_subtract.15', '$218binary_multiply.16', 'interpolation']
    $220inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$196binary_subscr.5, rhs=$218binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined) ['$196binary_subscr.5', '$218binary_multiply.16', '$220inplace_add.17']
    rho[i] = $220inplace_add.17              ['$220inplace_add.17', 'i', 'rho']
    jump 244                                 []
label 228:
    $const232.3 = const(int, 0)              ['$const232.3']
    $234binary_subscr.4 = getitem(value=non_zero_dists, index=$const232.3, fn=<built-in function getitem>) ['$234binary_subscr.4', '$const232.3', 'non_zero_dists']
    $236binary_multiply.5 = interpolation * $234binary_subscr.4 ['$234binary_subscr.4', '$236binary_multiply.5', 'interpolation']
    rho[i] = $236binary_multiply.5           ['$236binary_multiply.5', 'i', 'rho']
    jump 244                                 []
label 244:
    jump 276                                 []
label 246:
    $248load_attr.2 = getattr(value=non_zero_dists, attr=shape) ['$248load_attr.2', 'non_zero_dists']
    $const250.3 = const(int, 0)              ['$const250.3']
    $252binary_subscr.4 = getitem(value=$248load_attr.2, index=$const250.3, fn=<built-in function getitem>) ['$248load_attr.2', '$252binary_subscr.4', '$const250.3']
    $const254.5 = const(int, 0)              ['$const254.5']
    $256compare_op.6 = $252binary_subscr.4 > $const254.5 ['$252binary_subscr.4', '$256compare_op.6', '$const254.5']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($256compare_op.6, func=bool260, args=(Var($256compare_op.6, umap_.py:215),), kws=(), vararg=None, varkwarg=None, target=None) ['$256compare_op.6', '$260pred', 'bool260']
    branch $260pred, 262, 276                ['$260pred']
label 262:
    $262load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$262load_global.1']
    $264load_method.2 = getattr(value=$262load_global.1, attr=max) ['$262load_global.1', '$264load_method.2']
    $268call_method.4 = call $264load_method.2(non_zero_dists, func=$264load_method.2, args=[Var(non_zero_dists, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None) ['$264load_method.2', '$268call_method.4', 'non_zero_dists']
    rho[i] = $268call_method.4               ['$268call_method.4', 'i', 'rho']
    jump 276                                 []
label 276:
    $276load_global.1 = global(range: <class 'range'>) ['$276load_global.1']
    $280call_function.3 = call $276load_global.1(n_iter, func=$276load_global.1, args=[Var(n_iter, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None) ['$276load_global.1', '$280call_function.3', 'n_iter']
    $282get_iter.4 = getiter(value=$280call_function.3) ['$280call_function.3', '$282get_iter.4']
    $phi284.1 = $282get_iter.4               ['$282get_iter.4', '$phi284.1']
    jump 284                                 []
label 284:
    $284for_iter.2 = iternext(value=$phi284.1) ['$284for_iter.2', '$phi284.1']
    $284for_iter.3 = pair_first(value=$284for_iter.2) ['$284for_iter.2', '$284for_iter.3']
    $284for_iter.4 = pair_second(value=$284for_iter.2) ['$284for_iter.2', '$284for_iter.4']
    $phi286.2 = $284for_iter.3               ['$284for_iter.3', '$phi286.2']
    branch $284for_iter.4, 286, 470          ['$284for_iter.4']
label 286:
    n = $phi286.2                            ['$phi286.2', 'n']
    psum = const(float, 0.0)                 ['psum']
    $292load_global.4 = global(range: <class 'range'>) ['$292load_global.4']
    $const294.5 = const(int, 1)              ['$const294.5']
    $298load_attr.7 = getattr(value=distances, attr=shape) ['$298load_attr.7', 'distances']
    $const300.8 = const(int, 1)              ['$const300.8']
    $302binary_subscr.9 = getitem(value=$298load_attr.7, index=$const300.8, fn=<built-in function getitem>) ['$298load_attr.7', '$302binary_subscr.9', '$const300.8']
    $304call_function.10 = call $292load_global.4($const294.5, $302binary_subscr.9, func=$292load_global.4, args=[Var($const294.5, umap_.py:221), Var($302binary_subscr.9, umap_.py:221)], kws=(), vararg=None, varkwarg=None, target=None) ['$292load_global.4', '$302binary_subscr.9', '$304call_function.10', '$const294.5']
    $306get_iter.11 = getiter(value=$304call_function.10) ['$304call_function.10', '$306get_iter.11']
    $phi308.2 = $306get_iter.11              ['$306get_iter.11', '$phi308.2']
    jump 308                                 []
label 308:
    $308for_iter.3 = iternext(value=$phi308.2) ['$308for_iter.3', '$phi308.2']
    $308for_iter.4 = pair_first(value=$308for_iter.3) ['$308for_iter.3', '$308for_iter.4']
    $308for_iter.5 = pair_second(value=$308for_iter.3) ['$308for_iter.3', '$308for_iter.5']
    $phi310.3 = $308for_iter.4               ['$308for_iter.4', '$phi310.3']
    branch $308for_iter.5, 310, 376          ['$308for_iter.5']
label 310:
    j = $phi310.3                            ['$phi310.3', 'j']
    $318build_tuple.7 = build_tuple(items=[Var(i, umap_.py:196), Var(j, umap_.py:221)]) ['$318build_tuple.7', 'i', 'j']
    $320binary_subscr.8 = getitem(value=distances, index=$318build_tuple.7, fn=<built-in function getitem>) ['$318build_tuple.7', '$320binary_subscr.8', 'distances']
    $326binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>) ['$326binary_subscr.11', 'i', 'rho']
    d = $320binary_subscr.8 - $326binary_subscr.11 ['$320binary_subscr.8', '$326binary_subscr.11', 'd']
    $const334.14 = const(int, 0)             ['$const334.14']
    $336compare_op.15 = d > $const334.14     ['$336compare_op.15', '$const334.14', 'd']
    bool340 = global(bool: <class 'bool'>)   ['bool340']
    $340pred = call bool340($336compare_op.15, func=bool340, args=(Var($336compare_op.15, umap_.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$336compare_op.15', '$340pred', 'bool340']
    branch $340pred, 342, 364                ['$340pred']
label 342:
    $344load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$344load_global.4']
    $346load_method.5 = getattr(value=$344load_global.4, attr=exp) ['$344load_global.4', '$346load_method.5']
    $352binary_true_divide.8 = d / mid       ['$352binary_true_divide.8', 'd', 'mid']
    $354unary_negative.9 = unary(fn=<built-in function neg>, value=$352binary_true_divide.8) ['$352binary_true_divide.8', '$354unary_negative.9']
    $356call_method.10 = call $346load_method.5($354unary_negative.9, func=$346load_method.5, args=[Var($354unary_negative.9, umap_.py:224)], kws=(), vararg=None, varkwarg=None, target=None) ['$346load_method.5', '$354unary_negative.9', '$356call_method.10']
    $358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined) ['$356call_method.10', '$358inplace_add.11', 'psum']
    psum = $358inplace_add.11                ['$358inplace_add.11', 'psum']
    jump 372                                 []
label 364:
    $const366.4 = const(float, 1.0)          ['$const366.4']
    $368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined) ['$368inplace_add.5', '$const366.4', 'psum']
    psum = $368inplace_add.5                 ['$368inplace_add.5', 'psum']
    jump 372                                 []
label 372:
    jump 308                                 []
label 376:
    $376load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$376load_global.2']
    $378load_method.3 = getattr(value=$376load_global.2, attr=fabs) ['$376load_global.2', '$378load_method.3']
    $384binary_subtract.6 = psum - target    ['$384binary_subtract.6', 'psum', 'target']
    $386call_method.7 = call $378load_method.3($384binary_subtract.6, func=$378load_method.3, args=[Var($384binary_subtract.6, umap_.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$378load_method.3', '$384binary_subtract.6', '$386call_method.7']
    $388load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05) ['$388load_global.8']
    $390compare_op.9 = $386call_method.7 < $388load_global.8 ['$386call_method.7', '$388load_global.8', '$390compare_op.9']
    bool394 = global(bool: <class 'bool'>)   ['bool394']
    $394pred = call bool394($390compare_op.9, func=bool394, args=(Var($390compare_op.9, umap_.py:228),), kws=(), vararg=None, varkwarg=None, target=None) ['$390compare_op.9', '$394pred', 'bool394']
    branch $394pred, 396, 402                ['$394pred']
label 396:
    jump 470                                 []
label 402:
    $406compare_op.4 = psum > target         ['$406compare_op.4', 'psum', 'target']
    bool410 = global(bool: <class 'bool'>)   ['bool410']
    $410pred = call bool410($406compare_op.4, func=bool410, args=(Var($406compare_op.4, umap_.py:231),), kws=(), vararg=None, varkwarg=None, target=None) ['$406compare_op.4', '$410pred', 'bool410']
    branch $410pred, 412, 430                ['$410pred']
label 412:
    hi = mid                                 ['hi', 'mid']
    $420binary_add.5 = lo + hi               ['$420binary_add.5', 'hi', 'lo']
    $const422.6 = const(float, 2.0)          ['$const422.6']
    mid = $420binary_add.5 / $const422.6     ['$420binary_add.5', '$const422.6', 'mid']
    jump 466                                 []
label 430:
    lo = mid                                 ['lo', 'mid']
    $436load_global.4 = global(NPY_INFINITY: inf) ['$436load_global.4']
    $438compare_op.5 = hi == $436load_global.4 ['$436load_global.4', '$438compare_op.5', 'hi']
    bool442 = global(bool: <class 'bool'>)   ['bool442']
    $442pred = call bool442($438compare_op.5, func=bool442, args=(Var($438compare_op.5, umap_.py:236),), kws=(), vararg=None, varkwarg=None, target=None) ['$438compare_op.5', '$442pred', 'bool442']
    branch $442pred, 444, 454                ['$442pred']
label 444:
    $const446.3 = const(int, 2)              ['$const446.3']
    $448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined) ['$448inplace_multiply.4', '$const446.3', 'mid']
    mid = $448inplace_multiply.4             ['$448inplace_multiply.4', 'mid']
    jump 466                                 []
label 454:
    $458binary_add.4 = lo + hi               ['$458binary_add.4', 'hi', 'lo']
    $const460.5 = const(float, 2.0)          ['$const460.5']
    mid = $458binary_add.4 / $const460.5     ['$458binary_add.4', '$const460.5', 'mid']
    jump 466                                 []
label 466:
    jump 284                                 []
label 470:
    result[i] = mid                          ['i', 'mid', 'result']
    $482binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>) ['$482binary_subscr.6', 'i', 'rho']
    $const484.7 = const(float, 0.0)          ['$const484.7']
    $486compare_op.8 = $482binary_subscr.6 > $const484.7 ['$482binary_subscr.6', '$486compare_op.8', '$const484.7']
    bool490 = global(bool: <class 'bool'>)   ['bool490']
    $490pred = call bool490($486compare_op.8, func=bool490, args=(Var($486compare_op.8, umap_.py:244),), kws=(), vararg=None, varkwarg=None, target=None) ['$486compare_op.8', '$490pred', 'bool490']
    branch $490pred, 492, 534                ['$490pred']
label 492:
    $492load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$492load_global.1']
    $494load_method.2 = getattr(value=$492load_global.1, attr=mean) ['$492load_global.1', '$494load_method.2']
    mean_ith_distances = call $494load_method.2(ith_distances, func=$494load_method.2, args=[Var(ith_distances, umap_.py:202)], kws=(), vararg=None, varkwarg=None, target=None) ['$494load_method.2', 'ith_distances', 'mean_ith_distances']
    $506binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>) ['$506binary_subscr.7', 'i', 'result']
    $508load_global.8 = global(MIN_K_DIST_SCALE: 0.001) ['$508load_global.8']
    $512binary_multiply.10 = $508load_global.8 * mean_ith_distances ['$508load_global.8', '$512binary_multiply.10', 'mean_ith_distances']
    $514compare_op.11 = $506binary_subscr.7 < $512binary_multiply.10 ['$506binary_subscr.7', '$512binary_multiply.10', '$514compare_op.11']
    bool518 = global(bool: <class 'bool'>)   ['bool518']
    $518pred = call bool518($514compare_op.11, func=bool518, args=(Var($514compare_op.11, umap_.py:246),), kws=(), vararg=None, varkwarg=None, target=None) ['$514compare_op.11', '$518pred', 'bool518']
    branch $518pred, 520, 562                ['$518pred']
label 520:
    $520load_global.1 = global(MIN_K_DIST_SCALE: 0.001) ['$520load_global.1']
    $524binary_multiply.3 = $520load_global.1 * mean_ith_distances ['$520load_global.1', '$524binary_multiply.3', 'mean_ith_distances']
    result[i] = $524binary_multiply.3        ['$524binary_multiply.3', 'i', 'result']
    jump 84                                  []
label 534:
    $538binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>) ['$538binary_subscr.3', 'i', 'result']
    $540load_global.4 = global(MIN_K_DIST_SCALE: 0.001) ['$540load_global.4']
    $544binary_multiply.6 = $540load_global.4 * mean_distances ['$540load_global.4', '$544binary_multiply.6', 'mean_distances']
    $546compare_op.7 = $538binary_subscr.3 < $544binary_multiply.6 ['$538binary_subscr.3', '$544binary_multiply.6', '$546compare_op.7']
    bool548 = global(bool: <class 'bool'>)   ['bool548']
    $548pred = call bool548($546compare_op.7, func=bool548, args=(Var($546compare_op.7, umap_.py:249),), kws=(), vararg=None, varkwarg=None, target=None) ['$546compare_op.7', '$548pred', 'bool548']
    branch $548pred, 550, 84                 ['$548pred']
label 550:
    $550load_global.1 = global(MIN_K_DIST_SCALE: 0.001) ['$550load_global.1']
    $554binary_multiply.3 = $550load_global.1 * mean_distances ['$550load_global.1', '$554binary_multiply.3', 'mean_distances']
    result[i] = $554binary_multiply.3        ['$554binary_multiply.3', 'i', 'result']
    jump 562                                 []
label 562:
    jump 84                                  []
label 564:
    $568build_tuple.2 = build_tuple(items=[Var(result, umap_.py:192), Var(rho, umap_.py:191)]) ['$568build_tuple.2', 'result', 'rho']
    $570return_value.3 = cast(value=$568build_tuple.2) ['$568build_tuple.2', '$570return_value.3']
    return $570return_value.3                ['$570return_value.3']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: distances = arg(0, name=distances)
12-22 13:04 DEBUG    on stmt: k = arg(1, name=k)
12-22 13:04 DEBUG    on stmt: n_iter = arg(2, name=n_iter)
12-22 13:04 DEBUG    on stmt: local_connectivity = arg(3, name=local_connectivity)
12-22 13:04 DEBUG    on stmt: bandwidth = arg(4, name=bandwidth)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
12-22 13:04 DEBUG    on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: target = $8call_method.3 * bandwidth
12-22 13:04 DEBUG    on stmt: $16load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
12-22 13:04 DEBUG    on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const24.10 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
12-22 13:04 DEBUG    on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:191)], kws=[('dtype', Var($30load_attr.13, umap_.py:191))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $38load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const46.20 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
12-22 13:04 DEBUG    on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:192)], kws=[('dtype', Var($52load_attr.23, umap_.py:192))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $60load_global.26 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $70load_global.30 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const76.33 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:196)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
12-22 13:04 DEBUG    on stmt: $phi86.0 = $82get_iter.36
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    ==== SSA block analysis pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: jump 86
12-22 13:04 DEBUG    ==== SSA block analysis pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $86for_iter.1 = iternext(value=$phi86.0)
12-22 13:04 DEBUG    on stmt: $86for_iter.2 = pair_first(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $86for_iter.3 = pair_second(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi88.1 = $86for_iter.2
12-22 13:04 DEBUG    on stmt: branch $86for_iter.3, 88, 564
12-22 13:04 DEBUG    ==== SSA block analysis pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: i = $phi88.1
12-22 13:04 DEBUG    on stmt: lo = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: hi = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: mid = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const114.10 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $116compare_op.11 = ith_distances > $const114.10
12-22 13:04 DEBUG    on stmt: non_zero_dists = getitem(value=ith_distances, index=$116compare_op.11, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $124load_attr.14 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const126.15 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $128binary_subscr.16 = static_getitem(value=$124load_attr.14, index=0, index_var=$const126.15, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $132compare_op.18 = $128binary_subscr.16 >= local_connectivity
12-22 13:04 DEBUG    on stmt: bool134 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $134pred = call bool134($132compare_op.18, func=bool134, args=(Var($132compare_op.18, umap_.py:204),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $134pred, 136, 246
12-22 13:04 DEBUG    ==== SSA block analysis pass on 136
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $136load_global.1 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $138load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $140load_method.3 = getattr(value=$138load_global.2, attr=floor)
12-22 13:04 DEBUG    on stmt: $144call_method.5 = call $140load_method.3(local_connectivity, func=$140load_method.3, args=[Var(local_connectivity, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: index = call $136load_global.1($144call_method.5, func=$136load_global.1, args=[Var($144call_method.5, umap_.py:205)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: interpolation = local_connectivity - index
12-22 13:04 DEBUG    on stmt: $const160.11 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $162compare_op.12 = index > $const160.11
12-22 13:04 DEBUG    on stmt: bool164 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $164pred = call bool164($162compare_op.12, func=bool164, args=(Var($162compare_op.12, umap_.py:207),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $164pred, 166, 228
12-22 13:04 DEBUG    ==== SSA block analysis pass on 166
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $const170.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $172binary_subtract.4 = index - $const170.3
12-22 13:04 DEBUG    on stmt: $174binary_subscr.5 = getitem(value=non_zero_dists, index=$172binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: rho[i] = $174binary_subscr.5
12-22 13:04 DEBUG    on stmt: $184load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $186compare_op.10 = interpolation > $184load_global.9
12-22 13:04 DEBUG    on stmt: bool188 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $188pred = call bool188($186compare_op.10, func=bool188, args=(Var($186compare_op.10, umap_.py:209),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $188pred, 190, 244
12-22 13:04 DEBUG    ==== SSA block analysis pass on 190
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $196binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $204binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const210.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $212binary_subtract.13 = index - $const210.12
12-22 13:04 DEBUG    on stmt: $214binary_subscr.14 = getitem(value=non_zero_dists, index=$212binary_subtract.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $216binary_subtract.15 = $204binary_subscr.9 - $214binary_subscr.14
12-22 13:04 DEBUG    on stmt: $218binary_multiply.16 = interpolation * $216binary_subtract.15
12-22 13:04 DEBUG    on stmt: $220inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$196binary_subscr.5, rhs=$218binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: rho[i] = $220inplace_add.17
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block analysis pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $const232.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $234binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const232.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_multiply.5 = interpolation * $234binary_subscr.4
12-22 13:04 DEBUG    on stmt: rho[i] = $236binary_multiply.5
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block analysis pass on 244
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block analysis pass on 246
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $248load_attr.2 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const250.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $252binary_subscr.4 = static_getitem(value=$248load_attr.2, index=0, index_var=$const250.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const254.5 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $256compare_op.6 = $252binary_subscr.4 > $const254.5
12-22 13:04 DEBUG    on stmt: bool260 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $260pred = call bool260($256compare_op.6, func=bool260, args=(Var($256compare_op.6, umap_.py:215),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $260pred, 262, 276
12-22 13:04 DEBUG    ==== SSA block analysis pass on 262
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $262load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $264load_method.2 = getattr(value=$262load_global.1, attr=max)
12-22 13:04 DEBUG    on stmt: $268call_method.4 = call $264load_method.2(non_zero_dists, func=$264load_method.2, args=[Var(non_zero_dists, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: rho[i] = $268call_method.4
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block analysis pass on 276
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $276load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $280call_function.3 = call $276load_global.1(n_iter, func=$276load_global.1, args=[Var(n_iter, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $282get_iter.4 = getiter(value=$280call_function.3)
12-22 13:04 DEBUG    on stmt: $phi284.1 = $282get_iter.4
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block analysis pass on 284
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $284for_iter.2 = iternext(value=$phi284.1)
12-22 13:04 DEBUG    on stmt: $284for_iter.3 = pair_first(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $284for_iter.4 = pair_second(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi286.2 = $284for_iter.3
12-22 13:04 DEBUG    on stmt: branch $284for_iter.4, 286, 470
12-22 13:04 DEBUG    ==== SSA block analysis pass on 286
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: n = $phi286.2
12-22 13:04 DEBUG    on stmt: psum = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $292load_global.4 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const294.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $298load_attr.7 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const300.8 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $302binary_subscr.9 = static_getitem(value=$298load_attr.7, index=1, index_var=$const300.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $304call_function.10 = call $292load_global.4($const294.5, $302binary_subscr.9, func=$292load_global.4, args=[Var($const294.5, umap_.py:221), Var($302binary_subscr.9, umap_.py:221)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $306get_iter.11 = getiter(value=$304call_function.10)
12-22 13:04 DEBUG    on stmt: $phi308.2 = $306get_iter.11
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block analysis pass on 308
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $308for_iter.3 = iternext(value=$phi308.2)
12-22 13:04 DEBUG    on stmt: $308for_iter.4 = pair_first(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $308for_iter.5 = pair_second(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi310.3 = $308for_iter.4
12-22 13:04 DEBUG    on stmt: branch $308for_iter.5, 310, 376
12-22 13:04 DEBUG    ==== SSA block analysis pass on 310
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: j = $phi310.3
12-22 13:04 DEBUG    on stmt: $318build_tuple.7 = build_tuple(items=[Var(i, umap_.py:196), Var(j, umap_.py:221)])
12-22 13:04 DEBUG    on stmt: $320binary_subscr.8 = getitem(value=distances, index=$318build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: d = $320binary_subscr.8 - $326binary_subscr.11
12-22 13:04 DEBUG    on stmt: $const334.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $336compare_op.15 = d > $const334.14
12-22 13:04 DEBUG    on stmt: bool340 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $340pred = call bool340($336compare_op.15, func=bool340, args=(Var($336compare_op.15, umap_.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $340pred, 342, 364
12-22 13:04 DEBUG    ==== SSA block analysis pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $344load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $346load_method.5 = getattr(value=$344load_global.4, attr=exp)
12-22 13:04 DEBUG    on stmt: $352binary_true_divide.8 = d / mid
12-22 13:04 DEBUG    on stmt: $354unary_negative.9 = unary(fn=<built-in function neg>, value=$352binary_true_divide.8)
12-22 13:04 DEBUG    on stmt: $356call_method.10 = call $346load_method.5($354unary_negative.9, func=$346load_method.5, args=[Var($354unary_negative.9, umap_.py:224)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $358inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block analysis pass on 364
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $const366.4 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $368inplace_add.5
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block analysis pass on 372
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block analysis pass on 376
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $376load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $378load_method.3 = getattr(value=$376load_global.2, attr=fabs)
12-22 13:04 DEBUG    on stmt: $384binary_subtract.6 = psum - target
12-22 13:04 DEBUG    on stmt: $386call_method.7 = call $378load_method.3($384binary_subtract.6, func=$378load_method.3, args=[Var($384binary_subtract.6, umap_.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $388load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $390compare_op.9 = $386call_method.7 < $388load_global.8
12-22 13:04 DEBUG    on stmt: bool394 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $394pred = call bool394($390compare_op.9, func=bool394, args=(Var($390compare_op.9, umap_.py:228),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $394pred, 396, 402
12-22 13:04 DEBUG    ==== SSA block analysis pass on 396
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: jump 470
12-22 13:04 DEBUG    ==== SSA block analysis pass on 402
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $406compare_op.4 = psum > target
12-22 13:04 DEBUG    on stmt: bool410 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $410pred = call bool410($406compare_op.4, func=bool410, args=(Var($406compare_op.4, umap_.py:231),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $410pred, 412, 430
12-22 13:04 DEBUG    ==== SSA block analysis pass on 412
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: hi = mid
12-22 13:04 DEBUG    on stmt: $420binary_add.5 = lo + hi
12-22 13:04 DEBUG    on stmt: $const422.6 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid = $420binary_add.5 / $const422.6
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block analysis pass on 430
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: lo = mid
12-22 13:04 DEBUG    on stmt: $436load_global.4 = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: $438compare_op.5 = hi == $436load_global.4
12-22 13:04 DEBUG    on stmt: bool442 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $442pred = call bool442($438compare_op.5, func=bool442, args=(Var($438compare_op.5, umap_.py:236),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $442pred, 444, 454
12-22 13:04 DEBUG    ==== SSA block analysis pass on 444
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $const446.3 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: mid = $448inplace_multiply.4
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block analysis pass on 454
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $458binary_add.4 = lo + hi
12-22 13:04 DEBUG    on stmt: $const460.5 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid = $458binary_add.4 / $const460.5
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block analysis pass on 466
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block analysis pass on 470
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: result[i] = mid
12-22 13:04 DEBUG    on stmt: $482binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const484.7 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $486compare_op.8 = $482binary_subscr.6 > $const484.7
12-22 13:04 DEBUG    on stmt: bool490 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $490pred = call bool490($486compare_op.8, func=bool490, args=(Var($486compare_op.8, umap_.py:244),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $490pred, 492, 534
12-22 13:04 DEBUG    ==== SSA block analysis pass on 492
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $492load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $494load_method.2 = getattr(value=$492load_global.1, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_ith_distances = call $494load_method.2(ith_distances, func=$494load_method.2, args=[Var(ith_distances, umap_.py:202)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $506binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $508load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $512binary_multiply.10 = $508load_global.8 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: $514compare_op.11 = $506binary_subscr.7 < $512binary_multiply.10
12-22 13:04 DEBUG    on stmt: bool518 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $518pred = call bool518($514compare_op.11, func=bool518, args=(Var($514compare_op.11, umap_.py:246),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $518pred, 520, 562
12-22 13:04 DEBUG    ==== SSA block analysis pass on 520
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $520load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $524binary_multiply.3 = $520load_global.1 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: result[i] = $524binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block analysis pass on 534
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $538binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $540load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $544binary_multiply.6 = $540load_global.4 * mean_distances
12-22 13:04 DEBUG    on stmt: $546compare_op.7 = $538binary_subscr.3 < $544binary_multiply.6
12-22 13:04 DEBUG    on stmt: bool548 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $548pred = call bool548($546compare_op.7, func=bool548, args=(Var($546compare_op.7, umap_.py:249),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $548pred, 550, 565
12-22 13:04 DEBUG    ==== SSA block analysis pass on 550
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $550load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $554binary_multiply.3 = $550load_global.1 * mean_distances
12-22 13:04 DEBUG    on stmt: result[i] = $554binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 562
12-22 13:04 DEBUG    ==== SSA block analysis pass on 562
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block analysis pass on 564
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: $568build_tuple.2 = build_tuple(items=[Var(result, umap_.py:192), Var(rho, umap_.py:191)])
12-22 13:04 DEBUG    on stmt: $570return_value.3 = cast(value=$568build_tuple.2)
12-22 13:04 DEBUG    on stmt: return $570return_value.3
12-22 13:04 DEBUG    ==== SSA block analysis pass on 565
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12371910>
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$116compare_op.11': [<numba.core.ir.Assign object at 0x000001AEF352EE80>],
             '$124load_attr.14': [<numba.core.ir.Assign object at 0x000001AEF352EB20>],
             '$128binary_subscr.16': [<numba.core.ir.Assign object at 0x000001AF123727F0>],
             '$132compare_op.18': [<numba.core.ir.Assign object at 0x000001AEF32C3B20>],
             '$134pred': [<numba.core.ir.Assign object at 0x000001AEF36603A0>],
             '$136load_global.1': [<numba.core.ir.Assign object at 0x000001AF122DDF40>],
             '$138load_global.2': [<numba.core.ir.Assign object at 0x000001AEF352E820>],
             '$140load_method.3': [<numba.core.ir.Assign object at 0x000001AF122C6460>],
             '$144call_method.5': [<numba.core.ir.Assign object at 0x000001AF122C6550>],
             '$162compare_op.12': [<numba.core.ir.Assign object at 0x000001AEF37C55B0>],
             '$164pred': [<numba.core.ir.Assign object at 0x000001AEF31931C0>],
             '$16load_global.6': [<numba.core.ir.Assign object at 0x000001AF12326D30>],
             '$172binary_subtract.4': [<numba.core.ir.Assign object at 0x000001AEF3193070>],
             '$174binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AF123B8880>],
             '$184load_global.9': [<numba.core.ir.Assign object at 0x000001AF123B8400>],
             '$186compare_op.10': [<numba.core.ir.Assign object at 0x000001AF123B8A30>],
             '$188pred': [<numba.core.ir.Assign object at 0x000001AF123B8160>],
             '$18load_attr.7': [<numba.core.ir.Assign object at 0x000001AF1232A0A0>],
             '$196binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AF123B8F70>],
             '$204binary_subscr.9': [<numba.core.ir.Assign object at 0x000001AF122E7490>],
             '$212binary_subtract.13': [<numba.core.ir.Assign object at 0x000001AF122E79D0>],
             '$214binary_subscr.14': [<numba.core.ir.Assign object at 0x000001AF122E7B50>],
             '$216binary_subtract.15': [<numba.core.ir.Assign object at 0x000001AF122E7CD0>],
             '$218binary_multiply.16': [<numba.core.ir.Assign object at 0x000001AF122E7E50>],
             '$220inplace_add.17': [<numba.core.ir.Assign object at 0x000001AF122E7FD0>],
             '$22load_attr.9': [<numba.core.ir.Assign object at 0x000001AF1232A790>],
             '$234binary_subscr.4': [<numba.core.ir.Assign object at 0x000001AF123721C0>],
             '$236binary_multiply.5': [<numba.core.ir.Assign object at 0x000001AF122E95B0>],
             '$248load_attr.2': [<numba.core.ir.Assign object at 0x000001AF122E9C70>],
             '$252binary_subscr.4': [<numba.core.ir.Assign object at 0x000001AF123720A0>],
             '$256compare_op.6': [<numba.core.ir.Assign object at 0x000001AF122D92B0>],
             '$260pred': [<numba.core.ir.Assign object at 0x000001AF122D9550>],
             '$262load_global.1': [<numba.core.ir.Assign object at 0x000001AF122D9790>],
             '$264load_method.2': [<numba.core.ir.Assign object at 0x000001AF122D9910>],
             '$268call_method.4': [<numba.core.ir.Assign object at 0x000001AF122D9BE0>],
             '$26binary_subscr.11': [<numba.core.ir.Assign object at 0x000001AF12372520>],
             '$276load_global.1': [<numba.core.ir.Assign object at 0x000001AF122D5070>],
             '$280call_function.3': [<numba.core.ir.Assign object at 0x000001AF122D5340>],
             '$282get_iter.4': [<numba.core.ir.Assign object at 0x000001AF122D5490>],
             '$284for_iter.2': [<numba.core.ir.Assign object at 0x000001AF122D57F0>],
             '$284for_iter.3': [<numba.core.ir.Assign object at 0x000001AF122D5910>],
             '$284for_iter.4': [<numba.core.ir.Assign object at 0x000001AF122D5A30>],
             '$28load_global.12': [<numba.core.ir.Assign object at 0x000001AF1150C580>],
             '$292load_global.4': [<numba.core.ir.Assign object at 0x000001AF122E3130>],
             '$298load_attr.7': [<numba.core.ir.Assign object at 0x000001AF122E3550>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AF12337EE0>],
             '$302binary_subscr.9': [<numba.core.ir.Assign object at 0x000001AEF1DCDB20>],
             '$304call_function.10': [<numba.core.ir.Assign object at 0x000001AF122E3A00>],
             '$306get_iter.11': [<numba.core.ir.Assign object at 0x000001AF122E3B50>],
             '$308for_iter.3': [<numba.core.ir.Assign object at 0x000001AF122E3E50>],
             '$308for_iter.4': [<numba.core.ir.Assign object at 0x000001AF122E3F70>],
             '$308for_iter.5': [<numba.core.ir.Assign object at 0x000001AF122D80D0>],
             '$30load_attr.13': [<numba.core.ir.Assign object at 0x000001AF11517CD0>],
             '$318build_tuple.7': [<numba.core.ir.Assign object at 0x000001AF122D8880>],
             '$320binary_subscr.8': [<numba.core.ir.Assign object at 0x000001AF122D89D0>],
             '$326binary_subscr.11': [<numba.core.ir.Assign object at 0x000001AF122D8D90>],
             '$336compare_op.15': [<numba.core.ir.Assign object at 0x000001AF122F9490>],
             '$340pred': [<numba.core.ir.Assign object at 0x000001AF122F9730>],
             '$344load_global.4': [<numba.core.ir.Assign object at 0x000001AF122F9850>],
             '$346load_method.5': [<numba.core.ir.Assign object at 0x000001AF122F99D0>],
             '$352binary_true_divide.8': [<numba.core.ir.Assign object at 0x000001AF122F9D90>],
             '$354unary_negative.9': [<numba.core.ir.Assign object at 0x000001AF122F9F10>],
             '$356call_method.10': [<numba.core.ir.Assign object at 0x000001AF122EF100>],
             '$358inplace_add.11': [<numba.core.ir.Assign object at 0x000001AF122EF250>],
             '$368inplace_add.5': [<numba.core.ir.Assign object at 0x000001AF122EF790>],
             '$376load_global.2': [<numba.core.ir.Assign object at 0x000001AF122EFC10>],
             '$378load_method.3': [<numba.core.ir.Assign object at 0x000001AF122EFD90>],
             '$384binary_subtract.6': [<numba.core.ir.Assign object at 0x000001AF122F0190>],
             '$386call_method.7': [<numba.core.ir.Assign object at 0x000001AF122F0340>],
             '$388load_global.8': [<numba.core.ir.Assign object at 0x000001AF122F0490>],
             '$38load_global.16': [<numba.core.ir.Assign object at 0x000001AF1231A670>],
             '$390compare_op.9': [<numba.core.ir.Assign object at 0x000001AF122F0610>],
             '$394pred': [<numba.core.ir.Assign object at 0x000001AF122F08B0>],
             '$406compare_op.4': [<numba.core.ir.Assign object at 0x000001AF122F0E50>],
             '$40load_attr.17': [<numba.core.ir.Assign object at 0x000001AF1231A7F0>],
             '$410pred': [<numba.core.ir.Assign object at 0x000001AF122E8130>],
             '$420binary_add.5': [<numba.core.ir.Assign object at 0x000001AF122E8730>],
             '$436load_global.4': [<numba.core.ir.Assign object at 0x000001AF122E8F10>],
             '$438compare_op.5': [<numba.core.ir.Assign object at 0x000001AF122E00D0>],
             '$442pred': [<numba.core.ir.Assign object at 0x000001AF122E0370>],
             '$448inplace_multiply.4': [<numba.core.ir.Assign object at 0x000001AF122E07F0>],
             '$44load_attr.19': [<numba.core.ir.Assign object at 0x000001AF1231AA60>],
             '$458binary_add.4': [<numba.core.ir.Assign object at 0x000001AF122E0D90>],
             '$482binary_subscr.6': [<numba.core.ir.Assign object at 0x000001AF123A9A90>],
             '$486compare_op.8': [<numba.core.ir.Assign object at 0x000001AF123A9D90>],
             '$48binary_subscr.21': [<numba.core.ir.Assign object at 0x000001AF12372400>],
             '$490pred': [<numba.core.ir.Assign object at 0x000001AF123B9070>],
             '$492load_global.1': [<numba.core.ir.Assign object at 0x000001AF123B9100>],
             '$494load_method.2': [<numba.core.ir.Assign object at 0x000001AF123B92B0>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x000001AF12337E20>],
             '$506binary_subscr.7': [<numba.core.ir.Assign object at 0x000001AF123B9A30>],
             '$508load_global.8': [<numba.core.ir.Assign object at 0x000001AF123B9BB0>],
             '$50load_global.22': [<numba.core.ir.Assign object at 0x000001AF122BF640>],
             '$512binary_multiply.10': [<numba.core.ir.Assign object at 0x000001AF123B9E50>],
             '$514compare_op.11': [<numba.core.ir.Assign object at 0x000001AF123B9FD0>],
             '$518pred': [<numba.core.ir.Assign object at 0x000001AF123AB2B0>],
             '$520load_global.1': [<numba.core.ir.Assign object at 0x000001AF123AB340>],
             '$524binary_multiply.3': [<numba.core.ir.Assign object at 0x000001AF123AB610>],
             '$52load_attr.23': [<numba.core.ir.Assign object at 0x000001AF122BFB50>],
             '$538binary_subscr.3': [<numba.core.ir.Assign object at 0x000001AF123ABD30>],
             '$540load_global.4': [<numba.core.ir.Assign object at 0x000001AF123ABEB0>],
             '$544binary_multiply.6': [<numba.core.ir.Assign object at 0x000001AF12393730>],
             '$546compare_op.7': [<numba.core.ir.Assign object at 0x000001AF12393EB0>],
             '$548pred': [<numba.core.ir.Assign object at 0x000001AF12393B20>],
             '$550load_global.1': [<numba.core.ir.Assign object at 0x000001AF12393A00>],
             '$554binary_multiply.3': [<numba.core.ir.Assign object at 0x000001AF123935E0>],
             '$568build_tuple.2': [<numba.core.ir.Assign object at 0x000001AF123A4280>],
             '$570return_value.3': [<numba.core.ir.Assign object at 0x000001AF123A43D0>],
             '$60load_global.26': [<numba.core.ir.Assign object at 0x000001AF122BFAC0>],
             '$62load_method.27': [<numba.core.ir.Assign object at 0x000001AF122BF790>],
             '$70load_global.30': [<numba.core.ir.Assign object at 0x000001AF122F2940>],
             '$74load_attr.32': [<numba.core.ir.Assign object at 0x000001AF122F2B20>],
             '$78binary_subscr.34': [<numba.core.ir.Assign object at 0x000001AF123723D0>],
             '$80call_function.35': [<numba.core.ir.Assign object at 0x000001AF122F2D00>],
             '$82get_iter.36': [<numba.core.ir.Assign object at 0x000001AF122F26D0>],
             '$86for_iter.1': [<numba.core.ir.Assign object at 0x000001AF122F2370>],
             '$86for_iter.2': [<numba.core.ir.Assign object at 0x000001AF122CBFA0>],
             '$86for_iter.3': [<numba.core.ir.Assign object at 0x000001AF122CB940>],
             '$8call_method.3': [<numba.core.ir.Assign object at 0x000001AF12337A30>],
             '$const114.10': [<numba.core.ir.Assign object at 0x000001AF122DDC40>],
             '$const126.15': [<numba.core.ir.Assign object at 0x000001AF12304C10>],
             '$const160.11': [<numba.core.ir.Assign object at 0x000001AEF37C5610>],
             '$const170.3': [<numba.core.ir.Assign object at 0x000001AEF3193B80>],
             '$const210.12': [<numba.core.ir.Assign object at 0x000001AF122E7850>],
             '$const232.3': [<numba.core.ir.Assign object at 0x000001AF122E92B0>],
             '$const24.10': [<numba.core.ir.Assign object at 0x000001AF11521610>],
             '$const250.3': [<numba.core.ir.Assign object at 0x000001AF122E9DF0>],
             '$const254.5': [<numba.core.ir.Assign object at 0x000001AF122D9130>],
             '$const294.5': [<numba.core.ir.Assign object at 0x000001AF122E32B0>],
             '$const300.8': [<numba.core.ir.Assign object at 0x000001AF122E36D0>],
             '$const334.14': [<numba.core.ir.Assign object at 0x000001AF122F9310>],
             '$const366.4': [<numba.core.ir.Assign object at 0x000001AF122EF610>],
             '$const422.6': [<numba.core.ir.Assign object at 0x000001AF122E88B0>],
             '$const446.3': [<numba.core.ir.Assign object at 0x000001AF122E0670>],
             '$const46.20': [<numba.core.ir.Assign object at 0x000001AF1231AD00>],
             '$const460.5': [<numba.core.ir.Assign object at 0x000001AF122E0F10>],
             '$const484.7': [<numba.core.ir.Assign object at 0x000001AF123A9C10>],
             '$const76.33': [<numba.core.ir.Assign object at 0x000001AF122F2A60>],
             '$phi284.1': [<numba.core.ir.Assign object at 0x000001AF122D51C0>],
             '$phi286.2': [<numba.core.ir.Assign object at 0x000001AF122D5700>],
             '$phi308.2': [<numba.core.ir.Assign object at 0x000001AF122D5640>],
             '$phi310.3': [<numba.core.ir.Assign object at 0x000001AF122E3D60>],
             '$phi86.0': [<numba.core.ir.Assign object at 0x000001AF12337DC0>],
             '$phi88.1': [<numba.core.ir.Assign object at 0x000001AF122F2CD0>],
             'bandwidth': [<numba.core.ir.Assign object at 0x000001AF12337CA0>],
             'bool134': [<numba.core.ir.Assign object at 0x000001AEF3660F10>],
             'bool164': [<numba.core.ir.Assign object at 0x000001AEF37C5F40>],
             'bool188': [<numba.core.ir.Assign object at 0x000001AF123B8280>],
             'bool260': [<numba.core.ir.Assign object at 0x000001AF122D9430>],
             'bool340': [<numba.core.ir.Assign object at 0x000001AF122F9610>],
             'bool394': [<numba.core.ir.Assign object at 0x000001AF122F0790>],
             'bool410': [<numba.core.ir.Assign object at 0x000001AF122F0FD0>],
             'bool442': [<numba.core.ir.Assign object at 0x000001AF122E0250>],
             'bool490': [<numba.core.ir.Assign object at 0x000001AF123A9F10>],
             'bool518': [<numba.core.ir.Assign object at 0x000001AF123AB190>],
             'bool548': [<numba.core.ir.Assign object at 0x000001AF12393E20>],
             'd': [<numba.core.ir.Assign object at 0x000001AF122D8F10>],
             'distances': [<numba.core.ir.Assign object at 0x000001AF123A5640>],
             'hi': [<numba.core.ir.Assign object at 0x000001AF122CBBB0>,
                    <numba.core.ir.Assign object at 0x000001AF122E8370>],
             'i': [<numba.core.ir.Assign object at 0x000001AF122CBF40>],
             'index': [<numba.core.ir.Assign object at 0x000001AF122C6580>],
             'interpolation': [<numba.core.ir.Assign object at 0x000001AF122C69D0>],
             'ith_distances': [<numba.core.ir.Assign object at 0x000001AF122DD790>],
             'j': [<numba.core.ir.Assign object at 0x000001AF122D8370>],
             'k': [<numba.core.ir.Assign object at 0x000001AF123A5C10>],
             'lo': [<numba.core.ir.Assign object at 0x000001AF122CB8E0>,
                    <numba.core.ir.Assign object at 0x000001AF122E8C70>],
             'local_connectivity': [<numba.core.ir.Assign object at 0x000001AF123A5A90>],
             'mean_distances': [<numba.core.ir.Assign object at 0x000001AF122F2190>],
             'mean_ith_distances': [<numba.core.ir.Assign object at 0x000001AF123B9580>],
             'mid': [<numba.core.ir.Assign object at 0x000001AF122CB280>,
                     <numba.core.ir.Assign object at 0x000001AF122E8A30>,
                     <numba.core.ir.Assign object at 0x000001AF122E08B0>,
                     <numba.core.ir.Assign object at 0x000001AF123A90D0>],
             'n': [<numba.core.ir.Assign object at 0x000001AF122D5CD0>],
             'n_iter': [<numba.core.ir.Assign object at 0x000001AF123A5F10>],
             'non_zero_dists': [<numba.core.ir.Assign object at 0x000001AEF352EB80>],
             'psum': [<numba.core.ir.Assign object at 0x000001AF122D5E50>,
                      <numba.core.ir.Assign object at 0x000001AF122EF310>,
                      <numba.core.ir.Assign object at 0x000001AF122EF850>],
             'result': [<numba.core.ir.Assign object at 0x000001AF122BFBE0>],
             'rho': [<numba.core.ir.Assign object at 0x000001AF1231A460>],
             'target': [<numba.core.ir.Assign object at 0x000001AF12337610>]})
12-22 13:04 DEBUG    SSA violators {'mid', 'lo', 'psum', 'hi'}
12-22 13:04 DEBUG    Fix SSA violator on var mid
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: distances = arg(0, name=distances)
12-22 13:04 DEBUG    on stmt: k = arg(1, name=k)
12-22 13:04 DEBUG    on stmt: n_iter = arg(2, name=n_iter)
12-22 13:04 DEBUG    on stmt: local_connectivity = arg(3, name=local_connectivity)
12-22 13:04 DEBUG    on stmt: bandwidth = arg(4, name=bandwidth)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
12-22 13:04 DEBUG    on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: target = $8call_method.3 * bandwidth
12-22 13:04 DEBUG    on stmt: $16load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
12-22 13:04 DEBUG    on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const24.10 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
12-22 13:04 DEBUG    on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:191)], kws=[('dtype', Var($30load_attr.13, umap_.py:191))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $38load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const46.20 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
12-22 13:04 DEBUG    on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:192)], kws=[('dtype', Var($52load_attr.23, umap_.py:192))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $60load_global.26 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $70load_global.30 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const76.33 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:196)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
12-22 13:04 DEBUG    on stmt: $phi86.0 = $82get_iter.36
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $86for_iter.1 = iternext(value=$phi86.0)
12-22 13:04 DEBUG    on stmt: $86for_iter.2 = pair_first(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $86for_iter.3 = pair_second(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi88.1 = $86for_iter.2
12-22 13:04 DEBUG    on stmt: branch $86for_iter.3, 88, 564
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: i = $phi88.1
12-22 13:04 DEBUG    on stmt: lo = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: hi = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: mid = const(float, 1.0)
12-22 13:04 DEBUG    first assign: mid
12-22 13:04 DEBUG    replaced with: mid = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const114.10 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $116compare_op.11 = ith_distances > $const114.10
12-22 13:04 DEBUG    on stmt: non_zero_dists = getitem(value=ith_distances, index=$116compare_op.11, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $124load_attr.14 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const126.15 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $128binary_subscr.16 = static_getitem(value=$124load_attr.14, index=0, index_var=$const126.15, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $132compare_op.18 = $128binary_subscr.16 >= local_connectivity
12-22 13:04 DEBUG    on stmt: bool134 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $134pred = call bool134($132compare_op.18, func=bool134, args=(Var($132compare_op.18, umap_.py:204),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $134pred, 136, 246
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 136
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $136load_global.1 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $138load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $140load_method.3 = getattr(value=$138load_global.2, attr=floor)
12-22 13:04 DEBUG    on stmt: $144call_method.5 = call $140load_method.3(local_connectivity, func=$140load_method.3, args=[Var(local_connectivity, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: index = call $136load_global.1($144call_method.5, func=$136load_global.1, args=[Var($144call_method.5, umap_.py:205)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: interpolation = local_connectivity - index
12-22 13:04 DEBUG    on stmt: $const160.11 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $162compare_op.12 = index > $const160.11
12-22 13:04 DEBUG    on stmt: bool164 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $164pred = call bool164($162compare_op.12, func=bool164, args=(Var($162compare_op.12, umap_.py:207),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $164pred, 166, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 166
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $const170.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $172binary_subtract.4 = index - $const170.3
12-22 13:04 DEBUG    on stmt: $174binary_subscr.5 = getitem(value=non_zero_dists, index=$172binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: rho[i] = $174binary_subscr.5
12-22 13:04 DEBUG    on stmt: $184load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $186compare_op.10 = interpolation > $184load_global.9
12-22 13:04 DEBUG    on stmt: bool188 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $188pred = call bool188($186compare_op.10, func=bool188, args=(Var($186compare_op.10, umap_.py:209),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $188pred, 190, 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 190
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $196binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $204binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const210.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $212binary_subtract.13 = index - $const210.12
12-22 13:04 DEBUG    on stmt: $214binary_subscr.14 = getitem(value=non_zero_dists, index=$212binary_subtract.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $216binary_subtract.15 = $204binary_subscr.9 - $214binary_subscr.14
12-22 13:04 DEBUG    on stmt: $218binary_multiply.16 = interpolation * $216binary_subtract.15
12-22 13:04 DEBUG    on stmt: $220inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$196binary_subscr.5, rhs=$218binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: rho[i] = $220inplace_add.17
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $const232.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $234binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const232.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_multiply.5 = interpolation * $234binary_subscr.4
12-22 13:04 DEBUG    on stmt: rho[i] = $236binary_multiply.5
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 244
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 246
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $248load_attr.2 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const250.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $252binary_subscr.4 = static_getitem(value=$248load_attr.2, index=0, index_var=$const250.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const254.5 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $256compare_op.6 = $252binary_subscr.4 > $const254.5
12-22 13:04 DEBUG    on stmt: bool260 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $260pred = call bool260($256compare_op.6, func=bool260, args=(Var($256compare_op.6, umap_.py:215),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $260pred, 262, 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 262
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $262load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $264load_method.2 = getattr(value=$262load_global.1, attr=max)
12-22 13:04 DEBUG    on stmt: $268call_method.4 = call $264load_method.2(non_zero_dists, func=$264load_method.2, args=[Var(non_zero_dists, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: rho[i] = $268call_method.4
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 276
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $276load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $280call_function.3 = call $276load_global.1(n_iter, func=$276load_global.1, args=[Var(n_iter, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $282get_iter.4 = getiter(value=$280call_function.3)
12-22 13:04 DEBUG    on stmt: $phi284.1 = $282get_iter.4
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 284
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $284for_iter.2 = iternext(value=$phi284.1)
12-22 13:04 DEBUG    on stmt: $284for_iter.3 = pair_first(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $284for_iter.4 = pair_second(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi286.2 = $284for_iter.3
12-22 13:04 DEBUG    on stmt: branch $284for_iter.4, 286, 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 286
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: n = $phi286.2
12-22 13:04 DEBUG    on stmt: psum = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $292load_global.4 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const294.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $298load_attr.7 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const300.8 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $302binary_subscr.9 = static_getitem(value=$298load_attr.7, index=1, index_var=$const300.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $304call_function.10 = call $292load_global.4($const294.5, $302binary_subscr.9, func=$292load_global.4, args=[Var($const294.5, umap_.py:221), Var($302binary_subscr.9, umap_.py:221)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $306get_iter.11 = getiter(value=$304call_function.10)
12-22 13:04 DEBUG    on stmt: $phi308.2 = $306get_iter.11
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 308
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $308for_iter.3 = iternext(value=$phi308.2)
12-22 13:04 DEBUG    on stmt: $308for_iter.4 = pair_first(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $308for_iter.5 = pair_second(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi310.3 = $308for_iter.4
12-22 13:04 DEBUG    on stmt: branch $308for_iter.5, 310, 376
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 310
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: j = $phi310.3
12-22 13:04 DEBUG    on stmt: $318build_tuple.7 = build_tuple(items=[Var(i, umap_.py:196), Var(j, umap_.py:221)])
12-22 13:04 DEBUG    on stmt: $320binary_subscr.8 = getitem(value=distances, index=$318build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: d = $320binary_subscr.8 - $326binary_subscr.11
12-22 13:04 DEBUG    on stmt: $const334.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $336compare_op.15 = d > $const334.14
12-22 13:04 DEBUG    on stmt: bool340 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $340pred = call bool340($336compare_op.15, func=bool340, args=(Var($336compare_op.15, umap_.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $340pred, 342, 364
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $344load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $346load_method.5 = getattr(value=$344load_global.4, attr=exp)
12-22 13:04 DEBUG    on stmt: $352binary_true_divide.8 = d / mid
12-22 13:04 DEBUG    on stmt: $354unary_negative.9 = unary(fn=<built-in function neg>, value=$352binary_true_divide.8)
12-22 13:04 DEBUG    on stmt: $356call_method.10 = call $346load_method.5($354unary_negative.9, func=$346load_method.5, args=[Var($354unary_negative.9, umap_.py:224)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $358inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 364
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $const366.4 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $368inplace_add.5
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 372
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 376
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $376load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $378load_method.3 = getattr(value=$376load_global.2, attr=fabs)
12-22 13:04 DEBUG    on stmt: $384binary_subtract.6 = psum - target
12-22 13:04 DEBUG    on stmt: $386call_method.7 = call $378load_method.3($384binary_subtract.6, func=$378load_method.3, args=[Var($384binary_subtract.6, umap_.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $388load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $390compare_op.9 = $386call_method.7 < $388load_global.8
12-22 13:04 DEBUG    on stmt: bool394 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $394pred = call bool394($390compare_op.9, func=bool394, args=(Var($390compare_op.9, umap_.py:228),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $394pred, 396, 402
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 396
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 402
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $406compare_op.4 = psum > target
12-22 13:04 DEBUG    on stmt: bool410 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $410pred = call bool410($406compare_op.4, func=bool410, args=(Var($406compare_op.4, umap_.py:231),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $410pred, 412, 430
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 412
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: hi = mid
12-22 13:04 DEBUG    on stmt: $420binary_add.5 = lo + hi
12-22 13:04 DEBUG    on stmt: $const422.6 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid = $420binary_add.5 / $const422.6
12-22 13:04 DEBUG    replaced with: mid.1 = $420binary_add.5 / $const422.6
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 430
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: lo = mid
12-22 13:04 DEBUG    on stmt: $436load_global.4 = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: $438compare_op.5 = hi == $436load_global.4
12-22 13:04 DEBUG    on stmt: bool442 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $442pred = call bool442($438compare_op.5, func=bool442, args=(Var($438compare_op.5, umap_.py:236),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $442pred, 444, 454
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 444
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $const446.3 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: mid = $448inplace_multiply.4
12-22 13:04 DEBUG    replaced with: mid.2 = $448inplace_multiply.4
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 454
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $458binary_add.4 = lo + hi
12-22 13:04 DEBUG    on stmt: $const460.5 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid = $458binary_add.4 / $const460.5
12-22 13:04 DEBUG    replaced with: mid.3 = $458binary_add.4 / $const460.5
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 466
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 470
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: result[i] = mid
12-22 13:04 DEBUG    on stmt: $482binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const484.7 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $486compare_op.8 = $482binary_subscr.6 > $const484.7
12-22 13:04 DEBUG    on stmt: bool490 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $490pred = call bool490($486compare_op.8, func=bool490, args=(Var($486compare_op.8, umap_.py:244),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $490pred, 492, 534
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 492
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $492load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $494load_method.2 = getattr(value=$492load_global.1, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_ith_distances = call $494load_method.2(ith_distances, func=$494load_method.2, args=[Var(ith_distances, umap_.py:202)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $506binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $508load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $512binary_multiply.10 = $508load_global.8 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: $514compare_op.11 = $506binary_subscr.7 < $512binary_multiply.10
12-22 13:04 DEBUG    on stmt: bool518 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $518pred = call bool518($514compare_op.11, func=bool518, args=(Var($514compare_op.11, umap_.py:246),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $518pred, 520, 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 520
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $520load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $524binary_multiply.3 = $520load_global.1 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: result[i] = $524binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 534
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $538binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $540load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $544binary_multiply.6 = $540load_global.4 * mean_distances
12-22 13:04 DEBUG    on stmt: $546compare_op.7 = $538binary_subscr.3 < $544binary_multiply.6
12-22 13:04 DEBUG    on stmt: bool548 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $548pred = call bool548($546compare_op.7, func=bool548, args=(Var($546compare_op.7, umap_.py:249),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $548pred, 550, 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 550
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $550load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $554binary_multiply.3 = $550load_global.1 * mean_distances
12-22 13:04 DEBUG    on stmt: result[i] = $554binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 562
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 564
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $568build_tuple.2 = build_tuple(items=[Var(result, umap_.py:192), Var(rho, umap_.py:191)])
12-22 13:04 DEBUG    on stmt: $570return_value.3 = cast(value=$568build_tuple.2)
12-22 13:04 DEBUG    on stmt: return $570return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 565
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {88: [<numba.core.ir.Assign object at 0x000001AF12372F40>],
             412: [<numba.core.ir.Assign object at 0x000001AF12372340>],
             444: [<numba.core.ir.Assign object at 0x000001AF1232E550>],
             454: [<numba.core.ir.Assign object at 0x000001AF123A5730>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: distances = arg(0, name=distances)
12-22 13:04 DEBUG    on stmt: k = arg(1, name=k)
12-22 13:04 DEBUG    on stmt: n_iter = arg(2, name=n_iter)
12-22 13:04 DEBUG    on stmt: local_connectivity = arg(3, name=local_connectivity)
12-22 13:04 DEBUG    on stmt: bandwidth = arg(4, name=bandwidth)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
12-22 13:04 DEBUG    on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: target = $8call_method.3 * bandwidth
12-22 13:04 DEBUG    on stmt: $16load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
12-22 13:04 DEBUG    on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const24.10 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
12-22 13:04 DEBUG    on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:191)], kws=[('dtype', Var($30load_attr.13, umap_.py:191))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $38load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const46.20 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
12-22 13:04 DEBUG    on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:192)], kws=[('dtype', Var($52load_attr.23, umap_.py:192))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $60load_global.26 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $70load_global.30 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const76.33 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:196)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
12-22 13:04 DEBUG    on stmt: $phi86.0 = $82get_iter.36
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $86for_iter.1 = iternext(value=$phi86.0)
12-22 13:04 DEBUG    on stmt: $86for_iter.2 = pair_first(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $86for_iter.3 = pair_second(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi88.1 = $86for_iter.2
12-22 13:04 DEBUG    on stmt: branch $86for_iter.3, 88, 564
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: i = $phi88.1
12-22 13:04 DEBUG    on stmt: lo = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: hi = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: mid = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const114.10 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $116compare_op.11 = ith_distances > $const114.10
12-22 13:04 DEBUG    on stmt: non_zero_dists = getitem(value=ith_distances, index=$116compare_op.11, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $124load_attr.14 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const126.15 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $128binary_subscr.16 = static_getitem(value=$124load_attr.14, index=0, index_var=$const126.15, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $132compare_op.18 = $128binary_subscr.16 >= local_connectivity
12-22 13:04 DEBUG    on stmt: bool134 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $134pred = call bool134($132compare_op.18, func=bool134, args=(Var($132compare_op.18, umap_.py:204),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $134pred, 136, 246
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 136
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $136load_global.1 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $138load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $140load_method.3 = getattr(value=$138load_global.2, attr=floor)
12-22 13:04 DEBUG    on stmt: $144call_method.5 = call $140load_method.3(local_connectivity, func=$140load_method.3, args=[Var(local_connectivity, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: index = call $136load_global.1($144call_method.5, func=$136load_global.1, args=[Var($144call_method.5, umap_.py:205)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: interpolation = local_connectivity - index
12-22 13:04 DEBUG    on stmt: $const160.11 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $162compare_op.12 = index > $const160.11
12-22 13:04 DEBUG    on stmt: bool164 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $164pred = call bool164($162compare_op.12, func=bool164, args=(Var($162compare_op.12, umap_.py:207),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $164pred, 166, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 166
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $const170.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $172binary_subtract.4 = index - $const170.3
12-22 13:04 DEBUG    on stmt: $174binary_subscr.5 = getitem(value=non_zero_dists, index=$172binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: rho[i] = $174binary_subscr.5
12-22 13:04 DEBUG    on stmt: $184load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $186compare_op.10 = interpolation > $184load_global.9
12-22 13:04 DEBUG    on stmt: bool188 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $188pred = call bool188($186compare_op.10, func=bool188, args=(Var($186compare_op.10, umap_.py:209),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $188pred, 190, 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 190
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $196binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $204binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const210.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $212binary_subtract.13 = index - $const210.12
12-22 13:04 DEBUG    on stmt: $214binary_subscr.14 = getitem(value=non_zero_dists, index=$212binary_subtract.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $216binary_subtract.15 = $204binary_subscr.9 - $214binary_subscr.14
12-22 13:04 DEBUG    on stmt: $218binary_multiply.16 = interpolation * $216binary_subtract.15
12-22 13:04 DEBUG    on stmt: $220inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$196binary_subscr.5, rhs=$218binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: rho[i] = $220inplace_add.17
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $const232.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $234binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const232.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_multiply.5 = interpolation * $234binary_subscr.4
12-22 13:04 DEBUG    on stmt: rho[i] = $236binary_multiply.5
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 244
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 246
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $248load_attr.2 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const250.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $252binary_subscr.4 = static_getitem(value=$248load_attr.2, index=0, index_var=$const250.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const254.5 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $256compare_op.6 = $252binary_subscr.4 > $const254.5
12-22 13:04 DEBUG    on stmt: bool260 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $260pred = call bool260($256compare_op.6, func=bool260, args=(Var($256compare_op.6, umap_.py:215),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $260pred, 262, 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 262
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $262load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $264load_method.2 = getattr(value=$262load_global.1, attr=max)
12-22 13:04 DEBUG    on stmt: $268call_method.4 = call $264load_method.2(non_zero_dists, func=$264load_method.2, args=[Var(non_zero_dists, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: rho[i] = $268call_method.4
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 276
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $276load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $280call_function.3 = call $276load_global.1(n_iter, func=$276load_global.1, args=[Var(n_iter, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $282get_iter.4 = getiter(value=$280call_function.3)
12-22 13:04 DEBUG    on stmt: $phi284.1 = $282get_iter.4
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 284
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $284for_iter.2 = iternext(value=$phi284.1)
12-22 13:04 DEBUG    on stmt: $284for_iter.3 = pair_first(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $284for_iter.4 = pair_second(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi286.2 = $284for_iter.3
12-22 13:04 DEBUG    on stmt: branch $284for_iter.4, 286, 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 286
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: n = $phi286.2
12-22 13:04 DEBUG    on stmt: psum = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $292load_global.4 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const294.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $298load_attr.7 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const300.8 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $302binary_subscr.9 = static_getitem(value=$298load_attr.7, index=1, index_var=$const300.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $304call_function.10 = call $292load_global.4($const294.5, $302binary_subscr.9, func=$292load_global.4, args=[Var($const294.5, umap_.py:221), Var($302binary_subscr.9, umap_.py:221)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $306get_iter.11 = getiter(value=$304call_function.10)
12-22 13:04 DEBUG    on stmt: $phi308.2 = $306get_iter.11
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 308
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $308for_iter.3 = iternext(value=$phi308.2)
12-22 13:04 DEBUG    on stmt: $308for_iter.4 = pair_first(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $308for_iter.5 = pair_second(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi310.3 = $308for_iter.4
12-22 13:04 DEBUG    on stmt: branch $308for_iter.5, 310, 376
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 310
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: j = $phi310.3
12-22 13:04 DEBUG    on stmt: $318build_tuple.7 = build_tuple(items=[Var(i, umap_.py:196), Var(j, umap_.py:221)])
12-22 13:04 DEBUG    on stmt: $320binary_subscr.8 = getitem(value=distances, index=$318build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: d = $320binary_subscr.8 - $326binary_subscr.11
12-22 13:04 DEBUG    on stmt: $const334.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $336compare_op.15 = d > $const334.14
12-22 13:04 DEBUG    on stmt: bool340 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $340pred = call bool340($336compare_op.15, func=bool340, args=(Var($336compare_op.15, umap_.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $340pred, 342, 364
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $344load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $346load_method.5 = getattr(value=$344load_global.4, attr=exp)
12-22 13:04 DEBUG    on stmt: $352binary_true_divide.8 = d / mid
12-22 13:04 DEBUG    find_def var='mid' stmt=$352binary_true_divide.8 = d / mid
12-22 13:04 DEBUG    find_def_from_top label 342
12-22 13:04 DEBUG    idom 310 from label 342
12-22 13:04 DEBUG    find_def_from_bottom label 310
12-22 13:04 DEBUG    find_def_from_top label 310
12-22 13:04 DEBUG    idom 308 from label 310
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    find_def_from_top label 308
12-22 13:04 DEBUG    idom 286 from label 308
12-22 13:04 DEBUG    find_def_from_bottom label 286
12-22 13:04 DEBUG    find_def_from_top label 286
12-22 13:04 DEBUG    idom 284 from label 286
12-22 13:04 DEBUG    find_def_from_bottom label 284
12-22 13:04 DEBUG    find_def_from_top label 284
12-22 13:04 DEBUG    insert phi node mid.4 = phi(incoming_values=[], incoming_blocks=[]) at 284
12-22 13:04 DEBUG    find_def_from_bottom label 466
12-22 13:04 DEBUG    find_def_from_top label 466
12-22 13:04 DEBUG    insert phi node mid.5 = phi(incoming_values=[], incoming_blocks=[]) at 466
12-22 13:04 DEBUG    find_def_from_bottom label 444
12-22 13:04 DEBUG    incoming_def mid.2 = $448inplace_multiply.4
12-22 13:04 DEBUG    find_def_from_bottom label 412
12-22 13:04 DEBUG    incoming_def mid.1 = $420binary_add.5 / $const422.6
12-22 13:04 DEBUG    find_def_from_bottom label 454
12-22 13:04 DEBUG    incoming_def mid.3 = $458binary_add.4 / $const460.5
12-22 13:04 DEBUG    incoming_def mid.5 = phi(incoming_values=[Var(mid.2, umap_.py:237), Var(mid.1, umap_.py:233), Var(mid.3, umap_.py:239)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    find_def_from_bottom label 276
12-22 13:04 DEBUG    find_def_from_top label 276
12-22 13:04 DEBUG    idom 88 from label 276
12-22 13:04 DEBUG    find_def_from_bottom label 88
12-22 13:04 DEBUG    incoming_def mid = const(float, 1.0)
12-22 13:04 DEBUG    replaced with: $352binary_true_divide.8 = d / mid.4
12-22 13:04 DEBUG    on stmt: $354unary_negative.9 = unary(fn=<built-in function neg>, value=$352binary_true_divide.8)
12-22 13:04 DEBUG    on stmt: $356call_method.10 = call $346load_method.5($354unary_negative.9, func=$346load_method.5, args=[Var($354unary_negative.9, umap_.py:224)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $358inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 364
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $const366.4 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $368inplace_add.5
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 372
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 376
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $376load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $378load_method.3 = getattr(value=$376load_global.2, attr=fabs)
12-22 13:04 DEBUG    on stmt: $384binary_subtract.6 = psum - target
12-22 13:04 DEBUG    on stmt: $386call_method.7 = call $378load_method.3($384binary_subtract.6, func=$378load_method.3, args=[Var($384binary_subtract.6, umap_.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $388load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $390compare_op.9 = $386call_method.7 < $388load_global.8
12-22 13:04 DEBUG    on stmt: bool394 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $394pred = call bool394($390compare_op.9, func=bool394, args=(Var($390compare_op.9, umap_.py:228),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $394pred, 396, 402
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 396
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 402
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $406compare_op.4 = psum > target
12-22 13:04 DEBUG    on stmt: bool410 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $410pred = call bool410($406compare_op.4, func=bool410, args=(Var($406compare_op.4, umap_.py:231),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $410pred, 412, 430
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 412
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: hi = mid
12-22 13:04 DEBUG    find_def var='mid' stmt=hi = mid
12-22 13:04 DEBUG    find_def_from_top label 412
12-22 13:04 DEBUG    idom 402 from label 412
12-22 13:04 DEBUG    find_def_from_bottom label 402
12-22 13:04 DEBUG    find_def_from_top label 402
12-22 13:04 DEBUG    idom 376 from label 402
12-22 13:04 DEBUG    find_def_from_bottom label 376
12-22 13:04 DEBUG    find_def_from_top label 376
12-22 13:04 DEBUG    idom 308 from label 376
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    find_def_from_top label 308
12-22 13:04 DEBUG    idom 286 from label 308
12-22 13:04 DEBUG    find_def_from_bottom label 286
12-22 13:04 DEBUG    find_def_from_top label 286
12-22 13:04 DEBUG    idom 284 from label 286
12-22 13:04 DEBUG    find_def_from_bottom label 284
12-22 13:04 DEBUG    replaced with: hi = mid.4
12-22 13:04 DEBUG    on stmt: $420binary_add.5 = lo + hi
12-22 13:04 DEBUG    on stmt: $const422.6 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.1 = $420binary_add.5 / $const422.6
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 430
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: lo = mid
12-22 13:04 DEBUG    find_def var='mid' stmt=lo = mid
12-22 13:04 DEBUG    find_def_from_top label 430
12-22 13:04 DEBUG    idom 402 from label 430
12-22 13:04 DEBUG    find_def_from_bottom label 402
12-22 13:04 DEBUG    find_def_from_top label 402
12-22 13:04 DEBUG    idom 376 from label 402
12-22 13:04 DEBUG    find_def_from_bottom label 376
12-22 13:04 DEBUG    find_def_from_top label 376
12-22 13:04 DEBUG    idom 308 from label 376
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    find_def_from_top label 308
12-22 13:04 DEBUG    idom 286 from label 308
12-22 13:04 DEBUG    find_def_from_bottom label 286
12-22 13:04 DEBUG    find_def_from_top label 286
12-22 13:04 DEBUG    idom 284 from label 286
12-22 13:04 DEBUG    find_def_from_bottom label 284
12-22 13:04 DEBUG    replaced with: lo = mid.4
12-22 13:04 DEBUG    on stmt: $436load_global.4 = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: $438compare_op.5 = hi == $436load_global.4
12-22 13:04 DEBUG    on stmt: bool442 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $442pred = call bool442($438compare_op.5, func=bool442, args=(Var($438compare_op.5, umap_.py:236),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $442pred, 444, 454
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 444
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $const446.3 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='mid' stmt=$448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 444
12-22 13:04 DEBUG    idom 430 from label 444
12-22 13:04 DEBUG    find_def_from_bottom label 430
12-22 13:04 DEBUG    find_def_from_top label 430
12-22 13:04 DEBUG    idom 402 from label 430
12-22 13:04 DEBUG    find_def_from_bottom label 402
12-22 13:04 DEBUG    find_def_from_top label 402
12-22 13:04 DEBUG    idom 376 from label 402
12-22 13:04 DEBUG    find_def_from_bottom label 376
12-22 13:04 DEBUG    find_def_from_top label 376
12-22 13:04 DEBUG    idom 308 from label 376
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    find_def_from_top label 308
12-22 13:04 DEBUG    idom 286 from label 308
12-22 13:04 DEBUG    find_def_from_bottom label 286
12-22 13:04 DEBUG    find_def_from_top label 286
12-22 13:04 DEBUG    idom 284 from label 286
12-22 13:04 DEBUG    find_def_from_bottom label 284
12-22 13:04 DEBUG    replaced with: $448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid.4, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: mid.2 = $448inplace_multiply.4
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 454
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $458binary_add.4 = lo + hi
12-22 13:04 DEBUG    on stmt: $const460.5 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.3 = $458binary_add.4 / $const460.5
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 466
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 470
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: result[i] = mid
12-22 13:04 DEBUG    find_def var='mid' stmt=result[i] = mid
12-22 13:04 DEBUG    find_def_from_top label 470
12-22 13:04 DEBUG    idom 284 from label 470
12-22 13:04 DEBUG    find_def_from_bottom label 284
12-22 13:04 DEBUG    replaced with: result[i] = mid.4
12-22 13:04 DEBUG    on stmt: $482binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const484.7 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $486compare_op.8 = $482binary_subscr.6 > $const484.7
12-22 13:04 DEBUG    on stmt: bool490 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $490pred = call bool490($486compare_op.8, func=bool490, args=(Var($486compare_op.8, umap_.py:244),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $490pred, 492, 534
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 492
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $492load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $494load_method.2 = getattr(value=$492load_global.1, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_ith_distances = call $494load_method.2(ith_distances, func=$494load_method.2, args=[Var(ith_distances, umap_.py:202)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $506binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $508load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $512binary_multiply.10 = $508load_global.8 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: $514compare_op.11 = $506binary_subscr.7 < $512binary_multiply.10
12-22 13:04 DEBUG    on stmt: bool518 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $518pred = call bool518($514compare_op.11, func=bool518, args=(Var($514compare_op.11, umap_.py:246),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $518pred, 520, 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 520
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $520load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $524binary_multiply.3 = $520load_global.1 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: result[i] = $524binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 534
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $538binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $540load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $544binary_multiply.6 = $540load_global.4 * mean_distances
12-22 13:04 DEBUG    on stmt: $546compare_op.7 = $538binary_subscr.3 < $544binary_multiply.6
12-22 13:04 DEBUG    on stmt: bool548 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $548pred = call bool548($546compare_op.7, func=bool548, args=(Var($546compare_op.7, umap_.py:249),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $548pred, 550, 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 550
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $550load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $554binary_multiply.3 = $550load_global.1 * mean_distances
12-22 13:04 DEBUG    on stmt: result[i] = $554binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 562
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 564
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: $568build_tuple.2 = build_tuple(items=[Var(result, umap_.py:192), Var(rho, umap_.py:191)])
12-22 13:04 DEBUG    on stmt: $570return_value.3 = cast(value=$568build_tuple.2)
12-22 13:04 DEBUG    on stmt: return $570return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 565
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123729D0>
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    Fix SSA violator on var lo
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: distances = arg(0, name=distances)
12-22 13:04 DEBUG    on stmt: k = arg(1, name=k)
12-22 13:04 DEBUG    on stmt: n_iter = arg(2, name=n_iter)
12-22 13:04 DEBUG    on stmt: local_connectivity = arg(3, name=local_connectivity)
12-22 13:04 DEBUG    on stmt: bandwidth = arg(4, name=bandwidth)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
12-22 13:04 DEBUG    on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: target = $8call_method.3 * bandwidth
12-22 13:04 DEBUG    on stmt: $16load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
12-22 13:04 DEBUG    on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const24.10 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
12-22 13:04 DEBUG    on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:191)], kws=[('dtype', Var($30load_attr.13, umap_.py:191))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $38load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const46.20 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
12-22 13:04 DEBUG    on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:192)], kws=[('dtype', Var($52load_attr.23, umap_.py:192))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $60load_global.26 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $70load_global.30 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const76.33 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:196)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
12-22 13:04 DEBUG    on stmt: $phi86.0 = $82get_iter.36
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $86for_iter.1 = iternext(value=$phi86.0)
12-22 13:04 DEBUG    on stmt: $86for_iter.2 = pair_first(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $86for_iter.3 = pair_second(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi88.1 = $86for_iter.2
12-22 13:04 DEBUG    on stmt: branch $86for_iter.3, 88, 564
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: i = $phi88.1
12-22 13:04 DEBUG    on stmt: lo = const(float, 0.0)
12-22 13:04 DEBUG    first assign: lo
12-22 13:04 DEBUG    replaced with: lo = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: hi = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: mid = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const114.10 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $116compare_op.11 = ith_distances > $const114.10
12-22 13:04 DEBUG    on stmt: non_zero_dists = getitem(value=ith_distances, index=$116compare_op.11, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $124load_attr.14 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const126.15 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $128binary_subscr.16 = static_getitem(value=$124load_attr.14, index=0, index_var=$const126.15, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $132compare_op.18 = $128binary_subscr.16 >= local_connectivity
12-22 13:04 DEBUG    on stmt: bool134 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $134pred = call bool134($132compare_op.18, func=bool134, args=(Var($132compare_op.18, umap_.py:204),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $134pred, 136, 246
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 136
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $136load_global.1 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $138load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $140load_method.3 = getattr(value=$138load_global.2, attr=floor)
12-22 13:04 DEBUG    on stmt: $144call_method.5 = call $140load_method.3(local_connectivity, func=$140load_method.3, args=[Var(local_connectivity, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: index = call $136load_global.1($144call_method.5, func=$136load_global.1, args=[Var($144call_method.5, umap_.py:205)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: interpolation = local_connectivity - index
12-22 13:04 DEBUG    on stmt: $const160.11 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $162compare_op.12 = index > $const160.11
12-22 13:04 DEBUG    on stmt: bool164 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $164pred = call bool164($162compare_op.12, func=bool164, args=(Var($162compare_op.12, umap_.py:207),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $164pred, 166, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 166
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $const170.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $172binary_subtract.4 = index - $const170.3
12-22 13:04 DEBUG    on stmt: $174binary_subscr.5 = getitem(value=non_zero_dists, index=$172binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: rho[i] = $174binary_subscr.5
12-22 13:04 DEBUG    on stmt: $184load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $186compare_op.10 = interpolation > $184load_global.9
12-22 13:04 DEBUG    on stmt: bool188 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $188pred = call bool188($186compare_op.10, func=bool188, args=(Var($186compare_op.10, umap_.py:209),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $188pred, 190, 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 190
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $196binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $204binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const210.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $212binary_subtract.13 = index - $const210.12
12-22 13:04 DEBUG    on stmt: $214binary_subscr.14 = getitem(value=non_zero_dists, index=$212binary_subtract.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $216binary_subtract.15 = $204binary_subscr.9 - $214binary_subscr.14
12-22 13:04 DEBUG    on stmt: $218binary_multiply.16 = interpolation * $216binary_subtract.15
12-22 13:04 DEBUG    on stmt: $220inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$196binary_subscr.5, rhs=$218binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: rho[i] = $220inplace_add.17
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $const232.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $234binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const232.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_multiply.5 = interpolation * $234binary_subscr.4
12-22 13:04 DEBUG    on stmt: rho[i] = $236binary_multiply.5
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 244
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 246
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $248load_attr.2 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const250.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $252binary_subscr.4 = static_getitem(value=$248load_attr.2, index=0, index_var=$const250.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const254.5 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $256compare_op.6 = $252binary_subscr.4 > $const254.5
12-22 13:04 DEBUG    on stmt: bool260 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $260pred = call bool260($256compare_op.6, func=bool260, args=(Var($256compare_op.6, umap_.py:215),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $260pred, 262, 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 262
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $262load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $264load_method.2 = getattr(value=$262load_global.1, attr=max)
12-22 13:04 DEBUG    on stmt: $268call_method.4 = call $264load_method.2(non_zero_dists, func=$264load_method.2, args=[Var(non_zero_dists, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: rho[i] = $268call_method.4
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 276
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $276load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $280call_function.3 = call $276load_global.1(n_iter, func=$276load_global.1, args=[Var(n_iter, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $282get_iter.4 = getiter(value=$280call_function.3)
12-22 13:04 DEBUG    on stmt: $phi284.1 = $282get_iter.4
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 284
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: mid.4 = phi(incoming_values=[Var(mid.5, umap_.py:224), Var(mid, umap_.py:199)], incoming_blocks=[466, 276])
12-22 13:04 DEBUG    on stmt: $284for_iter.2 = iternext(value=$phi284.1)
12-22 13:04 DEBUG    on stmt: $284for_iter.3 = pair_first(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $284for_iter.4 = pair_second(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi286.2 = $284for_iter.3
12-22 13:04 DEBUG    on stmt: branch $284for_iter.4, 286, 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 286
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: n = $phi286.2
12-22 13:04 DEBUG    on stmt: psum = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $292load_global.4 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const294.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $298load_attr.7 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const300.8 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $302binary_subscr.9 = static_getitem(value=$298load_attr.7, index=1, index_var=$const300.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $304call_function.10 = call $292load_global.4($const294.5, $302binary_subscr.9, func=$292load_global.4, args=[Var($const294.5, umap_.py:221), Var($302binary_subscr.9, umap_.py:221)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $306get_iter.11 = getiter(value=$304call_function.10)
12-22 13:04 DEBUG    on stmt: $phi308.2 = $306get_iter.11
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 308
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $308for_iter.3 = iternext(value=$phi308.2)
12-22 13:04 DEBUG    on stmt: $308for_iter.4 = pair_first(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $308for_iter.5 = pair_second(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi310.3 = $308for_iter.4
12-22 13:04 DEBUG    on stmt: branch $308for_iter.5, 310, 376
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 310
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: j = $phi310.3
12-22 13:04 DEBUG    on stmt: $318build_tuple.7 = build_tuple(items=[Var(i, umap_.py:196), Var(j, umap_.py:221)])
12-22 13:04 DEBUG    on stmt: $320binary_subscr.8 = getitem(value=distances, index=$318build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: d = $320binary_subscr.8 - $326binary_subscr.11
12-22 13:04 DEBUG    on stmt: $const334.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $336compare_op.15 = d > $const334.14
12-22 13:04 DEBUG    on stmt: bool340 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $340pred = call bool340($336compare_op.15, func=bool340, args=(Var($336compare_op.15, umap_.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $340pred, 342, 364
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $344load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $346load_method.5 = getattr(value=$344load_global.4, attr=exp)
12-22 13:04 DEBUG    on stmt: $352binary_true_divide.8 = d / mid.4
12-22 13:04 DEBUG    on stmt: $354unary_negative.9 = unary(fn=<built-in function neg>, value=$352binary_true_divide.8)
12-22 13:04 DEBUG    on stmt: $356call_method.10 = call $346load_method.5($354unary_negative.9, func=$346load_method.5, args=[Var($354unary_negative.9, umap_.py:224)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $358inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 364
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $const366.4 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $368inplace_add.5
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 372
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 376
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $376load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $378load_method.3 = getattr(value=$376load_global.2, attr=fabs)
12-22 13:04 DEBUG    on stmt: $384binary_subtract.6 = psum - target
12-22 13:04 DEBUG    on stmt: $386call_method.7 = call $378load_method.3($384binary_subtract.6, func=$378load_method.3, args=[Var($384binary_subtract.6, umap_.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $388load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $390compare_op.9 = $386call_method.7 < $388load_global.8
12-22 13:04 DEBUG    on stmt: bool394 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $394pred = call bool394($390compare_op.9, func=bool394, args=(Var($390compare_op.9, umap_.py:228),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $394pred, 396, 402
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 396
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 402
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $406compare_op.4 = psum > target
12-22 13:04 DEBUG    on stmt: bool410 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $410pred = call bool410($406compare_op.4, func=bool410, args=(Var($406compare_op.4, umap_.py:231),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $410pred, 412, 430
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 412
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: hi = mid.4
12-22 13:04 DEBUG    on stmt: $420binary_add.5 = lo + hi
12-22 13:04 DEBUG    on stmt: $const422.6 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.1 = $420binary_add.5 / $const422.6
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 430
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: lo = mid.4
12-22 13:04 DEBUG    replaced with: lo.1 = mid.4
12-22 13:04 DEBUG    on stmt: $436load_global.4 = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: $438compare_op.5 = hi == $436load_global.4
12-22 13:04 DEBUG    on stmt: bool442 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $442pred = call bool442($438compare_op.5, func=bool442, args=(Var($438compare_op.5, umap_.py:236),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $442pred, 444, 454
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 444
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $const446.3 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid.4, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: mid.2 = $448inplace_multiply.4
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 454
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $458binary_add.4 = lo + hi
12-22 13:04 DEBUG    on stmt: $const460.5 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.3 = $458binary_add.4 / $const460.5
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 466
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: mid.5 = phi(incoming_values=[Var(mid.2, umap_.py:237), Var(mid.1, umap_.py:233), Var(mid.3, umap_.py:239)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 470
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: result[i] = mid.4
12-22 13:04 DEBUG    on stmt: $482binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const484.7 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $486compare_op.8 = $482binary_subscr.6 > $const484.7
12-22 13:04 DEBUG    on stmt: bool490 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $490pred = call bool490($486compare_op.8, func=bool490, args=(Var($486compare_op.8, umap_.py:244),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $490pred, 492, 534
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 492
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $492load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $494load_method.2 = getattr(value=$492load_global.1, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_ith_distances = call $494load_method.2(ith_distances, func=$494load_method.2, args=[Var(ith_distances, umap_.py:202)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $506binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $508load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $512binary_multiply.10 = $508load_global.8 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: $514compare_op.11 = $506binary_subscr.7 < $512binary_multiply.10
12-22 13:04 DEBUG    on stmt: bool518 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $518pred = call bool518($514compare_op.11, func=bool518, args=(Var($514compare_op.11, umap_.py:246),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $518pred, 520, 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 520
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $520load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $524binary_multiply.3 = $520load_global.1 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: result[i] = $524binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 534
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $538binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $540load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $544binary_multiply.6 = $540load_global.4 * mean_distances
12-22 13:04 DEBUG    on stmt: $546compare_op.7 = $538binary_subscr.3 < $544binary_multiply.6
12-22 13:04 DEBUG    on stmt: bool548 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $548pred = call bool548($546compare_op.7, func=bool548, args=(Var($546compare_op.7, umap_.py:249),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $548pred, 550, 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 550
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $550load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $554binary_multiply.3 = $550load_global.1 * mean_distances
12-22 13:04 DEBUG    on stmt: result[i] = $554binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 562
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 564
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $568build_tuple.2 = build_tuple(items=[Var(result, umap_.py:192), Var(rho, umap_.py:191)])
12-22 13:04 DEBUG    on stmt: $570return_value.3 = cast(value=$568build_tuple.2)
12-22 13:04 DEBUG    on stmt: return $570return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 565
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {88: [<numba.core.ir.Assign object at 0x000001AF123A5250>],
             430: [<numba.core.ir.Assign object at 0x000001AF12372EE0>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: distances = arg(0, name=distances)
12-22 13:04 DEBUG    on stmt: k = arg(1, name=k)
12-22 13:04 DEBUG    on stmt: n_iter = arg(2, name=n_iter)
12-22 13:04 DEBUG    on stmt: local_connectivity = arg(3, name=local_connectivity)
12-22 13:04 DEBUG    on stmt: bandwidth = arg(4, name=bandwidth)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
12-22 13:04 DEBUG    on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: target = $8call_method.3 * bandwidth
12-22 13:04 DEBUG    on stmt: $16load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
12-22 13:04 DEBUG    on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const24.10 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
12-22 13:04 DEBUG    on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:191)], kws=[('dtype', Var($30load_attr.13, umap_.py:191))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $38load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const46.20 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
12-22 13:04 DEBUG    on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:192)], kws=[('dtype', Var($52load_attr.23, umap_.py:192))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $60load_global.26 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $70load_global.30 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const76.33 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:196)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
12-22 13:04 DEBUG    on stmt: $phi86.0 = $82get_iter.36
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: jump 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $86for_iter.1 = iternext(value=$phi86.0)
12-22 13:04 DEBUG    on stmt: $86for_iter.2 = pair_first(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $86for_iter.3 = pair_second(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi88.1 = $86for_iter.2
12-22 13:04 DEBUG    on stmt: branch $86for_iter.3, 88, 564
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: i = $phi88.1
12-22 13:04 DEBUG    on stmt: lo = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: hi = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: mid = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const114.10 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $116compare_op.11 = ith_distances > $const114.10
12-22 13:04 DEBUG    on stmt: non_zero_dists = getitem(value=ith_distances, index=$116compare_op.11, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $124load_attr.14 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const126.15 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $128binary_subscr.16 = static_getitem(value=$124load_attr.14, index=0, index_var=$const126.15, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $132compare_op.18 = $128binary_subscr.16 >= local_connectivity
12-22 13:04 DEBUG    on stmt: bool134 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $134pred = call bool134($132compare_op.18, func=bool134, args=(Var($132compare_op.18, umap_.py:204),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $134pred, 136, 246
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 136
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $136load_global.1 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $138load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $140load_method.3 = getattr(value=$138load_global.2, attr=floor)
12-22 13:04 DEBUG    on stmt: $144call_method.5 = call $140load_method.3(local_connectivity, func=$140load_method.3, args=[Var(local_connectivity, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: index = call $136load_global.1($144call_method.5, func=$136load_global.1, args=[Var($144call_method.5, umap_.py:205)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: interpolation = local_connectivity - index
12-22 13:04 DEBUG    on stmt: $const160.11 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $162compare_op.12 = index > $const160.11
12-22 13:04 DEBUG    on stmt: bool164 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $164pred = call bool164($162compare_op.12, func=bool164, args=(Var($162compare_op.12, umap_.py:207),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $164pred, 166, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 166
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $const170.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $172binary_subtract.4 = index - $const170.3
12-22 13:04 DEBUG    on stmt: $174binary_subscr.5 = getitem(value=non_zero_dists, index=$172binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: rho[i] = $174binary_subscr.5
12-22 13:04 DEBUG    on stmt: $184load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $186compare_op.10 = interpolation > $184load_global.9
12-22 13:04 DEBUG    on stmt: bool188 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $188pred = call bool188($186compare_op.10, func=bool188, args=(Var($186compare_op.10, umap_.py:209),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $188pred, 190, 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 190
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $196binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $204binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const210.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $212binary_subtract.13 = index - $const210.12
12-22 13:04 DEBUG    on stmt: $214binary_subscr.14 = getitem(value=non_zero_dists, index=$212binary_subtract.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $216binary_subtract.15 = $204binary_subscr.9 - $214binary_subscr.14
12-22 13:04 DEBUG    on stmt: $218binary_multiply.16 = interpolation * $216binary_subtract.15
12-22 13:04 DEBUG    on stmt: $220inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$196binary_subscr.5, rhs=$218binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: rho[i] = $220inplace_add.17
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $const232.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $234binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const232.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_multiply.5 = interpolation * $234binary_subscr.4
12-22 13:04 DEBUG    on stmt: rho[i] = $236binary_multiply.5
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 244
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 246
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $248load_attr.2 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const250.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $252binary_subscr.4 = static_getitem(value=$248load_attr.2, index=0, index_var=$const250.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const254.5 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $256compare_op.6 = $252binary_subscr.4 > $const254.5
12-22 13:04 DEBUG    on stmt: bool260 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $260pred = call bool260($256compare_op.6, func=bool260, args=(Var($256compare_op.6, umap_.py:215),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $260pred, 262, 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 262
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $262load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $264load_method.2 = getattr(value=$262load_global.1, attr=max)
12-22 13:04 DEBUG    on stmt: $268call_method.4 = call $264load_method.2(non_zero_dists, func=$264load_method.2, args=[Var(non_zero_dists, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: rho[i] = $268call_method.4
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 276
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $276load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $280call_function.3 = call $276load_global.1(n_iter, func=$276load_global.1, args=[Var(n_iter, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $282get_iter.4 = getiter(value=$280call_function.3)
12-22 13:04 DEBUG    on stmt: $phi284.1 = $282get_iter.4
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 284
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: mid.4 = phi(incoming_values=[Var(mid.5, umap_.py:224), Var(mid, umap_.py:199)], incoming_blocks=[466, 276])
12-22 13:04 DEBUG    on stmt: $284for_iter.2 = iternext(value=$phi284.1)
12-22 13:04 DEBUG    on stmt: $284for_iter.3 = pair_first(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $284for_iter.4 = pair_second(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi286.2 = $284for_iter.3
12-22 13:04 DEBUG    on stmt: branch $284for_iter.4, 286, 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 286
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: n = $phi286.2
12-22 13:04 DEBUG    on stmt: psum = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $292load_global.4 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const294.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $298load_attr.7 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const300.8 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $302binary_subscr.9 = static_getitem(value=$298load_attr.7, index=1, index_var=$const300.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $304call_function.10 = call $292load_global.4($const294.5, $302binary_subscr.9, func=$292load_global.4, args=[Var($const294.5, umap_.py:221), Var($302binary_subscr.9, umap_.py:221)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $306get_iter.11 = getiter(value=$304call_function.10)
12-22 13:04 DEBUG    on stmt: $phi308.2 = $306get_iter.11
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 308
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $308for_iter.3 = iternext(value=$phi308.2)
12-22 13:04 DEBUG    on stmt: $308for_iter.4 = pair_first(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $308for_iter.5 = pair_second(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi310.3 = $308for_iter.4
12-22 13:04 DEBUG    on stmt: branch $308for_iter.5, 310, 376
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 310
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: j = $phi310.3
12-22 13:04 DEBUG    on stmt: $318build_tuple.7 = build_tuple(items=[Var(i, umap_.py:196), Var(j, umap_.py:221)])
12-22 13:04 DEBUG    on stmt: $320binary_subscr.8 = getitem(value=distances, index=$318build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: d = $320binary_subscr.8 - $326binary_subscr.11
12-22 13:04 DEBUG    on stmt: $const334.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $336compare_op.15 = d > $const334.14
12-22 13:04 DEBUG    on stmt: bool340 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $340pred = call bool340($336compare_op.15, func=bool340, args=(Var($336compare_op.15, umap_.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $340pred, 342, 364
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $344load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $346load_method.5 = getattr(value=$344load_global.4, attr=exp)
12-22 13:04 DEBUG    on stmt: $352binary_true_divide.8 = d / mid.4
12-22 13:04 DEBUG    on stmt: $354unary_negative.9 = unary(fn=<built-in function neg>, value=$352binary_true_divide.8)
12-22 13:04 DEBUG    on stmt: $356call_method.10 = call $346load_method.5($354unary_negative.9, func=$346load_method.5, args=[Var($354unary_negative.9, umap_.py:224)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $358inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 364
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $const366.4 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $368inplace_add.5
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 372
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 376
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $376load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $378load_method.3 = getattr(value=$376load_global.2, attr=fabs)
12-22 13:04 DEBUG    on stmt: $384binary_subtract.6 = psum - target
12-22 13:04 DEBUG    on stmt: $386call_method.7 = call $378load_method.3($384binary_subtract.6, func=$378load_method.3, args=[Var($384binary_subtract.6, umap_.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $388load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $390compare_op.9 = $386call_method.7 < $388load_global.8
12-22 13:04 DEBUG    on stmt: bool394 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $394pred = call bool394($390compare_op.9, func=bool394, args=(Var($390compare_op.9, umap_.py:228),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $394pred, 396, 402
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 396
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: jump 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 402
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $406compare_op.4 = psum > target
12-22 13:04 DEBUG    on stmt: bool410 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $410pred = call bool410($406compare_op.4, func=bool410, args=(Var($406compare_op.4, umap_.py:231),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $410pred, 412, 430
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 412
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: hi = mid.4
12-22 13:04 DEBUG    on stmt: $420binary_add.5 = lo + hi
12-22 13:04 DEBUG    find_def var='lo' stmt=$420binary_add.5 = lo + hi
12-22 13:04 DEBUG    find_def_from_top label 412
12-22 13:04 DEBUG    idom 402 from label 412
12-22 13:04 DEBUG    find_def_from_bottom label 402
12-22 13:04 DEBUG    find_def_from_top label 402
12-22 13:04 DEBUG    idom 376 from label 402
12-22 13:04 DEBUG    find_def_from_bottom label 376
12-22 13:04 DEBUG    find_def_from_top label 376
12-22 13:04 DEBUG    idom 308 from label 376
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    find_def_from_top label 308
12-22 13:04 DEBUG    idom 286 from label 308
12-22 13:04 DEBUG    find_def_from_bottom label 286
12-22 13:04 DEBUG    find_def_from_top label 286
12-22 13:04 DEBUG    idom 284 from label 286
12-22 13:04 DEBUG    find_def_from_bottom label 284
12-22 13:04 DEBUG    find_def_from_top label 284
12-22 13:04 DEBUG    insert phi node lo.2 = phi(incoming_values=[], incoming_blocks=[]) at 284
12-22 13:04 DEBUG    find_def_from_bottom label 466
12-22 13:04 DEBUG    find_def_from_top label 466
12-22 13:04 DEBUG    insert phi node lo.3 = phi(incoming_values=[], incoming_blocks=[]) at 466
12-22 13:04 DEBUG    find_def_from_bottom label 444
12-22 13:04 DEBUG    find_def_from_top label 444
12-22 13:04 DEBUG    idom 430 from label 444
12-22 13:04 DEBUG    find_def_from_bottom label 430
12-22 13:04 DEBUG    incoming_def lo.1 = mid.4
12-22 13:04 DEBUG    find_def_from_bottom label 412
12-22 13:04 DEBUG    find_def_from_top label 412
12-22 13:04 DEBUG    idom 402 from label 412
12-22 13:04 DEBUG    find_def_from_bottom label 402
12-22 13:04 DEBUG    find_def_from_top label 402
12-22 13:04 DEBUG    idom 376 from label 402
12-22 13:04 DEBUG    find_def_from_bottom label 376
12-22 13:04 DEBUG    find_def_from_top label 376
12-22 13:04 DEBUG    idom 308 from label 376
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    find_def_from_top label 308
12-22 13:04 DEBUG    idom 286 from label 308
12-22 13:04 DEBUG    find_def_from_bottom label 286
12-22 13:04 DEBUG    find_def_from_top label 286
12-22 13:04 DEBUG    idom 284 from label 286
12-22 13:04 DEBUG    find_def_from_bottom label 284
12-22 13:04 DEBUG    incoming_def lo.2 = phi(incoming_values=[], incoming_blocks=[])
12-22 13:04 DEBUG    find_def_from_bottom label 454
12-22 13:04 DEBUG    find_def_from_top label 454
12-22 13:04 DEBUG    idom 430 from label 454
12-22 13:04 DEBUG    find_def_from_bottom label 430
12-22 13:04 DEBUG    incoming_def lo.1 = mid.4
12-22 13:04 DEBUG    incoming_def lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:235), Var(lo.2, umap_.py:232), Var(lo.1, umap_.py:235)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    find_def_from_bottom label 276
12-22 13:04 DEBUG    find_def_from_top label 276
12-22 13:04 DEBUG    idom 88 from label 276
12-22 13:04 DEBUG    find_def_from_bottom label 88
12-22 13:04 DEBUG    incoming_def lo = const(float, 0.0)
12-22 13:04 DEBUG    replaced with: $420binary_add.5 = lo.2 + hi
12-22 13:04 DEBUG    on stmt: $const422.6 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.1 = $420binary_add.5 / $const422.6
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 430
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: lo.1 = mid.4
12-22 13:04 DEBUG    on stmt: $436load_global.4 = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: $438compare_op.5 = hi == $436load_global.4
12-22 13:04 DEBUG    on stmt: bool442 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $442pred = call bool442($438compare_op.5, func=bool442, args=(Var($438compare_op.5, umap_.py:236),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $442pred, 444, 454
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 444
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $const446.3 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid.4, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: mid.2 = $448inplace_multiply.4
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 454
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $458binary_add.4 = lo + hi
12-22 13:04 DEBUG    find_def var='lo' stmt=$458binary_add.4 = lo + hi
12-22 13:04 DEBUG    find_def_from_top label 454
12-22 13:04 DEBUG    idom 430 from label 454
12-22 13:04 DEBUG    find_def_from_bottom label 430
12-22 13:04 DEBUG    replaced with: $458binary_add.4 = lo.1 + hi
12-22 13:04 DEBUG    on stmt: $const460.5 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.3 = $458binary_add.4 / $const460.5
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 466
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: mid.5 = phi(incoming_values=[Var(mid.2, umap_.py:237), Var(mid.1, umap_.py:233), Var(mid.3, umap_.py:239)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 470
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: result[i] = mid.4
12-22 13:04 DEBUG    on stmt: $482binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const484.7 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $486compare_op.8 = $482binary_subscr.6 > $const484.7
12-22 13:04 DEBUG    on stmt: bool490 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $490pred = call bool490($486compare_op.8, func=bool490, args=(Var($486compare_op.8, umap_.py:244),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $490pred, 492, 534
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 492
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $492load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $494load_method.2 = getattr(value=$492load_global.1, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_ith_distances = call $494load_method.2(ith_distances, func=$494load_method.2, args=[Var(ith_distances, umap_.py:202)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $506binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $508load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $512binary_multiply.10 = $508load_global.8 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: $514compare_op.11 = $506binary_subscr.7 < $512binary_multiply.10
12-22 13:04 DEBUG    on stmt: bool518 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $518pred = call bool518($514compare_op.11, func=bool518, args=(Var($514compare_op.11, umap_.py:246),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $518pred, 520, 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 520
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $520load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $524binary_multiply.3 = $520load_global.1 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: result[i] = $524binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 534
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $538binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $540load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $544binary_multiply.6 = $540load_global.4 * mean_distances
12-22 13:04 DEBUG    on stmt: $546compare_op.7 = $538binary_subscr.3 < $544binary_multiply.6
12-22 13:04 DEBUG    on stmt: bool548 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $548pred = call bool548($546compare_op.7, func=bool548, args=(Var($546compare_op.7, umap_.py:249),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $548pred, 550, 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 550
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $550load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $554binary_multiply.3 = $550load_global.1 * mean_distances
12-22 13:04 DEBUG    on stmt: result[i] = $554binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 562
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 564
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: $568build_tuple.2 = build_tuple(items=[Var(result, umap_.py:192), Var(rho, umap_.py:191)])
12-22 13:04 DEBUG    on stmt: $570return_value.3 = cast(value=$568build_tuple.2)
12-22 13:04 DEBUG    on stmt: return $570return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 565
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123938B0>
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    Fix SSA violator on var psum
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: distances = arg(0, name=distances)
12-22 13:04 DEBUG    on stmt: k = arg(1, name=k)
12-22 13:04 DEBUG    on stmt: n_iter = arg(2, name=n_iter)
12-22 13:04 DEBUG    on stmt: local_connectivity = arg(3, name=local_connectivity)
12-22 13:04 DEBUG    on stmt: bandwidth = arg(4, name=bandwidth)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
12-22 13:04 DEBUG    on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: target = $8call_method.3 * bandwidth
12-22 13:04 DEBUG    on stmt: $16load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
12-22 13:04 DEBUG    on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const24.10 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
12-22 13:04 DEBUG    on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:191)], kws=[('dtype', Var($30load_attr.13, umap_.py:191))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $38load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const46.20 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
12-22 13:04 DEBUG    on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:192)], kws=[('dtype', Var($52load_attr.23, umap_.py:192))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $60load_global.26 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $70load_global.30 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const76.33 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:196)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
12-22 13:04 DEBUG    on stmt: $phi86.0 = $82get_iter.36
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: jump 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $86for_iter.1 = iternext(value=$phi86.0)
12-22 13:04 DEBUG    on stmt: $86for_iter.2 = pair_first(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $86for_iter.3 = pair_second(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi88.1 = $86for_iter.2
12-22 13:04 DEBUG    on stmt: branch $86for_iter.3, 88, 564
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: i = $phi88.1
12-22 13:04 DEBUG    on stmt: lo = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: hi = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: mid = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const114.10 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $116compare_op.11 = ith_distances > $const114.10
12-22 13:04 DEBUG    on stmt: non_zero_dists = getitem(value=ith_distances, index=$116compare_op.11, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $124load_attr.14 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const126.15 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $128binary_subscr.16 = static_getitem(value=$124load_attr.14, index=0, index_var=$const126.15, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $132compare_op.18 = $128binary_subscr.16 >= local_connectivity
12-22 13:04 DEBUG    on stmt: bool134 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $134pred = call bool134($132compare_op.18, func=bool134, args=(Var($132compare_op.18, umap_.py:204),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $134pred, 136, 246
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 136
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $136load_global.1 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $138load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $140load_method.3 = getattr(value=$138load_global.2, attr=floor)
12-22 13:04 DEBUG    on stmt: $144call_method.5 = call $140load_method.3(local_connectivity, func=$140load_method.3, args=[Var(local_connectivity, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: index = call $136load_global.1($144call_method.5, func=$136load_global.1, args=[Var($144call_method.5, umap_.py:205)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: interpolation = local_connectivity - index
12-22 13:04 DEBUG    on stmt: $const160.11 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $162compare_op.12 = index > $const160.11
12-22 13:04 DEBUG    on stmt: bool164 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $164pred = call bool164($162compare_op.12, func=bool164, args=(Var($162compare_op.12, umap_.py:207),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $164pred, 166, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 166
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $const170.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $172binary_subtract.4 = index - $const170.3
12-22 13:04 DEBUG    on stmt: $174binary_subscr.5 = getitem(value=non_zero_dists, index=$172binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: rho[i] = $174binary_subscr.5
12-22 13:04 DEBUG    on stmt: $184load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $186compare_op.10 = interpolation > $184load_global.9
12-22 13:04 DEBUG    on stmt: bool188 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $188pred = call bool188($186compare_op.10, func=bool188, args=(Var($186compare_op.10, umap_.py:209),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $188pred, 190, 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 190
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $196binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $204binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const210.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $212binary_subtract.13 = index - $const210.12
12-22 13:04 DEBUG    on stmt: $214binary_subscr.14 = getitem(value=non_zero_dists, index=$212binary_subtract.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $216binary_subtract.15 = $204binary_subscr.9 - $214binary_subscr.14
12-22 13:04 DEBUG    on stmt: $218binary_multiply.16 = interpolation * $216binary_subtract.15
12-22 13:04 DEBUG    on stmt: $220inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$196binary_subscr.5, rhs=$218binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: rho[i] = $220inplace_add.17
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $const232.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $234binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const232.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_multiply.5 = interpolation * $234binary_subscr.4
12-22 13:04 DEBUG    on stmt: rho[i] = $236binary_multiply.5
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 244
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 246
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $248load_attr.2 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const250.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $252binary_subscr.4 = static_getitem(value=$248load_attr.2, index=0, index_var=$const250.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const254.5 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $256compare_op.6 = $252binary_subscr.4 > $const254.5
12-22 13:04 DEBUG    on stmt: bool260 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $260pred = call bool260($256compare_op.6, func=bool260, args=(Var($256compare_op.6, umap_.py:215),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $260pred, 262, 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 262
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $262load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $264load_method.2 = getattr(value=$262load_global.1, attr=max)
12-22 13:04 DEBUG    on stmt: $268call_method.4 = call $264load_method.2(non_zero_dists, func=$264load_method.2, args=[Var(non_zero_dists, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: rho[i] = $268call_method.4
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 276
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $276load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $280call_function.3 = call $276load_global.1(n_iter, func=$276load_global.1, args=[Var(n_iter, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $282get_iter.4 = getiter(value=$280call_function.3)
12-22 13:04 DEBUG    on stmt: $phi284.1 = $282get_iter.4
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 284
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: lo.2 = phi(incoming_values=[Var(lo.3, umap_.py:232), Var(lo, umap_.py:197)], incoming_blocks=[466, 276])
12-22 13:04 DEBUG    on stmt: mid.4 = phi(incoming_values=[Var(mid.5, umap_.py:224), Var(mid, umap_.py:199)], incoming_blocks=[466, 276])
12-22 13:04 DEBUG    on stmt: $284for_iter.2 = iternext(value=$phi284.1)
12-22 13:04 DEBUG    on stmt: $284for_iter.3 = pair_first(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $284for_iter.4 = pair_second(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi286.2 = $284for_iter.3
12-22 13:04 DEBUG    on stmt: branch $284for_iter.4, 286, 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 286
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: n = $phi286.2
12-22 13:04 DEBUG    on stmt: psum = const(float, 0.0)
12-22 13:04 DEBUG    first assign: psum
12-22 13:04 DEBUG    replaced with: psum = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $292load_global.4 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const294.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $298load_attr.7 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const300.8 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $302binary_subscr.9 = static_getitem(value=$298load_attr.7, index=1, index_var=$const300.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $304call_function.10 = call $292load_global.4($const294.5, $302binary_subscr.9, func=$292load_global.4, args=[Var($const294.5, umap_.py:221), Var($302binary_subscr.9, umap_.py:221)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $306get_iter.11 = getiter(value=$304call_function.10)
12-22 13:04 DEBUG    on stmt: $phi308.2 = $306get_iter.11
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 308
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $308for_iter.3 = iternext(value=$phi308.2)
12-22 13:04 DEBUG    on stmt: $308for_iter.4 = pair_first(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $308for_iter.5 = pair_second(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi310.3 = $308for_iter.4
12-22 13:04 DEBUG    on stmt: branch $308for_iter.5, 310, 376
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 310
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: j = $phi310.3
12-22 13:04 DEBUG    on stmt: $318build_tuple.7 = build_tuple(items=[Var(i, umap_.py:196), Var(j, umap_.py:221)])
12-22 13:04 DEBUG    on stmt: $320binary_subscr.8 = getitem(value=distances, index=$318build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: d = $320binary_subscr.8 - $326binary_subscr.11
12-22 13:04 DEBUG    on stmt: $const334.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $336compare_op.15 = d > $const334.14
12-22 13:04 DEBUG    on stmt: bool340 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $340pred = call bool340($336compare_op.15, func=bool340, args=(Var($336compare_op.15, umap_.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $340pred, 342, 364
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $344load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $346load_method.5 = getattr(value=$344load_global.4, attr=exp)
12-22 13:04 DEBUG    on stmt: $352binary_true_divide.8 = d / mid.4
12-22 13:04 DEBUG    on stmt: $354unary_negative.9 = unary(fn=<built-in function neg>, value=$352binary_true_divide.8)
12-22 13:04 DEBUG    on stmt: $356call_method.10 = call $346load_method.5($354unary_negative.9, func=$346load_method.5, args=[Var($354unary_negative.9, umap_.py:224)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $358inplace_add.11
12-22 13:04 DEBUG    replaced with: psum.1 = $358inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 364
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $const366.4 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum = $368inplace_add.5
12-22 13:04 DEBUG    replaced with: psum.2 = $368inplace_add.5
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 372
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 376
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $376load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $378load_method.3 = getattr(value=$376load_global.2, attr=fabs)
12-22 13:04 DEBUG    on stmt: $384binary_subtract.6 = psum - target
12-22 13:04 DEBUG    on stmt: $386call_method.7 = call $378load_method.3($384binary_subtract.6, func=$378load_method.3, args=[Var($384binary_subtract.6, umap_.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $388load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $390compare_op.9 = $386call_method.7 < $388load_global.8
12-22 13:04 DEBUG    on stmt: bool394 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $394pred = call bool394($390compare_op.9, func=bool394, args=(Var($390compare_op.9, umap_.py:228),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $394pred, 396, 402
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 396
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: jump 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 402
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $406compare_op.4 = psum > target
12-22 13:04 DEBUG    on stmt: bool410 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $410pred = call bool410($406compare_op.4, func=bool410, args=(Var($406compare_op.4, umap_.py:231),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $410pred, 412, 430
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 412
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: hi = mid.4
12-22 13:04 DEBUG    on stmt: $420binary_add.5 = lo.2 + hi
12-22 13:04 DEBUG    on stmt: $const422.6 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.1 = $420binary_add.5 / $const422.6
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 430
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: lo.1 = mid.4
12-22 13:04 DEBUG    on stmt: $436load_global.4 = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: $438compare_op.5 = hi == $436load_global.4
12-22 13:04 DEBUG    on stmt: bool442 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $442pred = call bool442($438compare_op.5, func=bool442, args=(Var($438compare_op.5, umap_.py:236),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $442pred, 444, 454
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 444
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $const446.3 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid.4, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: mid.2 = $448inplace_multiply.4
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 454
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $458binary_add.4 = lo.1 + hi
12-22 13:04 DEBUG    on stmt: $const460.5 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.3 = $458binary_add.4 / $const460.5
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 466
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:235), Var(lo.2, umap_.py:232), Var(lo.1, umap_.py:235)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    on stmt: mid.5 = phi(incoming_values=[Var(mid.2, umap_.py:237), Var(mid.1, umap_.py:233), Var(mid.3, umap_.py:239)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 470
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: result[i] = mid.4
12-22 13:04 DEBUG    on stmt: $482binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const484.7 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $486compare_op.8 = $482binary_subscr.6 > $const484.7
12-22 13:04 DEBUG    on stmt: bool490 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $490pred = call bool490($486compare_op.8, func=bool490, args=(Var($486compare_op.8, umap_.py:244),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $490pred, 492, 534
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 492
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $492load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $494load_method.2 = getattr(value=$492load_global.1, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_ith_distances = call $494load_method.2(ith_distances, func=$494load_method.2, args=[Var(ith_distances, umap_.py:202)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $506binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $508load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $512binary_multiply.10 = $508load_global.8 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: $514compare_op.11 = $506binary_subscr.7 < $512binary_multiply.10
12-22 13:04 DEBUG    on stmt: bool518 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $518pred = call bool518($514compare_op.11, func=bool518, args=(Var($514compare_op.11, umap_.py:246),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $518pred, 520, 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 520
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $520load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $524binary_multiply.3 = $520load_global.1 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: result[i] = $524binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 534
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $538binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $540load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $544binary_multiply.6 = $540load_global.4 * mean_distances
12-22 13:04 DEBUG    on stmt: $546compare_op.7 = $538binary_subscr.3 < $544binary_multiply.6
12-22 13:04 DEBUG    on stmt: bool548 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $548pred = call bool548($546compare_op.7, func=bool548, args=(Var($546compare_op.7, umap_.py:249),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $548pred, 550, 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 550
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $550load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $554binary_multiply.3 = $550load_global.1 * mean_distances
12-22 13:04 DEBUG    on stmt: result[i] = $554binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 562
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 564
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: $568build_tuple.2 = build_tuple(items=[Var(result, umap_.py:192), Var(rho, umap_.py:191)])
12-22 13:04 DEBUG    on stmt: $570return_value.3 = cast(value=$568build_tuple.2)
12-22 13:04 DEBUG    on stmt: return $570return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 565
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12371850>
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {286: [<numba.core.ir.Assign object at 0x000001AF12372C70>],
             342: [<numba.core.ir.Assign object at 0x000001AF12372AC0>],
             364: [<numba.core.ir.Assign object at 0x000001AF12372640>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: distances = arg(0, name=distances)
12-22 13:04 DEBUG    on stmt: k = arg(1, name=k)
12-22 13:04 DEBUG    on stmt: n_iter = arg(2, name=n_iter)
12-22 13:04 DEBUG    on stmt: local_connectivity = arg(3, name=local_connectivity)
12-22 13:04 DEBUG    on stmt: bandwidth = arg(4, name=bandwidth)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
12-22 13:04 DEBUG    on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: target = $8call_method.3 * bandwidth
12-22 13:04 DEBUG    on stmt: $16load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
12-22 13:04 DEBUG    on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const24.10 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
12-22 13:04 DEBUG    on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:191)], kws=[('dtype', Var($30load_attr.13, umap_.py:191))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $38load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const46.20 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
12-22 13:04 DEBUG    on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:192)], kws=[('dtype', Var($52load_attr.23, umap_.py:192))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $60load_global.26 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $70load_global.30 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const76.33 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:196)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
12-22 13:04 DEBUG    on stmt: $phi86.0 = $82get_iter.36
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $86for_iter.1 = iternext(value=$phi86.0)
12-22 13:04 DEBUG    on stmt: $86for_iter.2 = pair_first(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $86for_iter.3 = pair_second(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi88.1 = $86for_iter.2
12-22 13:04 DEBUG    on stmt: branch $86for_iter.3, 88, 564
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: i = $phi88.1
12-22 13:04 DEBUG    on stmt: lo = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: hi = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: mid = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const114.10 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $116compare_op.11 = ith_distances > $const114.10
12-22 13:04 DEBUG    on stmt: non_zero_dists = getitem(value=ith_distances, index=$116compare_op.11, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $124load_attr.14 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const126.15 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $128binary_subscr.16 = static_getitem(value=$124load_attr.14, index=0, index_var=$const126.15, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $132compare_op.18 = $128binary_subscr.16 >= local_connectivity
12-22 13:04 DEBUG    on stmt: bool134 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $134pred = call bool134($132compare_op.18, func=bool134, args=(Var($132compare_op.18, umap_.py:204),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $134pred, 136, 246
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 136
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $136load_global.1 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $138load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $140load_method.3 = getattr(value=$138load_global.2, attr=floor)
12-22 13:04 DEBUG    on stmt: $144call_method.5 = call $140load_method.3(local_connectivity, func=$140load_method.3, args=[Var(local_connectivity, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: index = call $136load_global.1($144call_method.5, func=$136load_global.1, args=[Var($144call_method.5, umap_.py:205)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: interpolation = local_connectivity - index
12-22 13:04 DEBUG    on stmt: $const160.11 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $162compare_op.12 = index > $const160.11
12-22 13:04 DEBUG    on stmt: bool164 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $164pred = call bool164($162compare_op.12, func=bool164, args=(Var($162compare_op.12, umap_.py:207),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $164pred, 166, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 166
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $const170.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $172binary_subtract.4 = index - $const170.3
12-22 13:04 DEBUG    on stmt: $174binary_subscr.5 = getitem(value=non_zero_dists, index=$172binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: rho[i] = $174binary_subscr.5
12-22 13:04 DEBUG    on stmt: $184load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $186compare_op.10 = interpolation > $184load_global.9
12-22 13:04 DEBUG    on stmt: bool188 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $188pred = call bool188($186compare_op.10, func=bool188, args=(Var($186compare_op.10, umap_.py:209),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $188pred, 190, 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 190
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $196binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $204binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const210.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $212binary_subtract.13 = index - $const210.12
12-22 13:04 DEBUG    on stmt: $214binary_subscr.14 = getitem(value=non_zero_dists, index=$212binary_subtract.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $216binary_subtract.15 = $204binary_subscr.9 - $214binary_subscr.14
12-22 13:04 DEBUG    on stmt: $218binary_multiply.16 = interpolation * $216binary_subtract.15
12-22 13:04 DEBUG    on stmt: $220inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$196binary_subscr.5, rhs=$218binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: rho[i] = $220inplace_add.17
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $const232.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $234binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const232.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_multiply.5 = interpolation * $234binary_subscr.4
12-22 13:04 DEBUG    on stmt: rho[i] = $236binary_multiply.5
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 244
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 246
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $248load_attr.2 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const250.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $252binary_subscr.4 = static_getitem(value=$248load_attr.2, index=0, index_var=$const250.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const254.5 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $256compare_op.6 = $252binary_subscr.4 > $const254.5
12-22 13:04 DEBUG    on stmt: bool260 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $260pred = call bool260($256compare_op.6, func=bool260, args=(Var($256compare_op.6, umap_.py:215),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $260pred, 262, 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 262
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $262load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $264load_method.2 = getattr(value=$262load_global.1, attr=max)
12-22 13:04 DEBUG    on stmt: $268call_method.4 = call $264load_method.2(non_zero_dists, func=$264load_method.2, args=[Var(non_zero_dists, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: rho[i] = $268call_method.4
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 276
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $276load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $280call_function.3 = call $276load_global.1(n_iter, func=$276load_global.1, args=[Var(n_iter, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $282get_iter.4 = getiter(value=$280call_function.3)
12-22 13:04 DEBUG    on stmt: $phi284.1 = $282get_iter.4
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 284
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: lo.2 = phi(incoming_values=[Var(lo.3, umap_.py:232), Var(lo, umap_.py:197)], incoming_blocks=[466, 276])
12-22 13:04 DEBUG    on stmt: mid.4 = phi(incoming_values=[Var(mid.5, umap_.py:224), Var(mid, umap_.py:199)], incoming_blocks=[466, 276])
12-22 13:04 DEBUG    on stmt: $284for_iter.2 = iternext(value=$phi284.1)
12-22 13:04 DEBUG    on stmt: $284for_iter.3 = pair_first(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $284for_iter.4 = pair_second(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi286.2 = $284for_iter.3
12-22 13:04 DEBUG    on stmt: branch $284for_iter.4, 286, 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 286
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: n = $phi286.2
12-22 13:04 DEBUG    on stmt: psum = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $292load_global.4 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const294.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $298load_attr.7 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const300.8 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $302binary_subscr.9 = static_getitem(value=$298load_attr.7, index=1, index_var=$const300.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $304call_function.10 = call $292load_global.4($const294.5, $302binary_subscr.9, func=$292load_global.4, args=[Var($const294.5, umap_.py:221), Var($302binary_subscr.9, umap_.py:221)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $306get_iter.11 = getiter(value=$304call_function.10)
12-22 13:04 DEBUG    on stmt: $phi308.2 = $306get_iter.11
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 308
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $308for_iter.3 = iternext(value=$phi308.2)
12-22 13:04 DEBUG    on stmt: $308for_iter.4 = pair_first(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $308for_iter.5 = pair_second(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi310.3 = $308for_iter.4
12-22 13:04 DEBUG    on stmt: branch $308for_iter.5, 310, 376
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 310
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: j = $phi310.3
12-22 13:04 DEBUG    on stmt: $318build_tuple.7 = build_tuple(items=[Var(i, umap_.py:196), Var(j, umap_.py:221)])
12-22 13:04 DEBUG    on stmt: $320binary_subscr.8 = getitem(value=distances, index=$318build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: d = $320binary_subscr.8 - $326binary_subscr.11
12-22 13:04 DEBUG    on stmt: $const334.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $336compare_op.15 = d > $const334.14
12-22 13:04 DEBUG    on stmt: bool340 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $340pred = call bool340($336compare_op.15, func=bool340, args=(Var($336compare_op.15, umap_.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $340pred, 342, 364
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $344load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $346load_method.5 = getattr(value=$344load_global.4, attr=exp)
12-22 13:04 DEBUG    on stmt: $352binary_true_divide.8 = d / mid.4
12-22 13:04 DEBUG    on stmt: $354unary_negative.9 = unary(fn=<built-in function neg>, value=$352binary_true_divide.8)
12-22 13:04 DEBUG    on stmt: $356call_method.10 = call $346load_method.5($354unary_negative.9, func=$346load_method.5, args=[Var($354unary_negative.9, umap_.py:224)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='psum' stmt=$358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 342
12-22 13:04 DEBUG    idom 310 from label 342
12-22 13:04 DEBUG    find_def_from_bottom label 310
12-22 13:04 DEBUG    find_def_from_top label 310
12-22 13:04 DEBUG    idom 308 from label 310
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    find_def_from_top label 308
12-22 13:04 DEBUG    insert phi node psum.3 = phi(incoming_values=[], incoming_blocks=[]) at 308
12-22 13:04 DEBUG    find_def_from_bottom label 372
12-22 13:04 DEBUG    find_def_from_top label 372
12-22 13:04 DEBUG    insert phi node psum.4 = phi(incoming_values=[], incoming_blocks=[]) at 372
12-22 13:04 DEBUG    find_def_from_bottom label 364
12-22 13:04 DEBUG    incoming_def psum.2 = $368inplace_add.5
12-22 13:04 DEBUG    find_def_from_bottom label 342
12-22 13:04 DEBUG    incoming_def psum.1 = $358inplace_add.11
12-22 13:04 DEBUG    incoming_def psum.4 = phi(incoming_values=[Var(psum.2, umap_.py:226), Var(psum.1, umap_.py:224)], incoming_blocks=[364, 342])
12-22 13:04 DEBUG    find_def_from_bottom label 286
12-22 13:04 DEBUG    incoming_def psum = const(float, 0.0)
12-22 13:04 DEBUG    replaced with: $358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum.3, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum.1 = $358inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 364
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $const366.4 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='psum' stmt=$368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 364
12-22 13:04 DEBUG    idom 310 from label 364
12-22 13:04 DEBUG    find_def_from_bottom label 310
12-22 13:04 DEBUG    find_def_from_top label 310
12-22 13:04 DEBUG    idom 308 from label 310
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    replaced with: $368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum.3, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum.2 = $368inplace_add.5
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 372
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 376
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $376load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $378load_method.3 = getattr(value=$376load_global.2, attr=fabs)
12-22 13:04 DEBUG    on stmt: $384binary_subtract.6 = psum - target
12-22 13:04 DEBUG    find_def var='psum' stmt=$384binary_subtract.6 = psum - target
12-22 13:04 DEBUG    find_def_from_top label 376
12-22 13:04 DEBUG    idom 308 from label 376
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    replaced with: $384binary_subtract.6 = psum.3 - target
12-22 13:04 DEBUG    on stmt: $386call_method.7 = call $378load_method.3($384binary_subtract.6, func=$378load_method.3, args=[Var($384binary_subtract.6, umap_.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $388load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $390compare_op.9 = $386call_method.7 < $388load_global.8
12-22 13:04 DEBUG    on stmt: bool394 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $394pred = call bool394($390compare_op.9, func=bool394, args=(Var($390compare_op.9, umap_.py:228),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $394pred, 396, 402
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 396
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 402
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $406compare_op.4 = psum > target
12-22 13:04 DEBUG    find_def var='psum' stmt=$406compare_op.4 = psum > target
12-22 13:04 DEBUG    find_def_from_top label 402
12-22 13:04 DEBUG    idom 376 from label 402
12-22 13:04 DEBUG    find_def_from_bottom label 376
12-22 13:04 DEBUG    find_def_from_top label 376
12-22 13:04 DEBUG    idom 308 from label 376
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    replaced with: $406compare_op.4 = psum.3 > target
12-22 13:04 DEBUG    on stmt: bool410 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $410pred = call bool410($406compare_op.4, func=bool410, args=(Var($406compare_op.4, umap_.py:231),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $410pred, 412, 430
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 412
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: hi = mid.4
12-22 13:04 DEBUG    on stmt: $420binary_add.5 = lo.2 + hi
12-22 13:04 DEBUG    on stmt: $const422.6 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.1 = $420binary_add.5 / $const422.6
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 430
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: lo.1 = mid.4
12-22 13:04 DEBUG    on stmt: $436load_global.4 = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: $438compare_op.5 = hi == $436load_global.4
12-22 13:04 DEBUG    on stmt: bool442 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $442pred = call bool442($438compare_op.5, func=bool442, args=(Var($438compare_op.5, umap_.py:236),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $442pred, 444, 454
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 444
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $const446.3 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid.4, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: mid.2 = $448inplace_multiply.4
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 454
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $458binary_add.4 = lo.1 + hi
12-22 13:04 DEBUG    on stmt: $const460.5 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.3 = $458binary_add.4 / $const460.5
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 466
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:235), Var(lo.2, umap_.py:232), Var(lo.1, umap_.py:235)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    on stmt: mid.5 = phi(incoming_values=[Var(mid.2, umap_.py:237), Var(mid.1, umap_.py:233), Var(mid.3, umap_.py:239)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 470
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: result[i] = mid.4
12-22 13:04 DEBUG    on stmt: $482binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const484.7 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $486compare_op.8 = $482binary_subscr.6 > $const484.7
12-22 13:04 DEBUG    on stmt: bool490 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $490pred = call bool490($486compare_op.8, func=bool490, args=(Var($486compare_op.8, umap_.py:244),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $490pred, 492, 534
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 492
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $492load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $494load_method.2 = getattr(value=$492load_global.1, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_ith_distances = call $494load_method.2(ith_distances, func=$494load_method.2, args=[Var(ith_distances, umap_.py:202)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $506binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $508load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $512binary_multiply.10 = $508load_global.8 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: $514compare_op.11 = $506binary_subscr.7 < $512binary_multiply.10
12-22 13:04 DEBUG    on stmt: bool518 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $518pred = call bool518($514compare_op.11, func=bool518, args=(Var($514compare_op.11, umap_.py:246),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $518pred, 520, 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 520
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $520load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $524binary_multiply.3 = $520load_global.1 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: result[i] = $524binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 534
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $538binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $540load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $544binary_multiply.6 = $540load_global.4 * mean_distances
12-22 13:04 DEBUG    on stmt: $546compare_op.7 = $538binary_subscr.3 < $544binary_multiply.6
12-22 13:04 DEBUG    on stmt: bool548 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $548pred = call bool548($546compare_op.7, func=bool548, args=(Var($546compare_op.7, umap_.py:249),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $548pred, 550, 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 550
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $550load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $554binary_multiply.3 = $550load_global.1 * mean_distances
12-22 13:04 DEBUG    on stmt: result[i] = $554binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 562
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 564
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: $568build_tuple.2 = build_tuple(items=[Var(result, umap_.py:192), Var(rho, umap_.py:191)])
12-22 13:04 DEBUG    on stmt: $570return_value.3 = cast(value=$568build_tuple.2)
12-22 13:04 DEBUG    on stmt: return $570return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 565
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123A5D00>
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    Fix SSA violator on var hi
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: distances = arg(0, name=distances)
12-22 13:04 DEBUG    on stmt: k = arg(1, name=k)
12-22 13:04 DEBUG    on stmt: n_iter = arg(2, name=n_iter)
12-22 13:04 DEBUG    on stmt: local_connectivity = arg(3, name=local_connectivity)
12-22 13:04 DEBUG    on stmt: bandwidth = arg(4, name=bandwidth)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
12-22 13:04 DEBUG    on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: target = $8call_method.3 * bandwidth
12-22 13:04 DEBUG    on stmt: $16load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
12-22 13:04 DEBUG    on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const24.10 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
12-22 13:04 DEBUG    on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:191)], kws=[('dtype', Var($30load_attr.13, umap_.py:191))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $38load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const46.20 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
12-22 13:04 DEBUG    on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:192)], kws=[('dtype', Var($52load_attr.23, umap_.py:192))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $60load_global.26 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $70load_global.30 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const76.33 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:196)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
12-22 13:04 DEBUG    on stmt: $phi86.0 = $82get_iter.36
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: jump 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $86for_iter.1 = iternext(value=$phi86.0)
12-22 13:04 DEBUG    on stmt: $86for_iter.2 = pair_first(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $86for_iter.3 = pair_second(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi88.1 = $86for_iter.2
12-22 13:04 DEBUG    on stmt: branch $86for_iter.3, 88, 564
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: i = $phi88.1
12-22 13:04 DEBUG    on stmt: lo = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: hi = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    first assign: hi
12-22 13:04 DEBUG    replaced with: hi = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: mid = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const114.10 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $116compare_op.11 = ith_distances > $const114.10
12-22 13:04 DEBUG    on stmt: non_zero_dists = getitem(value=ith_distances, index=$116compare_op.11, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $124load_attr.14 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const126.15 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $128binary_subscr.16 = static_getitem(value=$124load_attr.14, index=0, index_var=$const126.15, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $132compare_op.18 = $128binary_subscr.16 >= local_connectivity
12-22 13:04 DEBUG    on stmt: bool134 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $134pred = call bool134($132compare_op.18, func=bool134, args=(Var($132compare_op.18, umap_.py:204),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $134pred, 136, 246
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 136
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $136load_global.1 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $138load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $140load_method.3 = getattr(value=$138load_global.2, attr=floor)
12-22 13:04 DEBUG    on stmt: $144call_method.5 = call $140load_method.3(local_connectivity, func=$140load_method.3, args=[Var(local_connectivity, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: index = call $136load_global.1($144call_method.5, func=$136load_global.1, args=[Var($144call_method.5, umap_.py:205)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: interpolation = local_connectivity - index
12-22 13:04 DEBUG    on stmt: $const160.11 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $162compare_op.12 = index > $const160.11
12-22 13:04 DEBUG    on stmt: bool164 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $164pred = call bool164($162compare_op.12, func=bool164, args=(Var($162compare_op.12, umap_.py:207),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $164pred, 166, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 166
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $const170.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $172binary_subtract.4 = index - $const170.3
12-22 13:04 DEBUG    on stmt: $174binary_subscr.5 = getitem(value=non_zero_dists, index=$172binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: rho[i] = $174binary_subscr.5
12-22 13:04 DEBUG    on stmt: $184load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $186compare_op.10 = interpolation > $184load_global.9
12-22 13:04 DEBUG    on stmt: bool188 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $188pred = call bool188($186compare_op.10, func=bool188, args=(Var($186compare_op.10, umap_.py:209),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $188pred, 190, 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 190
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $196binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $204binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const210.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $212binary_subtract.13 = index - $const210.12
12-22 13:04 DEBUG    on stmt: $214binary_subscr.14 = getitem(value=non_zero_dists, index=$212binary_subtract.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $216binary_subtract.15 = $204binary_subscr.9 - $214binary_subscr.14
12-22 13:04 DEBUG    on stmt: $218binary_multiply.16 = interpolation * $216binary_subtract.15
12-22 13:04 DEBUG    on stmt: $220inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$196binary_subscr.5, rhs=$218binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: rho[i] = $220inplace_add.17
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $const232.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $234binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const232.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_multiply.5 = interpolation * $234binary_subscr.4
12-22 13:04 DEBUG    on stmt: rho[i] = $236binary_multiply.5
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 244
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 246
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $248load_attr.2 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const250.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $252binary_subscr.4 = static_getitem(value=$248load_attr.2, index=0, index_var=$const250.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const254.5 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $256compare_op.6 = $252binary_subscr.4 > $const254.5
12-22 13:04 DEBUG    on stmt: bool260 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $260pred = call bool260($256compare_op.6, func=bool260, args=(Var($256compare_op.6, umap_.py:215),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $260pred, 262, 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 262
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $262load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $264load_method.2 = getattr(value=$262load_global.1, attr=max)
12-22 13:04 DEBUG    on stmt: $268call_method.4 = call $264load_method.2(non_zero_dists, func=$264load_method.2, args=[Var(non_zero_dists, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: rho[i] = $268call_method.4
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 276
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $276load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $280call_function.3 = call $276load_global.1(n_iter, func=$276load_global.1, args=[Var(n_iter, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $282get_iter.4 = getiter(value=$280call_function.3)
12-22 13:04 DEBUG    on stmt: $phi284.1 = $282get_iter.4
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 284
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: lo.2 = phi(incoming_values=[Var(lo.3, umap_.py:232), Var(lo, umap_.py:197)], incoming_blocks=[466, 276])
12-22 13:04 DEBUG    on stmt: mid.4 = phi(incoming_values=[Var(mid.5, umap_.py:224), Var(mid, umap_.py:199)], incoming_blocks=[466, 276])
12-22 13:04 DEBUG    on stmt: $284for_iter.2 = iternext(value=$phi284.1)
12-22 13:04 DEBUG    on stmt: $284for_iter.3 = pair_first(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $284for_iter.4 = pair_second(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi286.2 = $284for_iter.3
12-22 13:04 DEBUG    on stmt: branch $284for_iter.4, 286, 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 286
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: n = $phi286.2
12-22 13:04 DEBUG    on stmt: psum = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $292load_global.4 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const294.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $298load_attr.7 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const300.8 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $302binary_subscr.9 = static_getitem(value=$298load_attr.7, index=1, index_var=$const300.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $304call_function.10 = call $292load_global.4($const294.5, $302binary_subscr.9, func=$292load_global.4, args=[Var($const294.5, umap_.py:221), Var($302binary_subscr.9, umap_.py:221)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $306get_iter.11 = getiter(value=$304call_function.10)
12-22 13:04 DEBUG    on stmt: $phi308.2 = $306get_iter.11
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 308
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: psum.3 = phi(incoming_values=[Var(psum.4, umap_.py:224), Var(psum, umap_.py:220)], incoming_blocks=[372, 286])
12-22 13:04 DEBUG    on stmt: $308for_iter.3 = iternext(value=$phi308.2)
12-22 13:04 DEBUG    on stmt: $308for_iter.4 = pair_first(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $308for_iter.5 = pair_second(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi310.3 = $308for_iter.4
12-22 13:04 DEBUG    on stmt: branch $308for_iter.5, 310, 376
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 310
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: j = $phi310.3
12-22 13:04 DEBUG    on stmt: $318build_tuple.7 = build_tuple(items=[Var(i, umap_.py:196), Var(j, umap_.py:221)])
12-22 13:04 DEBUG    on stmt: $320binary_subscr.8 = getitem(value=distances, index=$318build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: d = $320binary_subscr.8 - $326binary_subscr.11
12-22 13:04 DEBUG    on stmt: $const334.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $336compare_op.15 = d > $const334.14
12-22 13:04 DEBUG    on stmt: bool340 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $340pred = call bool340($336compare_op.15, func=bool340, args=(Var($336compare_op.15, umap_.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $340pred, 342, 364
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $344load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $346load_method.5 = getattr(value=$344load_global.4, attr=exp)
12-22 13:04 DEBUG    on stmt: $352binary_true_divide.8 = d / mid.4
12-22 13:04 DEBUG    on stmt: $354unary_negative.9 = unary(fn=<built-in function neg>, value=$352binary_true_divide.8)
12-22 13:04 DEBUG    on stmt: $356call_method.10 = call $346load_method.5($354unary_negative.9, func=$346load_method.5, args=[Var($354unary_negative.9, umap_.py:224)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum.3, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum.1 = $358inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 364
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $const366.4 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum.3, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum.2 = $368inplace_add.5
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 372
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: psum.4 = phi(incoming_values=[Var(psum.2, umap_.py:226), Var(psum.1, umap_.py:224)], incoming_blocks=[364, 342])
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 376
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $376load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $378load_method.3 = getattr(value=$376load_global.2, attr=fabs)
12-22 13:04 DEBUG    on stmt: $384binary_subtract.6 = psum.3 - target
12-22 13:04 DEBUG    on stmt: $386call_method.7 = call $378load_method.3($384binary_subtract.6, func=$378load_method.3, args=[Var($384binary_subtract.6, umap_.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $388load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $390compare_op.9 = $386call_method.7 < $388load_global.8
12-22 13:04 DEBUG    on stmt: bool394 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $394pred = call bool394($390compare_op.9, func=bool394, args=(Var($390compare_op.9, umap_.py:228),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $394pred, 396, 402
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 396
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: jump 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 402
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $406compare_op.4 = psum.3 > target
12-22 13:04 DEBUG    on stmt: bool410 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $410pred = call bool410($406compare_op.4, func=bool410, args=(Var($406compare_op.4, umap_.py:231),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $410pred, 412, 430
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 412
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: hi = mid.4
12-22 13:04 DEBUG    replaced with: hi.1 = mid.4
12-22 13:04 DEBUG    on stmt: $420binary_add.5 = lo.2 + hi
12-22 13:04 DEBUG    on stmt: $const422.6 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.1 = $420binary_add.5 / $const422.6
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 430
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: lo.1 = mid.4
12-22 13:04 DEBUG    on stmt: $436load_global.4 = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: $438compare_op.5 = hi == $436load_global.4
12-22 13:04 DEBUG    on stmt: bool442 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $442pred = call bool442($438compare_op.5, func=bool442, args=(Var($438compare_op.5, umap_.py:236),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $442pred, 444, 454
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 444
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $const446.3 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid.4, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: mid.2 = $448inplace_multiply.4
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 454
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $458binary_add.4 = lo.1 + hi
12-22 13:04 DEBUG    on stmt: $const460.5 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.3 = $458binary_add.4 / $const460.5
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 466
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:235), Var(lo.2, umap_.py:232), Var(lo.1, umap_.py:235)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    on stmt: mid.5 = phi(incoming_values=[Var(mid.2, umap_.py:237), Var(mid.1, umap_.py:233), Var(mid.3, umap_.py:239)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 470
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: result[i] = mid.4
12-22 13:04 DEBUG    on stmt: $482binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const484.7 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $486compare_op.8 = $482binary_subscr.6 > $const484.7
12-22 13:04 DEBUG    on stmt: bool490 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $490pred = call bool490($486compare_op.8, func=bool490, args=(Var($486compare_op.8, umap_.py:244),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $490pred, 492, 534
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 492
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $492load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $494load_method.2 = getattr(value=$492load_global.1, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_ith_distances = call $494load_method.2(ith_distances, func=$494load_method.2, args=[Var(ith_distances, umap_.py:202)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $506binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $508load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $512binary_multiply.10 = $508load_global.8 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: $514compare_op.11 = $506binary_subscr.7 < $512binary_multiply.10
12-22 13:04 DEBUG    on stmt: bool518 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $518pred = call bool518($514compare_op.11, func=bool518, args=(Var($514compare_op.11, umap_.py:246),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $518pred, 520, 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 520
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $520load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $524binary_multiply.3 = $520load_global.1 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: result[i] = $524binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 534
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $538binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $540load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $544binary_multiply.6 = $540load_global.4 * mean_distances
12-22 13:04 DEBUG    on stmt: $546compare_op.7 = $538binary_subscr.3 < $544binary_multiply.6
12-22 13:04 DEBUG    on stmt: bool548 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $548pred = call bool548($546compare_op.7, func=bool548, args=(Var($546compare_op.7, umap_.py:249),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $548pred, 550, 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 550
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $550load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $554binary_multiply.3 = $550load_global.1 * mean_distances
12-22 13:04 DEBUG    on stmt: result[i] = $554binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 562
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 564
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: $568build_tuple.2 = build_tuple(items=[Var(result, umap_.py:192), Var(rho, umap_.py:191)])
12-22 13:04 DEBUG    on stmt: $570return_value.3 = cast(value=$568build_tuple.2)
12-22 13:04 DEBUG    on stmt: return $570return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 565
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123A49D0>
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {88: [<numba.core.ir.Assign object at 0x000001AF12393190>],
             412: [<numba.core.ir.Assign object at 0x000001AF12371460>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: distances = arg(0, name=distances)
12-22 13:04 DEBUG    on stmt: k = arg(1, name=k)
12-22 13:04 DEBUG    on stmt: n_iter = arg(2, name=n_iter)
12-22 13:04 DEBUG    on stmt: local_connectivity = arg(3, name=local_connectivity)
12-22 13:04 DEBUG    on stmt: bandwidth = arg(4, name=bandwidth)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=log2)
12-22 13:04 DEBUG    on stmt: $8call_method.3 = call $4load_method.1(k, func=$4load_method.1, args=[Var(k, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: target = $8call_method.3 * bandwidth
12-22 13:04 DEBUG    on stmt: $16load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $18load_attr.7 = getattr(value=$16load_global.6, attr=zeros)
12-22 13:04 DEBUG    on stmt: $22load_attr.9 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const24.10 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $26binary_subscr.11 = static_getitem(value=$22load_attr.9, index=0, index_var=$const24.10, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $28load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $30load_attr.13 = getattr(value=$28load_global.12, attr=float32)
12-22 13:04 DEBUG    on stmt: rho = call $18load_attr.7($26binary_subscr.11, func=$18load_attr.7, args=[Var($26binary_subscr.11, umap_.py:191)], kws=[('dtype', Var($30load_attr.13, umap_.py:191))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $38load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $40load_attr.17 = getattr(value=$38load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $44load_attr.19 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const46.20 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $48binary_subscr.21 = static_getitem(value=$44load_attr.19, index=0, index_var=$const46.20, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $50load_global.22 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $52load_attr.23 = getattr(value=$50load_global.22, attr=float32)
12-22 13:04 DEBUG    on stmt: result = call $40load_attr.17($48binary_subscr.21, func=$40load_attr.17, args=[Var($48binary_subscr.21, umap_.py:192)], kws=[('dtype', Var($52load_attr.23, umap_.py:192))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $60load_global.26 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $62load_method.27 = getattr(value=$60load_global.26, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_distances = call $62load_method.27(distances, func=$62load_method.27, args=[Var(distances, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $70load_global.30 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $74load_attr.32 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const76.33 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $78binary_subscr.34 = static_getitem(value=$74load_attr.32, index=0, index_var=$const76.33, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $80call_function.35 = call $70load_global.30($78binary_subscr.34, func=$70load_global.30, args=[Var($78binary_subscr.34, umap_.py:196)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $82get_iter.36 = getiter(value=$80call_function.35)
12-22 13:04 DEBUG    on stmt: $phi86.0 = $82get_iter.36
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: jump 86
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 86
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $86for_iter.1 = iternext(value=$phi86.0)
12-22 13:04 DEBUG    on stmt: $86for_iter.2 = pair_first(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $86for_iter.3 = pair_second(value=$86for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi88.1 = $86for_iter.2
12-22 13:04 DEBUG    on stmt: branch $86for_iter.3, 88, 564
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: i = $phi88.1
12-22 13:04 DEBUG    on stmt: lo = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: hi = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: mid = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: ith_distances = getitem(value=distances, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const114.10 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $116compare_op.11 = ith_distances > $const114.10
12-22 13:04 DEBUG    on stmt: non_zero_dists = getitem(value=ith_distances, index=$116compare_op.11, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $124load_attr.14 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const126.15 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $128binary_subscr.16 = static_getitem(value=$124load_attr.14, index=0, index_var=$const126.15, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $132compare_op.18 = $128binary_subscr.16 >= local_connectivity
12-22 13:04 DEBUG    on stmt: bool134 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $134pred = call bool134($132compare_op.18, func=bool134, args=(Var($132compare_op.18, umap_.py:204),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $134pred, 136, 246
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 136
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $136load_global.1 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $138load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $140load_method.3 = getattr(value=$138load_global.2, attr=floor)
12-22 13:04 DEBUG    on stmt: $144call_method.5 = call $140load_method.3(local_connectivity, func=$140load_method.3, args=[Var(local_connectivity, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: index = call $136load_global.1($144call_method.5, func=$136load_global.1, args=[Var($144call_method.5, umap_.py:205)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: interpolation = local_connectivity - index
12-22 13:04 DEBUG    on stmt: $const160.11 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $162compare_op.12 = index > $const160.11
12-22 13:04 DEBUG    on stmt: bool164 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $164pred = call bool164($162compare_op.12, func=bool164, args=(Var($162compare_op.12, umap_.py:207),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $164pred, 166, 228
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 166
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $const170.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $172binary_subtract.4 = index - $const170.3
12-22 13:04 DEBUG    on stmt: $174binary_subscr.5 = getitem(value=non_zero_dists, index=$172binary_subtract.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: rho[i] = $174binary_subscr.5
12-22 13:04 DEBUG    on stmt: $184load_global.9 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $186compare_op.10 = interpolation > $184load_global.9
12-22 13:04 DEBUG    on stmt: bool188 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $188pred = call bool188($186compare_op.10, func=bool188, args=(Var($186compare_op.10, umap_.py:209),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $188pred, 190, 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 190
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $196binary_subscr.5 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $204binary_subscr.9 = getitem(value=non_zero_dists, index=index, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const210.12 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $212binary_subtract.13 = index - $const210.12
12-22 13:04 DEBUG    on stmt: $214binary_subscr.14 = getitem(value=non_zero_dists, index=$212binary_subtract.13, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $216binary_subtract.15 = $204binary_subscr.9 - $214binary_subscr.14
12-22 13:04 DEBUG    on stmt: $218binary_multiply.16 = interpolation * $216binary_subtract.15
12-22 13:04 DEBUG    on stmt: $220inplace_add.17 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$196binary_subscr.5, rhs=$218binary_multiply.16, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: rho[i] = $220inplace_add.17
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 228
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $const232.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $234binary_subscr.4 = static_getitem(value=non_zero_dists, index=0, index_var=$const232.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_multiply.5 = interpolation * $234binary_subscr.4
12-22 13:04 DEBUG    on stmt: rho[i] = $236binary_multiply.5
12-22 13:04 DEBUG    on stmt: jump 244
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 244
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 246
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $248load_attr.2 = getattr(value=non_zero_dists, attr=shape)
12-22 13:04 DEBUG    on stmt: $const250.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $252binary_subscr.4 = static_getitem(value=$248load_attr.2, index=0, index_var=$const250.3, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const254.5 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $256compare_op.6 = $252binary_subscr.4 > $const254.5
12-22 13:04 DEBUG    on stmt: bool260 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $260pred = call bool260($256compare_op.6, func=bool260, args=(Var($256compare_op.6, umap_.py:215),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $260pred, 262, 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 262
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $262load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $264load_method.2 = getattr(value=$262load_global.1, attr=max)
12-22 13:04 DEBUG    on stmt: $268call_method.4 = call $264load_method.2(non_zero_dists, func=$264load_method.2, args=[Var(non_zero_dists, umap_.py:203)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: rho[i] = $268call_method.4
12-22 13:04 DEBUG    on stmt: jump 276
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 276
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $276load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $280call_function.3 = call $276load_global.1(n_iter, func=$276load_global.1, args=[Var(n_iter, umap_.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $282get_iter.4 = getiter(value=$280call_function.3)
12-22 13:04 DEBUG    on stmt: $phi284.1 = $282get_iter.4
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 284
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: lo.2 = phi(incoming_values=[Var(lo.3, umap_.py:232), Var(lo, umap_.py:197)], incoming_blocks=[466, 276])
12-22 13:04 DEBUG    on stmt: mid.4 = phi(incoming_values=[Var(mid.5, umap_.py:224), Var(mid, umap_.py:199)], incoming_blocks=[466, 276])
12-22 13:04 DEBUG    on stmt: $284for_iter.2 = iternext(value=$phi284.1)
12-22 13:04 DEBUG    on stmt: $284for_iter.3 = pair_first(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $284for_iter.4 = pair_second(value=$284for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi286.2 = $284for_iter.3
12-22 13:04 DEBUG    on stmt: branch $284for_iter.4, 286, 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 286
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: n = $phi286.2
12-22 13:04 DEBUG    on stmt: psum = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $292load_global.4 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $const294.5 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $298load_attr.7 = getattr(value=distances, attr=shape)
12-22 13:04 DEBUG    on stmt: $const300.8 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $302binary_subscr.9 = static_getitem(value=$298load_attr.7, index=1, index_var=$const300.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $304call_function.10 = call $292load_global.4($const294.5, $302binary_subscr.9, func=$292load_global.4, args=[Var($const294.5, umap_.py:221), Var($302binary_subscr.9, umap_.py:221)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $306get_iter.11 = getiter(value=$304call_function.10)
12-22 13:04 DEBUG    on stmt: $phi308.2 = $306get_iter.11
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 308
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: psum.3 = phi(incoming_values=[Var(psum.4, umap_.py:224), Var(psum, umap_.py:220)], incoming_blocks=[372, 286])
12-22 13:04 DEBUG    on stmt: $308for_iter.3 = iternext(value=$phi308.2)
12-22 13:04 DEBUG    on stmt: $308for_iter.4 = pair_first(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $308for_iter.5 = pair_second(value=$308for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi310.3 = $308for_iter.4
12-22 13:04 DEBUG    on stmt: branch $308for_iter.5, 310, 376
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 310
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: j = $phi310.3
12-22 13:04 DEBUG    on stmt: $318build_tuple.7 = build_tuple(items=[Var(i, umap_.py:196), Var(j, umap_.py:221)])
12-22 13:04 DEBUG    on stmt: $320binary_subscr.8 = getitem(value=distances, index=$318build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $326binary_subscr.11 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: d = $320binary_subscr.8 - $326binary_subscr.11
12-22 13:04 DEBUG    on stmt: $const334.14 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $336compare_op.15 = d > $const334.14
12-22 13:04 DEBUG    on stmt: bool340 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $340pred = call bool340($336compare_op.15, func=bool340, args=(Var($336compare_op.15, umap_.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $340pred, 342, 364
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $344load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $346load_method.5 = getattr(value=$344load_global.4, attr=exp)
12-22 13:04 DEBUG    on stmt: $352binary_true_divide.8 = d / mid.4
12-22 13:04 DEBUG    on stmt: $354unary_negative.9 = unary(fn=<built-in function neg>, value=$352binary_true_divide.8)
12-22 13:04 DEBUG    on stmt: $356call_method.10 = call $346load_method.5($354unary_negative.9, func=$346load_method.5, args=[Var($354unary_negative.9, umap_.py:224)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $358inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum.3, rhs=$356call_method.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum.1 = $358inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 364
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $const366.4 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $368inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=psum.3, rhs=$const366.4, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: psum.2 = $368inplace_add.5
12-22 13:04 DEBUG    on stmt: jump 372
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 372
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: psum.4 = phi(incoming_values=[Var(psum.2, umap_.py:226), Var(psum.1, umap_.py:224)], incoming_blocks=[364, 342])
12-22 13:04 DEBUG    on stmt: jump 308
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 376
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $376load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $378load_method.3 = getattr(value=$376load_global.2, attr=fabs)
12-22 13:04 DEBUG    on stmt: $384binary_subtract.6 = psum.3 - target
12-22 13:04 DEBUG    on stmt: $386call_method.7 = call $378load_method.3($384binary_subtract.6, func=$378load_method.3, args=[Var($384binary_subtract.6, umap_.py:228)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $388load_global.8 = global(SMOOTH_K_TOLERANCE: 1e-05)
12-22 13:04 DEBUG    on stmt: $390compare_op.9 = $386call_method.7 < $388load_global.8
12-22 13:04 DEBUG    on stmt: bool394 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $394pred = call bool394($390compare_op.9, func=bool394, args=(Var($390compare_op.9, umap_.py:228),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $394pred, 396, 402
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 396
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: jump 470
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 402
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $406compare_op.4 = psum.3 > target
12-22 13:04 DEBUG    on stmt: bool410 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $410pred = call bool410($406compare_op.4, func=bool410, args=(Var($406compare_op.4, umap_.py:231),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $410pred, 412, 430
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 412
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: hi.1 = mid.4
12-22 13:04 DEBUG    on stmt: $420binary_add.5 = lo.2 + hi
12-22 13:04 DEBUG    find_def var='hi' stmt=$420binary_add.5 = lo.2 + hi
12-22 13:04 DEBUG    replaced with: $420binary_add.5 = lo.2 + hi.1
12-22 13:04 DEBUG    on stmt: $const422.6 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.1 = $420binary_add.5 / $const422.6
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 430
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: lo.1 = mid.4
12-22 13:04 DEBUG    on stmt: $436load_global.4 = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    on stmt: $438compare_op.5 = hi == $436load_global.4
12-22 13:04 DEBUG    find_def var='hi' stmt=$438compare_op.5 = hi == $436load_global.4
12-22 13:04 DEBUG    find_def_from_top label 430
12-22 13:04 DEBUG    idom 402 from label 430
12-22 13:04 DEBUG    find_def_from_bottom label 402
12-22 13:04 DEBUG    find_def_from_top label 402
12-22 13:04 DEBUG    idom 376 from label 402
12-22 13:04 DEBUG    find_def_from_bottom label 376
12-22 13:04 DEBUG    find_def_from_top label 376
12-22 13:04 DEBUG    idom 308 from label 376
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    find_def_from_top label 308
12-22 13:04 DEBUG    idom 286 from label 308
12-22 13:04 DEBUG    find_def_from_bottom label 286
12-22 13:04 DEBUG    find_def_from_top label 286
12-22 13:04 DEBUG    idom 284 from label 286
12-22 13:04 DEBUG    find_def_from_bottom label 284
12-22 13:04 DEBUG    find_def_from_top label 284
12-22 13:04 DEBUG    insert phi node hi.2 = phi(incoming_values=[], incoming_blocks=[]) at 284
12-22 13:04 DEBUG    find_def_from_bottom label 466
12-22 13:04 DEBUG    find_def_from_top label 466
12-22 13:04 DEBUG    insert phi node hi.3 = phi(incoming_values=[], incoming_blocks=[]) at 466
12-22 13:04 DEBUG    find_def_from_bottom label 444
12-22 13:04 DEBUG    find_def_from_top label 444
12-22 13:04 DEBUG    idom 430 from label 444
12-22 13:04 DEBUG    find_def_from_bottom label 430
12-22 13:04 DEBUG    find_def_from_top label 430
12-22 13:04 DEBUG    idom 402 from label 430
12-22 13:04 DEBUG    find_def_from_bottom label 402
12-22 13:04 DEBUG    find_def_from_top label 402
12-22 13:04 DEBUG    idom 376 from label 402
12-22 13:04 DEBUG    find_def_from_bottom label 376
12-22 13:04 DEBUG    find_def_from_top label 376
12-22 13:04 DEBUG    idom 308 from label 376
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    find_def_from_top label 308
12-22 13:04 DEBUG    idom 286 from label 308
12-22 13:04 DEBUG    find_def_from_bottom label 286
12-22 13:04 DEBUG    find_def_from_top label 286
12-22 13:04 DEBUG    idom 284 from label 286
12-22 13:04 DEBUG    find_def_from_bottom label 284
12-22 13:04 DEBUG    incoming_def hi.2 = phi(incoming_values=[], incoming_blocks=[])
12-22 13:04 DEBUG    find_def_from_bottom label 412
12-22 13:04 DEBUG    incoming_def hi.1 = mid.4
12-22 13:04 DEBUG    find_def_from_bottom label 454
12-22 13:04 DEBUG    find_def_from_top label 454
12-22 13:04 DEBUG    idom 430 from label 454
12-22 13:04 DEBUG    find_def_from_bottom label 430
12-22 13:04 DEBUG    find_def_from_top label 430
12-22 13:04 DEBUG    idom 402 from label 430
12-22 13:04 DEBUG    find_def_from_bottom label 402
12-22 13:04 DEBUG    find_def_from_top label 402
12-22 13:04 DEBUG    idom 376 from label 402
12-22 13:04 DEBUG    find_def_from_bottom label 376
12-22 13:04 DEBUG    find_def_from_top label 376
12-22 13:04 DEBUG    idom 308 from label 376
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    find_def_from_top label 308
12-22 13:04 DEBUG    idom 286 from label 308
12-22 13:04 DEBUG    find_def_from_bottom label 286
12-22 13:04 DEBUG    find_def_from_top label 286
12-22 13:04 DEBUG    idom 284 from label 286
12-22 13:04 DEBUG    find_def_from_bottom label 284
12-22 13:04 DEBUG    incoming_def hi.2 = phi(incoming_values=[], incoming_blocks=[])
12-22 13:04 DEBUG    incoming_def hi.3 = phi(incoming_values=[Var(hi.2, umap_.py:235), Var(hi.1, umap_.py:232), Var(hi.2, umap_.py:235)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    find_def_from_bottom label 276
12-22 13:04 DEBUG    find_def_from_top label 276
12-22 13:04 DEBUG    idom 88 from label 276
12-22 13:04 DEBUG    find_def_from_bottom label 88
12-22 13:04 DEBUG    incoming_def hi = global(NPY_INFINITY: inf)
12-22 13:04 DEBUG    replaced with: $438compare_op.5 = hi.2 == $436load_global.4
12-22 13:04 DEBUG    on stmt: bool442 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $442pred = call bool442($438compare_op.5, func=bool442, args=(Var($438compare_op.5, umap_.py:236),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $442pred, 444, 454
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 444
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $const446.3 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $448inplace_multiply.4 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=mid.4, rhs=$const446.3, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: mid.2 = $448inplace_multiply.4
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 454
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $458binary_add.4 = lo.1 + hi
12-22 13:04 DEBUG    find_def var='hi' stmt=$458binary_add.4 = lo.1 + hi
12-22 13:04 DEBUG    find_def_from_top label 454
12-22 13:04 DEBUG    idom 430 from label 454
12-22 13:04 DEBUG    find_def_from_bottom label 430
12-22 13:04 DEBUG    find_def_from_top label 430
12-22 13:04 DEBUG    idom 402 from label 430
12-22 13:04 DEBUG    find_def_from_bottom label 402
12-22 13:04 DEBUG    find_def_from_top label 402
12-22 13:04 DEBUG    idom 376 from label 402
12-22 13:04 DEBUG    find_def_from_bottom label 376
12-22 13:04 DEBUG    find_def_from_top label 376
12-22 13:04 DEBUG    idom 308 from label 376
12-22 13:04 DEBUG    find_def_from_bottom label 308
12-22 13:04 DEBUG    find_def_from_top label 308
12-22 13:04 DEBUG    idom 286 from label 308
12-22 13:04 DEBUG    find_def_from_bottom label 286
12-22 13:04 DEBUG    find_def_from_top label 286
12-22 13:04 DEBUG    idom 284 from label 286
12-22 13:04 DEBUG    find_def_from_bottom label 284
12-22 13:04 DEBUG    replaced with: $458binary_add.4 = lo.1 + hi.2
12-22 13:04 DEBUG    on stmt: $const460.5 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: mid.3 = $458binary_add.4 / $const460.5
12-22 13:04 DEBUG    on stmt: jump 466
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 466
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: lo.3 = phi(incoming_values=[Var(lo.1, umap_.py:235), Var(lo.2, umap_.py:232), Var(lo.1, umap_.py:235)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    on stmt: mid.5 = phi(incoming_values=[Var(mid.2, umap_.py:237), Var(mid.1, umap_.py:233), Var(mid.3, umap_.py:239)], incoming_blocks=[444, 412, 454])
12-22 13:04 DEBUG    on stmt: jump 284
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 470
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: result[i] = mid.4
12-22 13:04 DEBUG    on stmt: $482binary_subscr.6 = getitem(value=rho, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const484.7 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $486compare_op.8 = $482binary_subscr.6 > $const484.7
12-22 13:04 DEBUG    on stmt: bool490 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $490pred = call bool490($486compare_op.8, func=bool490, args=(Var($486compare_op.8, umap_.py:244),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $490pred, 492, 534
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 492
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $492load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $494load_method.2 = getattr(value=$492load_global.1, attr=mean)
12-22 13:04 DEBUG    on stmt: mean_ith_distances = call $494load_method.2(ith_distances, func=$494load_method.2, args=[Var(ith_distances, umap_.py:202)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $506binary_subscr.7 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $508load_global.8 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $512binary_multiply.10 = $508load_global.8 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: $514compare_op.11 = $506binary_subscr.7 < $512binary_multiply.10
12-22 13:04 DEBUG    on stmt: bool518 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $518pred = call bool518($514compare_op.11, func=bool518, args=(Var($514compare_op.11, umap_.py:246),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $518pred, 520, 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 520
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $520load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $524binary_multiply.3 = $520load_global.1 * mean_ith_distances
12-22 13:04 DEBUG    on stmt: result[i] = $524binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 534
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $538binary_subscr.3 = getitem(value=result, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $540load_global.4 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $544binary_multiply.6 = $540load_global.4 * mean_distances
12-22 13:04 DEBUG    on stmt: $546compare_op.7 = $538binary_subscr.3 < $544binary_multiply.6
12-22 13:04 DEBUG    on stmt: bool548 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $548pred = call bool548($546compare_op.7, func=bool548, args=(Var($546compare_op.7, umap_.py:249),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $548pred, 550, 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 550
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $550load_global.1 = global(MIN_K_DIST_SCALE: 0.001)
12-22 13:04 DEBUG    on stmt: $554binary_multiply.3 = $550load_global.1 * mean_distances
12-22 13:04 DEBUG    on stmt: result[i] = $554binary_multiply.3
12-22 13:04 DEBUG    on stmt: jump 562
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 562
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: jump 565
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 564
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: $568build_tuple.2 = build_tuple(items=[Var(result, umap_.py:192), Var(rho, umap_.py:191)])
12-22 13:04 DEBUG    on stmt: $570return_value.3 = cast(value=$568build_tuple.2)
12-22 13:04 DEBUG    on stmt: return $570return_value.3
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 565
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12371F10>
12-22 13:04 DEBUG    on stmt: jump 84
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4437)
           2	LOAD_GLOBAL(arg=0, lineno=4438)
           4	LOAD_ATTR(arg=1, lineno=4438)
           6	LOAD_FAST(arg=0, lineno=4438)
           8	LOAD_FAST(arg=1, lineno=4438)
          10	LOAD_CONST(arg=1, lineno=4438)
          12	CALL_FUNCTION_KW(arg=2, lineno=4438)
          14	STORE_FAST(arg=2, lineno=4438)
          16	LOAD_FAST(arg=2, lineno=4439)
          18	LOAD_METHOD(arg=2, lineno=4439)
          20	CALL_METHOD(arg=0, lineno=4439)
          22	POP_TOP(arg=None, lineno=4439)
          24	LOAD_FAST(arg=2, lineno=4440)
          26	RETURN_VALUE(arg=None, lineno=4440)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4437)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4438)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4438)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$shape6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4438)
12-22 13:04 DEBUG    stack ['$12call_function_kw.5']
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4439)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4439)
12-22 13:04 DEBUG    stack ['$arr16.6']
12-22 13:04 DEBUG    dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4439)
12-22 13:04 DEBUG    stack ['$18load_method.7']
12-22 13:04 DEBUG    dispatch pc=22, inst=POP_TOP(arg=None, lineno=4439)
12-22 13:04 DEBUG    stack ['$20call_method.8']
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4440)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4440)
12-22 13:04 DEBUG    stack ['$arr24.9']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4437)], kws=[('dtype', Var(dtype, arrayobj.py:4437))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12351BB0>
12-22 13:04 DEBUG    on stmt: shape = arg(0, name=shape)
12-22 13:04 DEBUG    on stmt: dtype = arg(1, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4437)], kws=[('dtype', Var(dtype, arrayobj.py:4437))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
12-22 13:04 DEBUG    on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $26return_value.10 = cast(value=arr)
12-22 13:04 DEBUG    on stmt: return $26return_value.10
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$18load_method.7': [<numba.core.ir.Assign object at 0x000001AF12357AF0>],
             '$20call_method.8': [<numba.core.ir.Assign object at 0x000001AF12357CA0>],
             '$26return_value.10': [<numba.core.ir.Assign object at 0x000001AF12357F10>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AF1235CD00>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x000001AF12357190>],
             'arr': [<numba.core.ir.Assign object at 0x000001AF12357880>],
             'dtype': [<numba.core.ir.Assign object at 0x000001AF1235CC40>],
             'shape': [<numba.core.ir.Assign object at 0x000001AF1236F580>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4369)
           2	LOAD_GLOBAL(arg=0, lineno=4370)
           4	LOAD_FAST(arg=0, lineno=4370)
           6	LOAD_FAST(arg=1, lineno=4370)
           8	LOAD_DEREF(arg=0, lineno=4370)
          10	CALL_FUNCTION(arg=3, lineno=4370)
          12	RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4369)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    stack ['$10call_function.4']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float32, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF123D4A30>
12-22 13:04 DEBUG    on stmt: shape = arg(0, name=shape)
12-22 13:04 DEBUG    on stmt: dtype = arg(1, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
12-22 13:04 DEBUG    on stmt: $8load_deref.3 = freevar(retty: array(float32, 1d, C))
12-22 13:04 DEBUG    on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $12return_value.5 = cast(value=$10call_function.4)
12-22 13:04 DEBUG    on stmt: return $12return_value.5
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10call_function.4': [<numba.core.ir.Assign object at 0x000001AF123D33A0>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x000001AF123D34F0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AF123D4DF0>],
             '$8load_deref.3': [<numba.core.ir.Assign object at 0x000001AF123D31F0>],
             'dtype': [<numba.core.ir.Assign object at 0x000001AF123D4C70>],
             'shape': [<numba.core.ir.Assign object at 0x000001AF123D45E0>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4428)
           2	LOAD_GLOBAL(arg=0, lineno=4429)
           4	LOAD_FAST(arg=0, lineno=4429)
           6	CALL_FUNCTION(arg=1, lineno=4429)
           8	POP_TOP(arg=None, lineno=4429)
          10	LOAD_CONST(arg=0, lineno=4429)
          12	RETURN_VALUE(arg=None, lineno=4429)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4428)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4429)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4429)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4429)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$self4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=POP_TOP(arg=None, lineno=4429)
12-22 13:04 DEBUG    stack ['$6call_function.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4429)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4429)
12-22 13:04 DEBUG    stack ['$const10.3']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3'}), (12, {'retval': '$const10.3', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4428)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3 = const(NoneType, None)       ['$const10.3']
    $12return_value.4 = cast(value=$const10.3) ['$12return_value.4', '$const10.3']
    return $12return_value.4                 ['$12return_value.4']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12413760>
12-22 13:04 DEBUG    on stmt: self = arg(0, name=self)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
12-22 13:04 DEBUG    on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4428)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const10.3 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $12return_value.4 = cast(value=$const10.3)
12-22 13:04 DEBUG    on stmt: return $12return_value.4
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$12return_value.4': [<numba.core.ir.Assign object at 0x000001AF1241E5B0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AF12413AC0>],
             '$6call_function.2': [<numba.core.ir.Assign object at 0x000001AF1237E3A0>],
             '$const10.3': [<numba.core.ir.Assign object at 0x000001AF1241E190>],
             'self': [<numba.core.ir.Assign object at 0x000001AF12413B20>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=16, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=16, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=437)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
12-22 13:04 DEBUG    stack ['$2load_deref.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
12-22 13:04 DEBUG    stack ['$6load_global.1']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
12-22 13:04 DEBUG    stack ['$8load_method.2']
12-22 13:04 DEBUG    dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
12-22 13:04 DEBUG    stack ['$8load_method.2', '$a10.3']
12-22 13:04 DEBUG    dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
12-22 13:04 DEBUG    stack ['$12call_method.4']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=16 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi16.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=16 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=16, inst=FOR_ITER(arg=16, lineno=441)
12-22 13:04 DEBUG    stack ['$phi16.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=34 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
12-22 13:04 DEBUG    stack ['$c34.0']
12-22 13:04 DEBUG    dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
12-22 13:04 DEBUG    stack ['$c34.0', '$a36.1']
12-22 13:04 DEBUG    dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
12-22 13:04 DEBUG    stack ['$c34.0', '$38load_attr.2']
12-22 13:04 DEBUG    dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
12-22 13:04 DEBUG    stack ['$40binary_true_divide.3']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi18.0', '$phi18.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=18 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
12-22 13:04 DEBUG    stack ['$phi18.0', '$phi18.1']
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0']
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0', '$c20.2']
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0', '$c20.2', '$v22.3']
12-22 13:04 DEBUG    dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0', '$c20.2', '$24load_method.4']
12-22 13:04 DEBUG    dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0', '$c20.2', '$26call_method.5']
12-22 13:04 DEBUG    dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0', '$28inplace_add.6']
12-22 13:04 DEBUG    dispatch pc=32, inst=JUMP_ABSOLUTE(arg=16, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=16 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
12-22 13:04 DEBUG    keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF124A1460>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: c = freevar(acc_init: 0.0)
12-22 13:04 DEBUG    on stmt: $6load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
12-22 13:04 DEBUG    on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
12-22 13:04 DEBUG    on stmt: $phi16.0 = $14get_iter.5
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block analysis pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF124A1460>
12-22 13:04 DEBUG    on stmt: $16for_iter.1 = iternext(value=$phi16.0)
12-22 13:04 DEBUG    on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi18.1 = $16for_iter.2
12-22 13:04 DEBUG    on stmt: branch $16for_iter.3, 18, 34
12-22 13:04 DEBUG    ==== SSA block analysis pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF124A1460>
12-22 13:04 DEBUG    on stmt: v = $phi18.1
12-22 13:04 DEBUG    on stmt: $24load_method.4 = getattr(value=v, attr=item)
12-22 13:04 DEBUG    on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: c = $28inplace_add.6
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block analysis pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF124A1460>
12-22 13:04 DEBUG    on stmt: $38load_attr.2 = getattr(value=a, attr=size)
12-22 13:04 DEBUG    on stmt: $40binary_true_divide.3 = c / $38load_attr.2
12-22 13:04 DEBUG    on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
12-22 13:04 DEBUG    on stmt: return $42return_value.4
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$12call_method.4': [<numba.core.ir.Assign object at 0x000001AF12494AC0>],
             '$14get_iter.5': [<numba.core.ir.Assign object at 0x000001AF12494C10>],
             '$16for_iter.1': [<numba.core.ir.Assign object at 0x000001AF12494F10>],
             '$16for_iter.2': [<numba.core.ir.Assign object at 0x000001AF1249B070>],
             '$16for_iter.3': [<numba.core.ir.Assign object at 0x000001AF1249B190>],
             '$24load_method.4': [<numba.core.ir.Assign object at 0x000001AF1249B7F0>],
             '$26call_method.5': [<numba.core.ir.Assign object at 0x000001AF1249B9A0>],
             '$28inplace_add.6': [<numba.core.ir.Assign object at 0x000001AF1249BAF0>],
             '$38load_attr.2': [<numba.core.ir.Assign object at 0x000001AF1249D070>],
             '$40binary_true_divide.3': [<numba.core.ir.Assign object at 0x000001AF1249D1F0>],
             '$42return_value.4': [<numba.core.ir.Assign object at 0x000001AF1249D370>],
             '$6load_global.1': [<numba.core.ir.Assign object at 0x000001AF12494670>],
             '$8load_method.2': [<numba.core.ir.Assign object at 0x000001AF124947F0>],
             '$phi16.0': [<numba.core.ir.Assign object at 0x000001AF12494520>],
             '$phi18.1': [<numba.core.ir.Assign object at 0x000001AF12494E20>],
             'a': [<numba.core.ir.Assign object at 0x000001AF12494250>],
             'c': [<numba.core.ir.Assign object at 0x000001AF124943D0>,
                   <numba.core.ir.Assign object at 0x000001AF1249BBB0>],
             'v': [<numba.core.ir.Assign object at 0x000001AF1249B430>]})
12-22 13:04 DEBUG    SSA violators {'c'}
12-22 13:04 DEBUG    Fix SSA violator on var c
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124A1190>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: c = freevar(acc_init: 0.0)
12-22 13:04 DEBUG    first assign: c
12-22 13:04 DEBUG    replaced with: c = freevar(acc_init: 0.0)
12-22 13:04 DEBUG    on stmt: $6load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
12-22 13:04 DEBUG    on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
12-22 13:04 DEBUG    on stmt: $phi16.0 = $14get_iter.5
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124A1190>
12-22 13:04 DEBUG    on stmt: $16for_iter.1 = iternext(value=$phi16.0)
12-22 13:04 DEBUG    on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi18.1 = $16for_iter.2
12-22 13:04 DEBUG    on stmt: branch $16for_iter.3, 18, 34
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124A1190>
12-22 13:04 DEBUG    on stmt: v = $phi18.1
12-22 13:04 DEBUG    on stmt: $24load_method.4 = getattr(value=v, attr=item)
12-22 13:04 DEBUG    on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: c = $28inplace_add.6
12-22 13:04 DEBUG    replaced with: c.1 = $28inplace_add.6
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124A1190>
12-22 13:04 DEBUG    on stmt: $38load_attr.2 = getattr(value=a, attr=size)
12-22 13:04 DEBUG    on stmt: $40binary_true_divide.3 = c / $38load_attr.2
12-22 13:04 DEBUG    on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
12-22 13:04 DEBUG    on stmt: return $42return_value.4
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001AF124A1490>],
             18: [<numba.core.ir.Assign object at 0x000001AF124A1520>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124A1880>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: c = freevar(acc_init: 0.0)
12-22 13:04 DEBUG    on stmt: $6load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
12-22 13:04 DEBUG    on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
12-22 13:04 DEBUG    on stmt: $phi16.0 = $14get_iter.5
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124A1880>
12-22 13:04 DEBUG    on stmt: $16for_iter.1 = iternext(value=$phi16.0)
12-22 13:04 DEBUG    on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi18.1 = $16for_iter.2
12-22 13:04 DEBUG    on stmt: branch $16for_iter.3, 18, 34
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124A1880>
12-22 13:04 DEBUG    on stmt: v = $phi18.1
12-22 13:04 DEBUG    on stmt: $24load_method.4 = getattr(value=v, attr=item)
12-22 13:04 DEBUG    on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 18
12-22 13:04 DEBUG    idom 16 from label 18
12-22 13:04 DEBUG    find_def_from_bottom label 16
12-22 13:04 DEBUG    find_def_from_top label 16
12-22 13:04 DEBUG    insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
12-22 13:04 DEBUG    find_def_from_bottom label 0
12-22 13:04 DEBUG    incoming_def c = freevar(acc_init: 0.0)
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    incoming_def c.1 = $28inplace_add.6
12-22 13:04 DEBUG    replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: c.1 = $28inplace_add.6
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124A1880>
12-22 13:04 DEBUG    on stmt: $38load_attr.2 = getattr(value=a, attr=size)
12-22 13:04 DEBUG    on stmt: $40binary_true_divide.3 = c / $38load_attr.2
12-22 13:04 DEBUG    find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
12-22 13:04 DEBUG    find_def_from_top label 34
12-22 13:04 DEBUG    idom 16 from label 34
12-22 13:04 DEBUG    find_def_from_bottom label 16
12-22 13:04 DEBUG    replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
12-22 13:04 DEBUG    on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
12-22 13:04 DEBUG    on stmt: return $42return_value.4
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=3523)
           2	LOAD_GLOBAL(arg=0, lineno=3524)
           4	LOAD_FAST(arg=0, lineno=3524)
           6	CALL_FUNCTION(arg=1, lineno=3524)
           8	STORE_FAST(arg=2, lineno=3524)
          10	LOAD_GLOBAL(arg=1, lineno=3525)
          12	LOAD_FAST(arg=2, lineno=3525)
          14	CALL_FUNCTION(arg=1, lineno=3525)
          16	GET_ITER(arg=None, lineno=3525)
>         18	FOR_ITER(arg=40, lineno=3525)
          20	STORE_FAST(arg=3, lineno=3525)
          22	LOAD_FAST(arg=0, lineno=3526)
          24	LOAD_FAST(arg=3, lineno=3526)
          26	BINARY_SUBSCR(arg=None, lineno=3526)
          28	LOAD_FAST(arg=1, lineno=3526)
          30	LOAD_GLOBAL(arg=0, lineno=3526)
          32	LOAD_FAST(arg=1, lineno=3526)
          34	CALL_FUNCTION(arg=1, lineno=3526)
          36	LOAD_FAST(arg=2, lineno=3526)
          38	BINARY_SUBTRACT(arg=None, lineno=3526)
          40	LOAD_FAST(arg=3, lineno=3526)
          42	BINARY_ADD(arg=None, lineno=3526)
          44	BINARY_SUBSCR(arg=None, lineno=3526)
          46	COMPARE_OP(arg=3, lineno=3526)
          48	POP_JUMP_IF_FALSE(arg=18, lineno=3526)
          50	LOAD_GLOBAL(arg=2, lineno=3527)
          52	LOAD_CONST(arg=1, lineno=3527)
          54	CALL_FUNCTION(arg=1, lineno=3527)
          56	RAISE_VARARGS(arg=1, lineno=3527)
          58	JUMP_ABSOLUTE(arg=18, lineno=3527)
>         60	LOAD_CONST(arg=0, lineno=3527)
          62	RETURN_VALUE(arg=None, lineno=3527)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=3523)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3524)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3524)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=3524)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=STORE_FAST(arg=2, lineno=3524)
12-22 13:04 DEBUG    stack ['$6call_function.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=3525)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=3525)
12-22 13:04 DEBUG    stack ['$10load_global.3']
12-22 13:04 DEBUG    dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=3525)
12-22 13:04 DEBUG    stack ['$10load_global.3', '$n12.4']
12-22 13:04 DEBUG    dispatch pc=16, inst=GET_ITER(arg=None, lineno=3525)
12-22 13:04 DEBUG    stack ['$14call_function.5']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=18, stack=('$16get_iter.6',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi18.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=18 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=18, inst=FOR_ITER(arg=40, lineno=3525)
12-22 13:04 DEBUG    stack ['$phi18.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=60 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=60, inst=LOAD_CONST(arg=0, lineno=3527)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=62, inst=RETURN_VALUE(arg=None, lineno=3527)
12-22 13:04 DEBUG    stack ['$const60.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=20 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi20.0', '$phi20.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=20 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=20, inst=STORE_FAST(arg=3, lineno=3525)
12-22 13:04 DEBUG    stack ['$phi20.0', '$phi20.1']
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0']
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$shape22.2']
12-22 13:04 DEBUG    dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$shape22.2', '$i24.3']
12-22 13:04 DEBUG    dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$26binary_subscr.4']
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_GLOBAL(arg=0, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5']
12-22 13:04 DEBUG    dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6']
12-22 13:04 DEBUG    dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6', '$main_shape32.7']
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8']
12-22 13:04 DEBUG    dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8', '$n36.9']
12-22 13:04 DEBUG    dispatch pc=40, inst=LOAD_FAST(arg=3, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10']
12-22 13:04 DEBUG    dispatch pc=42, inst=BINARY_ADD(arg=None, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10', '$i40.11']
12-22 13:04 DEBUG    dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$42binary_add.12']
12-22 13:04 DEBUG    dispatch pc=46, inst=COMPARE_OP(arg=3, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$26binary_subscr.4', '$44binary_subscr.13']
12-22 13:04 DEBUG    dispatch pc=48, inst=POP_JUMP_IF_FALSE(arg=18, lineno=3526)
12-22 13:04 DEBUG    stack ['$phi20.0', '$46compare_op.14']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=50, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=18, stack=('$phi20.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi50.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=50 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=50, inst=LOAD_GLOBAL(arg=2, lineno=3527)
12-22 13:04 DEBUG    stack ['$phi50.0']
12-22 13:04 DEBUG    dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=3527)
12-22 13:04 DEBUG    stack ['$phi50.0', '$50load_global.1']
12-22 13:04 DEBUG    dispatch pc=54, inst=CALL_FUNCTION(arg=1, lineno=3527)
12-22 13:04 DEBUG    stack ['$phi50.0', '$50load_global.1', '$const52.2']
12-22 13:04 DEBUG    dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=3527)
12-22 13:04 DEBUG    stack ['$phi50.0', '$54call_function.3']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=60 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:04 DEBUG    keep phismap: {'$phi18.0': {('$16get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.6'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'func': '$2load_global.0', 'args': ['$shape4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$n12.4'}), (14, {'func': '$10load_global.3', 'args': ['$n12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5', 'res': '$16get_iter.6'})), outgoing_phis={'$phi18.0': '$16get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.6',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 20: ('$phi18.0', '$18for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'value': '$phi20.1'}), (22, {'res': '$shape22.2'}), (24, {'res': '$i24.3'}), (26, {'index': '$i24.3', 'target': '$shape22.2', 'res': '$26binary_subscr.4'}), (28, {'res': '$main_shape28.5'}), (30, {'res': '$30load_global.6'}), (32, {'res': '$main_shape32.7'}), (34, {'func': '$30load_global.6', 'args': ['$main_shape32.7'], 'res': '$34call_function.8'}), (36, {'res': '$n36.9'}), (38, {'lhs': '$34call_function.8', 'rhs': '$n36.9', 'res': '$38binary_subtract.10'}), (40, {'res': '$i40.11'}), (42, {'lhs': '$38binary_subtract.10', 'rhs': '$i40.11', 'res': '$42binary_add.12'}), (44, {'index': '$42binary_add.12', 'target': '$main_shape28.5', 'res': '$44binary_subscr.13'}), (46, {'lhs': '$26binary_subscr.4', 'rhs': '$44binary_subscr.13', 'res': '$46compare_op.14'}), (48, {'pred': '$46compare_op.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi20.0',), 18: ('$phi20.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'res': '$50load_global.1'}), (52, {'res': '$const52.2'}), (54, {'func': '$50load_global.1', 'args': ['$const52.2'], 'res': '$54call_function.3'}), (56, {'exc': '$54call_function.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$const60.0'}), (62, {'retval': '$const60.0', 'castval': '$62return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:3523)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'shape']
    $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3524)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'n']
    $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
    $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 60             ['$18for_iter.3']
label 20:
    i = $phi20.1                             ['$phi20.1', 'i']
    $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
    $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
    $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:3523)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
    $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
    $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
    $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
    $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3526),), kws=(), vararg=None, varkwarg=None, target=None) ['$46compare_op.14', '$48pred', 'bool48']
    branch $48pred, 50, 18                   ['$48pred']
label 50:
    $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
    $const52.2 = const(str, nditer(): operands could not be broadcast together) ['$const52.2']
    $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:3527)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$54call_function.3', '$const52.2']
    raise $54call_function.3                 ['$54call_function.3']
label 60:
    $const60.0 = const(NoneType, None)       ['$const60.0']
    $62return_value.1 = cast(value=$const60.0) ['$62return_value.1', '$const60.0']
    return $62return_value.1                 ['$62return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1246D0D0>
12-22 13:04 DEBUG    on stmt: shape = arg(0, name=shape)
12-22 13:04 DEBUG    on stmt: main_shape = arg(1, name=main_shape)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: n = const(int, 2)
12-22 13:04 DEBUG    on stmt: $10load_global.3 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3524)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.6 = getiter(value=$14call_function.5)
12-22 13:04 DEBUG    on stmt: $phi18.0 = $16get_iter.6
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block analysis pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1246D0D0>
12-22 13:04 DEBUG    on stmt: $18for_iter.1 = iternext(value=$phi18.0)
12-22 13:04 DEBUG    on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi20.1 = $18for_iter.2
12-22 13:04 DEBUG    on stmt: branch $18for_iter.3, 20, 60
12-22 13:04 DEBUG    ==== SSA block analysis pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1246D0D0>
12-22 13:04 DEBUG    on stmt: i = $phi20.1
12-22 13:04 DEBUG    on stmt: $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $30load_global.6 = global(len: <built-in function len>)
12-22 13:04 DEBUG    on stmt: $34call_function.8 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $38binary_subtract.10 = $34call_function.8 - n
12-22 13:04 DEBUG    on stmt: $42binary_add.12 = $38binary_subtract.10 + i
12-22 13:04 DEBUG    on stmt: $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13
12-22 13:04 DEBUG    on stmt: bool48 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3526),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $48pred, 50, 18
12-22 13:04 DEBUG    ==== SSA block analysis pass on 50
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1246D0D0>
12-22 13:04 DEBUG    on stmt: $50load_global.1 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const52.2 = const(str, nditer(): operands could not be broadcast together)
12-22 13:04 DEBUG    on stmt: $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:3527)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
12-22 13:04 DEBUG    ==== SSA block analysis pass on 60
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1246D0D0>
12-22 13:04 DEBUG    on stmt: $const60.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $62return_value.1 = cast(value=$const60.0)
12-22 13:04 DEBUG    on stmt: return $62return_value.1
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10load_global.3': [<numba.core.ir.Assign object at 0x000001AF12473520>],
             '$14call_function.5': [<numba.core.ir.Assign object at 0x000001AF12473970>],
             '$16get_iter.6': [<numba.core.ir.Assign object at 0x000001AF12473670>],
             '$18for_iter.1': [<numba.core.ir.Assign object at 0x000001AF12452730>],
             '$18for_iter.2': [<numba.core.ir.Assign object at 0x000001AF12452670>],
             '$18for_iter.3': [<numba.core.ir.Assign object at 0x000001AF124527F0>],
             '$26binary_subscr.4': [<numba.core.ir.Assign object at 0x000001AF12452A30>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AF12473A60>],
             '$30load_global.6': [<numba.core.ir.Assign object at 0x000001AF124522B0>],
             '$34call_function.8': [<numba.core.ir.Assign object at 0x000001AF123609A0>],
             '$38binary_subtract.10': [<numba.core.ir.Assign object at 0x000001AF1244E4F0>],
             '$42binary_add.12': [<numba.core.ir.Assign object at 0x000001AF1244E0A0>],
             '$44binary_subscr.13': [<numba.core.ir.Assign object at 0x000001AF1244E550>],
             '$46compare_op.14': [<numba.core.ir.Assign object at 0x000001AF124739D0>],
             '$48pred': [<numba.core.ir.Assign object at 0x000001AF1246D430>],
             '$50load_global.1': [<numba.core.ir.Assign object at 0x000001AF1246DCA0>],
             '$54call_function.3': [<numba.core.ir.Assign object at 0x000001AF1246DE50>],
             '$62return_value.1': [<numba.core.ir.Assign object at 0x000001AF1244E700>],
             '$const52.2': [<numba.core.ir.Assign object at 0x000001AF1246DD60>],
             '$const60.0': [<numba.core.ir.Assign object at 0x000001AF1244ED00>],
             '$phi18.0': [<numba.core.ir.Assign object at 0x000001AF12473610>],
             '$phi20.1': [<numba.core.ir.Assign object at 0x000001AF12452640>],
             'bool48': [<numba.core.ir.Assign object at 0x000001AF1246D610>],
             'i': [<numba.core.ir.Assign object at 0x000001AF12452CD0>],
             'main_shape': [<numba.core.ir.Assign object at 0x000001AF12473BE0>],
             'n': [<numba.core.ir.Assign object at 0x000001AF12473850>],
             'shape': [<numba.core.ir.Assign object at 0x000001AF12473EB0>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	LOAD_FAST(arg=0, lineno=571)
           4	LOAD_ATTR(arg=0, lineno=571)
           6	LOAD_CONST(arg=1, lineno=571)
           8	COMPARE_OP(arg=2, lineno=571)
          10	POP_JUMP_IF_FALSE(arg=20, lineno=571)
          12	LOAD_GLOBAL(arg=1, lineno=572)
          14	LOAD_CONST(arg=2, lineno=572)
          16	CALL_FUNCTION(arg=1, lineno=572)
          18	RAISE_VARARGS(arg=1, lineno=572)
>         20	LOAD_GLOBAL(arg=2, lineno=575)
          22	LOAD_METHOD(arg=3, lineno=575)
          24	LOAD_FAST(arg=0, lineno=575)
          26	CALL_METHOD(arg=1, lineno=575)
          28	STORE_FAST(arg=1, lineno=575)
          30	LOAD_GLOBAL(arg=4, lineno=576)
          32	LOAD_FAST(arg=1, lineno=576)
          34	CALL_FUNCTION(arg=1, lineno=576)
          36	LOAD_METHOD(arg=5, lineno=576)
          38	LOAD_CONST(arg=1, lineno=576)
          40	CALL_METHOD(arg=1, lineno=576)
          42	STORE_FAST(arg=2, lineno=576)
          44	LOAD_DEREF(arg=1, lineno=577)
          46	LOAD_FAST(arg=2, lineno=577)
          48	CALL_FUNCTION(arg=1, lineno=577)
          50	POP_JUMP_IF_FALSE(arg=56, lineno=577)
          52	LOAD_FAST(arg=2, lineno=578)
          54	RETURN_VALUE(arg=None, lineno=578)
>         56	LOAD_FAST(arg=1, lineno=580)
          58	GET_ITER(arg=None, lineno=580)
>         60	FOR_ITER(arg=42, lineno=580)
          62	STORE_FAST(arg=3, lineno=580)
          64	LOAD_FAST(arg=3, lineno=581)
          66	LOAD_METHOD(arg=6, lineno=581)
          68	CALL_METHOD(arg=0, lineno=581)
          70	STORE_FAST(arg=4, lineno=581)
          72	LOAD_DEREF(arg=1, lineno=582)
          74	LOAD_FAST(arg=4, lineno=582)
          76	CALL_FUNCTION(arg=1, lineno=582)
          78	POP_JUMP_IF_FALSE(arg=88, lineno=582)
          80	LOAD_FAST(arg=4, lineno=583)
          82	ROT_TWO(arg=None, lineno=583)
          84	POP_TOP(arg=None, lineno=583)
          86	RETURN_VALUE(arg=None, lineno=583)
>         88	LOAD_DEREF(arg=0, lineno=584)
          90	LOAD_FAST(arg=4, lineno=584)
          92	LOAD_FAST(arg=2, lineno=584)
          94	CALL_FUNCTION(arg=2, lineno=584)
          96	POP_JUMP_IF_FALSE(arg=60, lineno=584)
          98	LOAD_FAST(arg=4, lineno=585)
         100	STORE_FAST(arg=2, lineno=585)
         102	JUMP_ABSOLUTE(arg=60, lineno=585)
>        104	LOAD_FAST(arg=2, lineno=586)
         106	RETURN_VALUE(arg=None, lineno=586)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=570)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=571)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=571)
12-22 13:04 DEBUG    stack ['$a2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=571)
12-22 13:04 DEBUG    stack ['$4load_attr.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=571)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$const6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=20, lineno=571)
12-22 13:04 DEBUG    stack ['$8compare_op.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=12 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=572)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=572)
12-22 13:04 DEBUG    stack ['$12load_global.0']
12-22 13:04 DEBUG    dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=572)
12-22 13:04 DEBUG    stack ['$12load_global.0', '$const14.1']
12-22 13:04 DEBUG    dispatch pc=18, inst=RAISE_VARARGS(arg=1, lineno=572)
12-22 13:04 DEBUG    stack ['$16call_function.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=20 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=20 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=575)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_METHOD(arg=3, lineno=575)
12-22 13:04 DEBUG    stack ['$20load_global.0']
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=575)
12-22 13:04 DEBUG    stack ['$22load_method.1']
12-22 13:04 DEBUG    dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=575)
12-22 13:04 DEBUG    stack ['$22load_method.1', '$a24.2']
12-22 13:04 DEBUG    dispatch pc=28, inst=STORE_FAST(arg=1, lineno=575)
12-22 13:04 DEBUG    stack ['$26call_method.3']
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_GLOBAL(arg=4, lineno=576)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=576)
12-22 13:04 DEBUG    stack ['$30load_global.4']
12-22 13:04 DEBUG    dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=576)
12-22 13:04 DEBUG    stack ['$30load_global.4', '$it32.5']
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_METHOD(arg=5, lineno=576)
12-22 13:04 DEBUG    stack ['$34call_function.6']
12-22 13:04 DEBUG    dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=576)
12-22 13:04 DEBUG    stack ['$36load_method.7']
12-22 13:04 DEBUG    dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=576)
12-22 13:04 DEBUG    stack ['$36load_method.7', '$const38.8']
12-22 13:04 DEBUG    dispatch pc=42, inst=STORE_FAST(arg=2, lineno=576)
12-22 13:04 DEBUG    stack ['$40call_method.9']
12-22 13:04 DEBUG    dispatch pc=44, inst=LOAD_DEREF(arg=1, lineno=577)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=577)
12-22 13:04 DEBUG    stack ['$44load_deref.10']
12-22 13:04 DEBUG    dispatch pc=48, inst=CALL_FUNCTION(arg=1, lineno=577)
12-22 13:04 DEBUG    stack ['$44load_deref.10', '$max_value46.11']
12-22 13:04 DEBUG    dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=56, lineno=577)
12-22 13:04 DEBUG    stack ['$48call_function.12']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=52 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=578)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=578)
12-22 13:04 DEBUG    stack ['$max_value52.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=56 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=56 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=580)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=58, inst=GET_ITER(arg=None, lineno=580)
12-22 13:04 DEBUG    stack ['$it56.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=60, stack=('$58get_iter.1',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=60 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi60.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=60 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=60, inst=FOR_ITER(arg=42, lineno=580)
12-22 13:04 DEBUG    stack ['$phi60.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=('$phi60.0', '$60for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=104 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=586)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=586)
12-22 13:04 DEBUG    stack ['$max_value104.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=62 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi62.0', '$phi62.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=62 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=62, inst=STORE_FAST(arg=3, lineno=580)
12-22 13:04 DEBUG    stack ['$phi62.0', '$phi62.1']
12-22 13:04 DEBUG    dispatch pc=64, inst=LOAD_FAST(arg=3, lineno=581)
12-22 13:04 DEBUG    stack ['$phi62.0']
12-22 13:04 DEBUG    dispatch pc=66, inst=LOAD_METHOD(arg=6, lineno=581)
12-22 13:04 DEBUG    stack ['$phi62.0', '$view64.2']
12-22 13:04 DEBUG    dispatch pc=68, inst=CALL_METHOD(arg=0, lineno=581)
12-22 13:04 DEBUG    stack ['$phi62.0', '$66load_method.3']
12-22 13:04 DEBUG    dispatch pc=70, inst=STORE_FAST(arg=4, lineno=581)
12-22 13:04 DEBUG    stack ['$phi62.0', '$68call_method.4']
12-22 13:04 DEBUG    dispatch pc=72, inst=LOAD_DEREF(arg=1, lineno=582)
12-22 13:04 DEBUG    stack ['$phi62.0']
12-22 13:04 DEBUG    dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=582)
12-22 13:04 DEBUG    stack ['$phi62.0', '$72load_deref.5']
12-22 13:04 DEBUG    dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=582)
12-22 13:04 DEBUG    stack ['$phi62.0', '$72load_deref.5', '$v74.6']
12-22 13:04 DEBUG    dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=88, lineno=582)
12-22 13:04 DEBUG    stack ['$phi62.0', '$76call_function.7']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=80, stack=('$phi62.0',), blockstack=(), npush=0), Edge(pc=88, stack=('$phi62.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=88 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi80.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=80 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=583)
12-22 13:04 DEBUG    stack ['$phi80.0']
12-22 13:04 DEBUG    dispatch pc=82, inst=ROT_TWO(arg=None, lineno=583)
12-22 13:04 DEBUG    stack ['$phi80.0', '$v80.1']
12-22 13:04 DEBUG    dispatch pc=84, inst=POP_TOP(arg=None, lineno=583)
12-22 13:04 DEBUG    stack ['$v80.1', '$phi80.0']
12-22 13:04 DEBUG    dispatch pc=86, inst=RETURN_VALUE(arg=None, lineno=583)
12-22 13:04 DEBUG    stack ['$v80.1']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=88 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi88.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=88 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=88, inst=LOAD_DEREF(arg=0, lineno=584)
12-22 13:04 DEBUG    stack ['$phi88.0']
12-22 13:04 DEBUG    dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=584)
12-22 13:04 DEBUG    stack ['$phi88.0', '$88load_deref.1']
12-22 13:04 DEBUG    dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=584)
12-22 13:04 DEBUG    stack ['$phi88.0', '$88load_deref.1', '$v90.2']
12-22 13:04 DEBUG    dispatch pc=94, inst=CALL_FUNCTION(arg=2, lineno=584)
12-22 13:04 DEBUG    stack ['$phi88.0', '$88load_deref.1', '$v90.2', '$max_value92.3']
12-22 13:04 DEBUG    dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=60, lineno=584)
12-22 13:04 DEBUG    stack ['$phi88.0', '$94call_function.4']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=98, stack=('$phi88.0',), blockstack=(), npush=0), Edge(pc=60, stack=('$phi88.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=60 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi98.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=98 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=585)
12-22 13:04 DEBUG    stack ['$phi98.0']
12-22 13:04 DEBUG    dispatch pc=100, inst=STORE_FAST(arg=2, lineno=585)
12-22 13:04 DEBUG    stack ['$phi98.0', '$v98.1']
12-22 13:04 DEBUG    dispatch pc=102, inst=JUMP_ABSOLUTE(arg=60, lineno=585)
12-22 13:04 DEBUG    stack ['$phi98.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=60, stack=('$phi98.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=60 nstack_initial=1), State(pc_initial=60 nstack_initial=1)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=60 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=1): {'$phi60.0'},
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=88 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=104 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi60.0': State(pc_initial=56 nstack_initial=0),
 '$phi62.1': State(pc_initial=60 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi88.0', State(pc_initial=88 nstack_initial=1)),
                          ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi62.0': {('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi88.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi98.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
12-22 13:04 DEBUG    keep phismap: {'$phi60.0': {('$58get_iter.1', State(pc_initial=56 nstack_initial=0))},
 '$phi62.1': {('$60for_iter.2', State(pc_initial=60 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=56 nstack_initial=0): {'$phi60.0': '$58get_iter.1'},
             State(pc_initial=60 nstack_initial=1): {'$phi62.1': '$60for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'res': '$const14.1'}), (16, {'func': '$12load_global.0', 'args': ['$const14.1'], 'res': '$16call_function.2'}), (18, {'exc': '$16call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3'}), (30, {'res': '$30load_global.4'}), (32, {'res': '$it32.5'}), (34, {'func': '$30load_global.4', 'args': ['$it32.5'], 'res': '$34call_function.6'}), (36, {'item': '$34call_function.6', 'res': '$36load_method.7'}), (38, {'res': '$const38.8'}), (40, {'func': '$36load_method.7', 'args': ['$const38.8'], 'res': '$40call_method.9'}), (42, {'value': '$40call_method.9'}), (44, {'res': '$44load_deref.10'}), (46, {'res': '$max_value46.11'}), (48, {'func': '$44load_deref.10', 'args': ['$max_value46.11'], 'res': '$48call_function.12'}), (50, {'pred': '$48call_function.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$max_value52.0'}), (54, {'retval': '$max_value52.0', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$it56.0'}), (58, {'value': '$it56.0', 'res': '$58get_iter.1'})), outgoing_phis={'$phi60.0': '$58get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$58get_iter.1',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=60 nstack_initial=1):
AdaptBlockInfo(insts=((60, {'iterator': '$phi60.0', 'pair': '$60for_iter.1', 'indval': '$60for_iter.2', 'pred': '$60for_iter.3'}),), outgoing_phis={'$phi62.1': '$60for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 62: ('$phi60.0', '$60for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'value': '$phi62.1'}), (64, {'res': '$view64.2'}), (66, {'item': '$view64.2', 'res': '$66load_method.3'}), (68, {'func': '$66load_method.3', 'args': [], 'res': '$68call_method.4'}), (70, {'value': '$68call_method.4'}), (72, {'res': '$72load_deref.5'}), (74, {'res': '$v74.6'}), (76, {'func': '$72load_deref.5', 'args': ['$v74.6'], 'res': '$76call_function.7'}), (78, {'pred': '$76call_function.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi62.0',), 88: ('$phi62.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$v80.1'}), (86, {'retval': '$v80.1', 'castval': '$86return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=88 nstack_initial=1):
AdaptBlockInfo(insts=((88, {'res': '$88load_deref.1'}), (90, {'res': '$v90.2'}), (92, {'res': '$max_value92.3'}), (94, {'func': '$88load_deref.1', 'args': ['$v90.2', '$max_value92.3'], 'res': '$94call_function.4'}), (96, {'pred': '$94call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi88.0',), 60: ('$phi88.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$v98.1'}), (100, {'value': '$v98.1'}), (102, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$phi98.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$max_value104.0'}), (106, {'retval': '$max_value104.0', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1']
    $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1']
    raise $16call_function.2                 ['$16call_function.2']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8 = const(int, 0)               ['$const38.8']
    max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x000001AEF18B5AF0>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 60                   ['$96pred']
label 98:
    max_value = v                            ['max_value', 'v']
    jump 60                                  []
label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=a, attr=size)
12-22 13:04 DEBUG    on stmt: $const6.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
12-22 13:04 DEBUG    on stmt: bool10 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $10pred, 12, 20
12-22 13:04 DEBUG    ==== SSA block analysis pass on 12
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
12-22 13:04 DEBUG    on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
12-22 13:04 DEBUG    ==== SSA block analysis pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: $20load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
12-22 13:04 DEBUG    on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $30load_global.4 = global(next: <built-in function next>)
12-22 13:04 DEBUG    on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
12-22 13:04 DEBUG    on stmt: $const38.8 = const(int, 0)
12-22 13:04 DEBUG    on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
12-22 13:04 DEBUG    on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $50pred, 52, 56
12-22 13:04 DEBUG    ==== SSA block analysis pass on 52
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: $54return_value.1 = cast(value=max_value)
12-22 13:04 DEBUG    on stmt: return $54return_value.1
12-22 13:04 DEBUG    ==== SSA block analysis pass on 56
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: $58get_iter.1 = getiter(value=it)
12-22 13:04 DEBUG    on stmt: $phi60.0 = $58get_iter.1
12-22 13:04 DEBUG    on stmt: jump 60
12-22 13:04 DEBUG    ==== SSA block analysis pass on 60
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: $60for_iter.1 = iternext(value=$phi60.0)
12-22 13:04 DEBUG    on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
12-22 13:04 DEBUG    on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi62.1 = $60for_iter.2
12-22 13:04 DEBUG    on stmt: branch $60for_iter.3, 62, 104
12-22 13:04 DEBUG    ==== SSA block analysis pass on 62
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: view = $phi62.1
12-22 13:04 DEBUG    on stmt: $66load_method.3 = getattr(value=view, attr=item)
12-22 13:04 DEBUG    on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
12-22 13:04 DEBUG    on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool78 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $78pred, 80, 88
12-22 13:04 DEBUG    ==== SSA block analysis pass on 80
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: $86return_value.2 = cast(value=v)
12-22 13:04 DEBUG    on stmt: return $86return_value.2
12-22 13:04 DEBUG    ==== SSA block analysis pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x000001AEF18B5AF0>)
12-22 13:04 DEBUG    on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool96 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $96pred, 98, 105
12-22 13:04 DEBUG    ==== SSA block analysis pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: max_value = v
12-22 13:04 DEBUG    on stmt: jump 105
12-22 13:04 DEBUG    ==== SSA block analysis pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: $106return_value.1 = cast(value=max_value)
12-22 13:04 DEBUG    on stmt: return $106return_value.1
12-22 13:04 DEBUG    ==== SSA block analysis pass on 105
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1249B670>
12-22 13:04 DEBUG    on stmt: jump 60
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$106return_value.1': [<numba.core.ir.Assign object at 0x000001AF1244F670>],
             '$10pred': [<numba.core.ir.Assign object at 0x000001AF124943D0>],
             '$12load_global.0': [<numba.core.ir.Assign object at 0x000001AF124A7820>],
             '$16call_function.2': [<numba.core.ir.Assign object at 0x000001AF1241ED30>],
             '$20load_global.0': [<numba.core.ir.Assign object at 0x000001AF1241E430>],
             '$22load_method.1': [<numba.core.ir.Assign object at 0x000001AF1241E610>],
             '$30load_global.4': [<numba.core.ir.Assign object at 0x000001AF123FA970>],
             '$34call_function.6': [<numba.core.ir.Assign object at 0x000001AF123FA610>],
             '$36load_method.7': [<numba.core.ir.Assign object at 0x000001AF123FAF40>],
             '$44load_deref.10': [<numba.core.ir.Assign object at 0x000001AF123FAA60>],
             '$48call_function.12': [<numba.core.ir.Assign object at 0x000001AF1236B0D0>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x000001AF12448AC0>],
             '$50pred': [<numba.core.ir.Assign object at 0x000001AF1236B280>],
             '$54return_value.1': [<numba.core.ir.Assign object at 0x000001AF12351B50>],
             '$58get_iter.1': [<numba.core.ir.Assign object at 0x000001AF12351700>],
             '$60for_iter.1': [<numba.core.ir.Assign object at 0x000001AF123D2400>],
             '$60for_iter.2': [<numba.core.ir.Assign object at 0x000001AF123D2820>],
             '$60for_iter.3': [<numba.core.ir.Assign object at 0x000001AF123D2970>],
             '$66load_method.3': [<numba.core.ir.Assign object at 0x000001AF1237EDC0>],
             '$72load_deref.5': [<numba.core.ir.Assign object at 0x000001AF1237E9D0>],
             '$76call_function.7': [<numba.core.ir.Assign object at 0x000001AF123D3E80>],
             '$78pred': [<numba.core.ir.Assign object at 0x000001AF123D39D0>],
             '$86return_value.2': [<numba.core.ir.Assign object at 0x000001AF123D3AC0>],
             '$88load_deref.1': [<numba.core.ir.Assign object at 0x000001AF123D3F10>],
             '$8compare_op.3': [<numba.core.ir.Assign object at 0x000001AF124487C0>],
             '$94call_function.4': [<numba.core.ir.Assign object at 0x000001AF1244EAC0>],
             '$96pred': [<numba.core.ir.Assign object at 0x000001AF1244F400>],
             '$const14.1': [<numba.core.ir.Assign object at 0x000001AF12484E20>],
             '$const38.8': [<numba.core.ir.Assign object at 0x000001AF123FA730>],
             '$const6.2': [<numba.core.ir.Assign object at 0x000001AF124484C0>],
             '$phi60.0': [<numba.core.ir.Assign object at 0x000001AF123FA2B0>],
             '$phi62.1': [<numba.core.ir.Assign object at 0x000001AF123D2B50>],
             'a': [<numba.core.ir.Assign object at 0x000001AF12448FD0>],
             'bool10': [<numba.core.ir.Assign object at 0x000001AF124941F0>],
             'bool50': [<numba.core.ir.Assign object at 0x000001AF1236B310>],
             'bool78': [<numba.core.ir.Assign object at 0x000001AF123D3C40>],
             'bool96': [<numba.core.ir.Assign object at 0x000001AF1244EA60>],
             'it': [<numba.core.ir.Assign object at 0x000001AF123FA3D0>],
             'max_value': [<numba.core.ir.Assign object at 0x000001AF123FA910>,
                           <numba.core.ir.Assign object at 0x000001AF1244F310>],
             'v': [<numba.core.ir.Assign object at 0x000001AF1237E490>],
             'view': [<numba.core.ir.Assign object at 0x000001AF1237E640>]})
12-22 13:04 DEBUG    SSA violators {'max_value'}
12-22 13:04 DEBUG    Fix SSA violator on var max_value
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=a, attr=size)
12-22 13:04 DEBUG    on stmt: $const6.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
12-22 13:04 DEBUG    on stmt: bool10 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $10pred, 12, 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 12
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
12-22 13:04 DEBUG    on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $20load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
12-22 13:04 DEBUG    on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $30load_global.4 = global(next: <built-in function next>)
12-22 13:04 DEBUG    on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
12-22 13:04 DEBUG    on stmt: $const38.8 = const(int, 0)
12-22 13:04 DEBUG    on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    first assign: max_value
12-22 13:04 DEBUG    replaced with: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
12-22 13:04 DEBUG    on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $50pred, 52, 56
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 52
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $54return_value.1 = cast(value=max_value)
12-22 13:04 DEBUG    on stmt: return $54return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 56
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $58get_iter.1 = getiter(value=it)
12-22 13:04 DEBUG    on stmt: $phi60.0 = $58get_iter.1
12-22 13:04 DEBUG    on stmt: jump 60
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 60
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $60for_iter.1 = iternext(value=$phi60.0)
12-22 13:04 DEBUG    on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
12-22 13:04 DEBUG    on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi62.1 = $60for_iter.2
12-22 13:04 DEBUG    on stmt: branch $60for_iter.3, 62, 104
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 62
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: view = $phi62.1
12-22 13:04 DEBUG    on stmt: $66load_method.3 = getattr(value=view, attr=item)
12-22 13:04 DEBUG    on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
12-22 13:04 DEBUG    on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool78 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $78pred, 80, 88
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 80
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $86return_value.2 = cast(value=v)
12-22 13:04 DEBUG    on stmt: return $86return_value.2
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x000001AEF18B5AF0>)
12-22 13:04 DEBUG    on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool96 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $96pred, 98, 105
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: max_value = v
12-22 13:04 DEBUG    replaced with: max_value.1 = v
12-22 13:04 DEBUG    on stmt: jump 105
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $106return_value.1 = cast(value=max_value)
12-22 13:04 DEBUG    on stmt: return $106return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 105
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: jump 60
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {20: [<numba.core.ir.Assign object at 0x000001AF1249D6A0>],
             98: [<numba.core.ir.Assign object at 0x000001AF1249D670>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=a, attr=size)
12-22 13:04 DEBUG    on stmt: $const6.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
12-22 13:04 DEBUG    on stmt: bool10 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $10pred, 12, 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 12
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
12-22 13:04 DEBUG    on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $20load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
12-22 13:04 DEBUG    on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $30load_global.4 = global(next: <built-in function next>)
12-22 13:04 DEBUG    on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
12-22 13:04 DEBUG    on stmt: $const38.8 = const(int, 0)
12-22 13:04 DEBUG    on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
12-22 13:04 DEBUG    on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='max_value' stmt=$48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool50 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $50pred, 52, 56
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 52
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $54return_value.1 = cast(value=max_value)
12-22 13:04 DEBUG    find_def var='max_value' stmt=$54return_value.1 = cast(value=max_value)
12-22 13:04 DEBUG    find_def_from_top label 52
12-22 13:04 DEBUG    idom 20 from label 52
12-22 13:04 DEBUG    find_def_from_bottom label 20
12-22 13:04 DEBUG    on stmt: return $54return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 56
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $58get_iter.1 = getiter(value=it)
12-22 13:04 DEBUG    on stmt: $phi60.0 = $58get_iter.1
12-22 13:04 DEBUG    on stmt: jump 60
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 60
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $60for_iter.1 = iternext(value=$phi60.0)
12-22 13:04 DEBUG    on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
12-22 13:04 DEBUG    on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi62.1 = $60for_iter.2
12-22 13:04 DEBUG    on stmt: branch $60for_iter.3, 62, 104
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 62
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: view = $phi62.1
12-22 13:04 DEBUG    on stmt: $66load_method.3 = getattr(value=view, attr=item)
12-22 13:04 DEBUG    on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
12-22 13:04 DEBUG    on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool78 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $78pred, 80, 88
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 80
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $86return_value.2 = cast(value=v)
12-22 13:04 DEBUG    on stmt: return $86return_value.2
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 88
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x000001AEF18B5AF0>)
12-22 13:04 DEBUG    on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='max_value' stmt=$94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 88
12-22 13:04 DEBUG    idom 62 from label 88
12-22 13:04 DEBUG    find_def_from_bottom label 62
12-22 13:04 DEBUG    find_def_from_top label 62
12-22 13:04 DEBUG    idom 60 from label 62
12-22 13:04 DEBUG    find_def_from_bottom label 60
12-22 13:04 DEBUG    find_def_from_top label 60
12-22 13:04 DEBUG    insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 60
12-22 13:04 DEBUG    find_def_from_bottom label 56
12-22 13:04 DEBUG    find_def_from_top label 56
12-22 13:04 DEBUG    idom 20 from label 56
12-22 13:04 DEBUG    find_def_from_bottom label 20
12-22 13:04 DEBUG    incoming_def max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_bottom label 105
12-22 13:04 DEBUG    find_def_from_top label 105
12-22 13:04 DEBUG    insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 105
12-22 13:04 DEBUG    find_def_from_bottom label 88
12-22 13:04 DEBUG    find_def_from_top label 88
12-22 13:04 DEBUG    idom 62 from label 88
12-22 13:04 DEBUG    find_def_from_bottom label 62
12-22 13:04 DEBUG    find_def_from_top label 62
12-22 13:04 DEBUG    idom 60 from label 62
12-22 13:04 DEBUG    find_def_from_bottom label 60
12-22 13:04 DEBUG    incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[56])
12-22 13:04 DEBUG    find_def_from_bottom label 98
12-22 13:04 DEBUG    incoming_def max_value.1 = v
12-22 13:04 DEBUG    incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[88, 98])
12-22 13:04 DEBUG    replaced with: $94call_function.4 = call $88load_deref.1(v, max_value.2, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool96 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $96pred, 98, 105
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 98
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: max_value.1 = v
12-22 13:04 DEBUG    on stmt: jump 105
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: $106return_value.1 = cast(value=max_value)
12-22 13:04 DEBUG    find_def var='max_value' stmt=$106return_value.1 = cast(value=max_value)
12-22 13:04 DEBUG    find_def_from_top label 104
12-22 13:04 DEBUG    idom 60 from label 104
12-22 13:04 DEBUG    find_def_from_bottom label 60
12-22 13:04 DEBUG    replaced with: $106return_value.1 = cast(value=max_value.2)
12-22 13:04 DEBUG    on stmt: return $106return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 105
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1248E2E0>
12-22 13:04 DEBUG    on stmt: jump 60
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4643)
           2	LOAD_FAST(arg=1, lineno=4644)
           4	LOAD_FAST(arg=0, lineno=4644)
           6	LOAD_ATTR(arg=0, lineno=4644)
           8	LOAD_CONST(arg=1, lineno=4644)
          10	BINARY_SUBTRACT(arg=None, lineno=4644)
          12	COMPARE_OP(arg=4, lineno=4644)
          14	POP_JUMP_IF_TRUE(arg=28, lineno=4644)
          16	LOAD_FAST(arg=1, lineno=4644)
          18	LOAD_FAST(arg=0, lineno=4644)
          20	LOAD_ATTR(arg=0, lineno=4644)
          22	UNARY_NEGATIVE(arg=None, lineno=4644)
          24	COMPARE_OP(arg=0, lineno=4644)
          26	POP_JUMP_IF_FALSE(arg=36, lineno=4644)
>         28	LOAD_GLOBAL(arg=1, lineno=4645)
          30	LOAD_CONST(arg=2, lineno=4645)
          32	CALL_FUNCTION(arg=1, lineno=4645)
          34	RAISE_VARARGS(arg=1, lineno=4645)
>         36	LOAD_FAST(arg=0, lineno=4646)
          38	LOAD_METHOD(arg=2, lineno=4646)
          40	CALL_METHOD(arg=0, lineno=4646)
          42	LOAD_FAST(arg=1, lineno=4646)
          44	BINARY_SUBSCR(arg=None, lineno=4646)
          46	RETURN_VALUE(arg=None, lineno=4646)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4643)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=4644)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4644)
12-22 13:04 DEBUG    stack ['$indices2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=4644)
12-22 13:04 DEBUG    stack ['$indices2.0', '$a4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=4644)
12-22 13:04 DEBUG    stack ['$indices2.0', '$6load_attr.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=4644)
12-22 13:04 DEBUG    stack ['$indices2.0', '$6load_attr.2', '$const8.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=COMPARE_OP(arg=4, lineno=4644)
12-22 13:04 DEBUG    stack ['$indices2.0', '$10binary_subtract.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=28, lineno=4644)
12-22 13:04 DEBUG    stack ['$12compare_op.5']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=16 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4644)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4644)
12-22 13:04 DEBUG    stack ['$indices16.0']
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=4644)
12-22 13:04 DEBUG    stack ['$indices16.0', '$a18.1']
12-22 13:04 DEBUG    dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=4644)
12-22 13:04 DEBUG    stack ['$indices16.0', '$20load_attr.2']
12-22 13:04 DEBUG    dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=4644)
12-22 13:04 DEBUG    stack ['$indices16.0', '$22unary_negative.3']
12-22 13:04 DEBUG    dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=36, lineno=4644)
12-22 13:04 DEBUG    stack ['$24compare_op.4']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=28 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=4645)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=4645)
12-22 13:04 DEBUG    stack ['$28load_global.0']
12-22 13:04 DEBUG    dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=4645)
12-22 13:04 DEBUG    stack ['$28load_global.0', '$const30.1']
12-22 13:04 DEBUG    dispatch pc=34, inst=RAISE_VARARGS(arg=1, lineno=4645)
12-22 13:04 DEBUG    stack ['$32call_function.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=36 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=36 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=4646)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=38, inst=LOAD_METHOD(arg=2, lineno=4646)
12-22 13:04 DEBUG    stack ['$a36.0']
12-22 13:04 DEBUG    dispatch pc=40, inst=CALL_METHOD(arg=0, lineno=4646)
12-22 13:04 DEBUG    stack ['$38load_method.1']
12-22 13:04 DEBUG    dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=4646)
12-22 13:04 DEBUG    stack ['$40call_method.2']
12-22 13:04 DEBUG    dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=4646)
12-22 13:04 DEBUG    stack ['$40call_method.2', '$indices42.3']
12-22 13:04 DEBUG    dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4646)
12-22 13:04 DEBUG    stack ['$44binary_subscr.4']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$indices2.0'}), (4, {'res': '$a4.1'}), (6, {'item': '$a4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'lhs': '$6load_attr.2', 'rhs': '$const8.3', 'res': '$10binary_subtract.4'}), (12, {'lhs': '$indices2.0', 'rhs': '$10binary_subtract.4', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 28: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$indices16.0'}), (18, {'res': '$a18.1'}), (20, {'item': '$a18.1', 'res': '$20load_attr.2'}), (22, {'value': '$20load_attr.2', 'res': '$22unary_negative.3'}), (24, {'lhs': '$indices16.0', 'rhs': '$22unary_negative.3', 'res': '$24compare_op.4'}), (26, {'pred': '$24compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 36: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$28load_global.0'}), (30, {'res': '$const30.1'}), (32, {'func': '$28load_global.0', 'args': ['$const30.1'], 'res': '$32call_function.2'}), (34, {'exc': '$32call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$a36.0'}), (38, {'item': '$a36.0', 'res': '$38load_method.1'}), (40, {'func': '$38load_method.1', 'args': [], 'res': '$40call_method.2'}), (42, {'res': '$indices42.3'}), (44, {'index': '$indices42.3', 'target': '$40call_method.2', 'res': '$44binary_subscr.4'}), (46, {'retval': '$44binary_subscr.4', 'castval': '$46return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3 = const(int, 1)                ['$const8.3']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4644),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4644),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1 = const(str, Index out of bounds) ['$const30.1']
    $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4645)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1']
    raise $32call_function.2                 ['$32call_function.2']
label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF123DBA90>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: indices = arg(1, name=indices)
12-22 13:04 DEBUG    on stmt: $6load_attr.2 = getattr(value=a, attr=size)
12-22 13:04 DEBUG    on stmt: $const8.3 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $10binary_subtract.4 = $6load_attr.2 - $const8.3
12-22 13:04 DEBUG    on stmt: $12compare_op.5 = indices > $10binary_subtract.4
12-22 13:04 DEBUG    on stmt: bool14 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4644),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $14pred, 28, 16
12-22 13:04 DEBUG    ==== SSA block analysis pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF123DBA90>
12-22 13:04 DEBUG    on stmt: $20load_attr.2 = getattr(value=a, attr=size)
12-22 13:04 DEBUG    on stmt: $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2)
12-22 13:04 DEBUG    on stmt: $24compare_op.4 = indices < $22unary_negative.3
12-22 13:04 DEBUG    on stmt: bool26 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4644),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $26pred, 28, 36
12-22 13:04 DEBUG    ==== SSA block analysis pass on 28
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF123DBA90>
12-22 13:04 DEBUG    on stmt: $28load_global.0 = global(IndexError: <class 'IndexError'>)
12-22 13:04 DEBUG    on stmt: $const30.1 = const(str, Index out of bounds)
12-22 13:04 DEBUG    on stmt: $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4645)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
12-22 13:04 DEBUG    ==== SSA block analysis pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF123DBA90>
12-22 13:04 DEBUG    on stmt: $38load_method.1 = getattr(value=a, attr=ravel)
12-22 13:04 DEBUG    on stmt: $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $46return_value.5 = cast(value=$44binary_subscr.4)
12-22 13:04 DEBUG    on stmt: return $46return_value.5
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [<numba.core.ir.Assign object at 0x000001AF12400D00>],
             '$12compare_op.5': [<numba.core.ir.Assign object at 0x000001AF12400FD0>],
             '$14pred': [<numba.core.ir.Assign object at 0x000001AF123F92B0>],
             '$20load_attr.2': [<numba.core.ir.Assign object at 0x000001AF123F96D0>],
             '$22unary_negative.3': [<numba.core.ir.Assign object at 0x000001AF123F9850>],
             '$24compare_op.4': [<numba.core.ir.Assign object at 0x000001AF123F99D0>],
             '$26pred': [<numba.core.ir.Assign object at 0x000001AF123F9C70>],
             '$28load_global.0': [<numba.core.ir.Assign object at 0x000001AF123F9E50>],
             '$32call_function.2': [<numba.core.ir.Assign object at 0x000001AF123F81C0>],
             '$38load_method.1': [<numba.core.ir.Assign object at 0x000001AF123F85B0>],
             '$40call_method.2': [<numba.core.ir.Assign object at 0x000001AF123F8760>],
             '$44binary_subscr.4': [<numba.core.ir.Assign object at 0x000001AF123F89D0>],
             '$46return_value.5': [<numba.core.ir.Assign object at 0x000001AF123F8B50>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x000001AF1242F1C0>],
             '$const30.1': [<numba.core.ir.Assign object at 0x000001AF123F9FD0>],
             '$const8.3': [<numba.core.ir.Assign object at 0x000001AF12400E80>],
             'a': [<numba.core.ir.Assign object at 0x000001AF1242FA90>],
             'bool14': [<numba.core.ir.Assign object at 0x000001AF123F9190>],
             'bool26': [<numba.core.ir.Assign object at 0x000001AF123F9B50>],
             'indices': [<numba.core.ir.Assign object at 0x000001AF1242F610>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=2228)
           2	LOAD_FAST(arg=0, lineno=2230)
           4	LOAD_METHOD(arg=0, lineno=2230)
           6	LOAD_FAST(arg=0, lineno=2230)
           8	LOAD_ATTR(arg=1, lineno=2230)
          10	CALL_METHOD(arg=1, lineno=2230)
          12	RETURN_VALUE(arg=None, lineno=2230)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=2228)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2230)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=2230)
12-22 13:04 DEBUG    stack ['$ary2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2230)
12-22 13:04 DEBUG    stack ['$4load_method.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=2230)
12-22 13:04 DEBUG    stack ['$4load_method.1', '$ary6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=2230)
12-22 13:04 DEBUG    stack ['$4load_method.1', '$8load_attr.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=2230)
12-22 13:04 DEBUG    stack ['$10call_method.4']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'res': '$ary6.2'}), (8, {'item': '$ary6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2230)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF124DE760>
12-22 13:04 DEBUG    on stmt: ary = arg(0, name=ary)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=ary, attr=reshape)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=ary, attr=size)
12-22 13:04 DEBUG    on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2230)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $12return_value.5 = cast(value=$10call_method.4)
12-22 13:04 DEBUG    on stmt: return $12return_value.5
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10call_method.4': [<numba.core.ir.Assign object at 0x000001AF123E13A0>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x000001AF124D6D60>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x000001AF123E18B0>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x000001AF123E1640>],
             'ary': [<numba.core.ir.Assign object at 0x000001AF123F8C70>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=2044)
           2	LOAD_CONST(arg=1, lineno=2045)
           4	STORE_FAST(arg=2, lineno=2045)
           6	LOAD_CONST(arg=2, lineno=2046)
           8	STORE_FAST(arg=3, lineno=2046)
          10	LOAD_GLOBAL(arg=0, lineno=2047)
          12	LOAD_FAST(arg=1, lineno=2047)
          14	CALL_FUNCTION(arg=1, lineno=2047)
          16	GET_ITER(arg=None, lineno=2047)
>         18	FOR_ITER(arg=38, lineno=2047)
          20	UNPACK_SEQUENCE(arg=2, lineno=2047)
          22	STORE_FAST(arg=4, lineno=2047)
          24	STORE_FAST(arg=5, lineno=2047)
          26	LOAD_FAST(arg=5, lineno=2048)
          28	LOAD_CONST(arg=1, lineno=2048)
          30	COMPARE_OP(arg=0, lineno=2048)
          32	POP_JUMP_IF_FALSE(arg=48, lineno=2048)
          34	LOAD_FAST(arg=2, lineno=2049)
          36	LOAD_CONST(arg=2, lineno=2049)
          38	INPLACE_ADD(arg=None, lineno=2049)
          40	STORE_FAST(arg=2, lineno=2049)
          42	LOAD_FAST(arg=4, lineno=2050)
          44	STORE_FAST(arg=6, lineno=2050)
          46	JUMP_ABSOLUTE(arg=18, lineno=2050)
>         48	LOAD_FAST(arg=3, lineno=2052)
          50	LOAD_FAST(arg=5, lineno=2052)
          52	INPLACE_MULTIPLY(arg=None, lineno=2052)
          54	STORE_FAST(arg=3, lineno=2052)
          56	JUMP_ABSOLUTE(arg=18, lineno=2052)
>         58	LOAD_FAST(arg=2, lineno=2054)
          60	LOAD_CONST(arg=1, lineno=2054)
          62	COMPARE_OP(arg=2, lineno=2054)
          64	POP_JUMP_IF_FALSE(arg=84, lineno=2054)
          66	LOAD_FAST(arg=0, lineno=2055)
          68	LOAD_FAST(arg=3, lineno=2055)
          70	COMPARE_OP(arg=3, lineno=2055)
          72	POP_JUMP_IF_FALSE(arg=164, lineno=2055)
          74	LOAD_GLOBAL(arg=1, lineno=2056)
          76	LOAD_CONST(arg=3, lineno=2056)
          78	CALL_FUNCTION(arg=1, lineno=2056)
          80	RAISE_VARARGS(arg=1, lineno=2056)
          82	JUMP_FORWARD(arg=80, lineno=2056)
>         84	LOAD_FAST(arg=2, lineno=2058)
          86	LOAD_CONST(arg=2, lineno=2058)
          88	COMPARE_OP(arg=2, lineno=2058)
          90	POP_JUMP_IF_FALSE(arg=156, lineno=2058)
          92	LOAD_FAST(arg=3, lineno=2060)
          94	LOAD_CONST(arg=1, lineno=2060)
          96	COMPARE_OP(arg=2, lineno=2060)
          98	POP_JUMP_IF_FALSE(arg=114, lineno=2060)
         100	LOAD_CONST(arg=1, lineno=2061)
         102	STORE_FAST(arg=7, lineno=2061)
         104	LOAD_FAST(arg=0, lineno=2062)
         106	LOAD_CONST(arg=1, lineno=2062)
         108	COMPARE_OP(arg=2, lineno=2062)
         110	STORE_FAST(arg=8, lineno=2062)
         112	JUMP_FORWARD(arg=20, lineno=2062)
>        114	LOAD_FAST(arg=0, lineno=2064)
         116	LOAD_FAST(arg=3, lineno=2064)
         118	BINARY_FLOOR_DIVIDE(arg=None, lineno=2064)
         120	STORE_FAST(arg=7, lineno=2064)
         122	LOAD_FAST(arg=0, lineno=2065)
         124	LOAD_FAST(arg=3, lineno=2065)
         126	BINARY_MODULO(arg=None, lineno=2065)
         128	LOAD_CONST(arg=1, lineno=2065)
         130	COMPARE_OP(arg=2, lineno=2065)
         132	STORE_FAST(arg=8, lineno=2065)
>        134	LOAD_FAST(arg=8, lineno=2066)
         136	POP_JUMP_IF_TRUE(arg=146, lineno=2066)
         138	LOAD_GLOBAL(arg=1, lineno=2067)
         140	LOAD_CONST(arg=3, lineno=2067)
         142	CALL_FUNCTION(arg=1, lineno=2067)
         144	RAISE_VARARGS(arg=1, lineno=2067)
>        146	LOAD_FAST(arg=7, lineno=2068)
         148	LOAD_FAST(arg=1, lineno=2068)
         150	LOAD_FAST(arg=6, lineno=2068)
         152	STORE_SUBSCR(arg=None, lineno=2068)
         154	JUMP_FORWARD(arg=8, lineno=2068)
>        156	LOAD_GLOBAL(arg=1, lineno=2071)
         158	LOAD_CONST(arg=4, lineno=2071)
         160	CALL_FUNCTION(arg=1, lineno=2071)
         162	RAISE_VARARGS(arg=1, lineno=2071)
>        164	LOAD_CONST(arg=0, lineno=2071)
         166	RETURN_VALUE(arg=None, lineno=2071)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=2044)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=2045)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=STORE_FAST(arg=2, lineno=2045)
12-22 13:04 DEBUG    stack ['$const2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_CONST(arg=2, lineno=2046)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=8, inst=STORE_FAST(arg=3, lineno=2046)
12-22 13:04 DEBUG    stack ['$const6.1']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=2047)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=2047)
12-22 13:04 DEBUG    stack ['$10load_global.2']
12-22 13:04 DEBUG    dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=2047)
12-22 13:04 DEBUG    stack ['$10load_global.2', '$shape12.3']
12-22 13:04 DEBUG    dispatch pc=16, inst=GET_ITER(arg=None, lineno=2047)
12-22 13:04 DEBUG    stack ['$14call_function.4']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=18, stack=('$16get_iter.5',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi18.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=18 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=18, inst=FOR_ITER(arg=38, lineno=2047)
12-22 13:04 DEBUG    stack ['$phi18.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=58 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=2054)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=2054)
12-22 13:04 DEBUG    stack ['$num_neg_value58.0']
12-22 13:04 DEBUG    dispatch pc=62, inst=COMPARE_OP(arg=2, lineno=2054)
12-22 13:04 DEBUG    stack ['$num_neg_value58.0', '$const60.1']
12-22 13:04 DEBUG    dispatch pc=64, inst=POP_JUMP_IF_FALSE(arg=84, lineno=2054)
12-22 13:04 DEBUG    stack ['$62compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=84, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=20 nstack_initial=2), State(pc_initial=66 nstack_initial=0), State(pc_initial=84 nstack_initial=0)])
12-22 13:04 DEBUG    stack: ['$phi20.0', '$phi20.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=20 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=20, inst=UNPACK_SEQUENCE(arg=2, lineno=2047)
12-22 13:04 DEBUG    stack ['$phi20.0', '$phi20.1']
12-22 13:04 DEBUG    dispatch pc=22, inst=STORE_FAST(arg=4, lineno=2047)
12-22 13:04 DEBUG    stack ['$phi20.0', '$20unpack_sequence.3', '$20unpack_sequence.2']
12-22 13:04 DEBUG    dispatch pc=24, inst=STORE_FAST(arg=5, lineno=2047)
12-22 13:04 DEBUG    stack ['$phi20.0', '$20unpack_sequence.3']
12-22 13:04 DEBUG    dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=2048)
12-22 13:04 DEBUG    stack ['$phi20.0']
12-22 13:04 DEBUG    dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=2048)
12-22 13:04 DEBUG    stack ['$phi20.0', '$s26.5']
12-22 13:04 DEBUG    dispatch pc=30, inst=COMPARE_OP(arg=0, lineno=2048)
12-22 13:04 DEBUG    stack ['$phi20.0', '$s26.5', '$const28.6']
12-22 13:04 DEBUG    dispatch pc=32, inst=POP_JUMP_IF_FALSE(arg=48, lineno=2048)
12-22 13:04 DEBUG    stack ['$phi20.0', '$30compare_op.7']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=34, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=48, stack=('$phi20.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=66 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2055)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=68, inst=LOAD_FAST(arg=3, lineno=2055)
12-22 13:04 DEBUG    stack ['$origsize66.0']
12-22 13:04 DEBUG    dispatch pc=70, inst=COMPARE_OP(arg=3, lineno=2055)
12-22 13:04 DEBUG    stack ['$origsize66.0', '$known_size68.1']
12-22 13:04 DEBUG    dispatch pc=72, inst=POP_JUMP_IF_FALSE(arg=164, lineno=2055)
12-22 13:04 DEBUG    stack ['$70compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0), Edge(pc=164, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=164 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=84 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=84, inst=LOAD_FAST(arg=2, lineno=2058)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=86, inst=LOAD_CONST(arg=2, lineno=2058)
12-22 13:04 DEBUG    stack ['$num_neg_value84.0']
12-22 13:04 DEBUG    dispatch pc=88, inst=COMPARE_OP(arg=2, lineno=2058)
12-22 13:04 DEBUG    stack ['$num_neg_value84.0', '$const86.1']
12-22 13:04 DEBUG    dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=156, lineno=2058)
12-22 13:04 DEBUG    stack ['$88compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=156, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=156 nstack_initial=0)])
12-22 13:04 DEBUG    stack: ['$phi34.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=34 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=2049)
12-22 13:04 DEBUG    stack ['$phi34.0']
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=2049)
12-22 13:04 DEBUG    stack ['$phi34.0', '$num_neg_value34.1']
12-22 13:04 DEBUG    dispatch pc=38, inst=INPLACE_ADD(arg=None, lineno=2049)
12-22 13:04 DEBUG    stack ['$phi34.0', '$num_neg_value34.1', '$const36.2']
12-22 13:04 DEBUG    dispatch pc=40, inst=STORE_FAST(arg=2, lineno=2049)
12-22 13:04 DEBUG    stack ['$phi34.0', '$38inplace_add.3']
12-22 13:04 DEBUG    dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=2050)
12-22 13:04 DEBUG    stack ['$phi34.0']
12-22 13:04 DEBUG    dispatch pc=44, inst=STORE_FAST(arg=6, lineno=2050)
12-22 13:04 DEBUG    stack ['$phi34.0', '$ax42.4']
12-22 13:04 DEBUG    dispatch pc=46, inst=JUMP_ABSOLUTE(arg=18, lineno=2050)
12-22 13:04 DEBUG    stack ['$phi34.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=18, stack=('$phi34.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=18 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi48.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=48 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=48, inst=LOAD_FAST(arg=3, lineno=2052)
12-22 13:04 DEBUG    stack ['$phi48.0']
12-22 13:04 DEBUG    dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=2052)
12-22 13:04 DEBUG    stack ['$phi48.0', '$known_size48.1']
12-22 13:04 DEBUG    dispatch pc=52, inst=INPLACE_MULTIPLY(arg=None, lineno=2052)
12-22 13:04 DEBUG    stack ['$phi48.0', '$known_size48.1', '$s50.2']
12-22 13:04 DEBUG    dispatch pc=54, inst=STORE_FAST(arg=3, lineno=2052)
12-22 13:04 DEBUG    stack ['$phi48.0', '$52inplace_multiply.3']
12-22 13:04 DEBUG    dispatch pc=56, inst=JUMP_ABSOLUTE(arg=18, lineno=2052)
12-22 13:04 DEBUG    stack ['$phi48.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=18, stack=('$phi48.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=74 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=74, inst=LOAD_GLOBAL(arg=1, lineno=2056)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=76, inst=LOAD_CONST(arg=3, lineno=2056)
12-22 13:04 DEBUG    stack ['$74load_global.0']
12-22 13:04 DEBUG    dispatch pc=78, inst=CALL_FUNCTION(arg=1, lineno=2056)
12-22 13:04 DEBUG    stack ['$74load_global.0', '$const76.1']
12-22 13:04 DEBUG    dispatch pc=80, inst=RAISE_VARARGS(arg=1, lineno=2056)
12-22 13:04 DEBUG    stack ['$78call_function.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=164 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=164, inst=LOAD_CONST(arg=0, lineno=2071)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=166, inst=RETURN_VALUE(arg=None, lineno=2071)
12-22 13:04 DEBUG    stack ['$const164.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=92 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=92, inst=LOAD_FAST(arg=3, lineno=2060)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=94, inst=LOAD_CONST(arg=1, lineno=2060)
12-22 13:04 DEBUG    stack ['$known_size92.0']
12-22 13:04 DEBUG    dispatch pc=96, inst=COMPARE_OP(arg=2, lineno=2060)
12-22 13:04 DEBUG    stack ['$known_size92.0', '$const94.1']
12-22 13:04 DEBUG    dispatch pc=98, inst=POP_JUMP_IF_FALSE(arg=114, lineno=2060)
12-22 13:04 DEBUG    stack ['$96compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0), Edge(pc=114, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=156 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1), State(pc_initial=100 nstack_initial=0), State(pc_initial=114 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=156 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=156, inst=LOAD_GLOBAL(arg=1, lineno=2071)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=158, inst=LOAD_CONST(arg=4, lineno=2071)
12-22 13:04 DEBUG    stack ['$156load_global.0']
12-22 13:04 DEBUG    dispatch pc=160, inst=CALL_FUNCTION(arg=1, lineno=2071)
12-22 13:04 DEBUG    stack ['$156load_global.0', '$const158.1']
12-22 13:04 DEBUG    dispatch pc=162, inst=RAISE_VARARGS(arg=1, lineno=2071)
12-22 13:04 DEBUG    stack ['$160call_function.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1), State(pc_initial=100 nstack_initial=0), State(pc_initial=114 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=100 nstack_initial=0), State(pc_initial=114 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=114 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=100 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=2061)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=102, inst=STORE_FAST(arg=7, lineno=2061)
12-22 13:04 DEBUG    stack ['$const100.0']
12-22 13:04 DEBUG    dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=2062)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=106, inst=LOAD_CONST(arg=1, lineno=2062)
12-22 13:04 DEBUG    stack ['$origsize104.1']
12-22 13:04 DEBUG    dispatch pc=108, inst=COMPARE_OP(arg=2, lineno=2062)
12-22 13:04 DEBUG    stack ['$origsize104.1', '$const106.2']
12-22 13:04 DEBUG    dispatch pc=110, inst=STORE_FAST(arg=8, lineno=2062)
12-22 13:04 DEBUG    stack ['$108compare_op.3']
12-22 13:04 DEBUG    dispatch pc=112, inst=JUMP_FORWARD(arg=20, lineno=2062)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=114 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=114, inst=LOAD_FAST(arg=0, lineno=2064)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=116, inst=LOAD_FAST(arg=3, lineno=2064)
12-22 13:04 DEBUG    stack ['$origsize114.0']
12-22 13:04 DEBUG    dispatch pc=118, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=2064)
12-22 13:04 DEBUG    stack ['$origsize114.0', '$known_size116.1']
12-22 13:04 DEBUG    dispatch pc=120, inst=STORE_FAST(arg=7, lineno=2064)
12-22 13:04 DEBUG    stack ['$118binary_floor_divide.2']
12-22 13:04 DEBUG    dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=2065)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=124, inst=LOAD_FAST(arg=3, lineno=2065)
12-22 13:04 DEBUG    stack ['$origsize122.3']
12-22 13:04 DEBUG    dispatch pc=126, inst=BINARY_MODULO(arg=None, lineno=2065)
12-22 13:04 DEBUG    stack ['$origsize122.3', '$known_size124.4']
12-22 13:04 DEBUG    dispatch pc=128, inst=LOAD_CONST(arg=1, lineno=2065)
12-22 13:04 DEBUG    stack ['$126binary_modulo.5']
12-22 13:04 DEBUG    dispatch pc=130, inst=COMPARE_OP(arg=2, lineno=2065)
12-22 13:04 DEBUG    stack ['$126binary_modulo.5', '$const128.6']
12-22 13:04 DEBUG    dispatch pc=132, inst=STORE_FAST(arg=8, lineno=2065)
12-22 13:04 DEBUG    stack ['$130compare_op.7']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=134 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=134, inst=LOAD_FAST(arg=8, lineno=2066)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=136, inst=POP_JUMP_IF_TRUE(arg=146, lineno=2066)
12-22 13:04 DEBUG    stack ['$ok134.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=146, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=138 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=138, inst=LOAD_GLOBAL(arg=1, lineno=2067)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=140, inst=LOAD_CONST(arg=3, lineno=2067)
12-22 13:04 DEBUG    stack ['$138load_global.0']
12-22 13:04 DEBUG    dispatch pc=142, inst=CALL_FUNCTION(arg=1, lineno=2067)
12-22 13:04 DEBUG    stack ['$138load_global.0', '$const140.1']
12-22 13:04 DEBUG    dispatch pc=144, inst=RAISE_VARARGS(arg=1, lineno=2067)
12-22 13:04 DEBUG    stack ['$142call_function.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=146 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=146 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=146, inst=LOAD_FAST(arg=7, lineno=2068)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=148, inst=LOAD_FAST(arg=1, lineno=2068)
12-22 13:04 DEBUG    stack ['$inferred146.0']
12-22 13:04 DEBUG    dispatch pc=150, inst=LOAD_FAST(arg=6, lineno=2068)
12-22 13:04 DEBUG    stack ['$inferred146.0', '$shape148.1']
12-22 13:04 DEBUG    dispatch pc=152, inst=STORE_SUBSCR(arg=None, lineno=2068)
12-22 13:04 DEBUG    stack ['$inferred146.0', '$shape148.1', '$neg_ax150.2']
12-22 13:04 DEBUG    dispatch pc=154, inst=JUMP_FORWARD(arg=8, lineno=2068)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=164 nstack_initial=0)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=34 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=1): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=156 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=1)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi48.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:04 DEBUG    keep phismap: {'$phi18.0': {('$16get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.5'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'value': '$const2.0'}), (6, {'res': '$const6.1'}), (8, {'value': '$const6.1'}), (10, {'res': '$10load_global.2'}), (12, {'res': '$shape12.3'}), (14, {'func': '$10load_global.2', 'args': ['$shape12.3'], 'res': '$14call_function.4'}), (16, {'value': '$14call_function.4', 'res': '$16get_iter.5'})), outgoing_phis={'$phi18.0': '$16get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.5',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 20: ('$phi18.0', '$18for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'iterable': '$phi20.1', 'stores': ['$20unpack_sequence.2', '$20unpack_sequence.3'], 'tupleobj': '$20unpack_sequence.4'}), (22, {'value': '$20unpack_sequence.2'}), (24, {'value': '$20unpack_sequence.3'}), (26, {'res': '$s26.5'}), (28, {'res': '$const28.6'}), (30, {'lhs': '$s26.5', 'rhs': '$const28.6', 'res': '$30compare_op.7'}), (32, {'pred': '$30compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: ('$phi20.0',), 48: ('$phi20.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=34 nstack_initial=1):
AdaptBlockInfo(insts=((34, {'res': '$num_neg_value34.1'}), (36, {'res': '$const36.2'}), (38, {'lhs': '$num_neg_value34.1', 'rhs': '$const36.2', 'res': '$38inplace_add.3'}), (40, {'value': '$38inplace_add.3'}), (42, {'res': '$ax42.4'}), (44, {'value': '$ax42.4'}), (46, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi34.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'res': '$known_size48.1'}), (50, {'res': '$s50.2'}), (52, {'lhs': '$known_size48.1', 'rhs': '$s50.2', 'res': '$52inplace_multiply.3'}), (54, {'value': '$52inplace_multiply.3'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi48.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$num_neg_value58.0'}), (60, {'res': '$const60.1'}), (62, {'lhs': '$num_neg_value58.0', 'rhs': '$const60.1', 'res': '$62compare_op.2'}), (64, {'pred': '$62compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 84: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$origsize66.0'}), (68, {'res': '$known_size68.1'}), (70, {'lhs': '$origsize66.0', 'rhs': '$known_size68.1', 'res': '$70compare_op.2'}), (72, {'pred': '$70compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: (), 164: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$74load_global.0'}), (76, {'res': '$const76.1'}), (78, {'func': '$74load_global.0', 'args': ['$const76.1'], 'res': '$78call_function.2'}), (80, {'exc': '$78call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$num_neg_value84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$num_neg_value84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 156: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$known_size92.0'}), (94, {'res': '$const94.1'}), (96, {'lhs': '$known_size92.0', 'rhs': '$const94.1', 'res': '$96compare_op.2'}), (98, {'pred': '$96compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: (), 114: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$const100.0'}), (102, {'value': '$const100.0'}), (104, {'res': '$origsize104.1'}), (106, {'res': '$const106.2'}), (108, {'lhs': '$origsize104.1', 'rhs': '$const106.2', 'res': '$108compare_op.3'}), (110, {'value': '$108compare_op.3'}), (112, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$origsize114.0'}), (116, {'res': '$known_size116.1'}), (118, {'lhs': '$origsize114.0', 'rhs': '$known_size116.1', 'res': '$118binary_floor_divide.2'}), (120, {'value': '$118binary_floor_divide.2'}), (122, {'res': '$origsize122.3'}), (124, {'res': '$known_size124.4'}), (126, {'lhs': '$origsize122.3', 'rhs': '$known_size124.4', 'res': '$126binary_modulo.5'}), (128, {'res': '$const128.6'}), (130, {'lhs': '$126binary_modulo.5', 'rhs': '$const128.6', 'res': '$130compare_op.7'}), (132, {'value': '$130compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$ok134.0'}), (136, {'pred': '$ok134.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 146: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$138load_global.0'}), (140, {'res': '$const140.1'}), (142, {'func': '$138load_global.0', 'args': ['$const140.1'], 'res': '$142call_function.2'}), (144, {'exc': '$142call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$inferred146.0'}), (148, {'res': '$shape148.1'}), (150, {'res': '$neg_ax150.2'}), (152, {'target': '$shape148.1', 'index': '$neg_ax150.2', 'value': '$inferred146.0'}), (154, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=156 nstack_initial=0):
AdaptBlockInfo(insts=((156, {'res': '$156load_global.0'}), (158, {'res': '$const158.1'}), (160, {'func': '$156load_global.0', 'args': ['$const158.1'], 'res': '$160call_function.2'}), (162, {'exc': '$160call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$const164.0'}), (166, {'retval': '$const164.0', 'castval': '$166return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    $10load_global.2 = global(enumerate: <class 'enumerate'>) ['$10load_global.2']
    $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2044)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.2', '$14call_function.4', 'shape']
    $16get_iter.5 = getiter(value=$14call_function.4) ['$14call_function.4', '$16get_iter.5']
    $phi18.0 = $16get_iter.5                 ['$16get_iter.5', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 58             ['$18for_iter.3']
label 20:
    $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2) ['$20unpack_sequence.4', '$phi20.1']
    $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.2', '$20unpack_sequence.4']
    $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.3', '$20unpack_sequence.4']
    ax = $20unpack_sequence.2                ['$20unpack_sequence.2', 'ax']
    s = $20unpack_sequence.3                 ['$20unpack_sequence.3', 's']
    $const28.6 = const(int, 0)               ['$const28.6']
    $30compare_op.7 = s < $const28.6         ['$30compare_op.7', '$const28.6', 's']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2048),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.7', '$32pred', 'bool32']
    branch $32pred, 34, 48                   ['$32pred']
label 34:
    $const36.2 = const(int, 1)               ['$const36.2']
    $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined) ['$38inplace_add.3', '$const36.2', 'num_neg_value']
    num_neg_value = $38inplace_add.3         ['$38inplace_add.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    jump 18                                  []
label 48:
    $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$52inplace_multiply.3', 'known_size', 's']
    known_size = $52inplace_multiply.3       ['$52inplace_multiply.3', 'known_size']
    jump 18                                  []
label 58:
    $const60.1 = const(int, 0)               ['$const60.1']
    $62compare_op.2 = num_neg_value == $const60.1 ['$62compare_op.2', '$const60.1', 'num_neg_value']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2054),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
    branch $64pred, 66, 84                   ['$64pred']
label 66:
    $70compare_op.2 = origsize != known_size ['$70compare_op.2', 'known_size', 'origsize']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
    branch $72pred, 74, 164                  ['$72pred']
label 74:
    $74load_global.0 = global(ValueError: <class 'ValueError'>) ['$74load_global.0']
    $const76.1 = const(str, total size of new array must be unchanged) ['$const76.1']
    $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2056)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1']
    raise $78call_function.2                 ['$78call_function.2']
label 84:
    $const86.1 = const(int, 1)               ['$const86.1']
    $88compare_op.2 = num_neg_value == $const86.1 ['$88compare_op.2', '$const86.1', 'num_neg_value']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:2058),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 156                  ['$90pred']
label 92:
    $const94.1 = const(int, 0)               ['$const94.1']
    $96compare_op.2 = known_size == $const94.1 ['$96compare_op.2', '$const94.1', 'known_size']
    bool98 = global(bool: <class 'bool'>)    ['bool98']
    $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None) ['$96compare_op.2', '$98pred', 'bool98']
    branch $98pred, 100, 114                 ['$98pred']
label 100:
    inferred = const(int, 0)                 ['inferred']
    $const106.2 = const(int, 0)              ['$const106.2']
    ok = origsize == $const106.2             ['$const106.2', 'ok', 'origsize']
    jump 134                                 []
label 114:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $126binary_modulo.5 = origsize % known_size ['$126binary_modulo.5', 'known_size', 'origsize']
    $const128.6 = const(int, 0)              ['$const128.6']
    ok = $126binary_modulo.5 == $const128.6  ['$126binary_modulo.5', '$const128.6', 'ok']
    jump 134                                 []
label 134:
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136(ok, func=bool136, args=(Var(ok, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None) ['$136pred', 'bool136', 'ok']
    branch $136pred, 146, 138                ['$136pred']
label 138:
    $138load_global.0 = global(ValueError: <class 'ValueError'>) ['$138load_global.0']
    $const140.1 = const(str, total size of new array must be unchanged) ['$const140.1']
    $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:2067)], kws=(), vararg=None, varkwarg=None, target=None) ['$138load_global.0', '$142call_function.2', '$const140.1']
    raise $142call_function.2                ['$142call_function.2']
label 146:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    jump 164                                 []
label 156:
    $156load_global.0 = global(ValueError: <class 'ValueError'>) ['$156load_global.0']
    $const158.1 = const(str, multiple negative shape values) ['$const158.1']
    $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:2071)], kws=(), vararg=None, varkwarg=None, target=None) ['$156load_global.0', '$160call_function.2', '$const158.1']
    raise $160call_function.2                ['$160call_function.2']
label 164:
    $const164.0 = const(NoneType, None)      ['$const164.0']
    $166return_value.1 = cast(value=$const164.0) ['$166return_value.1', '$const164.0']
    return $166return_value.1                ['$166return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: origsize = arg(0, name=origsize)
12-22 13:04 DEBUG    on stmt: shape = arg(1, name=shape)
12-22 13:04 DEBUG    on stmt: num_neg_value = const(int, 0)
12-22 13:04 DEBUG    on stmt: known_size = const(int, 1)
12-22 13:04 DEBUG    on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
12-22 13:04 DEBUG    on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2044)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
12-22 13:04 DEBUG    on stmt: $phi18.0 = $16get_iter.5
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block analysis pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $18for_iter.1 = iternext(value=$phi18.0)
12-22 13:04 DEBUG    on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi20.1 = $18for_iter.2
12-22 13:04 DEBUG    on stmt: branch $18for_iter.3, 20, 58
12-22 13:04 DEBUG    ==== SSA block analysis pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: ax = $20unpack_sequence.2
12-22 13:04 DEBUG    on stmt: s = $20unpack_sequence.3
12-22 13:04 DEBUG    on stmt: $const28.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $30compare_op.7 = s < $const28.6
12-22 13:04 DEBUG    on stmt: bool32 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2048),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $32pred, 34, 48
12-22 13:04 DEBUG    ==== SSA block analysis pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $const36.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: num_neg_value = $38inplace_add.3
12-22 13:04 DEBUG    on stmt: neg_ax = ax
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block analysis pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: known_size = $52inplace_multiply.3
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block analysis pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $const60.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $62compare_op.2 = num_neg_value == $const60.1
12-22 13:04 DEBUG    on stmt: bool64 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2054),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $64pred, 66, 84
12-22 13:04 DEBUG    ==== SSA block analysis pass on 66
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $70compare_op.2 = origsize != known_size
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 164
12-22 13:04 DEBUG    ==== SSA block analysis pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const76.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2056)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block analysis pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $const86.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $88compare_op.2 = num_neg_value == $const86.1
12-22 13:04 DEBUG    on stmt: bool90 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:2058),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $90pred, 92, 156
12-22 13:04 DEBUG    ==== SSA block analysis pass on 92
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $const94.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $96compare_op.2 = known_size == $const94.1
12-22 13:04 DEBUG    on stmt: bool98 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $98pred, 100, 114
12-22 13:04 DEBUG    ==== SSA block analysis pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: inferred = const(int, 0)
12-22 13:04 DEBUG    on stmt: $const106.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok = origsize == $const106.2
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block analysis pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: inferred = origsize // known_size
12-22 13:04 DEBUG    on stmt: $126binary_modulo.5 = origsize % known_size
12-22 13:04 DEBUG    on stmt: $const128.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok = $126binary_modulo.5 == $const128.6
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block analysis pass on 134
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136(ok, func=bool136, args=(Var(ok, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 146, 138
12-22 13:04 DEBUG    ==== SSA block analysis pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const140.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:2067)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block analysis pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: shape[neg_ax] = inferred
12-22 13:04 DEBUG    on stmt: jump 164
12-22 13:04 DEBUG    ==== SSA block analysis pass on 156
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const158.1 = const(str, multiple negative shape values)
12-22 13:04 DEBUG    on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:2071)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
12-22 13:04 DEBUG    ==== SSA block analysis pass on 164
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: $const164.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $166return_value.1 = cast(value=$const164.0)
12-22 13:04 DEBUG    on stmt: return $166return_value.1
12-22 13:04 DEBUG    ==== SSA block analysis pass on 165
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12517D00>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10load_global.2': [<numba.core.ir.Assign object at 0x000001AF125016D0>],
             '$126binary_modulo.5': [<numba.core.ir.Assign object at 0x000001AF12515130>],
             '$136pred': [<numba.core.ir.Assign object at 0x000001AF125156D0>],
             '$138load_global.0': [<numba.core.ir.Assign object at 0x000001AF12515910>],
             '$142call_function.2': [<numba.core.ir.Assign object at 0x000001AF12515C40>],
             '$14call_function.4': [<numba.core.ir.Assign object at 0x000001AF125019A0>],
             '$156load_global.0': [<numba.core.ir.Assign object at 0x000001AF125173D0>],
             '$160call_function.2': [<numba.core.ir.Assign object at 0x000001AF12517700>],
             '$166return_value.1': [<numba.core.ir.Assign object at 0x000001AF12517B50>],
             '$16get_iter.5': [<numba.core.ir.Assign object at 0x000001AF12501AF0>],
             '$18for_iter.1': [<numba.core.ir.Assign object at 0x000001AF12501D90>],
             '$18for_iter.2': [<numba.core.ir.Assign object at 0x000001AF12501EB0>],
             '$18for_iter.3': [<numba.core.ir.Assign object at 0x000001AF12501FD0>],
             '$20unpack_sequence.2': [<numba.core.ir.Assign object at 0x000001AF12507460>],
             '$20unpack_sequence.3': [<numba.core.ir.Assign object at 0x000001AF12507580>],
             '$20unpack_sequence.4': [<numba.core.ir.Assign object at 0x000001AF12507310>],
             '$30compare_op.7': [<numba.core.ir.Assign object at 0x000001AF12507BB0>],
             '$32pred': [<numba.core.ir.Assign object at 0x000001AF12507E50>],
             '$38inplace_add.3': [<numba.core.ir.Assign object at 0x000001AF1250D370>],
             '$52inplace_multiply.3': [<numba.core.ir.Assign object at 0x000001AF1250DAF0>],
             '$62compare_op.2': [<numba.core.ir.Assign object at 0x000001AF1250F0D0>],
             '$64pred': [<numba.core.ir.Assign object at 0x000001AF1250F370>],
             '$70compare_op.2': [<numba.core.ir.Assign object at 0x000001AF1250F7F0>],
             '$72pred': [<numba.core.ir.Assign object at 0x000001AF1250FA90>],
             '$74load_global.0': [<numba.core.ir.Assign object at 0x000001AF1250FC70>],
             '$78call_function.2': [<numba.core.ir.Assign object at 0x000001AF1250FFA0>],
             '$88compare_op.2': [<numba.core.ir.Assign object at 0x000001AF12511550>],
             '$90pred': [<numba.core.ir.Assign object at 0x000001AF125117F0>],
             '$96compare_op.2': [<numba.core.ir.Assign object at 0x000001AF12511CD0>],
             '$98pred': [<numba.core.ir.Assign object at 0x000001AF12511F70>],
             '$const106.2': [<numba.core.ir.Assign object at 0x000001AF125135B0>],
             '$const128.6': [<numba.core.ir.Assign object at 0x000001AF125152B0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x000001AF12515A90>],
             '$const158.1': [<numba.core.ir.Assign object at 0x000001AF12517550>],
             '$const164.0': [<numba.core.ir.Assign object at 0x000001AF125179D0>],
             '$const28.6': [<numba.core.ir.Assign object at 0x000001AF12507A30>],
             '$const36.2': [<numba.core.ir.Assign object at 0x000001AF1250D1F0>],
             '$const60.1': [<numba.core.ir.Assign object at 0x000001AF1250DF10>],
             '$const76.1': [<numba.core.ir.Assign object at 0x000001AF1250FDF0>],
             '$const86.1': [<numba.core.ir.Assign object at 0x000001AF125113D0>],
             '$const94.1': [<numba.core.ir.Assign object at 0x000001AF12511B50>],
             '$phi18.0': [<numba.core.ir.Assign object at 0x000001AF125012E0>],
             '$phi20.1': [<numba.core.ir.Assign object at 0x000001AF12501CA0>],
             'ax': [<numba.core.ir.Assign object at 0x000001AF12507670>],
             'bool136': [<numba.core.ir.Assign object at 0x000001AF125155B0>],
             'bool32': [<numba.core.ir.Assign object at 0x000001AF12507D30>],
             'bool64': [<numba.core.ir.Assign object at 0x000001AF1250F250>],
             'bool72': [<numba.core.ir.Assign object at 0x000001AF1250F970>],
             'bool90': [<numba.core.ir.Assign object at 0x000001AF125116D0>],
             'bool98': [<numba.core.ir.Assign object at 0x000001AF12511E50>],
             'inferred': [<numba.core.ir.Assign object at 0x000001AF125131F0>,
                          <numba.core.ir.Assign object at 0x000001AF12513C70>],
             'known_size': [<numba.core.ir.Assign object at 0x000001AF12501430>,
                            <numba.core.ir.Assign object at 0x000001AF1250DBB0>],
             'neg_ax': [<numba.core.ir.Assign object at 0x000001AF1250D670>],
             'num_neg_value': [<numba.core.ir.Assign object at 0x000001AF12501190>,
                               <numba.core.ir.Assign object at 0x000001AF1250D430>],
             'ok': [<numba.core.ir.Assign object at 0x000001AF12513730>,
                    <numba.core.ir.Assign object at 0x000001AF12515430>],
             'origsize': [<numba.core.ir.Assign object at 0x000001AF124F3610>],
             's': [<numba.core.ir.Assign object at 0x000001AF12507790>],
             'shape': [<numba.core.ir.Assign object at 0x000001AF124DBA30>]})
12-22 13:04 DEBUG    SSA violators {'ok', 'num_neg_value', 'inferred', 'known_size'}
12-22 13:04 DEBUG    Fix SSA violator on var ok
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: origsize = arg(0, name=origsize)
12-22 13:04 DEBUG    on stmt: shape = arg(1, name=shape)
12-22 13:04 DEBUG    on stmt: num_neg_value = const(int, 0)
12-22 13:04 DEBUG    on stmt: known_size = const(int, 1)
12-22 13:04 DEBUG    on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
12-22 13:04 DEBUG    on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2044)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
12-22 13:04 DEBUG    on stmt: $phi18.0 = $16get_iter.5
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $18for_iter.1 = iternext(value=$phi18.0)
12-22 13:04 DEBUG    on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi20.1 = $18for_iter.2
12-22 13:04 DEBUG    on stmt: branch $18for_iter.3, 20, 58
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: ax = $20unpack_sequence.2
12-22 13:04 DEBUG    on stmt: s = $20unpack_sequence.3
12-22 13:04 DEBUG    on stmt: $const28.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $30compare_op.7 = s < $const28.6
12-22 13:04 DEBUG    on stmt: bool32 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2048),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $32pred, 34, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $const36.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: num_neg_value = $38inplace_add.3
12-22 13:04 DEBUG    on stmt: neg_ax = ax
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: known_size = $52inplace_multiply.3
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $const60.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $62compare_op.2 = num_neg_value == $const60.1
12-22 13:04 DEBUG    on stmt: bool64 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2054),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $64pred, 66, 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 66
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $70compare_op.2 = origsize != known_size
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const76.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2056)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $const86.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $88compare_op.2 = num_neg_value == $const86.1
12-22 13:04 DEBUG    on stmt: bool90 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:2058),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $90pred, 92, 156
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 92
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $const94.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $96compare_op.2 = known_size == $const94.1
12-22 13:04 DEBUG    on stmt: bool98 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $98pred, 100, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: inferred = const(int, 0)
12-22 13:04 DEBUG    on stmt: $const106.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok = origsize == $const106.2
12-22 13:04 DEBUG    first assign: ok
12-22 13:04 DEBUG    replaced with: ok = origsize == $const106.2
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: inferred = origsize // known_size
12-22 13:04 DEBUG    on stmt: $126binary_modulo.5 = origsize % known_size
12-22 13:04 DEBUG    on stmt: $const128.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok = $126binary_modulo.5 == $const128.6
12-22 13:04 DEBUG    replaced with: ok.1 = $126binary_modulo.5 == $const128.6
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 134
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136(ok, func=bool136, args=(Var(ok, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 146, 138
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const140.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:2067)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: shape[neg_ax] = inferred
12-22 13:04 DEBUG    on stmt: jump 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 156
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const158.1 = const(str, multiple negative shape values)
12-22 13:04 DEBUG    on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:2071)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 164
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $const164.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $166return_value.1 = cast(value=$const164.0)
12-22 13:04 DEBUG    on stmt: return $166return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 165
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {100: [<numba.core.ir.Assign object at 0x000001AF12529F10>],
             114: [<numba.core.ir.Assign object at 0x000001AF12529250>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: origsize = arg(0, name=origsize)
12-22 13:04 DEBUG    on stmt: shape = arg(1, name=shape)
12-22 13:04 DEBUG    on stmt: num_neg_value = const(int, 0)
12-22 13:04 DEBUG    on stmt: known_size = const(int, 1)
12-22 13:04 DEBUG    on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
12-22 13:04 DEBUG    on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2044)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
12-22 13:04 DEBUG    on stmt: $phi18.0 = $16get_iter.5
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $18for_iter.1 = iternext(value=$phi18.0)
12-22 13:04 DEBUG    on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi20.1 = $18for_iter.2
12-22 13:04 DEBUG    on stmt: branch $18for_iter.3, 20, 58
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: ax = $20unpack_sequence.2
12-22 13:04 DEBUG    on stmt: s = $20unpack_sequence.3
12-22 13:04 DEBUG    on stmt: $const28.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $30compare_op.7 = s < $const28.6
12-22 13:04 DEBUG    on stmt: bool32 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2048),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $32pred, 34, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $const36.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: num_neg_value = $38inplace_add.3
12-22 13:04 DEBUG    on stmt: neg_ax = ax
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: known_size = $52inplace_multiply.3
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $const60.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $62compare_op.2 = num_neg_value == $const60.1
12-22 13:04 DEBUG    on stmt: bool64 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2054),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $64pred, 66, 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 66
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $70compare_op.2 = origsize != known_size
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const76.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2056)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $const86.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $88compare_op.2 = num_neg_value == $const86.1
12-22 13:04 DEBUG    on stmt: bool90 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:2058),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $90pred, 92, 156
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 92
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $const94.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $96compare_op.2 = known_size == $const94.1
12-22 13:04 DEBUG    on stmt: bool98 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $98pred, 100, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: inferred = const(int, 0)
12-22 13:04 DEBUG    on stmt: $const106.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok = origsize == $const106.2
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: inferred = origsize // known_size
12-22 13:04 DEBUG    on stmt: $126binary_modulo.5 = origsize % known_size
12-22 13:04 DEBUG    on stmt: $const128.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok.1 = $126binary_modulo.5 == $const128.6
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 134
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136(ok, func=bool136, args=(Var(ok, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='ok' stmt=$136pred = call bool136(ok, func=bool136, args=(Var(ok, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 134
12-22 13:04 DEBUG    insert phi node ok.2 = phi(incoming_values=[], incoming_blocks=[]) at 134
12-22 13:04 DEBUG    find_def_from_bottom label 114
12-22 13:04 DEBUG    incoming_def ok.1 = $126binary_modulo.5 == $const128.6
12-22 13:04 DEBUG    find_def_from_bottom label 100
12-22 13:04 DEBUG    incoming_def ok = origsize == $const106.2
12-22 13:04 DEBUG    replaced with: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:2066),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 146, 138
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const140.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:2067)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: shape[neg_ax] = inferred
12-22 13:04 DEBUG    on stmt: jump 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 156
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const158.1 = const(str, multiple negative shape values)
12-22 13:04 DEBUG    on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:2071)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 164
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: $const164.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $166return_value.1 = cast(value=$const164.0)
12-22 13:04 DEBUG    on stmt: return $166return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 165
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12517F40>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    Fix SSA violator on var num_neg_value
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: origsize = arg(0, name=origsize)
12-22 13:04 DEBUG    on stmt: shape = arg(1, name=shape)
12-22 13:04 DEBUG    on stmt: num_neg_value = const(int, 0)
12-22 13:04 DEBUG    first assign: num_neg_value
12-22 13:04 DEBUG    replaced with: num_neg_value = const(int, 0)
12-22 13:04 DEBUG    on stmt: known_size = const(int, 1)
12-22 13:04 DEBUG    on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
12-22 13:04 DEBUG    on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2044)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
12-22 13:04 DEBUG    on stmt: $phi18.0 = $16get_iter.5
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $18for_iter.1 = iternext(value=$phi18.0)
12-22 13:04 DEBUG    on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi20.1 = $18for_iter.2
12-22 13:04 DEBUG    on stmt: branch $18for_iter.3, 20, 58
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: ax = $20unpack_sequence.2
12-22 13:04 DEBUG    on stmt: s = $20unpack_sequence.3
12-22 13:04 DEBUG    on stmt: $const28.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $30compare_op.7 = s < $const28.6
12-22 13:04 DEBUG    on stmt: bool32 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2048),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $32pred, 34, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $const36.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: num_neg_value = $38inplace_add.3
12-22 13:04 DEBUG    replaced with: num_neg_value.1 = $38inplace_add.3
12-22 13:04 DEBUG    on stmt: neg_ax = ax
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: known_size = $52inplace_multiply.3
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $const60.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $62compare_op.2 = num_neg_value == $const60.1
12-22 13:04 DEBUG    on stmt: bool64 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2054),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $64pred, 66, 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 66
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $70compare_op.2 = origsize != known_size
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const76.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2056)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $const86.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $88compare_op.2 = num_neg_value == $const86.1
12-22 13:04 DEBUG    on stmt: bool90 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:2058),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $90pred, 92, 156
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 92
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $const94.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $96compare_op.2 = known_size == $const94.1
12-22 13:04 DEBUG    on stmt: bool98 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $98pred, 100, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: inferred = const(int, 0)
12-22 13:04 DEBUG    on stmt: $const106.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok = origsize == $const106.2
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: inferred = origsize // known_size
12-22 13:04 DEBUG    on stmt: $126binary_modulo.5 = origsize % known_size
12-22 13:04 DEBUG    on stmt: $const128.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok.1 = $126binary_modulo.5 == $const128.6
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 134
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2065), Var(ok, arrayobj.py:2062)], incoming_blocks=[114, 100])
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:2066),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 146, 138
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const140.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:2067)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: shape[neg_ax] = inferred
12-22 13:04 DEBUG    on stmt: jump 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 156
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const158.1 = const(str, multiple negative shape values)
12-22 13:04 DEBUG    on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:2071)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 164
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: $const164.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $166return_value.1 = cast(value=$const164.0)
12-22 13:04 DEBUG    on stmt: return $166return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 165
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12517D30>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001AF12517DF0>],
             34: [<numba.core.ir.Assign object at 0x000001AF12517CA0>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: origsize = arg(0, name=origsize)
12-22 13:04 DEBUG    on stmt: shape = arg(1, name=shape)
12-22 13:04 DEBUG    on stmt: num_neg_value = const(int, 0)
12-22 13:04 DEBUG    on stmt: known_size = const(int, 1)
12-22 13:04 DEBUG    on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
12-22 13:04 DEBUG    on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2044)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
12-22 13:04 DEBUG    on stmt: $phi18.0 = $16get_iter.5
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $18for_iter.1 = iternext(value=$phi18.0)
12-22 13:04 DEBUG    on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi20.1 = $18for_iter.2
12-22 13:04 DEBUG    on stmt: branch $18for_iter.3, 20, 58
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: ax = $20unpack_sequence.2
12-22 13:04 DEBUG    on stmt: s = $20unpack_sequence.3
12-22 13:04 DEBUG    on stmt: $const28.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $30compare_op.7 = s < $const28.6
12-22 13:04 DEBUG    on stmt: bool32 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2048),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $32pred, 34, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $const36.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='num_neg_value' stmt=$38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 34
12-22 13:04 DEBUG    idom 20 from label 34
12-22 13:04 DEBUG    find_def_from_bottom label 20
12-22 13:04 DEBUG    find_def_from_top label 20
12-22 13:04 DEBUG    idom 18 from label 20
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    find_def_from_top label 18
12-22 13:04 DEBUG    insert phi node num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
12-22 13:04 DEBUG    find_def_from_bottom label 0
12-22 13:04 DEBUG    incoming_def num_neg_value = const(int, 0)
12-22 13:04 DEBUG    find_def_from_bottom label 165
12-22 13:04 DEBUG    find_def_from_top label 165
12-22 13:04 DEBUG    insert phi node num_neg_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 165
12-22 13:04 DEBUG    find_def_from_bottom label 48
12-22 13:04 DEBUG    find_def_from_top label 48
12-22 13:04 DEBUG    idom 20 from label 48
12-22 13:04 DEBUG    find_def_from_bottom label 20
12-22 13:04 DEBUG    find_def_from_top label 20
12-22 13:04 DEBUG    idom 18 from label 20
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    incoming_def num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2045)], incoming_blocks=[0])
12-22 13:04 DEBUG    find_def_from_bottom label 34
12-22 13:04 DEBUG    incoming_def num_neg_value.1 = $38inplace_add.3
12-22 13:04 DEBUG    incoming_def num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2049), Var(num_neg_value.1, arrayobj.py:2049)], incoming_blocks=[48, 34])
12-22 13:04 DEBUG    replaced with: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: num_neg_value.1 = $38inplace_add.3
12-22 13:04 DEBUG    on stmt: neg_ax = ax
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: known_size = $52inplace_multiply.3
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $const60.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $62compare_op.2 = num_neg_value == $const60.1
12-22 13:04 DEBUG    find_def var='num_neg_value' stmt=$62compare_op.2 = num_neg_value == $const60.1
12-22 13:04 DEBUG    find_def_from_top label 58
12-22 13:04 DEBUG    idom 18 from label 58
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    replaced with: $62compare_op.2 = num_neg_value.2 == $const60.1
12-22 13:04 DEBUG    on stmt: bool64 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2054),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $64pred, 66, 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 66
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $70compare_op.2 = origsize != known_size
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const76.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2056)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $const86.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $88compare_op.2 = num_neg_value == $const86.1
12-22 13:04 DEBUG    find_def var='num_neg_value' stmt=$88compare_op.2 = num_neg_value == $const86.1
12-22 13:04 DEBUG    find_def_from_top label 84
12-22 13:04 DEBUG    idom 58 from label 84
12-22 13:04 DEBUG    find_def_from_bottom label 58
12-22 13:04 DEBUG    find_def_from_top label 58
12-22 13:04 DEBUG    idom 18 from label 58
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    replaced with: $88compare_op.2 = num_neg_value.2 == $const86.1
12-22 13:04 DEBUG    on stmt: bool90 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:2058),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $90pred, 92, 156
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 92
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $const94.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $96compare_op.2 = known_size == $const94.1
12-22 13:04 DEBUG    on stmt: bool98 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $98pred, 100, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: inferred = const(int, 0)
12-22 13:04 DEBUG    on stmt: $const106.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok = origsize == $const106.2
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: inferred = origsize // known_size
12-22 13:04 DEBUG    on stmt: $126binary_modulo.5 = origsize % known_size
12-22 13:04 DEBUG    on stmt: $const128.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok.1 = $126binary_modulo.5 == $const128.6
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 134
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2065), Var(ok, arrayobj.py:2062)], incoming_blocks=[114, 100])
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:2066),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 146, 138
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const140.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:2067)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: shape[neg_ax] = inferred
12-22 13:04 DEBUG    on stmt: jump 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 156
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const158.1 = const(str, multiple negative shape values)
12-22 13:04 DEBUG    on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:2071)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 164
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: $const164.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $166return_value.1 = cast(value=$const164.0)
12-22 13:04 DEBUG    on stmt: return $166return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 165
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF12529D30>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    Fix SSA violator on var inferred
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: origsize = arg(0, name=origsize)
12-22 13:04 DEBUG    on stmt: shape = arg(1, name=shape)
12-22 13:04 DEBUG    on stmt: num_neg_value = const(int, 0)
12-22 13:04 DEBUG    on stmt: known_size = const(int, 1)
12-22 13:04 DEBUG    on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
12-22 13:04 DEBUG    on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2044)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
12-22 13:04 DEBUG    on stmt: $phi18.0 = $16get_iter.5
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2045), Var(num_neg_value.3, arrayobj.py:2049)], incoming_blocks=[0, 165])
12-22 13:04 DEBUG    on stmt: $18for_iter.1 = iternext(value=$phi18.0)
12-22 13:04 DEBUG    on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi20.1 = $18for_iter.2
12-22 13:04 DEBUG    on stmt: branch $18for_iter.3, 20, 58
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: ax = $20unpack_sequence.2
12-22 13:04 DEBUG    on stmt: s = $20unpack_sequence.3
12-22 13:04 DEBUG    on stmt: $const28.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $30compare_op.7 = s < $const28.6
12-22 13:04 DEBUG    on stmt: bool32 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2048),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $32pred, 34, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: $const36.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: num_neg_value.1 = $38inplace_add.3
12-22 13:04 DEBUG    on stmt: neg_ax = ax
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: known_size = $52inplace_multiply.3
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: $const60.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
12-22 13:04 DEBUG    on stmt: bool64 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2054),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $64pred, 66, 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 66
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: $70compare_op.2 = origsize != known_size
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const76.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2056)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: $const86.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $88compare_op.2 = num_neg_value.2 == $const86.1
12-22 13:04 DEBUG    on stmt: bool90 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:2058),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $90pred, 92, 156
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 92
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: $const94.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $96compare_op.2 = known_size == $const94.1
12-22 13:04 DEBUG    on stmt: bool98 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $98pred, 100, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: inferred = const(int, 0)
12-22 13:04 DEBUG    first assign: inferred
12-22 13:04 DEBUG    replaced with: inferred = const(int, 0)
12-22 13:04 DEBUG    on stmt: $const106.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok = origsize == $const106.2
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: inferred = origsize // known_size
12-22 13:04 DEBUG    replaced with: inferred.1 = origsize // known_size
12-22 13:04 DEBUG    on stmt: $126binary_modulo.5 = origsize % known_size
12-22 13:04 DEBUG    on stmt: $const128.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok.1 = $126binary_modulo.5 == $const128.6
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 134
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2065), Var(ok, arrayobj.py:2062)], incoming_blocks=[114, 100])
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:2066),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 146, 138
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const140.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:2067)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: shape[neg_ax] = inferred
12-22 13:04 DEBUG    on stmt: jump 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 156
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const158.1 = const(str, multiple negative shape values)
12-22 13:04 DEBUG    on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:2071)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 164
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: $const164.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $166return_value.1 = cast(value=$const164.0)
12-22 13:04 DEBUG    on stmt: return $166return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 165
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124F3820>
12-22 13:04 DEBUG    on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2049), Var(num_neg_value.1, arrayobj.py:2049)], incoming_blocks=[48, 34])
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {100: [<numba.core.ir.Assign object at 0x000001AF12529B50>],
             114: [<numba.core.ir.Assign object at 0x000001AF12517D90>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: origsize = arg(0, name=origsize)
12-22 13:04 DEBUG    on stmt: shape = arg(1, name=shape)
12-22 13:04 DEBUG    on stmt: num_neg_value = const(int, 0)
12-22 13:04 DEBUG    on stmt: known_size = const(int, 1)
12-22 13:04 DEBUG    on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
12-22 13:04 DEBUG    on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2044)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
12-22 13:04 DEBUG    on stmt: $phi18.0 = $16get_iter.5
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2045), Var(num_neg_value.3, arrayobj.py:2049)], incoming_blocks=[0, 165])
12-22 13:04 DEBUG    on stmt: $18for_iter.1 = iternext(value=$phi18.0)
12-22 13:04 DEBUG    on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi20.1 = $18for_iter.2
12-22 13:04 DEBUG    on stmt: branch $18for_iter.3, 20, 58
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: ax = $20unpack_sequence.2
12-22 13:04 DEBUG    on stmt: s = $20unpack_sequence.3
12-22 13:04 DEBUG    on stmt: $const28.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $30compare_op.7 = s < $const28.6
12-22 13:04 DEBUG    on stmt: bool32 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2048),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $32pred, 34, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: $const36.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: num_neg_value.1 = $38inplace_add.3
12-22 13:04 DEBUG    on stmt: neg_ax = ax
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: known_size = $52inplace_multiply.3
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: $const60.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
12-22 13:04 DEBUG    on stmt: bool64 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2054),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $64pred, 66, 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 66
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: $70compare_op.2 = origsize != known_size
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const76.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2056)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: $const86.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $88compare_op.2 = num_neg_value.2 == $const86.1
12-22 13:04 DEBUG    on stmt: bool90 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:2058),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $90pred, 92, 156
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 92
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: $const94.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $96compare_op.2 = known_size == $const94.1
12-22 13:04 DEBUG    on stmt: bool98 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $98pred, 100, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: inferred = const(int, 0)
12-22 13:04 DEBUG    on stmt: $const106.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok = origsize == $const106.2
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: inferred.1 = origsize // known_size
12-22 13:04 DEBUG    on stmt: $126binary_modulo.5 = origsize % known_size
12-22 13:04 DEBUG    on stmt: $const128.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok.1 = $126binary_modulo.5 == $const128.6
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 134
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2065), Var(ok, arrayobj.py:2062)], incoming_blocks=[114, 100])
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:2066),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 146, 138
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const140.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:2067)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: shape[neg_ax] = inferred
12-22 13:04 DEBUG    find_def var='inferred' stmt=shape[neg_ax] = inferred
12-22 13:04 DEBUG    find_def_from_top label 146
12-22 13:04 DEBUG    idom 134 from label 146
12-22 13:04 DEBUG    find_def_from_bottom label 134
12-22 13:04 DEBUG    find_def_from_top label 134
12-22 13:04 DEBUG    insert phi node inferred.2 = phi(incoming_values=[], incoming_blocks=[]) at 134
12-22 13:04 DEBUG    find_def_from_bottom label 114
12-22 13:04 DEBUG    incoming_def inferred.1 = origsize // known_size
12-22 13:04 DEBUG    find_def_from_bottom label 100
12-22 13:04 DEBUG    incoming_def inferred = const(int, 0)
12-22 13:04 DEBUG    replaced with: shape[neg_ax] = inferred.2
12-22 13:04 DEBUG    on stmt: jump 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 156
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const158.1 = const(str, multiple negative shape values)
12-22 13:04 DEBUG    on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:2071)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 164
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: $const164.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $166return_value.1 = cast(value=$const164.0)
12-22 13:04 DEBUG    on stmt: return $166return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 165
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF123E1A90>
12-22 13:04 DEBUG    on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2049), Var(num_neg_value.1, arrayobj.py:2049)], incoming_blocks=[48, 34])
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    Fix SSA violator on var known_size
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: origsize = arg(0, name=origsize)
12-22 13:04 DEBUG    on stmt: shape = arg(1, name=shape)
12-22 13:04 DEBUG    on stmt: num_neg_value = const(int, 0)
12-22 13:04 DEBUG    on stmt: known_size = const(int, 1)
12-22 13:04 DEBUG    first assign: known_size
12-22 13:04 DEBUG    replaced with: known_size = const(int, 1)
12-22 13:04 DEBUG    on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
12-22 13:04 DEBUG    on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2044)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
12-22 13:04 DEBUG    on stmt: $phi18.0 = $16get_iter.5
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2045), Var(num_neg_value.3, arrayobj.py:2049)], incoming_blocks=[0, 165])
12-22 13:04 DEBUG    on stmt: $18for_iter.1 = iternext(value=$phi18.0)
12-22 13:04 DEBUG    on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi20.1 = $18for_iter.2
12-22 13:04 DEBUG    on stmt: branch $18for_iter.3, 20, 58
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: ax = $20unpack_sequence.2
12-22 13:04 DEBUG    on stmt: s = $20unpack_sequence.3
12-22 13:04 DEBUG    on stmt: $const28.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $30compare_op.7 = s < $const28.6
12-22 13:04 DEBUG    on stmt: bool32 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2048),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $32pred, 34, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: $const36.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: num_neg_value.1 = $38inplace_add.3
12-22 13:04 DEBUG    on stmt: neg_ax = ax
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: known_size = $52inplace_multiply.3
12-22 13:04 DEBUG    replaced with: known_size.1 = $52inplace_multiply.3
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: $const60.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
12-22 13:04 DEBUG    on stmt: bool64 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2054),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $64pred, 66, 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 66
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: $70compare_op.2 = origsize != known_size
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const76.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2056)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: $const86.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $88compare_op.2 = num_neg_value.2 == $const86.1
12-22 13:04 DEBUG    on stmt: bool90 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:2058),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $90pred, 92, 156
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 92
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: $const94.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $96compare_op.2 = known_size == $const94.1
12-22 13:04 DEBUG    on stmt: bool98 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $98pred, 100, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: inferred = const(int, 0)
12-22 13:04 DEBUG    on stmt: $const106.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok = origsize == $const106.2
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: inferred.1 = origsize // known_size
12-22 13:04 DEBUG    on stmt: $126binary_modulo.5 = origsize % known_size
12-22 13:04 DEBUG    on stmt: $const128.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok.1 = $126binary_modulo.5 == $const128.6
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 134
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2064), Var(inferred, arrayobj.py:2061)], incoming_blocks=[114, 100])
12-22 13:04 DEBUG    on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2065), Var(ok, arrayobj.py:2062)], incoming_blocks=[114, 100])
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:2066),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 146, 138
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const140.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:2067)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: shape[neg_ax] = inferred.2
12-22 13:04 DEBUG    on stmt: jump 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 156
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const158.1 = const(str, multiple negative shape values)
12-22 13:04 DEBUG    on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:2071)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 164
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: $const164.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $166return_value.1 = cast(value=$const164.0)
12-22 13:04 DEBUG    on stmt: return $166return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 165
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF123E1A60>
12-22 13:04 DEBUG    on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2049), Var(num_neg_value.1, arrayobj.py:2049)], incoming_blocks=[48, 34])
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001AF12517EB0>],
             48: [<numba.core.ir.Assign object at 0x000001AF12529910>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: origsize = arg(0, name=origsize)
12-22 13:04 DEBUG    on stmt: shape = arg(1, name=shape)
12-22 13:04 DEBUG    on stmt: num_neg_value = const(int, 0)
12-22 13:04 DEBUG    on stmt: known_size = const(int, 1)
12-22 13:04 DEBUG    on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
12-22 13:04 DEBUG    on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2044)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
12-22 13:04 DEBUG    on stmt: $phi18.0 = $16get_iter.5
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2045), Var(num_neg_value.3, arrayobj.py:2049)], incoming_blocks=[0, 165])
12-22 13:04 DEBUG    on stmt: $18for_iter.1 = iternext(value=$phi18.0)
12-22 13:04 DEBUG    on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi20.1 = $18for_iter.2
12-22 13:04 DEBUG    on stmt: branch $18for_iter.3, 20, 58
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: ax = $20unpack_sequence.2
12-22 13:04 DEBUG    on stmt: s = $20unpack_sequence.3
12-22 13:04 DEBUG    on stmt: $const28.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $30compare_op.7 = s < $const28.6
12-22 13:04 DEBUG    on stmt: bool32 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2048),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $32pred, 34, 48
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: $const36.2 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: num_neg_value.1 = $38inplace_add.3
12-22 13:04 DEBUG    on stmt: neg_ax = ax
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 48
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='known_size' stmt=$52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 48
12-22 13:04 DEBUG    idom 20 from label 48
12-22 13:04 DEBUG    find_def_from_bottom label 20
12-22 13:04 DEBUG    find_def_from_top label 20
12-22 13:04 DEBUG    idom 18 from label 20
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    find_def_from_top label 18
12-22 13:04 DEBUG    insert phi node known_size.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
12-22 13:04 DEBUG    find_def_from_bottom label 0
12-22 13:04 DEBUG    incoming_def known_size = const(int, 1)
12-22 13:04 DEBUG    find_def_from_bottom label 165
12-22 13:04 DEBUG    find_def_from_top label 165
12-22 13:04 DEBUG    insert phi node known_size.3 = phi(incoming_values=[], incoming_blocks=[]) at 165
12-22 13:04 DEBUG    find_def_from_bottom label 48
12-22 13:04 DEBUG    incoming_def known_size.1 = $52inplace_multiply.3
12-22 13:04 DEBUG    find_def_from_bottom label 34
12-22 13:04 DEBUG    find_def_from_top label 34
12-22 13:04 DEBUG    idom 20 from label 34
12-22 13:04 DEBUG    find_def_from_bottom label 20
12-22 13:04 DEBUG    find_def_from_top label 20
12-22 13:04 DEBUG    idom 18 from label 20
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    incoming_def known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2046)], incoming_blocks=[0])
12-22 13:04 DEBUG    incoming_def known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2052), Var(known_size.2, arrayobj.py:2052)], incoming_blocks=[48, 34])
12-22 13:04 DEBUG    replaced with: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: known_size.1 = $52inplace_multiply.3
12-22 13:04 DEBUG    on stmt: jump 165
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 58
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: $const60.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
12-22 13:04 DEBUG    on stmt: bool64 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2054),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $64pred, 66, 84
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 66
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: $70compare_op.2 = origsize != known_size
12-22 13:04 DEBUG    find_def var='known_size' stmt=$70compare_op.2 = origsize != known_size
12-22 13:04 DEBUG    find_def_from_top label 66
12-22 13:04 DEBUG    idom 58 from label 66
12-22 13:04 DEBUG    find_def_from_bottom label 58
12-22 13:04 DEBUG    find_def_from_top label 58
12-22 13:04 DEBUG    idom 18 from label 58
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    replaced with: $70compare_op.2 = origsize != known_size.2
12-22 13:04 DEBUG    on stmt: bool72 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2055),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $72pred, 74, 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 74
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const76.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2056)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: $const86.1 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $88compare_op.2 = num_neg_value.2 == $const86.1
12-22 13:04 DEBUG    on stmt: bool90 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:2058),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $90pred, 92, 156
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 92
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: $const94.1 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $96compare_op.2 = known_size == $const94.1
12-22 13:04 DEBUG    find_def var='known_size' stmt=$96compare_op.2 = known_size == $const94.1
12-22 13:04 DEBUG    find_def_from_top label 92
12-22 13:04 DEBUG    idom 84 from label 92
12-22 13:04 DEBUG    find_def_from_bottom label 84
12-22 13:04 DEBUG    find_def_from_top label 84
12-22 13:04 DEBUG    idom 58 from label 84
12-22 13:04 DEBUG    find_def_from_bottom label 58
12-22 13:04 DEBUG    find_def_from_top label 58
12-22 13:04 DEBUG    idom 18 from label 58
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    replaced with: $96compare_op.2 = known_size.2 == $const94.1
12-22 13:04 DEBUG    on stmt: bool98 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $98pred, 100, 114
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: inferred = const(int, 0)
12-22 13:04 DEBUG    on stmt: $const106.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok = origsize == $const106.2
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: inferred.1 = origsize // known_size
12-22 13:04 DEBUG    find_def var='known_size' stmt=inferred.1 = origsize // known_size
12-22 13:04 DEBUG    find_def_from_top label 114
12-22 13:04 DEBUG    idom 92 from label 114
12-22 13:04 DEBUG    find_def_from_bottom label 92
12-22 13:04 DEBUG    find_def_from_top label 92
12-22 13:04 DEBUG    idom 84 from label 92
12-22 13:04 DEBUG    find_def_from_bottom label 84
12-22 13:04 DEBUG    find_def_from_top label 84
12-22 13:04 DEBUG    idom 58 from label 84
12-22 13:04 DEBUG    find_def_from_bottom label 58
12-22 13:04 DEBUG    find_def_from_top label 58
12-22 13:04 DEBUG    idom 18 from label 58
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    replaced with: inferred.1 = origsize // known_size.2
12-22 13:04 DEBUG    on stmt: $126binary_modulo.5 = origsize % known_size
12-22 13:04 DEBUG    find_def var='known_size' stmt=$126binary_modulo.5 = origsize % known_size
12-22 13:04 DEBUG    find_def_from_top label 114
12-22 13:04 DEBUG    idom 92 from label 114
12-22 13:04 DEBUG    find_def_from_bottom label 92
12-22 13:04 DEBUG    find_def_from_top label 92
12-22 13:04 DEBUG    idom 84 from label 92
12-22 13:04 DEBUG    find_def_from_bottom label 84
12-22 13:04 DEBUG    find_def_from_top label 84
12-22 13:04 DEBUG    idom 58 from label 84
12-22 13:04 DEBUG    find_def_from_bottom label 58
12-22 13:04 DEBUG    find_def_from_top label 58
12-22 13:04 DEBUG    idom 18 from label 58
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    replaced with: $126binary_modulo.5 = origsize % known_size.2
12-22 13:04 DEBUG    on stmt: $const128.6 = const(int, 0)
12-22 13:04 DEBUG    on stmt: ok.1 = $126binary_modulo.5 == $const128.6
12-22 13:04 DEBUG    on stmt: jump 134
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 134
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2064), Var(inferred, arrayobj.py:2061)], incoming_blocks=[114, 100])
12-22 13:04 DEBUG    on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2065), Var(ok, arrayobj.py:2062)], incoming_blocks=[114, 100])
12-22 13:04 DEBUG    on stmt: bool136 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:2066),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $136pred, 146, 138
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 138
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const140.1 = const(str, total size of new array must be unchanged)
12-22 13:04 DEBUG    on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:2067)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: shape[neg_ax] = inferred.2
12-22 13:04 DEBUG    on stmt: jump 164
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 156
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
12-22 13:04 DEBUG    on stmt: $const158.1 = const(str, multiple negative shape values)
12-22 13:04 DEBUG    on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:2071)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 164
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: $const164.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $166return_value.1 = cast(value=$const164.0)
12-22 13:04 DEBUG    on stmt: return $166return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 165
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124F3BB0>
12-22 13:04 DEBUG    on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2049), Var(num_neg_value.1, arrayobj.py:2049)], incoming_blocks=[48, 34])
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	LOAD_FAST(arg=0, lineno=483)
           4	LOAD_FAST(arg=1, lineno=483)
           6	COMPARE_OP(arg=4, lineno=483)
           8	RETURN_VALUE(arg=None, lineno=483)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=481)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=483)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=483)
12-22 13:04 DEBUG    stack ['$a2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=483)
12-22 13:04 DEBUG    stack ['$a2.0', '$min_val4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=483)
12-22 13:04 DEBUG    stack ['$6compare_op.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$min_val4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$min_val4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF125A36A0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: min_val = arg(1, name=min_val)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = a > min_val
12-22 13:04 DEBUG    on stmt: $8return_value.3 = cast(value=$6compare_op.2)
12-22 13:04 DEBUG    on stmt: return $8return_value.3
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [<numba.core.ir.Assign object at 0x000001AF12585AC0>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x000001AF125853A0>],
             'a': [<numba.core.ir.Assign object at 0x000001AF125A3B50>],
             'min_val': [<numba.core.ir.Assign object at 0x000001AF125A3550>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=16, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=16, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=437)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
12-22 13:04 DEBUG    stack ['$2load_deref.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
12-22 13:04 DEBUG    stack ['$6load_global.1']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
12-22 13:04 DEBUG    stack ['$8load_method.2']
12-22 13:04 DEBUG    dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
12-22 13:04 DEBUG    stack ['$8load_method.2', '$a10.3']
12-22 13:04 DEBUG    dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
12-22 13:04 DEBUG    stack ['$12call_method.4']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=16 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi16.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=16 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=16, inst=FOR_ITER(arg=16, lineno=441)
12-22 13:04 DEBUG    stack ['$phi16.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=34 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
12-22 13:04 DEBUG    stack ['$c34.0']
12-22 13:04 DEBUG    dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
12-22 13:04 DEBUG    stack ['$c34.0', '$a36.1']
12-22 13:04 DEBUG    dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
12-22 13:04 DEBUG    stack ['$c34.0', '$38load_attr.2']
12-22 13:04 DEBUG    dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
12-22 13:04 DEBUG    stack ['$40binary_true_divide.3']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi18.0', '$phi18.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=18 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
12-22 13:04 DEBUG    stack ['$phi18.0', '$phi18.1']
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0']
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0', '$c20.2']
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0', '$c20.2', '$v22.3']
12-22 13:04 DEBUG    dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0', '$c20.2', '$24load_method.4']
12-22 13:04 DEBUG    dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0', '$c20.2', '$26call_method.5']
12-22 13:04 DEBUG    dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0', '$28inplace_add.6']
12-22 13:04 DEBUG    dispatch pc=32, inst=JUMP_ABSOLUTE(arg=16, lineno=442)
12-22 13:04 DEBUG    stack ['$phi18.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=16 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
12-22 13:04 DEBUG    keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1265AF70>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: c = freevar(acc_init: 0.0)
12-22 13:04 DEBUG    on stmt: $6load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
12-22 13:04 DEBUG    on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
12-22 13:04 DEBUG    on stmt: $phi16.0 = $14get_iter.5
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block analysis pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1265AF70>
12-22 13:04 DEBUG    on stmt: $16for_iter.1 = iternext(value=$phi16.0)
12-22 13:04 DEBUG    on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi18.1 = $16for_iter.2
12-22 13:04 DEBUG    on stmt: branch $16for_iter.3, 18, 34
12-22 13:04 DEBUG    ==== SSA block analysis pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1265AF70>
12-22 13:04 DEBUG    on stmt: v = $phi18.1
12-22 13:04 DEBUG    on stmt: $24load_method.4 = getattr(value=v, attr=item)
12-22 13:04 DEBUG    on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: c = $28inplace_add.6
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block analysis pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF1265AF70>
12-22 13:04 DEBUG    on stmt: $38load_attr.2 = getattr(value=a, attr=size)
12-22 13:04 DEBUG    on stmt: $40binary_true_divide.3 = c / $38load_attr.2
12-22 13:04 DEBUG    on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
12-22 13:04 DEBUG    on stmt: return $42return_value.4
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$12call_method.4': [<numba.core.ir.Assign object at 0x000001AF125E8550>],
             '$14get_iter.5': [<numba.core.ir.Assign object at 0x000001AF12595820>],
             '$16for_iter.1': [<numba.core.ir.Assign object at 0x000001AF1246DAF0>],
             '$16for_iter.2': [<numba.core.ir.Assign object at 0x000001AF1246D1C0>],
             '$16for_iter.3': [<numba.core.ir.Assign object at 0x000001AF12413580>],
             '$24load_method.4': [<numba.core.ir.Assign object at 0x000001AF12418A30>],
             '$26call_method.5': [<numba.core.ir.Assign object at 0x000001AF12418E80>],
             '$28inplace_add.6': [<numba.core.ir.Assign object at 0x000001AF12418C70>],
             '$38load_attr.2': [<numba.core.ir.Assign object at 0x000001AF12653250>],
             '$40binary_true_divide.3': [<numba.core.ir.Assign object at 0x000001AF126530D0>],
             '$42return_value.4': [<numba.core.ir.Assign object at 0x000001AF12653520>],
             '$6load_global.1': [<numba.core.ir.Assign object at 0x000001AF12444F40>],
             '$8load_method.2': [<numba.core.ir.Assign object at 0x000001AF125C6EB0>],
             '$phi16.0': [<numba.core.ir.Assign object at 0x000001AF12489850>],
             '$phi18.1': [<numba.core.ir.Assign object at 0x000001AF12400BE0>],
             'a': [<numba.core.ir.Assign object at 0x000001AF124893D0>],
             'c': [<numba.core.ir.Assign object at 0x000001AF12489970>,
                   <numba.core.ir.Assign object at 0x000001AF123FA370>],
             'v': [<numba.core.ir.Assign object at 0x000001AF1241EA90>]})
12-22 13:04 DEBUG    SSA violators {'c'}
12-22 13:04 DEBUG    Fix SSA violator on var c
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1265AFD0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: c = freevar(acc_init: 0.0)
12-22 13:04 DEBUG    first assign: c
12-22 13:04 DEBUG    replaced with: c = freevar(acc_init: 0.0)
12-22 13:04 DEBUG    on stmt: $6load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
12-22 13:04 DEBUG    on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
12-22 13:04 DEBUG    on stmt: $phi16.0 = $14get_iter.5
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1265AFD0>
12-22 13:04 DEBUG    on stmt: $16for_iter.1 = iternext(value=$phi16.0)
12-22 13:04 DEBUG    on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi18.1 = $16for_iter.2
12-22 13:04 DEBUG    on stmt: branch $16for_iter.3, 18, 34
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1265AFD0>
12-22 13:04 DEBUG    on stmt: v = $phi18.1
12-22 13:04 DEBUG    on stmt: $24load_method.4 = getattr(value=v, attr=item)
12-22 13:04 DEBUG    on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: c = $28inplace_add.6
12-22 13:04 DEBUG    replaced with: c.1 = $28inplace_add.6
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF1265AFD0>
12-22 13:04 DEBUG    on stmt: $38load_attr.2 = getattr(value=a, attr=size)
12-22 13:04 DEBUG    on stmt: $40binary_true_divide.3 = c / $38load_attr.2
12-22 13:04 DEBUG    on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
12-22 13:04 DEBUG    on stmt: return $42return_value.4
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001AF1265E0D0>],
             18: [<numba.core.ir.Assign object at 0x000001AF1265E160>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1265AFD0>
12-22 13:04 DEBUG    on stmt: a = arg(0, name=a)
12-22 13:04 DEBUG    on stmt: c = freevar(acc_init: 0.0)
12-22 13:04 DEBUG    on stmt: $6load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
12-22 13:04 DEBUG    on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
12-22 13:04 DEBUG    on stmt: $phi16.0 = $14get_iter.5
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 16
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1265AFD0>
12-22 13:04 DEBUG    on stmt: $16for_iter.1 = iternext(value=$phi16.0)
12-22 13:04 DEBUG    on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi18.1 = $16for_iter.2
12-22 13:04 DEBUG    on stmt: branch $16for_iter.3, 18, 34
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1265AFD0>
12-22 13:04 DEBUG    on stmt: v = $phi18.1
12-22 13:04 DEBUG    on stmt: $24load_method.4 = getattr(value=v, attr=item)
12-22 13:04 DEBUG    on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 18
12-22 13:04 DEBUG    idom 16 from label 18
12-22 13:04 DEBUG    find_def_from_bottom label 16
12-22 13:04 DEBUG    find_def_from_top label 16
12-22 13:04 DEBUG    insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
12-22 13:04 DEBUG    find_def_from_bottom label 0
12-22 13:04 DEBUG    incoming_def c = freevar(acc_init: 0.0)
12-22 13:04 DEBUG    find_def_from_bottom label 18
12-22 13:04 DEBUG    incoming_def c.1 = $28inplace_add.6
12-22 13:04 DEBUG    replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: c.1 = $28inplace_add.6
12-22 13:04 DEBUG    on stmt: jump 16
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 34
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1265AFD0>
12-22 13:04 DEBUG    on stmt: $38load_attr.2 = getattr(value=a, attr=size)
12-22 13:04 DEBUG    on stmt: $40binary_true_divide.3 = c / $38load_attr.2
12-22 13:04 DEBUG    find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
12-22 13:04 DEBUG    find_def_from_top label 34
12-22 13:04 DEBUG    idom 16 from label 34
12-22 13:04 DEBUG    find_def_from_bottom label 16
12-22 13:04 DEBUG    replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
12-22 13:04 DEBUG    on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
12-22 13:04 DEBUG    on stmt: return $42return_value.4
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=1)
           4	LOAD_CONST(arg=1, lineno=1)
           6	COMPARE_OP(arg=4, lineno=1)
           8	RETURN_VALUE(arg=None, lineno=1)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=1)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1)
12-22 13:04 DEBUG    stack ['$ith_distances_12.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=1)
12-22 13:04 DEBUG    stack ['$ith_distances_12.0', '$const4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=1)
12-22 13:04 DEBUG    stack ['$6compare_op.2']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ith_distances_12.0'}), (4, {'res': '$const4.1'}), (6, {'lhs': '$ith_distances_12.0', 'rhs': '$const4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    ith_distances_1 = arg(0, name=ith_distances_1) ['ith_distances_1']
    $const4.1 = const(float, 0.0)            ['$const4.1']
    $6compare_op.2 = ith_distances_1 > $const4.1 ['$6compare_op.2', '$const4.1', 'ith_distances_1']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12595F70>
12-22 13:04 DEBUG    on stmt: ith_distances_1 = arg(0, name=ith_distances_1)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = ith_distances_1 > $const4.1
12-22 13:04 DEBUG    on stmt: $8return_value.3 = cast(value=$6compare_op.2)
12-22 13:04 DEBUG    on stmt: return $8return_value.3
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [<numba.core.ir.Assign object at 0x000001AF1259FAC0>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x000001AF1259FF70>],
             '$const4.1': [<numba.core.ir.Assign object at 0x000001AF1259F4F0>],
             'ith_distances_1': [<numba.core.ir.Assign object at 0x000001AF12595490>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=350)
           2	LOAD_FAST(arg=0, lineno=408)
           4	LOAD_ATTR(arg=0, lineno=408)
           6	LOAD_CONST(arg=1, lineno=408)
           8	BINARY_SUBSCR(arg=None, lineno=408)
          10	STORE_FAST(arg=6, lineno=408)
          12	LOAD_FAST(arg=0, lineno=409)
          14	LOAD_ATTR(arg=0, lineno=409)
          16	LOAD_CONST(arg=2, lineno=409)
          18	BINARY_SUBSCR(arg=None, lineno=409)
          20	STORE_FAST(arg=7, lineno=409)
          22	LOAD_GLOBAL(arg=1, lineno=411)
          24	LOAD_ATTR(arg=2, lineno=411)
          26	LOAD_FAST(arg=0, lineno=411)
          28	LOAD_ATTR(arg=3, lineno=411)
          30	LOAD_GLOBAL(arg=1, lineno=411)
          32	LOAD_ATTR(arg=4, lineno=411)
          34	LOAD_CONST(arg=3, lineno=411)
          36	CALL_FUNCTION_KW(arg=2, lineno=411)
          38	STORE_FAST(arg=8, lineno=411)
          40	LOAD_GLOBAL(arg=1, lineno=412)
          42	LOAD_ATTR(arg=2, lineno=412)
          44	LOAD_FAST(arg=0, lineno=412)
          46	LOAD_ATTR(arg=3, lineno=412)
          48	LOAD_GLOBAL(arg=1, lineno=412)
          50	LOAD_ATTR(arg=4, lineno=412)
          52	LOAD_CONST(arg=3, lineno=412)
          54	CALL_FUNCTION_KW(arg=2, lineno=412)
          56	STORE_FAST(arg=9, lineno=412)
          58	LOAD_GLOBAL(arg=1, lineno=413)
          60	LOAD_ATTR(arg=2, lineno=413)
          62	LOAD_FAST(arg=0, lineno=413)
          64	LOAD_ATTR(arg=3, lineno=413)
          66	LOAD_GLOBAL(arg=1, lineno=413)
          68	LOAD_ATTR(arg=5, lineno=413)
          70	LOAD_CONST(arg=3, lineno=413)
          72	CALL_FUNCTION_KW(arg=2, lineno=413)
          74	STORE_FAST(arg=10, lineno=413)
          76	LOAD_FAST(arg=4, lineno=414)
          78	POP_JUMP_IF_FALSE(arg=100, lineno=414)
          80	LOAD_GLOBAL(arg=1, lineno=415)
          82	LOAD_ATTR(arg=2, lineno=415)
          84	LOAD_FAST(arg=0, lineno=415)
          86	LOAD_ATTR(arg=3, lineno=415)
          88	LOAD_GLOBAL(arg=1, lineno=415)
          90	LOAD_ATTR(arg=5, lineno=415)
          92	LOAD_CONST(arg=3, lineno=415)
          94	CALL_FUNCTION_KW(arg=2, lineno=415)
          96	STORE_FAST(arg=11, lineno=415)
          98	JUMP_FORWARD(arg=4, lineno=415)
>        100	LOAD_CONST(arg=4, lineno=417)
         102	STORE_FAST(arg=11, lineno=417)
>        104	LOAD_GLOBAL(arg=6, lineno=419)
         106	LOAD_FAST(arg=6, lineno=419)
         108	CALL_FUNCTION(arg=1, lineno=419)
         110	GET_ITER(arg=None, lineno=419)
>        112	FOR_ITER(arg=228, lineno=419)
         114	STORE_FAST(arg=12, lineno=419)
         116	LOAD_GLOBAL(arg=6, lineno=420)
         118	LOAD_FAST(arg=7, lineno=420)
         120	CALL_FUNCTION(arg=1, lineno=420)
         122	GET_ITER(arg=None, lineno=420)
>        124	FOR_ITER(arg=214, lineno=420)
         126	STORE_FAST(arg=13, lineno=420)
         128	LOAD_FAST(arg=0, lineno=421)
         130	LOAD_FAST(arg=12, lineno=421)
         132	LOAD_FAST(arg=13, lineno=421)
         134	BUILD_TUPLE(arg=2, lineno=421)
         136	BINARY_SUBSCR(arg=None, lineno=421)
         138	LOAD_CONST(arg=5, lineno=421)
         140	COMPARE_OP(arg=2, lineno=421)
         142	POP_JUMP_IF_FALSE(arg=146, lineno=421)
         144	JUMP_ABSOLUTE(arg=124, lineno=422)
>        146	LOAD_FAST(arg=5, lineno=425)
         148	LOAD_CONST(arg=6, lineno=425)
         150	COMPARE_OP(arg=2, lineno=425)
         152	LOAD_FAST(arg=0, lineno=425)
         154	LOAD_FAST(arg=12, lineno=425)
         156	LOAD_FAST(arg=13, lineno=425)
         158	BUILD_TUPLE(arg=2, lineno=425)
         160	BINARY_SUBSCR(arg=None, lineno=425)
         162	LOAD_FAST(arg=12, lineno=425)
         164	COMPARE_OP(arg=2, lineno=425)
         166	BINARY_AND(arg=None, lineno=425)
         168	POP_JUMP_IF_FALSE(arg=176, lineno=425)
         170	LOAD_CONST(arg=7, lineno=426)
         172	STORE_FAST(arg=14, lineno=426)
         174	JUMP_FORWARD(arg=78, lineno=426)
>        176	LOAD_FAST(arg=1, lineno=427)
         178	LOAD_FAST(arg=12, lineno=427)
         180	LOAD_FAST(arg=13, lineno=427)
         182	BUILD_TUPLE(arg=2, lineno=427)
         184	BINARY_SUBSCR(arg=None, lineno=427)
         186	LOAD_FAST(arg=3, lineno=427)
         188	LOAD_FAST(arg=12, lineno=427)
         190	BINARY_SUBSCR(arg=None, lineno=427)
         192	BINARY_SUBTRACT(arg=None, lineno=427)
         194	LOAD_CONST(arg=7, lineno=427)
         196	COMPARE_OP(arg=1, lineno=427)
         198	POP_JUMP_IF_TRUE(arg=212, lineno=427)
         200	LOAD_FAST(arg=2, lineno=427)
         202	LOAD_FAST(arg=12, lineno=427)
         204	BINARY_SUBSCR(arg=None, lineno=427)
         206	LOAD_CONST(arg=7, lineno=427)
         208	COMPARE_OP(arg=2, lineno=427)
         210	POP_JUMP_IF_FALSE(arg=218, lineno=427)
>        212	LOAD_CONST(arg=8, lineno=428)
         214	STORE_FAST(arg=14, lineno=428)
         216	JUMP_FORWARD(arg=36, lineno=428)
>        218	LOAD_GLOBAL(arg=1, lineno=430)
         220	LOAD_METHOD(arg=7, lineno=430)
         222	LOAD_FAST(arg=1, lineno=430)
         224	LOAD_FAST(arg=12, lineno=430)
         226	LOAD_FAST(arg=13, lineno=430)
         228	BUILD_TUPLE(arg=2, lineno=430)
         230	BINARY_SUBSCR(arg=None, lineno=430)
         232	LOAD_FAST(arg=3, lineno=430)
         234	LOAD_FAST(arg=12, lineno=430)
         236	BINARY_SUBSCR(arg=None, lineno=430)
         238	BINARY_SUBTRACT(arg=None, lineno=430)
         240	LOAD_FAST(arg=2, lineno=430)
         242	LOAD_FAST(arg=12, lineno=430)
         244	BINARY_SUBSCR(arg=None, lineno=430)
         246	BINARY_TRUE_DIVIDE(arg=None, lineno=430)
         248	UNARY_NEGATIVE(arg=None, lineno=430)
         250	CALL_METHOD(arg=1, lineno=430)
         252	STORE_FAST(arg=14, lineno=430)
>        254	LOAD_FAST(arg=12, lineno=432)
         256	LOAD_FAST(arg=8, lineno=432)
         258	LOAD_FAST(arg=12, lineno=432)
         260	LOAD_FAST(arg=7, lineno=432)
         262	BINARY_MULTIPLY(arg=None, lineno=432)
         264	LOAD_FAST(arg=13, lineno=432)
         266	BINARY_ADD(arg=None, lineno=432)
         268	STORE_SUBSCR(arg=None, lineno=432)
         270	LOAD_FAST(arg=0, lineno=433)
         272	LOAD_FAST(arg=12, lineno=433)
         274	LOAD_FAST(arg=13, lineno=433)
         276	BUILD_TUPLE(arg=2, lineno=433)
         278	BINARY_SUBSCR(arg=None, lineno=433)
         280	LOAD_FAST(arg=9, lineno=433)
         282	LOAD_FAST(arg=12, lineno=433)
         284	LOAD_FAST(arg=7, lineno=433)
         286	BINARY_MULTIPLY(arg=None, lineno=433)
         288	LOAD_FAST(arg=13, lineno=433)
         290	BINARY_ADD(arg=None, lineno=433)
         292	STORE_SUBSCR(arg=None, lineno=433)
         294	LOAD_FAST(arg=14, lineno=434)
         296	LOAD_FAST(arg=10, lineno=434)
         298	LOAD_FAST(arg=12, lineno=434)
         300	LOAD_FAST(arg=7, lineno=434)
         302	BINARY_MULTIPLY(arg=None, lineno=434)
         304	LOAD_FAST(arg=13, lineno=434)
         306	BINARY_ADD(arg=None, lineno=434)
         308	STORE_SUBSCR(arg=None, lineno=434)
         310	LOAD_FAST(arg=4, lineno=435)
         312	POP_JUMP_IF_FALSE(arg=124, lineno=435)
         314	LOAD_FAST(arg=1, lineno=436)
         316	LOAD_FAST(arg=12, lineno=436)
         318	LOAD_FAST(arg=13, lineno=436)
         320	BUILD_TUPLE(arg=2, lineno=436)
         322	BINARY_SUBSCR(arg=None, lineno=436)
         324	LOAD_FAST(arg=11, lineno=436)
         326	LOAD_FAST(arg=12, lineno=436)
         328	LOAD_FAST(arg=7, lineno=436)
         330	BINARY_MULTIPLY(arg=None, lineno=436)
         332	LOAD_FAST(arg=13, lineno=436)
         334	BINARY_ADD(arg=None, lineno=436)
         336	STORE_SUBSCR(arg=None, lineno=436)
         338	JUMP_ABSOLUTE(arg=124, lineno=436)
>        340	JUMP_ABSOLUTE(arg=112, lineno=436)
>        342	LOAD_FAST(arg=8, lineno=438)
         344	LOAD_FAST(arg=9, lineno=438)
         346	LOAD_FAST(arg=10, lineno=438)
         348	LOAD_FAST(arg=11, lineno=438)
         350	BUILD_TUPLE(arg=4, lineno=438)
         352	RETURN_VALUE(arg=None, lineno=438)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=350)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=408)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=408)
12-22 13:04 DEBUG    stack ['$knn_indices2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=408)
12-22 13:04 DEBUG    stack ['$4load_attr.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=408)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$const6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=STORE_FAST(arg=6, lineno=408)
12-22 13:04 DEBUG    stack ['$8binary_subscr.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=409)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=14, inst=LOAD_ATTR(arg=0, lineno=409)
12-22 13:04 DEBUG    stack ['$knn_indices12.4']
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_CONST(arg=2, lineno=409)
12-22 13:04 DEBUG    stack ['$14load_attr.5']
12-22 13:04 DEBUG    dispatch pc=18, inst=BINARY_SUBSCR(arg=None, lineno=409)
12-22 13:04 DEBUG    stack ['$14load_attr.5', '$const16.6']
12-22 13:04 DEBUG    dispatch pc=20, inst=STORE_FAST(arg=7, lineno=409)
12-22 13:04 DEBUG    stack ['$18binary_subscr.7']
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_GLOBAL(arg=1, lineno=411)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_ATTR(arg=2, lineno=411)
12-22 13:04 DEBUG    stack ['$22load_global.8']
12-22 13:04 DEBUG    dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=411)
12-22 13:04 DEBUG    stack ['$24load_attr.9']
12-22 13:04 DEBUG    dispatch pc=28, inst=LOAD_ATTR(arg=3, lineno=411)
12-22 13:04 DEBUG    stack ['$24load_attr.9', '$knn_indices26.10']
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=411)
12-22 13:04 DEBUG    stack ['$24load_attr.9', '$28load_attr.11']
12-22 13:04 DEBUG    dispatch pc=32, inst=LOAD_ATTR(arg=4, lineno=411)
12-22 13:04 DEBUG    stack ['$24load_attr.9', '$28load_attr.11', '$30load_global.12']
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_CONST(arg=3, lineno=411)
12-22 13:04 DEBUG    stack ['$24load_attr.9', '$28load_attr.11', '$32load_attr.13']
12-22 13:04 DEBUG    dispatch pc=36, inst=CALL_FUNCTION_KW(arg=2, lineno=411)
12-22 13:04 DEBUG    stack ['$24load_attr.9', '$28load_attr.11', '$32load_attr.13', '$const34.14']
12-22 13:04 DEBUG    dispatch pc=38, inst=STORE_FAST(arg=8, lineno=411)
12-22 13:04 DEBUG    stack ['$36call_function_kw.15']
12-22 13:04 DEBUG    dispatch pc=40, inst=LOAD_GLOBAL(arg=1, lineno=412)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=42, inst=LOAD_ATTR(arg=2, lineno=412)
12-22 13:04 DEBUG    stack ['$40load_global.16']
12-22 13:04 DEBUG    dispatch pc=44, inst=LOAD_FAST(arg=0, lineno=412)
12-22 13:04 DEBUG    stack ['$42load_attr.17']
12-22 13:04 DEBUG    dispatch pc=46, inst=LOAD_ATTR(arg=3, lineno=412)
12-22 13:04 DEBUG    stack ['$42load_attr.17', '$knn_indices44.18']
12-22 13:04 DEBUG    dispatch pc=48, inst=LOAD_GLOBAL(arg=1, lineno=412)
12-22 13:04 DEBUG    stack ['$42load_attr.17', '$46load_attr.19']
12-22 13:04 DEBUG    dispatch pc=50, inst=LOAD_ATTR(arg=4, lineno=412)
12-22 13:04 DEBUG    stack ['$42load_attr.17', '$46load_attr.19', '$48load_global.20']
12-22 13:04 DEBUG    dispatch pc=52, inst=LOAD_CONST(arg=3, lineno=412)
12-22 13:04 DEBUG    stack ['$42load_attr.17', '$46load_attr.19', '$50load_attr.21']
12-22 13:04 DEBUG    dispatch pc=54, inst=CALL_FUNCTION_KW(arg=2, lineno=412)
12-22 13:04 DEBUG    stack ['$42load_attr.17', '$46load_attr.19', '$50load_attr.21', '$const52.22']
12-22 13:04 DEBUG    dispatch pc=56, inst=STORE_FAST(arg=9, lineno=412)
12-22 13:04 DEBUG    stack ['$54call_function_kw.23']
12-22 13:04 DEBUG    dispatch pc=58, inst=LOAD_GLOBAL(arg=1, lineno=413)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=60, inst=LOAD_ATTR(arg=2, lineno=413)
12-22 13:04 DEBUG    stack ['$58load_global.24']
12-22 13:04 DEBUG    dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=413)
12-22 13:04 DEBUG    stack ['$60load_attr.25']
12-22 13:04 DEBUG    dispatch pc=64, inst=LOAD_ATTR(arg=3, lineno=413)
12-22 13:04 DEBUG    stack ['$60load_attr.25', '$knn_indices62.26']
12-22 13:04 DEBUG    dispatch pc=66, inst=LOAD_GLOBAL(arg=1, lineno=413)
12-22 13:04 DEBUG    stack ['$60load_attr.25', '$64load_attr.27']
12-22 13:04 DEBUG    dispatch pc=68, inst=LOAD_ATTR(arg=5, lineno=413)
12-22 13:04 DEBUG    stack ['$60load_attr.25', '$64load_attr.27', '$66load_global.28']
12-22 13:04 DEBUG    dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=413)
12-22 13:04 DEBUG    stack ['$60load_attr.25', '$64load_attr.27', '$68load_attr.29']
12-22 13:04 DEBUG    dispatch pc=72, inst=CALL_FUNCTION_KW(arg=2, lineno=413)
12-22 13:04 DEBUG    stack ['$60load_attr.25', '$64load_attr.27', '$68load_attr.29', '$const70.30']
12-22 13:04 DEBUG    dispatch pc=74, inst=STORE_FAST(arg=10, lineno=413)
12-22 13:04 DEBUG    stack ['$72call_function_kw.31']
12-22 13:04 DEBUG    dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=414)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=100, lineno=414)
12-22 13:04 DEBUG    stack ['$return_dists76.32']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=80, stack=(), blockstack=(), npush=0), Edge(pc=100, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=80 nstack_initial=0), State(pc_initial=100 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=80 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=80, inst=LOAD_GLOBAL(arg=1, lineno=415)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=415)
12-22 13:04 DEBUG    stack ['$80load_global.0']
12-22 13:04 DEBUG    dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=415)
12-22 13:04 DEBUG    stack ['$82load_attr.1']
12-22 13:04 DEBUG    dispatch pc=86, inst=LOAD_ATTR(arg=3, lineno=415)
12-22 13:04 DEBUG    stack ['$82load_attr.1', '$knn_indices84.2']
12-22 13:04 DEBUG    dispatch pc=88, inst=LOAD_GLOBAL(arg=1, lineno=415)
12-22 13:04 DEBUG    stack ['$82load_attr.1', '$86load_attr.3']
12-22 13:04 DEBUG    dispatch pc=90, inst=LOAD_ATTR(arg=5, lineno=415)
12-22 13:04 DEBUG    stack ['$82load_attr.1', '$86load_attr.3', '$88load_global.4']
12-22 13:04 DEBUG    dispatch pc=92, inst=LOAD_CONST(arg=3, lineno=415)
12-22 13:04 DEBUG    stack ['$82load_attr.1', '$86load_attr.3', '$90load_attr.5']
12-22 13:04 DEBUG    dispatch pc=94, inst=CALL_FUNCTION_KW(arg=2, lineno=415)
12-22 13:04 DEBUG    stack ['$82load_attr.1', '$86load_attr.3', '$90load_attr.5', '$const92.6']
12-22 13:04 DEBUG    dispatch pc=96, inst=STORE_FAST(arg=11, lineno=415)
12-22 13:04 DEBUG    stack ['$94call_function_kw.7']
12-22 13:04 DEBUG    dispatch pc=98, inst=JUMP_FORWARD(arg=4, lineno=415)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=100 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=100, inst=LOAD_CONST(arg=4, lineno=417)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=102, inst=STORE_FAST(arg=11, lineno=417)
12-22 13:04 DEBUG    stack ['$const100.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=104 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=104, inst=LOAD_GLOBAL(arg=6, lineno=419)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=419)
12-22 13:04 DEBUG    stack ['$104load_global.0']
12-22 13:04 DEBUG    dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=419)
12-22 13:04 DEBUG    stack ['$104load_global.0', '$n_samples106.1']
12-22 13:04 DEBUG    dispatch pc=110, inst=GET_ITER(arg=None, lineno=419)
12-22 13:04 DEBUG    stack ['$108call_function.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=112, stack=('$110get_iter.3',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=112 nstack_initial=1)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=112 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi112.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=112 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=112, inst=FOR_ITER(arg=228, lineno=419)
12-22 13:04 DEBUG    stack ['$phi112.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=342, stack=(), blockstack=(), npush=0), Edge(pc=114, stack=('$phi112.0', '$112for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=342 nstack_initial=0), State(pc_initial=114 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=342 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=438)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=344, inst=LOAD_FAST(arg=9, lineno=438)
12-22 13:04 DEBUG    stack ['$rows342.0']
12-22 13:04 DEBUG    dispatch pc=346, inst=LOAD_FAST(arg=10, lineno=438)
12-22 13:04 DEBUG    stack ['$rows342.0', '$cols344.1']
12-22 13:04 DEBUG    dispatch pc=348, inst=LOAD_FAST(arg=11, lineno=438)
12-22 13:04 DEBUG    stack ['$rows342.0', '$cols344.1', '$vals346.2']
12-22 13:04 DEBUG    dispatch pc=350, inst=BUILD_TUPLE(arg=4, lineno=438)
12-22 13:04 DEBUG    stack ['$rows342.0', '$cols344.1', '$vals346.2', '$dists348.3']
12-22 13:04 DEBUG    dispatch pc=352, inst=RETURN_VALUE(arg=None, lineno=438)
12-22 13:04 DEBUG    stack ['$350build_tuple.4']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=114 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi114.0', '$phi114.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=114 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=114, inst=STORE_FAST(arg=12, lineno=419)
12-22 13:04 DEBUG    stack ['$phi114.0', '$phi114.1']
12-22 13:04 DEBUG    dispatch pc=116, inst=LOAD_GLOBAL(arg=6, lineno=420)
12-22 13:04 DEBUG    stack ['$phi114.0']
12-22 13:04 DEBUG    dispatch pc=118, inst=LOAD_FAST(arg=7, lineno=420)
12-22 13:04 DEBUG    stack ['$phi114.0', '$116load_global.2']
12-22 13:04 DEBUG    dispatch pc=120, inst=CALL_FUNCTION(arg=1, lineno=420)
12-22 13:04 DEBUG    stack ['$phi114.0', '$116load_global.2', '$n_neighbors118.3']
12-22 13:04 DEBUG    dispatch pc=122, inst=GET_ITER(arg=None, lineno=420)
12-22 13:04 DEBUG    stack ['$phi114.0', '$120call_function.4']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=124, stack=('$phi114.0', '$122get_iter.5'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=124 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi124.0', '$phi124.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=124 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=124, inst=FOR_ITER(arg=214, lineno=420)
12-22 13:04 DEBUG    stack ['$phi124.0', '$phi124.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=340, stack=('$phi124.0',), blockstack=(), npush=0), Edge(pc=126, stack=('$phi124.0', '$phi124.1', '$124for_iter.3'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=340 nstack_initial=1), State(pc_initial=126 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi340.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=340 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=340, inst=JUMP_ABSOLUTE(arg=112, lineno=436)
12-22 13:04 DEBUG    stack ['$phi340.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=112, stack=('$phi340.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=126 nstack_initial=3), State(pc_initial=112 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi126.0', '$phi126.1', '$phi126.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=126 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=126, inst=STORE_FAST(arg=13, lineno=420)
12-22 13:04 DEBUG    stack ['$phi126.0', '$phi126.1', '$phi126.2']
12-22 13:04 DEBUG    dispatch pc=128, inst=LOAD_FAST(arg=0, lineno=421)
12-22 13:04 DEBUG    stack ['$phi126.0', '$phi126.1']
12-22 13:04 DEBUG    dispatch pc=130, inst=LOAD_FAST(arg=12, lineno=421)
12-22 13:04 DEBUG    stack ['$phi126.0', '$phi126.1', '$knn_indices128.3']
12-22 13:04 DEBUG    dispatch pc=132, inst=LOAD_FAST(arg=13, lineno=421)
12-22 13:04 DEBUG    stack ['$phi126.0', '$phi126.1', '$knn_indices128.3', '$i130.4']
12-22 13:04 DEBUG    dispatch pc=134, inst=BUILD_TUPLE(arg=2, lineno=421)
12-22 13:04 DEBUG    stack ['$phi126.0', '$phi126.1', '$knn_indices128.3', '$i130.4', '$j132.5']
12-22 13:04 DEBUG    dispatch pc=136, inst=BINARY_SUBSCR(arg=None, lineno=421)
12-22 13:04 DEBUG    stack ['$phi126.0', '$phi126.1', '$knn_indices128.3', '$134build_tuple.6']
12-22 13:04 DEBUG    dispatch pc=138, inst=LOAD_CONST(arg=5, lineno=421)
12-22 13:04 DEBUG    stack ['$phi126.0', '$phi126.1', '$136binary_subscr.7']
12-22 13:04 DEBUG    dispatch pc=140, inst=COMPARE_OP(arg=2, lineno=421)
12-22 13:04 DEBUG    stack ['$phi126.0', '$phi126.1', '$136binary_subscr.7', '$const138.8']
12-22 13:04 DEBUG    dispatch pc=142, inst=POP_JUMP_IF_FALSE(arg=146, lineno=421)
12-22 13:04 DEBUG    stack ['$phi126.0', '$phi126.1', '$140compare_op.9']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=144, stack=('$phi126.0', '$phi126.1'), blockstack=(), npush=0), Edge(pc=146, stack=('$phi126.0', '$phi126.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=144 nstack_initial=2), State(pc_initial=146 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=144 nstack_initial=2), State(pc_initial=146 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi144.0', '$phi144.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=144 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=144, inst=JUMP_ABSOLUTE(arg=124, lineno=422)
12-22 13:04 DEBUG    stack ['$phi144.0', '$phi144.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=124, stack=('$phi144.0', '$phi144.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=146 nstack_initial=2), State(pc_initial=124 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi146.0', '$phi146.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=146 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=146, inst=LOAD_FAST(arg=5, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1']
12-22 13:04 DEBUG    dispatch pc=148, inst=LOAD_CONST(arg=6, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1', '$bipartite146.2']
12-22 13:04 DEBUG    dispatch pc=150, inst=COMPARE_OP(arg=2, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1', '$bipartite146.2', '$const148.3']
12-22 13:04 DEBUG    dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1', '$150compare_op.4']
12-22 13:04 DEBUG    dispatch pc=154, inst=LOAD_FAST(arg=12, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$knn_indices152.5']
12-22 13:04 DEBUG    dispatch pc=156, inst=LOAD_FAST(arg=13, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$knn_indices152.5', '$i154.6']
12-22 13:04 DEBUG    dispatch pc=158, inst=BUILD_TUPLE(arg=2, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$knn_indices152.5', '$i154.6', '$j156.7']
12-22 13:04 DEBUG    dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$knn_indices152.5', '$158build_tuple.8']
12-22 13:04 DEBUG    dispatch pc=162, inst=LOAD_FAST(arg=12, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$160binary_subscr.9']
12-22 13:04 DEBUG    dispatch pc=164, inst=COMPARE_OP(arg=2, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$160binary_subscr.9', '$i162.10']
12-22 13:04 DEBUG    dispatch pc=166, inst=BINARY_AND(arg=None, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1', '$150compare_op.4', '$164compare_op.11']
12-22 13:04 DEBUG    dispatch pc=168, inst=POP_JUMP_IF_FALSE(arg=176, lineno=425)
12-22 13:04 DEBUG    stack ['$phi146.0', '$phi146.1', '$166binary_and.12']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=170, stack=('$phi146.0', '$phi146.1'), blockstack=(), npush=0), Edge(pc=176, stack=('$phi146.0', '$phi146.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=124 nstack_initial=2), State(pc_initial=170 nstack_initial=2), State(pc_initial=176 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=170 nstack_initial=2), State(pc_initial=176 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi170.0', '$phi170.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=170 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=170, inst=LOAD_CONST(arg=7, lineno=426)
12-22 13:04 DEBUG    stack ['$phi170.0', '$phi170.1']
12-22 13:04 DEBUG    dispatch pc=172, inst=STORE_FAST(arg=14, lineno=426)
12-22 13:04 DEBUG    stack ['$phi170.0', '$phi170.1', '$const170.2']
12-22 13:04 DEBUG    dispatch pc=174, inst=JUMP_FORWARD(arg=78, lineno=426)
12-22 13:04 DEBUG    stack ['$phi170.0', '$phi170.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=254, stack=('$phi170.0', '$phi170.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=176 nstack_initial=2), State(pc_initial=254 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi176.0', '$phi176.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=176 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=176, inst=LOAD_FAST(arg=1, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1']
12-22 13:04 DEBUG    dispatch pc=178, inst=LOAD_FAST(arg=12, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1', '$knn_dists176.2']
12-22 13:04 DEBUG    dispatch pc=180, inst=LOAD_FAST(arg=13, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1', '$knn_dists176.2', '$i178.3']
12-22 13:04 DEBUG    dispatch pc=182, inst=BUILD_TUPLE(arg=2, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1', '$knn_dists176.2', '$i178.3', '$j180.4']
12-22 13:04 DEBUG    dispatch pc=184, inst=BINARY_SUBSCR(arg=None, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1', '$knn_dists176.2', '$182build_tuple.5']
12-22 13:04 DEBUG    dispatch pc=186, inst=LOAD_FAST(arg=3, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1', '$184binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=188, inst=LOAD_FAST(arg=12, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1', '$184binary_subscr.6', '$rhos186.7']
12-22 13:04 DEBUG    dispatch pc=190, inst=BINARY_SUBSCR(arg=None, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1', '$184binary_subscr.6', '$rhos186.7', '$i188.8']
12-22 13:04 DEBUG    dispatch pc=192, inst=BINARY_SUBTRACT(arg=None, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1', '$184binary_subscr.6', '$190binary_subscr.9']
12-22 13:04 DEBUG    dispatch pc=194, inst=LOAD_CONST(arg=7, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1', '$192binary_subtract.10']
12-22 13:04 DEBUG    dispatch pc=196, inst=COMPARE_OP(arg=1, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1', '$192binary_subtract.10', '$const194.11']
12-22 13:04 DEBUG    dispatch pc=198, inst=POP_JUMP_IF_TRUE(arg=212, lineno=427)
12-22 13:04 DEBUG    stack ['$phi176.0', '$phi176.1', '$196compare_op.12']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=200, stack=('$phi176.0', '$phi176.1'), blockstack=(), npush=0), Edge(pc=212, stack=('$phi176.0', '$phi176.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=254 nstack_initial=2), State(pc_initial=200 nstack_initial=2), State(pc_initial=212 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi254.0', '$phi254.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=254 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=254, inst=LOAD_FAST(arg=12, lineno=432)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1']
12-22 13:04 DEBUG    dispatch pc=256, inst=LOAD_FAST(arg=8, lineno=432)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$i254.2']
12-22 13:04 DEBUG    dispatch pc=258, inst=LOAD_FAST(arg=12, lineno=432)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3']
12-22 13:04 DEBUG    dispatch pc=260, inst=LOAD_FAST(arg=7, lineno=432)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3', '$i258.4']
12-22 13:04 DEBUG    dispatch pc=262, inst=BINARY_MULTIPLY(arg=None, lineno=432)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3', '$i258.4', '$n_neighbors260.5']
12-22 13:04 DEBUG    dispatch pc=264, inst=LOAD_FAST(arg=13, lineno=432)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3', '$262binary_multiply.6']
12-22 13:04 DEBUG    dispatch pc=266, inst=BINARY_ADD(arg=None, lineno=432)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3', '$262binary_multiply.6', '$j264.7']
12-22 13:04 DEBUG    dispatch pc=268, inst=STORE_SUBSCR(arg=None, lineno=432)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$i254.2', '$rows256.3', '$266binary_add.8']
12-22 13:04 DEBUG    dispatch pc=270, inst=LOAD_FAST(arg=0, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1']
12-22 13:04 DEBUG    dispatch pc=272, inst=LOAD_FAST(arg=12, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$knn_indices270.9']
12-22 13:04 DEBUG    dispatch pc=274, inst=LOAD_FAST(arg=13, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$knn_indices270.9', '$i272.10']
12-22 13:04 DEBUG    dispatch pc=276, inst=BUILD_TUPLE(arg=2, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$knn_indices270.9', '$i272.10', '$j274.11']
12-22 13:04 DEBUG    dispatch pc=278, inst=BINARY_SUBSCR(arg=None, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$knn_indices270.9', '$276build_tuple.12']
12-22 13:04 DEBUG    dispatch pc=280, inst=LOAD_FAST(arg=9, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13']
12-22 13:04 DEBUG    dispatch pc=282, inst=LOAD_FAST(arg=12, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14']
12-22 13:04 DEBUG    dispatch pc=284, inst=LOAD_FAST(arg=7, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14', '$i282.15']
12-22 13:04 DEBUG    dispatch pc=286, inst=BINARY_MULTIPLY(arg=None, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14', '$i282.15', '$n_neighbors284.16']
12-22 13:04 DEBUG    dispatch pc=288, inst=LOAD_FAST(arg=13, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14', '$286binary_multiply.17']
12-22 13:04 DEBUG    dispatch pc=290, inst=BINARY_ADD(arg=None, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14', '$286binary_multiply.17', '$j288.18']
12-22 13:04 DEBUG    dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=433)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$278binary_subscr.13', '$cols280.14', '$290binary_add.19']
12-22 13:04 DEBUG    dispatch pc=294, inst=LOAD_FAST(arg=14, lineno=434)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1']
12-22 13:04 DEBUG    dispatch pc=296, inst=LOAD_FAST(arg=10, lineno=434)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$val294.20']
12-22 13:04 DEBUG    dispatch pc=298, inst=LOAD_FAST(arg=12, lineno=434)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21']
12-22 13:04 DEBUG    dispatch pc=300, inst=LOAD_FAST(arg=7, lineno=434)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21', '$i298.22']
12-22 13:04 DEBUG    dispatch pc=302, inst=BINARY_MULTIPLY(arg=None, lineno=434)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21', '$i298.22', '$n_neighbors300.23']
12-22 13:04 DEBUG    dispatch pc=304, inst=LOAD_FAST(arg=13, lineno=434)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21', '$302binary_multiply.24']
12-22 13:04 DEBUG    dispatch pc=306, inst=BINARY_ADD(arg=None, lineno=434)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21', '$302binary_multiply.24', '$j304.25']
12-22 13:04 DEBUG    dispatch pc=308, inst=STORE_SUBSCR(arg=None, lineno=434)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$val294.20', '$vals296.21', '$306binary_add.26']
12-22 13:04 DEBUG    dispatch pc=310, inst=LOAD_FAST(arg=4, lineno=435)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1']
12-22 13:04 DEBUG    dispatch pc=312, inst=POP_JUMP_IF_FALSE(arg=124, lineno=435)
12-22 13:04 DEBUG    stack ['$phi254.0', '$phi254.1', '$return_dists310.27']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=314, stack=('$phi254.0', '$phi254.1'), blockstack=(), npush=0), Edge(pc=124, stack=('$phi254.0', '$phi254.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=200 nstack_initial=2), State(pc_initial=212 nstack_initial=2), State(pc_initial=314 nstack_initial=2), State(pc_initial=124 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi200.0', '$phi200.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=200 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=200, inst=LOAD_FAST(arg=2, lineno=427)
12-22 13:04 DEBUG    stack ['$phi200.0', '$phi200.1']
12-22 13:04 DEBUG    dispatch pc=202, inst=LOAD_FAST(arg=12, lineno=427)
12-22 13:04 DEBUG    stack ['$phi200.0', '$phi200.1', '$sigmas200.2']
12-22 13:04 DEBUG    dispatch pc=204, inst=BINARY_SUBSCR(arg=None, lineno=427)
12-22 13:04 DEBUG    stack ['$phi200.0', '$phi200.1', '$sigmas200.2', '$i202.3']
12-22 13:04 DEBUG    dispatch pc=206, inst=LOAD_CONST(arg=7, lineno=427)
12-22 13:04 DEBUG    stack ['$phi200.0', '$phi200.1', '$204binary_subscr.4']
12-22 13:04 DEBUG    dispatch pc=208, inst=COMPARE_OP(arg=2, lineno=427)
12-22 13:04 DEBUG    stack ['$phi200.0', '$phi200.1', '$204binary_subscr.4', '$const206.5']
12-22 13:04 DEBUG    dispatch pc=210, inst=POP_JUMP_IF_FALSE(arg=218, lineno=427)
12-22 13:04 DEBUG    stack ['$phi200.0', '$phi200.1', '$208compare_op.6']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=212, stack=('$phi200.0', '$phi200.1'), blockstack=(), npush=0), Edge(pc=218, stack=('$phi200.0', '$phi200.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=314 nstack_initial=2), State(pc_initial=124 nstack_initial=2), State(pc_initial=212 nstack_initial=2), State(pc_initial=218 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi212.0', '$phi212.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=212 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=212, inst=LOAD_CONST(arg=8, lineno=428)
12-22 13:04 DEBUG    stack ['$phi212.0', '$phi212.1']
12-22 13:04 DEBUG    dispatch pc=214, inst=STORE_FAST(arg=14, lineno=428)
12-22 13:04 DEBUG    stack ['$phi212.0', '$phi212.1', '$const212.2']
12-22 13:04 DEBUG    dispatch pc=216, inst=JUMP_FORWARD(arg=36, lineno=428)
12-22 13:04 DEBUG    stack ['$phi212.0', '$phi212.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=254, stack=('$phi212.0', '$phi212.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=314 nstack_initial=2), State(pc_initial=124 nstack_initial=2), State(pc_initial=212 nstack_initial=2), State(pc_initial=218 nstack_initial=2), State(pc_initial=254 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi314.0', '$phi314.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=314 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=314, inst=LOAD_FAST(arg=1, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1']
12-22 13:04 DEBUG    dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1', '$knn_dists314.2']
12-22 13:04 DEBUG    dispatch pc=318, inst=LOAD_FAST(arg=13, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1', '$knn_dists314.2', '$i316.3']
12-22 13:04 DEBUG    dispatch pc=320, inst=BUILD_TUPLE(arg=2, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1', '$knn_dists314.2', '$i316.3', '$j318.4']
12-22 13:04 DEBUG    dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1', '$knn_dists314.2', '$320build_tuple.5']
12-22 13:04 DEBUG    dispatch pc=324, inst=LOAD_FAST(arg=11, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=326, inst=LOAD_FAST(arg=12, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7']
12-22 13:04 DEBUG    dispatch pc=328, inst=LOAD_FAST(arg=7, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7', '$i326.8']
12-22 13:04 DEBUG    dispatch pc=330, inst=BINARY_MULTIPLY(arg=None, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7', '$i326.8', '$n_neighbors328.9']
12-22 13:04 DEBUG    dispatch pc=332, inst=LOAD_FAST(arg=13, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7', '$330binary_multiply.10']
12-22 13:04 DEBUG    dispatch pc=334, inst=BINARY_ADD(arg=None, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7', '$330binary_multiply.10', '$j332.11']
12-22 13:04 DEBUG    dispatch pc=336, inst=STORE_SUBSCR(arg=None, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1', '$322binary_subscr.6', '$dists324.7', '$334binary_add.12']
12-22 13:04 DEBUG    dispatch pc=338, inst=JUMP_ABSOLUTE(arg=124, lineno=436)
12-22 13:04 DEBUG    stack ['$phi314.0', '$phi314.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=124, stack=('$phi314.0', '$phi314.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=124 nstack_initial=2), State(pc_initial=212 nstack_initial=2), State(pc_initial=218 nstack_initial=2), State(pc_initial=254 nstack_initial=2), State(pc_initial=124 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=212 nstack_initial=2), State(pc_initial=218 nstack_initial=2), State(pc_initial=254 nstack_initial=2), State(pc_initial=124 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=218 nstack_initial=2), State(pc_initial=254 nstack_initial=2), State(pc_initial=124 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi218.0', '$phi218.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=218 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1']
12-22 13:04 DEBUG    dispatch pc=220, inst=LOAD_METHOD(arg=7, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$218load_global.2']
12-22 13:04 DEBUG    dispatch pc=222, inst=LOAD_FAST(arg=1, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3']
12-22 13:04 DEBUG    dispatch pc=224, inst=LOAD_FAST(arg=12, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$knn_dists222.4']
12-22 13:04 DEBUG    dispatch pc=226, inst=LOAD_FAST(arg=13, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$knn_dists222.4', '$i224.5']
12-22 13:04 DEBUG    dispatch pc=228, inst=BUILD_TUPLE(arg=2, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$knn_dists222.4', '$i224.5', '$j226.6']
12-22 13:04 DEBUG    dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$knn_dists222.4', '$228build_tuple.7']
12-22 13:04 DEBUG    dispatch pc=232, inst=LOAD_FAST(arg=3, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$230binary_subscr.8']
12-22 13:04 DEBUG    dispatch pc=234, inst=LOAD_FAST(arg=12, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$230binary_subscr.8', '$rhos232.9']
12-22 13:04 DEBUG    dispatch pc=236, inst=BINARY_SUBSCR(arg=None, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$230binary_subscr.8', '$rhos232.9', '$i234.10']
12-22 13:04 DEBUG    dispatch pc=238, inst=BINARY_SUBTRACT(arg=None, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$230binary_subscr.8', '$236binary_subscr.11']
12-22 13:04 DEBUG    dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$238binary_subtract.12']
12-22 13:04 DEBUG    dispatch pc=242, inst=LOAD_FAST(arg=12, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$238binary_subtract.12', '$sigmas240.13']
12-22 13:04 DEBUG    dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$238binary_subtract.12', '$sigmas240.13', '$i242.14']
12-22 13:04 DEBUG    dispatch pc=246, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$238binary_subtract.12', '$244binary_subscr.15']
12-22 13:04 DEBUG    dispatch pc=248, inst=UNARY_NEGATIVE(arg=None, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$246binary_true_divide.16']
12-22 13:04 DEBUG    dispatch pc=250, inst=CALL_METHOD(arg=1, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$220load_method.3', '$248unary_negative.17']
12-22 13:04 DEBUG    dispatch pc=252, inst=STORE_FAST(arg=14, lineno=430)
12-22 13:04 DEBUG    stack ['$phi218.0', '$phi218.1', '$250call_method.18']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=254, stack=('$phi218.0', '$phi218.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=254 nstack_initial=2), State(pc_initial=124 nstack_initial=2), State(pc_initial=254 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=124 nstack_initial=2), State(pc_initial=254 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=254 nstack_initial=2)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=1): {'$phi112.0'},
             State(pc_initial=114 nstack_initial=2): {'$phi114.1'},
             State(pc_initial=124 nstack_initial=2): {'$phi124.1'},
             State(pc_initial=126 nstack_initial=3): {'$phi126.2'},
             State(pc_initial=144 nstack_initial=2): set(),
             State(pc_initial=146 nstack_initial=2): set(),
             State(pc_initial=170 nstack_initial=2): set(),
             State(pc_initial=176 nstack_initial=2): set(),
             State(pc_initial=200 nstack_initial=2): set(),
             State(pc_initial=212 nstack_initial=2): set(),
             State(pc_initial=218 nstack_initial=2): set(),
             State(pc_initial=254 nstack_initial=2): set(),
             State(pc_initial=314 nstack_initial=2): set(),
             State(pc_initial=340 nstack_initial=1): set(),
             State(pc_initial=342 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi112.0': State(pc_initial=104 nstack_initial=0),
 '$phi114.1': State(pc_initial=112 nstack_initial=1),
 '$phi124.1': State(pc_initial=114 nstack_initial=2),
 '$phi126.2': State(pc_initial=124 nstack_initial=2)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi340.0',
                            State(pc_initial=340 nstack_initial=1))},
             '$phi114.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi114.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi124.0': {('$phi114.0',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi144.0',
                            State(pc_initial=144 nstack_initial=2)),
                           ('$phi254.0',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi124.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi144.1',
                            State(pc_initial=144 nstack_initial=2)),
                           ('$phi254.1',
                            State(pc_initial=254 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi126.0': {('$phi124.0',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi126.1': {('$phi124.1',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi126.2': {('$124for_iter.3',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi144.0': {('$phi126.0',
                            State(pc_initial=126 nstack_initial=3))},
             '$phi144.1': {('$phi126.1',
                            State(pc_initial=126 nstack_initial=3))},
             '$phi146.0': {('$phi126.0',
                            State(pc_initial=126 nstack_initial=3))},
             '$phi146.1': {('$phi126.1',
                            State(pc_initial=126 nstack_initial=3))},
             '$phi170.0': {('$phi146.0',
                            State(pc_initial=146 nstack_initial=2))},
             '$phi170.1': {('$phi146.1',
                            State(pc_initial=146 nstack_initial=2))},
             '$phi176.0': {('$phi146.0',
                            State(pc_initial=146 nstack_initial=2))},
             '$phi176.1': {('$phi146.1',
                            State(pc_initial=146 nstack_initial=2))},
             '$phi200.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=2))},
             '$phi200.1': {('$phi176.1',
                            State(pc_initial=176 nstack_initial=2))},
             '$phi212.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=2)),
                           ('$phi200.0',
                            State(pc_initial=200 nstack_initial=2))},
             '$phi212.1': {('$phi176.1',
                            State(pc_initial=176 nstack_initial=2)),
                           ('$phi200.1',
                            State(pc_initial=200 nstack_initial=2))},
             '$phi218.0': {('$phi200.0',
                            State(pc_initial=200 nstack_initial=2))},
             '$phi218.1': {('$phi200.1',
                            State(pc_initial=200 nstack_initial=2))},
             '$phi254.0': {('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi254.1': {('$phi170.1',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.1',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.1',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi314.0': {('$phi254.0',
                            State(pc_initial=254 nstack_initial=2))},
             '$phi314.1': {('$phi254.1',
                            State(pc_initial=254 nstack_initial=2))},
             '$phi340.0': {('$phi124.0',
                            State(pc_initial=124 nstack_initial=2))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi124.0',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi114.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi124.0',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi114.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi124.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi124.0',
                            State(pc_initial=124 nstack_initial=2)),
                           ('$phi126.0',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi124.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi126.1',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi170.1',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.1',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.1',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi126.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi126.0',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi126.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi126.1',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi170.1',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.1',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.1',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi126.2': {('$124for_iter.3',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi144.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi144.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi170.1',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.1',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.1',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi146.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi146.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi170.1',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.1',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.1',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi170.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi170.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi170.1',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.1',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.1',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi176.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi176.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi170.1',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.1',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.1',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi200.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi200.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi170.1',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.1',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.1',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi212.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi212.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi170.1',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.1',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.1',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi218.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi218.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2)),
                           ('$phi170.1',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.1',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.1',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi254.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi254.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi314.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi314.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi340.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi126.0',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi126.0',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi114.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0)),
                           ('$phi126.0',
                            State(pc_initial=126 nstack_initial=3)),
                           ('$phi170.0',
                            State(pc_initial=170 nstack_initial=2)),
                           ('$phi212.0',
                            State(pc_initial=212 nstack_initial=2)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=2))},
             '$phi114.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi124.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi124.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi126.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.2': {('$124for_iter.3',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi144.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi144.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi146.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi146.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi170.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi170.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi176.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi176.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi200.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi200.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi212.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi212.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi218.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi218.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi254.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi254.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi314.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi314.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi340.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi114.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi114.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi124.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi124.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi126.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.2': {('$124for_iter.3',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi144.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi144.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi146.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi146.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi170.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi170.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi176.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi176.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi200.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi200.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi212.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi212.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi218.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi218.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi254.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi254.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi314.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi314.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi340.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi114.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi114.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi124.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi124.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi126.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi126.2': {('$124for_iter.3',
                            State(pc_initial=124 nstack_initial=2))},
             '$phi144.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi144.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi146.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi146.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi170.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi170.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi176.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi176.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi200.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi200.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi212.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi212.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi218.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi218.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi254.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi254.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi314.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))},
             '$phi314.1': {('$122get_iter.5',
                            State(pc_initial=114 nstack_initial=2))},
             '$phi340.0': {('$110get_iter.3',
                            State(pc_initial=104 nstack_initial=0))}})
12-22 13:04 DEBUG    keep phismap: {'$phi112.0': {('$110get_iter.3', State(pc_initial=104 nstack_initial=0))},
 '$phi114.1': {('$112for_iter.2', State(pc_initial=112 nstack_initial=1))},
 '$phi124.1': {('$122get_iter.5', State(pc_initial=114 nstack_initial=2))},
 '$phi126.2': {('$124for_iter.3', State(pc_initial=124 nstack_initial=2))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=104 nstack_initial=0): {'$phi112.0': '$110get_iter.3'},
             State(pc_initial=112 nstack_initial=1): {'$phi114.1': '$112for_iter.2'},
             State(pc_initial=114 nstack_initial=2): {'$phi124.1': '$122get_iter.5'},
             State(pc_initial=124 nstack_initial=2): {'$phi126.2': '$124for_iter.3'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$knn_indices2.0'}), (4, {'item': '$knn_indices2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$knn_indices12.4'}), (14, {'item': '$knn_indices12.4', 'res': '$14load_attr.5'}), (16, {'res': '$const16.6'}), (18, {'index': '$const16.6', 'target': '$14load_attr.5', 'res': '$18binary_subscr.7'}), (20, {'value': '$18binary_subscr.7'}), (22, {'res': '$22load_global.8'}), (24, {'item': '$22load_global.8', 'res': '$24load_attr.9'}), (26, {'res': '$knn_indices26.10'}), (28, {'item': '$knn_indices26.10', 'res': '$28load_attr.11'}), (30, {'res': '$30load_global.12'}), (32, {'item': '$30load_global.12', 'res': '$32load_attr.13'}), (34, {'res': '$const34.14'}), (36, {'func': '$24load_attr.9', 'args': ['$28load_attr.11', '$32load_attr.13'], 'names': '$const34.14', 'res': '$36call_function_kw.15'}), (38, {'value': '$36call_function_kw.15'}), (40, {'res': '$40load_global.16'}), (42, {'item': '$40load_global.16', 'res': '$42load_attr.17'}), (44, {'res': '$knn_indices44.18'}), (46, {'item': '$knn_indices44.18', 'res': '$46load_attr.19'}), (48, {'res': '$48load_global.20'}), (50, {'item': '$48load_global.20', 'res': '$50load_attr.21'}), (52, {'res': '$const52.22'}), (54, {'func': '$42load_attr.17', 'args': ['$46load_attr.19', '$50load_attr.21'], 'names': '$const52.22', 'res': '$54call_function_kw.23'}), (56, {'value': '$54call_function_kw.23'}), (58, {'res': '$58load_global.24'}), (60, {'item': '$58load_global.24', 'res': '$60load_attr.25'}), (62, {'res': '$knn_indices62.26'}), (64, {'item': '$knn_indices62.26', 'res': '$64load_attr.27'}), (66, {'res': '$66load_global.28'}), (68, {'item': '$66load_global.28', 'res': '$68load_attr.29'}), (70, {'res': '$const70.30'}), (72, {'func': '$60load_attr.25', 'args': ['$64load_attr.27', '$68load_attr.29'], 'names': '$const70.30', 'res': '$72call_function_kw.31'}), (74, {'value': '$72call_function_kw.31'}), (76, {'res': '$return_dists76.32'}), (78, {'pred': '$return_dists76.32'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: (), 100: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=80 nstack_initial=0):
AdaptBlockInfo(insts=((80, {'res': '$80load_global.0'}), (82, {'item': '$80load_global.0', 'res': '$82load_attr.1'}), (84, {'res': '$knn_indices84.2'}), (86, {'item': '$knn_indices84.2', 'res': '$86load_attr.3'}), (88, {'res': '$88load_global.4'}), (90, {'item': '$88load_global.4', 'res': '$90load_attr.5'}), (92, {'res': '$const92.6'}), (94, {'func': '$82load_attr.1', 'args': ['$86load_attr.3', '$90load_attr.5'], 'names': '$const92.6', 'res': '$94call_function_kw.7'}), (96, {'value': '$94call_function_kw.7'}), (98, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$const100.0'}), (102, {'value': '$const100.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$n_samples106.1'}), (108, {'func': '$104load_global.0', 'args': ['$n_samples106.1'], 'res': '$108call_function.2'}), (110, {'value': '$108call_function.2', 'res': '$110get_iter.3'})), outgoing_phis={'$phi112.0': '$110get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$110get_iter.3',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'iterator': '$phi112.0', 'pair': '$112for_iter.1', 'indval': '$112for_iter.2', 'pred': '$112for_iter.3'}),), outgoing_phis={'$phi114.1': '$112for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={342: (), 114: ('$phi112.0', '$112for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=114 nstack_initial=2):
AdaptBlockInfo(insts=((114, {'value': '$phi114.1'}), (116, {'res': '$116load_global.2'}), (118, {'res': '$n_neighbors118.3'}), (120, {'func': '$116load_global.2', 'args': ['$n_neighbors118.3'], 'res': '$120call_function.4'}), (122, {'value': '$120call_function.4', 'res': '$122get_iter.5'})), outgoing_phis={'$phi124.1': '$122get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: ('$phi114.0', '$122get_iter.5')})
12-22 13:04 DEBUG    block_infos State(pc_initial=124 nstack_initial=2):
AdaptBlockInfo(insts=((124, {'iterator': '$phi124.1', 'pair': '$124for_iter.2', 'indval': '$124for_iter.3', 'pred': '$124for_iter.4'}),), outgoing_phis={'$phi126.2': '$124for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={340: ('$phi124.0',), 126: ('$phi124.0', '$phi124.1', '$124for_iter.3')})
12-22 13:04 DEBUG    block_infos State(pc_initial=126 nstack_initial=3):
AdaptBlockInfo(insts=((126, {'value': '$phi126.2'}), (128, {'res': '$knn_indices128.3'}), (130, {'res': '$i130.4'}), (132, {'res': '$j132.5'}), (134, {'items': ['$i130.4', '$j132.5'], 'res': '$134build_tuple.6'}), (136, {'index': '$134build_tuple.6', 'target': '$knn_indices128.3', 'res': '$136binary_subscr.7'}), (138, {'res': '$const138.8'}), (140, {'lhs': '$136binary_subscr.7', 'rhs': '$const138.8', 'res': '$140compare_op.9'}), (142, {'pred': '$140compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={144: ('$phi126.0', '$phi126.1'), 146: ('$phi126.0', '$phi126.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=144 nstack_initial=2):
AdaptBlockInfo(insts=((144, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: ('$phi144.0', '$phi144.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=146 nstack_initial=2):
AdaptBlockInfo(insts=((146, {'res': '$bipartite146.2'}), (148, {'res': '$const148.3'}), (150, {'lhs': '$bipartite146.2', 'rhs': '$const148.3', 'res': '$150compare_op.4'}), (152, {'res': '$knn_indices152.5'}), (154, {'res': '$i154.6'}), (156, {'res': '$j156.7'}), (158, {'items': ['$i154.6', '$j156.7'], 'res': '$158build_tuple.8'}), (160, {'index': '$158build_tuple.8', 'target': '$knn_indices152.5', 'res': '$160binary_subscr.9'}), (162, {'res': '$i162.10'}), (164, {'lhs': '$160binary_subscr.9', 'rhs': '$i162.10', 'res': '$164compare_op.11'}), (166, {'lhs': '$150compare_op.4', 'rhs': '$164compare_op.11', 'res': '$166binary_and.12'}), (168, {'pred': '$166binary_and.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={170: ('$phi146.0', '$phi146.1'), 176: ('$phi146.0', '$phi146.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=170 nstack_initial=2):
AdaptBlockInfo(insts=((170, {'res': '$const170.2'}), (172, {'value': '$const170.2'}), (174, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={254: ('$phi170.0', '$phi170.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=176 nstack_initial=2):
AdaptBlockInfo(insts=((176, {'res': '$knn_dists176.2'}), (178, {'res': '$i178.3'}), (180, {'res': '$j180.4'}), (182, {'items': ['$i178.3', '$j180.4'], 'res': '$182build_tuple.5'}), (184, {'index': '$182build_tuple.5', 'target': '$knn_dists176.2', 'res': '$184binary_subscr.6'}), (186, {'res': '$rhos186.7'}), (188, {'res': '$i188.8'}), (190, {'index': '$i188.8', 'target': '$rhos186.7', 'res': '$190binary_subscr.9'}), (192, {'lhs': '$184binary_subscr.6', 'rhs': '$190binary_subscr.9', 'res': '$192binary_subtract.10'}), (194, {'res': '$const194.11'}), (196, {'lhs': '$192binary_subtract.10', 'rhs': '$const194.11', 'res': '$196compare_op.12'}), (198, {'pred': '$196compare_op.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={200: ('$phi176.0', '$phi176.1'), 212: ('$phi176.0', '$phi176.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=200 nstack_initial=2):
AdaptBlockInfo(insts=((200, {'res': '$sigmas200.2'}), (202, {'res': '$i202.3'}), (204, {'index': '$i202.3', 'target': '$sigmas200.2', 'res': '$204binary_subscr.4'}), (206, {'res': '$const206.5'}), (208, {'lhs': '$204binary_subscr.4', 'rhs': '$const206.5', 'res': '$208compare_op.6'}), (210, {'pred': '$208compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={212: ('$phi200.0', '$phi200.1'), 218: ('$phi200.0', '$phi200.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=212 nstack_initial=2):
AdaptBlockInfo(insts=((212, {'res': '$const212.2'}), (214, {'value': '$const212.2'}), (216, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={254: ('$phi212.0', '$phi212.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=218 nstack_initial=2):
AdaptBlockInfo(insts=((218, {'res': '$218load_global.2'}), (220, {'item': '$218load_global.2', 'res': '$220load_method.3'}), (222, {'res': '$knn_dists222.4'}), (224, {'res': '$i224.5'}), (226, {'res': '$j226.6'}), (228, {'items': ['$i224.5', '$j226.6'], 'res': '$228build_tuple.7'}), (230, {'index': '$228build_tuple.7', 'target': '$knn_dists222.4', 'res': '$230binary_subscr.8'}), (232, {'res': '$rhos232.9'}), (234, {'res': '$i234.10'}), (236, {'index': '$i234.10', 'target': '$rhos232.9', 'res': '$236binary_subscr.11'}), (238, {'lhs': '$230binary_subscr.8', 'rhs': '$236binary_subscr.11', 'res': '$238binary_subtract.12'}), (240, {'res': '$sigmas240.13'}), (242, {'res': '$i242.14'}), (244, {'index': '$i242.14', 'target': '$sigmas240.13', 'res': '$244binary_subscr.15'}), (246, {'lhs': '$238binary_subtract.12', 'rhs': '$244binary_subscr.15', 'res': '$246binary_true_divide.16'}), (248, {'value': '$246binary_true_divide.16', 'res': '$248unary_negative.17'}), (250, {'func': '$220load_method.3', 'args': ['$248unary_negative.17'], 'res': '$250call_method.18'}), (252, {'value': '$250call_method.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={254: ('$phi218.0', '$phi218.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=254 nstack_initial=2):
AdaptBlockInfo(insts=((254, {'res': '$i254.2'}), (256, {'res': '$rows256.3'}), (258, {'res': '$i258.4'}), (260, {'res': '$n_neighbors260.5'}), (262, {'lhs': '$i258.4', 'rhs': '$n_neighbors260.5', 'res': '$262binary_multiply.6'}), (264, {'res': '$j264.7'}), (266, {'lhs': '$262binary_multiply.6', 'rhs': '$j264.7', 'res': '$266binary_add.8'}), (268, {'target': '$rows256.3', 'index': '$266binary_add.8', 'value': '$i254.2'}), (270, {'res': '$knn_indices270.9'}), (272, {'res': '$i272.10'}), (274, {'res': '$j274.11'}), (276, {'items': ['$i272.10', '$j274.11'], 'res': '$276build_tuple.12'}), (278, {'index': '$276build_tuple.12', 'target': '$knn_indices270.9', 'res': '$278binary_subscr.13'}), (280, {'res': '$cols280.14'}), (282, {'res': '$i282.15'}), (284, {'res': '$n_neighbors284.16'}), (286, {'lhs': '$i282.15', 'rhs': '$n_neighbors284.16', 'res': '$286binary_multiply.17'}), (288, {'res': '$j288.18'}), (290, {'lhs': '$286binary_multiply.17', 'rhs': '$j288.18', 'res': '$290binary_add.19'}), (292, {'target': '$cols280.14', 'index': '$290binary_add.19', 'value': '$278binary_subscr.13'}), (294, {'res': '$val294.20'}), (296, {'res': '$vals296.21'}), (298, {'res': '$i298.22'}), (300, {'res': '$n_neighbors300.23'}), (302, {'lhs': '$i298.22', 'rhs': '$n_neighbors300.23', 'res': '$302binary_multiply.24'}), (304, {'res': '$j304.25'}), (306, {'lhs': '$302binary_multiply.24', 'rhs': '$j304.25', 'res': '$306binary_add.26'}), (308, {'target': '$vals296.21', 'index': '$306binary_add.26', 'value': '$val294.20'}), (310, {'res': '$return_dists310.27'}), (312, {'pred': '$return_dists310.27'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={314: ('$phi254.0', '$phi254.1'), 124: ('$phi254.0', '$phi254.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=314 nstack_initial=2):
AdaptBlockInfo(insts=((314, {'res': '$knn_dists314.2'}), (316, {'res': '$i316.3'}), (318, {'res': '$j318.4'}), (320, {'items': ['$i316.3', '$j318.4'], 'res': '$320build_tuple.5'}), (322, {'index': '$320build_tuple.5', 'target': '$knn_dists314.2', 'res': '$322binary_subscr.6'}), (324, {'res': '$dists324.7'}), (326, {'res': '$i326.8'}), (328, {'res': '$n_neighbors328.9'}), (330, {'lhs': '$i326.8', 'rhs': '$n_neighbors328.9', 'res': '$330binary_multiply.10'}), (332, {'res': '$j332.11'}), (334, {'lhs': '$330binary_multiply.10', 'rhs': '$j332.11', 'res': '$334binary_add.12'}), (336, {'target': '$dists324.7', 'index': '$334binary_add.12', 'value': '$322binary_subscr.6'}), (338, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: ('$phi314.0', '$phi314.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=340 nstack_initial=1):
AdaptBlockInfo(insts=((340, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$phi340.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=342 nstack_initial=0):
AdaptBlockInfo(insts=((342, {'res': '$rows342.0'}), (344, {'res': '$cols344.1'}), (346, {'res': '$vals346.2'}), (348, {'res': '$dists348.3'}), (350, {'items': ['$rows342.0', '$cols344.1', '$vals346.2', '$dists348.3'], 'res': '$350build_tuple.4'}), (352, {'retval': '$350build_tuple.4', 'castval': '$352return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    knn_indices = arg(0, name=knn_indices)   ['knn_indices']
    knn_dists = arg(1, name=knn_dists)       ['knn_dists']
    sigmas = arg(2, name=sigmas)             ['sigmas']
    rhos = arg(3, name=rhos)                 ['rhos']
    return_dists = arg(4, name=return_dists) ['return_dists']
    bipartite = arg(5, name=bipartite)       ['bipartite']
    $4load_attr.1 = getattr(value=knn_indices, attr=shape) ['$4load_attr.1', 'knn_indices']
    $const6.2 = const(int, 0)                ['$const6.2']
    n_samples = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'n_samples']
    $14load_attr.5 = getattr(value=knn_indices, attr=shape) ['$14load_attr.5', 'knn_indices']
    $const16.6 = const(int, 1)               ['$const16.6']
    n_neighbors = getitem(value=$14load_attr.5, index=$const16.6, fn=<built-in function getitem>) ['$14load_attr.5', '$const16.6', 'n_neighbors']
    $22load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$22load_global.8']
    $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros) ['$22load_global.8', '$24load_attr.9']
    $28load_attr.11 = getattr(value=knn_indices, attr=size) ['$28load_attr.11', 'knn_indices']
    $30load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$30load_global.12']
    $32load_attr.13 = getattr(value=$30load_global.12, attr=int32) ['$30load_global.12', '$32load_attr.13']
    rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:411)], kws=[('dtype', Var($32load_attr.13, umap_.py:411))], vararg=None, varkwarg=None, target=None) ['$24load_attr.9', '$28load_attr.11', '$32load_attr.13', 'rows']
    $40load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$40load_global.16']
    $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros) ['$40load_global.16', '$42load_attr.17']
    $46load_attr.19 = getattr(value=knn_indices, attr=size) ['$46load_attr.19', 'knn_indices']
    $48load_global.20 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$48load_global.20']
    $50load_attr.21 = getattr(value=$48load_global.20, attr=int32) ['$48load_global.20', '$50load_attr.21']
    cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:412)], kws=[('dtype', Var($50load_attr.21, umap_.py:412))], vararg=None, varkwarg=None, target=None) ['$42load_attr.17', '$46load_attr.19', '$50load_attr.21', 'cols']
    $58load_global.24 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$58load_global.24']
    $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros) ['$58load_global.24', '$60load_attr.25']
    $64load_attr.27 = getattr(value=knn_indices, attr=size) ['$64load_attr.27', 'knn_indices']
    $66load_global.28 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$66load_global.28']
    $68load_attr.29 = getattr(value=$66load_global.28, attr=float32) ['$66load_global.28', '$68load_attr.29']
    vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:413)], kws=[('dtype', Var($68load_attr.29, umap_.py:413))], vararg=None, varkwarg=None, target=None) ['$60load_attr.25', '$64load_attr.27', '$68load_attr.29', 'vals']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None) ['$78pred', 'bool78', 'return_dists']
    branch $78pred, 80, 100                  ['$78pred']
label 80:
    $80load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$80load_global.0']
    $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros) ['$80load_global.0', '$82load_attr.1']
    $86load_attr.3 = getattr(value=knn_indices, attr=size) ['$86load_attr.3', 'knn_indices']
    $88load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$88load_global.4']
    $90load_attr.5 = getattr(value=$88load_global.4, attr=float32) ['$88load_global.4', '$90load_attr.5']
    dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:415)], kws=[('dtype', Var($90load_attr.5, umap_.py:415))], vararg=None, varkwarg=None, target=None) ['$82load_attr.1', '$86load_attr.3', '$90load_attr.5', 'dists']
    jump 104                                 []
label 100:
    dists = const(NoneType, None)            ['dists']
    jump 104                                 []
label 104:
    $104load_global.0 = global(range: <class 'range'>) ['$104load_global.0']
    $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:408)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_global.0', '$108call_function.2', 'n_samples']
    $110get_iter.3 = getiter(value=$108call_function.2) ['$108call_function.2', '$110get_iter.3']
    $phi112.0 = $110get_iter.3               ['$110get_iter.3', '$phi112.0']
    jump 112                                 []
label 112:
    $112for_iter.1 = iternext(value=$phi112.0) ['$112for_iter.1', '$phi112.0']
    $112for_iter.2 = pair_first(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.2']
    $112for_iter.3 = pair_second(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.3']
    $phi114.1 = $112for_iter.2               ['$112for_iter.2', '$phi114.1']
    branch $112for_iter.3, 114, 342          ['$112for_iter.3']
label 114:
    i = $phi114.1                            ['$phi114.1', 'i']
    $116load_global.2 = global(range: <class 'range'>) ['$116load_global.2']
    $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.2', '$120call_function.4', 'n_neighbors']
    $122get_iter.5 = getiter(value=$120call_function.4) ['$120call_function.4', '$122get_iter.5']
    $phi124.1 = $122get_iter.5               ['$122get_iter.5', '$phi124.1']
    jump 124                                 []
label 124:
    $124for_iter.2 = iternext(value=$phi124.1) ['$124for_iter.2', '$phi124.1']
    $124for_iter.3 = pair_first(value=$124for_iter.2) ['$124for_iter.2', '$124for_iter.3']
    $124for_iter.4 = pair_second(value=$124for_iter.2) ['$124for_iter.2', '$124for_iter.4']
    $phi126.2 = $124for_iter.3               ['$124for_iter.3', '$phi126.2']
    branch $124for_iter.4, 126, 340          ['$124for_iter.4']
label 126:
    j = $phi126.2                            ['$phi126.2', 'j']
    $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)]) ['$134build_tuple.6', 'i', 'j']
    $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>) ['$134build_tuple.6', '$136binary_subscr.7', 'knn_indices']
    $const138.8 = const(int, -1)             ['$const138.8']
    $140compare_op.9 = $136binary_subscr.7 == $const138.8 ['$136binary_subscr.7', '$140compare_op.9', '$const138.8']
    bool142 = global(bool: <class 'bool'>)   ['bool142']
    $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:421),), kws=(), vararg=None, varkwarg=None, target=None) ['$140compare_op.9', '$142pred', 'bool142']
    branch $142pred, 144, 146                ['$142pred']
label 144:
    jump 124                                 []
label 146:
    $const148.3 = const(bool, False)         ['$const148.3']
    $150compare_op.4 = bipartite == $const148.3 ['$150compare_op.4', '$const148.3', 'bipartite']
    $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)]) ['$158build_tuple.8', 'i', 'j']
    $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>) ['$158build_tuple.8', '$160binary_subscr.9', 'knn_indices']
    $164compare_op.11 = $160binary_subscr.9 == i ['$160binary_subscr.9', '$164compare_op.11', 'i']
    $166binary_and.12 = $150compare_op.4 & $164compare_op.11 ['$150compare_op.4', '$164compare_op.11', '$166binary_and.12']
    bool168 = global(bool: <class 'bool'>)   ['bool168']
    $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:425),), kws=(), vararg=None, varkwarg=None, target=None) ['$166binary_and.12', '$168pred', 'bool168']
    branch $168pred, 170, 176                ['$168pred']
label 170:
    val = const(float, 0.0)                  ['val']
    jump 254                                 []
label 176:
    $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)]) ['$182build_tuple.5', 'i', 'j']
    $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>) ['$182build_tuple.5', '$184binary_subscr.6', 'knn_dists']
    $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>) ['$190binary_subscr.9', 'i', 'rhos']
    $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9 ['$184binary_subscr.6', '$190binary_subscr.9', '$192binary_subtract.10']
    $const194.11 = const(float, 0.0)         ['$const194.11']
    $196compare_op.12 = $192binary_subtract.10 <= $const194.11 ['$192binary_subtract.10', '$196compare_op.12', '$const194.11']
    bool198 = global(bool: <class 'bool'>)   ['bool198']
    $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None) ['$196compare_op.12', '$198pred', 'bool198']
    branch $198pred, 212, 200                ['$198pred']
label 200:
    $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>) ['$204binary_subscr.4', 'i', 'sigmas']
    $const206.5 = const(float, 0.0)          ['$const206.5']
    $208compare_op.6 = $204binary_subscr.4 == $const206.5 ['$204binary_subscr.4', '$208compare_op.6', '$const206.5']
    bool210 = global(bool: <class 'bool'>)   ['bool210']
    $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None) ['$208compare_op.6', '$210pred', 'bool210']
    branch $210pred, 212, 218                ['$210pred']
label 212:
    val = const(float, 1.0)                  ['val']
    jump 254                                 []
label 218:
    $218load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$218load_global.2']
    $220load_method.3 = getattr(value=$218load_global.2, attr=exp) ['$218load_global.2', '$220load_method.3']
    $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)]) ['$228build_tuple.7', 'i', 'j']
    $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>) ['$228build_tuple.7', '$230binary_subscr.8', 'knn_dists']
    $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>) ['$236binary_subscr.11', 'i', 'rhos']
    $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11 ['$230binary_subscr.8', '$236binary_subscr.11', '$238binary_subtract.12']
    $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>) ['$244binary_subscr.15', 'i', 'sigmas']
    $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15 ['$238binary_subtract.12', '$244binary_subscr.15', '$246binary_true_divide.16']
    $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16) ['$246binary_true_divide.16', '$248unary_negative.17']
    val = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:430)], kws=(), vararg=None, varkwarg=None, target=None) ['$220load_method.3', '$248unary_negative.17', 'val']
    jump 254                                 []
label 254:
    $262binary_multiply.6 = i * n_neighbors  ['$262binary_multiply.6', 'i', 'n_neighbors']
    $266binary_add.8 = $262binary_multiply.6 + j ['$262binary_multiply.6', '$266binary_add.8', 'j']
    rows[$266binary_add.8] = i               ['$266binary_add.8', 'i', 'rows']
    $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)]) ['$276build_tuple.12', 'i', 'j']
    $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>) ['$276build_tuple.12', '$278binary_subscr.13', 'knn_indices']
    $286binary_multiply.17 = i * n_neighbors ['$286binary_multiply.17', 'i', 'n_neighbors']
    $290binary_add.19 = $286binary_multiply.17 + j ['$286binary_multiply.17', '$290binary_add.19', 'j']
    cols[$290binary_add.19] = $278binary_subscr.13 ['$278binary_subscr.13', '$290binary_add.19', 'cols']
    $302binary_multiply.24 = i * n_neighbors ['$302binary_multiply.24', 'i', 'n_neighbors']
    $306binary_add.26 = $302binary_multiply.24 + j ['$302binary_multiply.24', '$306binary_add.26', 'j']
    vals[$306binary_add.26] = val            ['$306binary_add.26', 'val', 'vals']
    bool312 = global(bool: <class 'bool'>)   ['bool312']
    $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None) ['$312pred', 'bool312', 'return_dists']
    branch $312pred, 314, 124                ['$312pred']
label 314:
    $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)]) ['$320build_tuple.5', 'i', 'j']
    $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>) ['$320build_tuple.5', '$322binary_subscr.6', 'knn_dists']
    $330binary_multiply.10 = i * n_neighbors ['$330binary_multiply.10', 'i', 'n_neighbors']
    $334binary_add.12 = $330binary_multiply.10 + j ['$330binary_multiply.10', '$334binary_add.12', 'j']
    dists[$334binary_add.12] = $322binary_subscr.6 ['$322binary_subscr.6', '$334binary_add.12', 'dists']
    jump 124                                 []
label 340:
    jump 112                                 []
label 342:
    $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:411), Var(cols, umap_.py:412), Var(vals, umap_.py:413), Var(dists, umap_.py:415)]) ['$350build_tuple.4', 'cols', 'dists', 'rows', 'vals']
    $352return_value.5 = cast(value=$350build_tuple.4) ['$350build_tuple.4', '$352return_value.5']
    return $352return_value.5                ['$352return_value.5']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: knn_indices = arg(0, name=knn_indices)
12-22 13:04 DEBUG    on stmt: knn_dists = arg(1, name=knn_dists)
12-22 13:04 DEBUG    on stmt: sigmas = arg(2, name=sigmas)
12-22 13:04 DEBUG    on stmt: rhos = arg(3, name=rhos)
12-22 13:04 DEBUG    on stmt: return_dists = arg(4, name=return_dists)
12-22 13:04 DEBUG    on stmt: bipartite = arg(5, name=bipartite)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=knn_indices, attr=shape)
12-22 13:04 DEBUG    on stmt: $const6.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: n_samples = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14load_attr.5 = getattr(value=knn_indices, attr=shape)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 1)
12-22 13:04 DEBUG    on stmt: n_neighbors = static_getitem(value=$14load_attr.5, index=1, index_var=$const16.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $22load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros)
12-22 13:04 DEBUG    on stmt: $28load_attr.11 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $30load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $32load_attr.13 = getattr(value=$30load_global.12, attr=int32)
12-22 13:04 DEBUG    on stmt: rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:411)], kws=[('dtype', Var($32load_attr.13, umap_.py:411))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $40load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $46load_attr.19 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $48load_global.20 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $50load_attr.21 = getattr(value=$48load_global.20, attr=int32)
12-22 13:04 DEBUG    on stmt: cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:412)], kws=[('dtype', Var($50load_attr.21, umap_.py:412))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $58load_global.24 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros)
12-22 13:04 DEBUG    on stmt: $64load_attr.27 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $66load_global.28 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $68load_attr.29 = getattr(value=$66load_global.28, attr=float32)
12-22 13:04 DEBUG    on stmt: vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:413)], kws=[('dtype', Var($68load_attr.29, umap_.py:413))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool78 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $78pred, 80, 100
12-22 13:04 DEBUG    ==== SSA block analysis pass on 80
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: $80load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros)
12-22 13:04 DEBUG    on stmt: $86load_attr.3 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $88load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $90load_attr.5 = getattr(value=$88load_global.4, attr=float32)
12-22 13:04 DEBUG    on stmt: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:415)], kws=[('dtype', Var($90load_attr.5, umap_.py:415))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 104
12-22 13:04 DEBUG    ==== SSA block analysis pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: dists = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: jump 104
12-22 13:04 DEBUG    ==== SSA block analysis pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:408)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
12-22 13:04 DEBUG    on stmt: $phi112.0 = $110get_iter.3
12-22 13:04 DEBUG    on stmt: jump 112
12-22 13:04 DEBUG    ==== SSA block analysis pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: $112for_iter.1 = iternext(value=$phi112.0)
12-22 13:04 DEBUG    on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
12-22 13:04 DEBUG    on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi114.1 = $112for_iter.2
12-22 13:04 DEBUG    on stmt: branch $112for_iter.3, 114, 342
12-22 13:04 DEBUG    ==== SSA block analysis pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: i = $phi114.1
12-22 13:04 DEBUG    on stmt: $116load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $122get_iter.5 = getiter(value=$120call_function.4)
12-22 13:04 DEBUG    on stmt: $phi124.1 = $122get_iter.5
12-22 13:04 DEBUG    on stmt: jump 124
12-22 13:04 DEBUG    ==== SSA block analysis pass on 124
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: $124for_iter.2 = iternext(value=$phi124.1)
12-22 13:04 DEBUG    on stmt: $124for_iter.3 = pair_first(value=$124for_iter.2)
12-22 13:04 DEBUG    on stmt: $124for_iter.4 = pair_second(value=$124for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi126.2 = $124for_iter.3
12-22 13:04 DEBUG    on stmt: branch $124for_iter.4, 126, 340
12-22 13:04 DEBUG    ==== SSA block analysis pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: j = $phi126.2
12-22 13:04 DEBUG    on stmt: $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const138.8 = const(int, -1)
12-22 13:04 DEBUG    on stmt: $140compare_op.9 = $136binary_subscr.7 == $const138.8
12-22 13:04 DEBUG    on stmt: bool142 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:421),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $142pred, 144, 146
12-22 13:04 DEBUG    ==== SSA block analysis pass on 144
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: jump 343
12-22 13:04 DEBUG    ==== SSA block analysis pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: $const148.3 = const(bool, False)
12-22 13:04 DEBUG    on stmt: $150compare_op.4 = bipartite == $const148.3
12-22 13:04 DEBUG    on stmt: $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $164compare_op.11 = $160binary_subscr.9 == i
12-22 13:04 DEBUG    on stmt: $166binary_and.12 = $150compare_op.4 & $164compare_op.11
12-22 13:04 DEBUG    on stmt: bool168 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:425),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $168pred, 170, 176
12-22 13:04 DEBUG    ==== SSA block analysis pass on 170
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: val = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block analysis pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9
12-22 13:04 DEBUG    on stmt: $const194.11 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $196compare_op.12 = $192binary_subtract.10 <= $const194.11
12-22 13:04 DEBUG    on stmt: bool198 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $198pred, 212, 200
12-22 13:04 DEBUG    ==== SSA block analysis pass on 200
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const206.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $208compare_op.6 = $204binary_subscr.4 == $const206.5
12-22 13:04 DEBUG    on stmt: bool210 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $210pred, 212, 218
12-22 13:04 DEBUG    ==== SSA block analysis pass on 212
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: val = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block analysis pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: $218load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $220load_method.3 = getattr(value=$218load_global.2, attr=exp)
12-22 13:04 DEBUG    on stmt: $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11
12-22 13:04 DEBUG    on stmt: $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15
12-22 13:04 DEBUG    on stmt: $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16)
12-22 13:04 DEBUG    on stmt: val = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:430)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block analysis pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: $262binary_multiply.6 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $266binary_add.8 = $262binary_multiply.6 + j
12-22 13:04 DEBUG    on stmt: rows[$266binary_add.8] = i
12-22 13:04 DEBUG    on stmt: $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $286binary_multiply.17 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $290binary_add.19 = $286binary_multiply.17 + j
12-22 13:04 DEBUG    on stmt: cols[$290binary_add.19] = $278binary_subscr.13
12-22 13:04 DEBUG    on stmt: $302binary_multiply.24 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $306binary_add.26 = $302binary_multiply.24 + j
12-22 13:04 DEBUG    on stmt: vals[$306binary_add.26] = val
12-22 13:04 DEBUG    on stmt: bool312 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $312pred, 314, 343
12-22 13:04 DEBUG    ==== SSA block analysis pass on 314
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $330binary_multiply.10 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $334binary_add.12 = $330binary_multiply.10 + j
12-22 13:04 DEBUG    on stmt: dists[$334binary_add.12] = $322binary_subscr.6
12-22 13:04 DEBUG    on stmt: jump 343
12-22 13:04 DEBUG    ==== SSA block analysis pass on 340
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: jump 112
12-22 13:04 DEBUG    ==== SSA block analysis pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:411), Var(cols, umap_.py:412), Var(vals, umap_.py:413), Var(dists, umap_.py:415)])
12-22 13:04 DEBUG    on stmt: $352return_value.5 = cast(value=$350build_tuple.4)
12-22 13:04 DEBUG    on stmt: return $352return_value.5
12-22 13:04 DEBUG    ==== SSA block analysis pass on 343
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34FBB20>
12-22 13:04 DEBUG    on stmt: jump 124
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$104load_global.0': [<numba.core.ir.Assign object at 0x000001AEF3AA3A30>],
             '$108call_function.2': [<numba.core.ir.Assign object at 0x000001AEF3AA3610>],
             '$110get_iter.3': [<numba.core.ir.Assign object at 0x000001AEF3AA3490>],
             '$112for_iter.1': [<numba.core.ir.Assign object at 0x000001AEF3AA3B80>],
             '$112for_iter.2': [<numba.core.ir.Assign object at 0x000001AEF3AA38B0>],
             '$112for_iter.3': [<numba.core.ir.Assign object at 0x000001AEF3AA3700>],
             '$116load_global.2': [<numba.core.ir.Assign object at 0x000001AEF3AAE8E0>],
             '$120call_function.4': [<numba.core.ir.Assign object at 0x000001AEF3AAE1F0>],
             '$122get_iter.5': [<numba.core.ir.Assign object at 0x000001AEF3AAE220>],
             '$124for_iter.2': [<numba.core.ir.Assign object at 0x000001AEF3AAEE80>],
             '$124for_iter.3': [<numba.core.ir.Assign object at 0x000001AEF3AAEC70>],
             '$124for_iter.4': [<numba.core.ir.Assign object at 0x000001AEF3AAEB50>],
             '$134build_tuple.6': [<numba.core.ir.Assign object at 0x000001AEF39BF430>],
             '$136binary_subscr.7': [<numba.core.ir.Assign object at 0x000001AEF39BF550>],
             '$140compare_op.9': [<numba.core.ir.Assign object at 0x000001AEF39BFCA0>],
             '$142pred': [<numba.core.ir.Assign object at 0x000001AEF39BF730>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x000001AF122E8DC0>],
             '$150compare_op.4': [<numba.core.ir.Assign object at 0x000001AEF39DB4C0>],
             '$158build_tuple.8': [<numba.core.ir.Assign object at 0x000001AEF39DB5E0>],
             '$160binary_subscr.9': [<numba.core.ir.Assign object at 0x000001AEF39DB220>],
             '$164compare_op.11': [<numba.core.ir.Assign object at 0x000001AEF39DB730>],
             '$166binary_and.12': [<numba.core.ir.Assign object at 0x000001AEF39DBD60>],
             '$168pred': [<numba.core.ir.Assign object at 0x000001AEF39DB940>],
             '$182build_tuple.5': [<numba.core.ir.Assign object at 0x000001AEFBBDA1F0>],
             '$184binary_subscr.6': [<numba.core.ir.Assign object at 0x000001AEFBBDA0A0>],
             '$190binary_subscr.9': [<numba.core.ir.Assign object at 0x000001AEFBBDA820>],
             '$192binary_subtract.10': [<numba.core.ir.Assign object at 0x000001AEFBBDA670>],
             '$196compare_op.12': [<numba.core.ir.Assign object at 0x000001AEF3839D90>],
             '$198pred': [<numba.core.ir.Assign object at 0x000001AEF3839D60>],
             '$204binary_subscr.4': [<numba.core.ir.Assign object at 0x000001AEF3839700>],
             '$208compare_op.6': [<numba.core.ir.Assign object at 0x000001AEF38390D0>],
             '$210pred': [<numba.core.ir.Assign object at 0x000001AEF3839A90>],
             '$218load_global.2': [<numba.core.ir.Assign object at 0x000001AEF3833340>],
             '$220load_method.3': [<numba.core.ir.Assign object at 0x000001AEF3990DF0>],
             '$228build_tuple.7': [<numba.core.ir.Assign object at 0x000001AEF3990C10>],
             '$22load_global.8': [<numba.core.ir.Assign object at 0x000001AF122F9CD0>],
             '$230binary_subscr.8': [<numba.core.ir.Assign object at 0x000001AEF39900A0>],
             '$236binary_subscr.11': [<numba.core.ir.Assign object at 0x000001AEF3990730>],
             '$238binary_subtract.12': [<numba.core.ir.Assign object at 0x000001AEF3990E20>],
             '$244binary_subscr.15': [<numba.core.ir.Assign object at 0x000001AEF34A3DC0>],
             '$246binary_true_divide.16': [<numba.core.ir.Assign object at 0x000001AEF34A3790>],
             '$248unary_negative.17': [<numba.core.ir.Assign object at 0x000001AEF34A3970>],
             '$24load_attr.9': [<numba.core.ir.Assign object at 0x000001AF122EF790>],
             '$262binary_multiply.6': [<numba.core.ir.Assign object at 0x000001AEF34A3670>],
             '$266binary_add.8': [<numba.core.ir.Assign object at 0x000001AEF34A33A0>],
             '$276build_tuple.12': [<numba.core.ir.Assign object at 0x000001AEF35DA250>],
             '$278binary_subscr.13': [<numba.core.ir.Assign object at 0x000001AEF35E4C40>],
             '$286binary_multiply.17': [<numba.core.ir.Assign object at 0x000001AEF347D670>],
             '$28load_attr.11': [<numba.core.ir.Assign object at 0x000001AF122D8220>],
             '$290binary_add.19': [<numba.core.ir.Assign object at 0x000001AEF347D400>],
             '$302binary_multiply.24': [<numba.core.ir.Assign object at 0x000001AEF3489850>],
             '$306binary_add.26': [<numba.core.ir.Assign object at 0x000001AEF3489C10>],
             '$30load_global.12': [<numba.core.ir.Assign object at 0x000001AF122D5E50>],
             '$312pred': [<numba.core.ir.Assign object at 0x000001AEF3489340>],
             '$320build_tuple.5': [<numba.core.ir.Assign object at 0x000001AEF34890A0>],
             '$322binary_subscr.6': [<numba.core.ir.Assign object at 0x000001AEF34892B0>],
             '$32load_attr.13': [<numba.core.ir.Assign object at 0x000001AF122D95E0>],
             '$330binary_multiply.10': [<numba.core.ir.Assign object at 0x000001AEF34A2700>],
             '$334binary_add.12': [<numba.core.ir.Assign object at 0x000001AEF34A2760>],
             '$350build_tuple.4': [<numba.core.ir.Assign object at 0x000001AEF34A9B20>],
             '$352return_value.5': [<numba.core.ir.Assign object at 0x000001AEF34A9AF0>],
             '$40load_global.16': [<numba.core.ir.Assign object at 0x000001AF123A51C0>],
             '$42load_attr.17': [<numba.core.ir.Assign object at 0x000001AF123A55B0>],
             '$46load_attr.19': [<numba.core.ir.Assign object at 0x000001AEFB5B7BE0>],
             '$48load_global.20': [<numba.core.ir.Assign object at 0x000001AF12393520>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x000001AF123727C0>],
             '$50load_attr.21': [<numba.core.ir.Assign object at 0x000001AF12393700>],
             '$58load_global.24': [<numba.core.ir.Assign object at 0x000001AEF3AED6A0>],
             '$60load_attr.25': [<numba.core.ir.Assign object at 0x000001AEF20AC0A0>],
             '$64load_attr.27': [<numba.core.ir.Assign object at 0x000001AF122FD610>],
             '$66load_global.28': [<numba.core.ir.Assign object at 0x000001AF124D2070>],
             '$68load_attr.29': [<numba.core.ir.Assign object at 0x000001AF1254EC10>],
             '$78pred': [<numba.core.ir.Assign object at 0x000001AEF3A2C700>],
             '$80load_global.0': [<numba.core.ir.Assign object at 0x000001AF123A5EE0>],
             '$82load_attr.1': [<numba.core.ir.Assign object at 0x000001AEF3AB8D00>],
             '$86load_attr.3': [<numba.core.ir.Assign object at 0x000001AEF3AB6850>],
             '$88load_global.4': [<numba.core.ir.Assign object at 0x000001AEF3AB6370>],
             '$90load_attr.5': [<numba.core.ir.Assign object at 0x000001AEF3AB69D0>],
             '$const138.8': [<numba.core.ir.Assign object at 0x000001AEF39BF790>],
             '$const148.3': [<numba.core.ir.Assign object at 0x000001AEF39BFD90>],
             '$const16.6': [<numba.core.ir.Assign object at 0x000001AF122E8730>],
             '$const194.11': [<numba.core.ir.Assign object at 0x000001AEFBBDA340>],
             '$const206.5': [<numba.core.ir.Assign object at 0x000001AEF3839400>],
             '$const6.2': [<numba.core.ir.Assign object at 0x000001AF123ABBB0>],
             '$phi112.0': [<numba.core.ir.Assign object at 0x000001AEF3AA3F70>],
             '$phi114.1': [<numba.core.ir.Assign object at 0x000001AEF3AA34F0>],
             '$phi124.1': [<numba.core.ir.Assign object at 0x000001AEF3AAE790>],
             '$phi126.2': [<numba.core.ir.Assign object at 0x000001AEF3AAEF40>],
             'bipartite': [<numba.core.ir.Assign object at 0x000001AF123719D0>],
             'bool142': [<numba.core.ir.Assign object at 0x000001AEF39BFFA0>],
             'bool168': [<numba.core.ir.Assign object at 0x000001AEF39DBF70>],
             'bool198': [<numba.core.ir.Assign object at 0x000001AEF3839DC0>],
             'bool210': [<numba.core.ir.Assign object at 0x000001AEF38393D0>],
             'bool312': [<numba.core.ir.Assign object at 0x000001AEF34893D0>],
             'bool78': [<numba.core.ir.Assign object at 0x000001AEF3AB5CD0>],
             'cols': [<numba.core.ir.Assign object at 0x000001AF0E60F400>],
             'dists': [<numba.core.ir.Assign object at 0x000001AEF3AB6280>,
                       <numba.core.ir.Assign object at 0x000001AEF3AA3940>],
             'i': [<numba.core.ir.Assign object at 0x000001AEF3AAE310>],
             'j': [<numba.core.ir.Assign object at 0x000001AEF3AAEB80>],
             'knn_dists': [<numba.core.ir.Assign object at 0x000001AF12371550>],
             'knn_indices': [<numba.core.ir.Assign object at 0x000001AEFB74B970>],
             'n_neighbors': [<numba.core.ir.Assign object at 0x000001AEF347F340>],
             'n_samples': [<numba.core.ir.Assign object at 0x000001AEF3473B80>],
             'return_dists': [<numba.core.ir.Assign object at 0x000001AF12371DF0>],
             'rhos': [<numba.core.ir.Assign object at 0x000001AF12371640>],
             'rows': [<numba.core.ir.Assign object at 0x000001AF122CB310>],
             'sigmas': [<numba.core.ir.Assign object at 0x000001AF12371130>],
             'val': [<numba.core.ir.Assign object at 0x000001AEF39DB3A0>,
                     <numba.core.ir.Assign object at 0x000001AEF35C7F10>,
                     <numba.core.ir.Assign object at 0x000001AEF34A3C40>],
             'vals': [<numba.core.ir.Assign object at 0x000001AEF3AB8DF0>]})
12-22 13:04 DEBUG    SSA violators {'dists', 'val'}
12-22 13:04 DEBUG    Fix SSA violator on var dists
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: knn_indices = arg(0, name=knn_indices)
12-22 13:04 DEBUG    on stmt: knn_dists = arg(1, name=knn_dists)
12-22 13:04 DEBUG    on stmt: sigmas = arg(2, name=sigmas)
12-22 13:04 DEBUG    on stmt: rhos = arg(3, name=rhos)
12-22 13:04 DEBUG    on stmt: return_dists = arg(4, name=return_dists)
12-22 13:04 DEBUG    on stmt: bipartite = arg(5, name=bipartite)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=knn_indices, attr=shape)
12-22 13:04 DEBUG    on stmt: $const6.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: n_samples = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14load_attr.5 = getattr(value=knn_indices, attr=shape)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 1)
12-22 13:04 DEBUG    on stmt: n_neighbors = static_getitem(value=$14load_attr.5, index=1, index_var=$const16.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $22load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros)
12-22 13:04 DEBUG    on stmt: $28load_attr.11 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $30load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $32load_attr.13 = getattr(value=$30load_global.12, attr=int32)
12-22 13:04 DEBUG    on stmt: rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:411)], kws=[('dtype', Var($32load_attr.13, umap_.py:411))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $40load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $46load_attr.19 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $48load_global.20 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $50load_attr.21 = getattr(value=$48load_global.20, attr=int32)
12-22 13:04 DEBUG    on stmt: cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:412)], kws=[('dtype', Var($50load_attr.21, umap_.py:412))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $58load_global.24 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros)
12-22 13:04 DEBUG    on stmt: $64load_attr.27 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $66load_global.28 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $68load_attr.29 = getattr(value=$66load_global.28, attr=float32)
12-22 13:04 DEBUG    on stmt: vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:413)], kws=[('dtype', Var($68load_attr.29, umap_.py:413))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool78 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $78pred, 80, 100
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 80
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $80load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros)
12-22 13:04 DEBUG    on stmt: $86load_attr.3 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $88load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $90load_attr.5 = getattr(value=$88load_global.4, attr=float32)
12-22 13:04 DEBUG    on stmt: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:415)], kws=[('dtype', Var($90load_attr.5, umap_.py:415))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    first assign: dists
12-22 13:04 DEBUG    replaced with: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:415)], kws=[('dtype', Var($90load_attr.5, umap_.py:415))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 104
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: dists = const(NoneType, None)
12-22 13:04 DEBUG    replaced with: dists.1 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: jump 104
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:408)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
12-22 13:04 DEBUG    on stmt: $phi112.0 = $110get_iter.3
12-22 13:04 DEBUG    on stmt: jump 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $112for_iter.1 = iternext(value=$phi112.0)
12-22 13:04 DEBUG    on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
12-22 13:04 DEBUG    on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi114.1 = $112for_iter.2
12-22 13:04 DEBUG    on stmt: branch $112for_iter.3, 114, 342
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: i = $phi114.1
12-22 13:04 DEBUG    on stmt: $116load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $122get_iter.5 = getiter(value=$120call_function.4)
12-22 13:04 DEBUG    on stmt: $phi124.1 = $122get_iter.5
12-22 13:04 DEBUG    on stmt: jump 124
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 124
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $124for_iter.2 = iternext(value=$phi124.1)
12-22 13:04 DEBUG    on stmt: $124for_iter.3 = pair_first(value=$124for_iter.2)
12-22 13:04 DEBUG    on stmt: $124for_iter.4 = pair_second(value=$124for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi126.2 = $124for_iter.3
12-22 13:04 DEBUG    on stmt: branch $124for_iter.4, 126, 340
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: j = $phi126.2
12-22 13:04 DEBUG    on stmt: $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const138.8 = const(int, -1)
12-22 13:04 DEBUG    on stmt: $140compare_op.9 = $136binary_subscr.7 == $const138.8
12-22 13:04 DEBUG    on stmt: bool142 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:421),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $142pred, 144, 146
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 144
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: jump 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $const148.3 = const(bool, False)
12-22 13:04 DEBUG    on stmt: $150compare_op.4 = bipartite == $const148.3
12-22 13:04 DEBUG    on stmt: $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $164compare_op.11 = $160binary_subscr.9 == i
12-22 13:04 DEBUG    on stmt: $166binary_and.12 = $150compare_op.4 & $164compare_op.11
12-22 13:04 DEBUG    on stmt: bool168 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:425),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $168pred, 170, 176
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 170
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: val = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9
12-22 13:04 DEBUG    on stmt: $const194.11 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $196compare_op.12 = $192binary_subtract.10 <= $const194.11
12-22 13:04 DEBUG    on stmt: bool198 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $198pred, 212, 200
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 200
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const206.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $208compare_op.6 = $204binary_subscr.4 == $const206.5
12-22 13:04 DEBUG    on stmt: bool210 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $210pred, 212, 218
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 212
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: val = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $218load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $220load_method.3 = getattr(value=$218load_global.2, attr=exp)
12-22 13:04 DEBUG    on stmt: $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11
12-22 13:04 DEBUG    on stmt: $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15
12-22 13:04 DEBUG    on stmt: $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16)
12-22 13:04 DEBUG    on stmt: val = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:430)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $262binary_multiply.6 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $266binary_add.8 = $262binary_multiply.6 + j
12-22 13:04 DEBUG    on stmt: rows[$266binary_add.8] = i
12-22 13:04 DEBUG    on stmt: $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $286binary_multiply.17 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $290binary_add.19 = $286binary_multiply.17 + j
12-22 13:04 DEBUG    on stmt: cols[$290binary_add.19] = $278binary_subscr.13
12-22 13:04 DEBUG    on stmt: $302binary_multiply.24 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $306binary_add.26 = $302binary_multiply.24 + j
12-22 13:04 DEBUG    on stmt: vals[$306binary_add.26] = val
12-22 13:04 DEBUG    on stmt: bool312 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $312pred, 314, 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 314
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $330binary_multiply.10 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $334binary_add.12 = $330binary_multiply.10 + j
12-22 13:04 DEBUG    on stmt: dists[$334binary_add.12] = $322binary_subscr.6
12-22 13:04 DEBUG    on stmt: jump 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 340
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: jump 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:411), Var(cols, umap_.py:412), Var(vals, umap_.py:413), Var(dists, umap_.py:415)])
12-22 13:04 DEBUG    on stmt: $352return_value.5 = cast(value=$350build_tuple.4)
12-22 13:04 DEBUG    on stmt: return $352return_value.5
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 343
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: jump 124
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {80: [<numba.core.ir.Assign object at 0x000001AF17AE3B80>],
             100: [<numba.core.ir.Assign object at 0x000001AEF34734C0>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: knn_indices = arg(0, name=knn_indices)
12-22 13:04 DEBUG    on stmt: knn_dists = arg(1, name=knn_dists)
12-22 13:04 DEBUG    on stmt: sigmas = arg(2, name=sigmas)
12-22 13:04 DEBUG    on stmt: rhos = arg(3, name=rhos)
12-22 13:04 DEBUG    on stmt: return_dists = arg(4, name=return_dists)
12-22 13:04 DEBUG    on stmt: bipartite = arg(5, name=bipartite)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=knn_indices, attr=shape)
12-22 13:04 DEBUG    on stmt: $const6.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: n_samples = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14load_attr.5 = getattr(value=knn_indices, attr=shape)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 1)
12-22 13:04 DEBUG    on stmt: n_neighbors = static_getitem(value=$14load_attr.5, index=1, index_var=$const16.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $22load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros)
12-22 13:04 DEBUG    on stmt: $28load_attr.11 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $30load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $32load_attr.13 = getattr(value=$30load_global.12, attr=int32)
12-22 13:04 DEBUG    on stmt: rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:411)], kws=[('dtype', Var($32load_attr.13, umap_.py:411))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $40load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $46load_attr.19 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $48load_global.20 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $50load_attr.21 = getattr(value=$48load_global.20, attr=int32)
12-22 13:04 DEBUG    on stmt: cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:412)], kws=[('dtype', Var($50load_attr.21, umap_.py:412))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $58load_global.24 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros)
12-22 13:04 DEBUG    on stmt: $64load_attr.27 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $66load_global.28 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $68load_attr.29 = getattr(value=$66load_global.28, attr=float32)
12-22 13:04 DEBUG    on stmt: vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:413)], kws=[('dtype', Var($68load_attr.29, umap_.py:413))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool78 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $78pred, 80, 100
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 80
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $80load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros)
12-22 13:04 DEBUG    on stmt: $86load_attr.3 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $88load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $90load_attr.5 = getattr(value=$88load_global.4, attr=float32)
12-22 13:04 DEBUG    on stmt: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:415)], kws=[('dtype', Var($90load_attr.5, umap_.py:415))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 104
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: dists.1 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: jump 104
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:408)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
12-22 13:04 DEBUG    on stmt: $phi112.0 = $110get_iter.3
12-22 13:04 DEBUG    on stmt: jump 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $112for_iter.1 = iternext(value=$phi112.0)
12-22 13:04 DEBUG    on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
12-22 13:04 DEBUG    on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi114.1 = $112for_iter.2
12-22 13:04 DEBUG    on stmt: branch $112for_iter.3, 114, 342
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: i = $phi114.1
12-22 13:04 DEBUG    on stmt: $116load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $122get_iter.5 = getiter(value=$120call_function.4)
12-22 13:04 DEBUG    on stmt: $phi124.1 = $122get_iter.5
12-22 13:04 DEBUG    on stmt: jump 124
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 124
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $124for_iter.2 = iternext(value=$phi124.1)
12-22 13:04 DEBUG    on stmt: $124for_iter.3 = pair_first(value=$124for_iter.2)
12-22 13:04 DEBUG    on stmt: $124for_iter.4 = pair_second(value=$124for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi126.2 = $124for_iter.3
12-22 13:04 DEBUG    on stmt: branch $124for_iter.4, 126, 340
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: j = $phi126.2
12-22 13:04 DEBUG    on stmt: $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const138.8 = const(int, -1)
12-22 13:04 DEBUG    on stmt: $140compare_op.9 = $136binary_subscr.7 == $const138.8
12-22 13:04 DEBUG    on stmt: bool142 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:421),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $142pred, 144, 146
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 144
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: jump 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $const148.3 = const(bool, False)
12-22 13:04 DEBUG    on stmt: $150compare_op.4 = bipartite == $const148.3
12-22 13:04 DEBUG    on stmt: $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $164compare_op.11 = $160binary_subscr.9 == i
12-22 13:04 DEBUG    on stmt: $166binary_and.12 = $150compare_op.4 & $164compare_op.11
12-22 13:04 DEBUG    on stmt: bool168 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:425),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $168pred, 170, 176
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 170
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: val = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9
12-22 13:04 DEBUG    on stmt: $const194.11 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $196compare_op.12 = $192binary_subtract.10 <= $const194.11
12-22 13:04 DEBUG    on stmt: bool198 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $198pred, 212, 200
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 200
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const206.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $208compare_op.6 = $204binary_subscr.4 == $const206.5
12-22 13:04 DEBUG    on stmt: bool210 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $210pred, 212, 218
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 212
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: val = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $218load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $220load_method.3 = getattr(value=$218load_global.2, attr=exp)
12-22 13:04 DEBUG    on stmt: $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11
12-22 13:04 DEBUG    on stmt: $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15
12-22 13:04 DEBUG    on stmt: $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16)
12-22 13:04 DEBUG    on stmt: val = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:430)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $262binary_multiply.6 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $266binary_add.8 = $262binary_multiply.6 + j
12-22 13:04 DEBUG    on stmt: rows[$266binary_add.8] = i
12-22 13:04 DEBUG    on stmt: $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $286binary_multiply.17 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $290binary_add.19 = $286binary_multiply.17 + j
12-22 13:04 DEBUG    on stmt: cols[$290binary_add.19] = $278binary_subscr.13
12-22 13:04 DEBUG    on stmt: $302binary_multiply.24 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $306binary_add.26 = $302binary_multiply.24 + j
12-22 13:04 DEBUG    on stmt: vals[$306binary_add.26] = val
12-22 13:04 DEBUG    on stmt: bool312 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $312pred, 314, 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 314
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $330binary_multiply.10 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $334binary_add.12 = $330binary_multiply.10 + j
12-22 13:04 DEBUG    on stmt: dists[$334binary_add.12] = $322binary_subscr.6
12-22 13:04 DEBUG    find_def var='dists' stmt=dists[$334binary_add.12] = $322binary_subscr.6
12-22 13:04 DEBUG    find_def_from_top label 314
12-22 13:04 DEBUG    idom 254 from label 314
12-22 13:04 DEBUG    find_def_from_bottom label 254
12-22 13:04 DEBUG    find_def_from_top label 254
12-22 13:04 DEBUG    idom 146 from label 254
12-22 13:04 DEBUG    find_def_from_bottom label 146
12-22 13:04 DEBUG    find_def_from_top label 146
12-22 13:04 DEBUG    idom 126 from label 146
12-22 13:04 DEBUG    find_def_from_bottom label 126
12-22 13:04 DEBUG    find_def_from_top label 126
12-22 13:04 DEBUG    idom 124 from label 126
12-22 13:04 DEBUG    find_def_from_bottom label 124
12-22 13:04 DEBUG    find_def_from_top label 124
12-22 13:04 DEBUG    idom 114 from label 124
12-22 13:04 DEBUG    find_def_from_bottom label 114
12-22 13:04 DEBUG    find_def_from_top label 114
12-22 13:04 DEBUG    idom 112 from label 114
12-22 13:04 DEBUG    find_def_from_bottom label 112
12-22 13:04 DEBUG    find_def_from_top label 112
12-22 13:04 DEBUG    idom 104 from label 112
12-22 13:04 DEBUG    find_def_from_bottom label 104
12-22 13:04 DEBUG    find_def_from_top label 104
12-22 13:04 DEBUG    insert phi node dists.2 = phi(incoming_values=[], incoming_blocks=[]) at 104
12-22 13:04 DEBUG    find_def_from_bottom label 80
12-22 13:04 DEBUG    incoming_def dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:415)], kws=[('dtype', Var($90load_attr.5, umap_.py:415))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_bottom label 100
12-22 13:04 DEBUG    incoming_def dists.1 = const(NoneType, None)
12-22 13:04 DEBUG    replaced with: dists.2[$334binary_add.12] = $322binary_subscr.6
12-22 13:04 DEBUG    on stmt: jump 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 340
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: jump 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:411), Var(cols, umap_.py:412), Var(vals, umap_.py:413), Var(dists, umap_.py:415)])
12-22 13:04 DEBUG    find_def var='dists' stmt=$350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:411), Var(cols, umap_.py:412), Var(vals, umap_.py:413), Var(dists, umap_.py:415)])
12-22 13:04 DEBUG    find_def_from_top label 342
12-22 13:04 DEBUG    idom 112 from label 342
12-22 13:04 DEBUG    find_def_from_bottom label 112
12-22 13:04 DEBUG    find_def_from_top label 112
12-22 13:04 DEBUG    idom 104 from label 112
12-22 13:04 DEBUG    find_def_from_bottom label 104
12-22 13:04 DEBUG    replaced with: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:411), Var(cols, umap_.py:412), Var(vals, umap_.py:413), Var(dists.2, umap_.py:436)])
12-22 13:04 DEBUG    on stmt: $352return_value.5 = cast(value=$350build_tuple.4)
12-22 13:04 DEBUG    on stmt: return $352return_value.5
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 343
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF34FB8B0>
12-22 13:04 DEBUG    on stmt: jump 124
12-22 13:04 DEBUG    Fix SSA violator on var val
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: knn_indices = arg(0, name=knn_indices)
12-22 13:04 DEBUG    on stmt: knn_dists = arg(1, name=knn_dists)
12-22 13:04 DEBUG    on stmt: sigmas = arg(2, name=sigmas)
12-22 13:04 DEBUG    on stmt: rhos = arg(3, name=rhos)
12-22 13:04 DEBUG    on stmt: return_dists = arg(4, name=return_dists)
12-22 13:04 DEBUG    on stmt: bipartite = arg(5, name=bipartite)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=knn_indices, attr=shape)
12-22 13:04 DEBUG    on stmt: $const6.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: n_samples = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14load_attr.5 = getattr(value=knn_indices, attr=shape)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 1)
12-22 13:04 DEBUG    on stmt: n_neighbors = static_getitem(value=$14load_attr.5, index=1, index_var=$const16.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $22load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros)
12-22 13:04 DEBUG    on stmt: $28load_attr.11 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $30load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $32load_attr.13 = getattr(value=$30load_global.12, attr=int32)
12-22 13:04 DEBUG    on stmt: rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:411)], kws=[('dtype', Var($32load_attr.13, umap_.py:411))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $40load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $46load_attr.19 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $48load_global.20 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $50load_attr.21 = getattr(value=$48load_global.20, attr=int32)
12-22 13:04 DEBUG    on stmt: cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:412)], kws=[('dtype', Var($50load_attr.21, umap_.py:412))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $58load_global.24 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros)
12-22 13:04 DEBUG    on stmt: $64load_attr.27 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $66load_global.28 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $68load_attr.29 = getattr(value=$66load_global.28, attr=float32)
12-22 13:04 DEBUG    on stmt: vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:413)], kws=[('dtype', Var($68load_attr.29, umap_.py:413))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool78 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $78pred, 80, 100
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 80
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: $80load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros)
12-22 13:04 DEBUG    on stmt: $86load_attr.3 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $88load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $90load_attr.5 = getattr(value=$88load_global.4, attr=float32)
12-22 13:04 DEBUG    on stmt: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:415)], kws=[('dtype', Var($90load_attr.5, umap_.py:415))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 104
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: dists.1 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: jump 104
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: dists.2 = phi(incoming_values=[Var(dists, umap_.py:415), Var(dists.1, umap_.py:417)], incoming_blocks=[80, 100])
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:408)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
12-22 13:04 DEBUG    on stmt: $phi112.0 = $110get_iter.3
12-22 13:04 DEBUG    on stmt: jump 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: $112for_iter.1 = iternext(value=$phi112.0)
12-22 13:04 DEBUG    on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
12-22 13:04 DEBUG    on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi114.1 = $112for_iter.2
12-22 13:04 DEBUG    on stmt: branch $112for_iter.3, 114, 342
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: i = $phi114.1
12-22 13:04 DEBUG    on stmt: $116load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $122get_iter.5 = getiter(value=$120call_function.4)
12-22 13:04 DEBUG    on stmt: $phi124.1 = $122get_iter.5
12-22 13:04 DEBUG    on stmt: jump 124
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 124
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: $124for_iter.2 = iternext(value=$phi124.1)
12-22 13:04 DEBUG    on stmt: $124for_iter.3 = pair_first(value=$124for_iter.2)
12-22 13:04 DEBUG    on stmt: $124for_iter.4 = pair_second(value=$124for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi126.2 = $124for_iter.3
12-22 13:04 DEBUG    on stmt: branch $124for_iter.4, 126, 340
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: j = $phi126.2
12-22 13:04 DEBUG    on stmt: $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const138.8 = const(int, -1)
12-22 13:04 DEBUG    on stmt: $140compare_op.9 = $136binary_subscr.7 == $const138.8
12-22 13:04 DEBUG    on stmt: bool142 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:421),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $142pred, 144, 146
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 144
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: jump 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: $const148.3 = const(bool, False)
12-22 13:04 DEBUG    on stmt: $150compare_op.4 = bipartite == $const148.3
12-22 13:04 DEBUG    on stmt: $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $164compare_op.11 = $160binary_subscr.9 == i
12-22 13:04 DEBUG    on stmt: $166binary_and.12 = $150compare_op.4 & $164compare_op.11
12-22 13:04 DEBUG    on stmt: bool168 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:425),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $168pred, 170, 176
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 170
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: val = const(float, 0.0)
12-22 13:04 DEBUG    first assign: val
12-22 13:04 DEBUG    replaced with: val = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9
12-22 13:04 DEBUG    on stmt: $const194.11 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $196compare_op.12 = $192binary_subtract.10 <= $const194.11
12-22 13:04 DEBUG    on stmt: bool198 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $198pred, 212, 200
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 200
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const206.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $208compare_op.6 = $204binary_subscr.4 == $const206.5
12-22 13:04 DEBUG    on stmt: bool210 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $210pred, 212, 218
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 212
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: val = const(float, 1.0)
12-22 13:04 DEBUG    replaced with: val.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: $218load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $220load_method.3 = getattr(value=$218load_global.2, attr=exp)
12-22 13:04 DEBUG    on stmt: $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11
12-22 13:04 DEBUG    on stmt: $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15
12-22 13:04 DEBUG    on stmt: $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16)
12-22 13:04 DEBUG    on stmt: val = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:430)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    replaced with: val.2 = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:430)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: $262binary_multiply.6 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $266binary_add.8 = $262binary_multiply.6 + j
12-22 13:04 DEBUG    on stmt: rows[$266binary_add.8] = i
12-22 13:04 DEBUG    on stmt: $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $286binary_multiply.17 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $290binary_add.19 = $286binary_multiply.17 + j
12-22 13:04 DEBUG    on stmt: cols[$290binary_add.19] = $278binary_subscr.13
12-22 13:04 DEBUG    on stmt: $302binary_multiply.24 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $306binary_add.26 = $302binary_multiply.24 + j
12-22 13:04 DEBUG    on stmt: vals[$306binary_add.26] = val
12-22 13:04 DEBUG    on stmt: bool312 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $312pred, 314, 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 314
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $330binary_multiply.10 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $334binary_add.12 = $330binary_multiply.10 + j
12-22 13:04 DEBUG    on stmt: dists.2[$334binary_add.12] = $322binary_subscr.6
12-22 13:04 DEBUG    on stmt: jump 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 340
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: jump 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:411), Var(cols, umap_.py:412), Var(vals, umap_.py:413), Var(dists.2, umap_.py:436)])
12-22 13:04 DEBUG    on stmt: $352return_value.5 = cast(value=$350build_tuple.4)
12-22 13:04 DEBUG    on stmt: return $352return_value.5
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 343
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF34A3100>
12-22 13:04 DEBUG    on stmt: jump 124
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {170: [<numba.core.ir.Assign object at 0x000001AEF3473490>],
             212: [<numba.core.ir.Assign object at 0x000001AF17AE3940>],
             218: [<numba.core.ir.Assign object at 0x000001AEF31EDFD0>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: knn_indices = arg(0, name=knn_indices)
12-22 13:04 DEBUG    on stmt: knn_dists = arg(1, name=knn_dists)
12-22 13:04 DEBUG    on stmt: sigmas = arg(2, name=sigmas)
12-22 13:04 DEBUG    on stmt: rhos = arg(3, name=rhos)
12-22 13:04 DEBUG    on stmt: return_dists = arg(4, name=return_dists)
12-22 13:04 DEBUG    on stmt: bipartite = arg(5, name=bipartite)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=knn_indices, attr=shape)
12-22 13:04 DEBUG    on stmt: $const6.2 = const(int, 0)
12-22 13:04 DEBUG    on stmt: n_samples = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14load_attr.5 = getattr(value=knn_indices, attr=shape)
12-22 13:04 DEBUG    on stmt: $const16.6 = const(int, 1)
12-22 13:04 DEBUG    on stmt: n_neighbors = static_getitem(value=$14load_attr.5, index=1, index_var=$const16.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $22load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $24load_attr.9 = getattr(value=$22load_global.8, attr=zeros)
12-22 13:04 DEBUG    on stmt: $28load_attr.11 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $30load_global.12 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $32load_attr.13 = getattr(value=$30load_global.12, attr=int32)
12-22 13:04 DEBUG    on stmt: rows = call $24load_attr.9($28load_attr.11, func=$24load_attr.9, args=[Var($28load_attr.11, umap_.py:411)], kws=[('dtype', Var($32load_attr.13, umap_.py:411))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $40load_global.16 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $42load_attr.17 = getattr(value=$40load_global.16, attr=zeros)
12-22 13:04 DEBUG    on stmt: $46load_attr.19 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $48load_global.20 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $50load_attr.21 = getattr(value=$48load_global.20, attr=int32)
12-22 13:04 DEBUG    on stmt: cols = call $42load_attr.17($46load_attr.19, func=$42load_attr.17, args=[Var($46load_attr.19, umap_.py:412)], kws=[('dtype', Var($50load_attr.21, umap_.py:412))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $58load_global.24 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $60load_attr.25 = getattr(value=$58load_global.24, attr=zeros)
12-22 13:04 DEBUG    on stmt: $64load_attr.27 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $66load_global.28 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $68load_attr.29 = getattr(value=$66load_global.28, attr=float32)
12-22 13:04 DEBUG    on stmt: vals = call $60load_attr.25($64load_attr.27, func=$60load_attr.25, args=[Var($64load_attr.27, umap_.py:413)], kws=[('dtype', Var($68load_attr.29, umap_.py:413))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool78 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $78pred = call bool78(return_dists, func=bool78, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $78pred, 80, 100
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 80
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: $80load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $82load_attr.1 = getattr(value=$80load_global.0, attr=zeros)
12-22 13:04 DEBUG    on stmt: $86load_attr.3 = getattr(value=knn_indices, attr=size)
12-22 13:04 DEBUG    on stmt: $88load_global.4 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $90load_attr.5 = getattr(value=$88load_global.4, attr=float32)
12-22 13:04 DEBUG    on stmt: dists = call $82load_attr.1($86load_attr.3, func=$82load_attr.1, args=[Var($86load_attr.3, umap_.py:415)], kws=[('dtype', Var($90load_attr.5, umap_.py:415))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 104
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 100
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: dists.1 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: jump 104
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 104
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: dists.2 = phi(incoming_values=[Var(dists, umap_.py:415), Var(dists.1, umap_.py:417)], incoming_blocks=[80, 100])
12-22 13:04 DEBUG    on stmt: $104load_global.0 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $108call_function.2 = call $104load_global.0(n_samples, func=$104load_global.0, args=[Var(n_samples, umap_.py:408)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
12-22 13:04 DEBUG    on stmt: $phi112.0 = $110get_iter.3
12-22 13:04 DEBUG    on stmt: jump 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 112
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: $112for_iter.1 = iternext(value=$phi112.0)
12-22 13:04 DEBUG    on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
12-22 13:04 DEBUG    on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi114.1 = $112for_iter.2
12-22 13:04 DEBUG    on stmt: branch $112for_iter.3, 114, 342
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 114
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: i = $phi114.1
12-22 13:04 DEBUG    on stmt: $116load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $120call_function.4 = call $116load_global.2(n_neighbors, func=$116load_global.2, args=[Var(n_neighbors, umap_.py:409)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $122get_iter.5 = getiter(value=$120call_function.4)
12-22 13:04 DEBUG    on stmt: $phi124.1 = $122get_iter.5
12-22 13:04 DEBUG    on stmt: jump 124
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 124
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: $124for_iter.2 = iternext(value=$phi124.1)
12-22 13:04 DEBUG    on stmt: $124for_iter.3 = pair_first(value=$124for_iter.2)
12-22 13:04 DEBUG    on stmt: $124for_iter.4 = pair_second(value=$124for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi126.2 = $124for_iter.3
12-22 13:04 DEBUG    on stmt: branch $124for_iter.4, 126, 340
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 126
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: j = $phi126.2
12-22 13:04 DEBUG    on stmt: $134build_tuple.6 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $136binary_subscr.7 = getitem(value=knn_indices, index=$134build_tuple.6, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const138.8 = const(int, -1)
12-22 13:04 DEBUG    on stmt: $140compare_op.9 = $136binary_subscr.7 == $const138.8
12-22 13:04 DEBUG    on stmt: bool142 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $142pred = call bool142($140compare_op.9, func=bool142, args=(Var($140compare_op.9, umap_.py:421),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $142pred, 144, 146
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 144
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: jump 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 146
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: $const148.3 = const(bool, False)
12-22 13:04 DEBUG    on stmt: $150compare_op.4 = bipartite == $const148.3
12-22 13:04 DEBUG    on stmt: $158build_tuple.8 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $160binary_subscr.9 = getitem(value=knn_indices, index=$158build_tuple.8, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $164compare_op.11 = $160binary_subscr.9 == i
12-22 13:04 DEBUG    on stmt: $166binary_and.12 = $150compare_op.4 & $164compare_op.11
12-22 13:04 DEBUG    on stmt: bool168 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $168pred = call bool168($166binary_and.12, func=bool168, args=(Var($166binary_and.12, umap_.py:425),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $168pred, 170, 176
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 170
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: val = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 176
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: $182build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $184binary_subscr.6 = getitem(value=knn_dists, index=$182build_tuple.5, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $190binary_subscr.9 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $192binary_subtract.10 = $184binary_subscr.6 - $190binary_subscr.9
12-22 13:04 DEBUG    on stmt: $const194.11 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $196compare_op.12 = $192binary_subtract.10 <= $const194.11
12-22 13:04 DEBUG    on stmt: bool198 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $198pred = call bool198($196compare_op.12, func=bool198, args=(Var($196compare_op.12, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $198pred, 212, 200
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 200
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: $204binary_subscr.4 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $const206.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $208compare_op.6 = $204binary_subscr.4 == $const206.5
12-22 13:04 DEBUG    on stmt: bool210 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $210pred = call bool210($208compare_op.6, func=bool210, args=(Var($208compare_op.6, umap_.py:427),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $210pred, 212, 218
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 212
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: val.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 218
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: $218load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $220load_method.3 = getattr(value=$218load_global.2, attr=exp)
12-22 13:04 DEBUG    on stmt: $228build_tuple.7 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $230binary_subscr.8 = getitem(value=knn_dists, index=$228build_tuple.7, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $236binary_subscr.11 = getitem(value=rhos, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $238binary_subtract.12 = $230binary_subscr.8 - $236binary_subscr.11
12-22 13:04 DEBUG    on stmt: $244binary_subscr.15 = getitem(value=sigmas, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $246binary_true_divide.16 = $238binary_subtract.12 / $244binary_subscr.15
12-22 13:04 DEBUG    on stmt: $248unary_negative.17 = unary(fn=<built-in function neg>, value=$246binary_true_divide.16)
12-22 13:04 DEBUG    on stmt: val.2 = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:430)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 254
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 254
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: $262binary_multiply.6 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $266binary_add.8 = $262binary_multiply.6 + j
12-22 13:04 DEBUG    on stmt: rows[$266binary_add.8] = i
12-22 13:04 DEBUG    on stmt: $276build_tuple.12 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $278binary_subscr.13 = getitem(value=knn_indices, index=$276build_tuple.12, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $286binary_multiply.17 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $290binary_add.19 = $286binary_multiply.17 + j
12-22 13:04 DEBUG    on stmt: cols[$290binary_add.19] = $278binary_subscr.13
12-22 13:04 DEBUG    on stmt: $302binary_multiply.24 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $306binary_add.26 = $302binary_multiply.24 + j
12-22 13:04 DEBUG    on stmt: vals[$306binary_add.26] = val
12-22 13:04 DEBUG    find_def var='val' stmt=vals[$306binary_add.26] = val
12-22 13:04 DEBUG    find_def_from_top label 254
12-22 13:04 DEBUG    insert phi node val.3 = phi(incoming_values=[], incoming_blocks=[]) at 254
12-22 13:04 DEBUG    find_def_from_bottom label 218
12-22 13:04 DEBUG    incoming_def val.2 = call $220load_method.3($248unary_negative.17, func=$220load_method.3, args=[Var($248unary_negative.17, umap_.py:430)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_bottom label 170
12-22 13:04 DEBUG    incoming_def val = const(float, 0.0)
12-22 13:04 DEBUG    find_def_from_bottom label 212
12-22 13:04 DEBUG    incoming_def val.1 = const(float, 1.0)
12-22 13:04 DEBUG    replaced with: vals[$306binary_add.26] = val.3
12-22 13:04 DEBUG    on stmt: bool312 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $312pred = call bool312(return_dists, func=bool312, args=(Var(return_dists, umap_.py:350),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $312pred, 314, 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 314
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: $320build_tuple.5 = build_tuple(items=[Var(i, umap_.py:419), Var(j, umap_.py:420)])
12-22 13:04 DEBUG    on stmt: $322binary_subscr.6 = getitem(value=knn_dists, index=$320build_tuple.5, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $330binary_multiply.10 = i * n_neighbors
12-22 13:04 DEBUG    on stmt: $334binary_add.12 = $330binary_multiply.10 + j
12-22 13:04 DEBUG    on stmt: dists.2[$334binary_add.12] = $322binary_subscr.6
12-22 13:04 DEBUG    on stmt: jump 343
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 340
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: jump 112
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 342
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: $350build_tuple.4 = build_tuple(items=[Var(rows, umap_.py:411), Var(cols, umap_.py:412), Var(vals, umap_.py:413), Var(dists.2, umap_.py:436)])
12-22 13:04 DEBUG    on stmt: $352return_value.5 = cast(value=$350build_tuple.4)
12-22 13:04 DEBUG    on stmt: return $352return_value.5
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 343
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AEF31EDCD0>
12-22 13:04 DEBUG    on stmt: jump 124
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4437)
           2	LOAD_GLOBAL(arg=0, lineno=4438)
           4	LOAD_ATTR(arg=1, lineno=4438)
           6	LOAD_FAST(arg=0, lineno=4438)
           8	LOAD_FAST(arg=1, lineno=4438)
          10	LOAD_CONST(arg=1, lineno=4438)
          12	CALL_FUNCTION_KW(arg=2, lineno=4438)
          14	STORE_FAST(arg=2, lineno=4438)
          16	LOAD_FAST(arg=2, lineno=4439)
          18	LOAD_METHOD(arg=2, lineno=4439)
          20	CALL_METHOD(arg=0, lineno=4439)
          22	POP_TOP(arg=None, lineno=4439)
          24	LOAD_FAST(arg=2, lineno=4440)
          26	RETURN_VALUE(arg=None, lineno=4440)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4437)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4438)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4438)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$shape6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4438)
12-22 13:04 DEBUG    stack ['$12call_function_kw.5']
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4439)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4439)
12-22 13:04 DEBUG    stack ['$arr16.6']
12-22 13:04 DEBUG    dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4439)
12-22 13:04 DEBUG    stack ['$18load_method.7']
12-22 13:04 DEBUG    dispatch pc=22, inst=POP_TOP(arg=None, lineno=4439)
12-22 13:04 DEBUG    stack ['$20call_method.8']
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4440)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4440)
12-22 13:04 DEBUG    stack ['$arr24.9']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4437)], kws=[('dtype', Var(dtype, arrayobj.py:4437))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF328B5B0>
12-22 13:04 DEBUG    on stmt: shape = arg(0, name=shape)
12-22 13:04 DEBUG    on stmt: dtype = arg(1, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4437)], kws=[('dtype', Var(dtype, arrayobj.py:4437))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
12-22 13:04 DEBUG    on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $26return_value.10 = cast(value=arr)
12-22 13:04 DEBUG    on stmt: return $26return_value.10
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$18load_method.7': [<numba.core.ir.Assign object at 0x000001AEF34E9EB0>],
             '$20call_method.8': [<numba.core.ir.Assign object at 0x000001AEF31C23A0>],
             '$26return_value.10': [<numba.core.ir.Assign object at 0x000001AEF31C2310>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AEF35DFEB0>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x000001AEF3430370>],
             'arr': [<numba.core.ir.Assign object at 0x000001AEF35DFE50>],
             'dtype': [<numba.core.ir.Assign object at 0x000001AEF35DFC70>],
             'shape': [<numba.core.ir.Assign object at 0x000001AEF31C2E20>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4369)
           2	LOAD_GLOBAL(arg=0, lineno=4370)
           4	LOAD_FAST(arg=0, lineno=4370)
           6	LOAD_FAST(arg=1, lineno=4370)
           8	LOAD_DEREF(arg=0, lineno=4370)
          10	CALL_FUNCTION(arg=3, lineno=4370)
          12	RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4369)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    stack ['$10call_function.4']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(int32, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF32B4D30>
12-22 13:04 DEBUG    on stmt: shape = arg(0, name=shape)
12-22 13:04 DEBUG    on stmt: dtype = arg(1, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
12-22 13:04 DEBUG    on stmt: $8load_deref.3 = freevar(retty: array(int32, 1d, C))
12-22 13:04 DEBUG    on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $12return_value.5 = cast(value=$10call_function.4)
12-22 13:04 DEBUG    on stmt: return $12return_value.5
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10call_function.4': [<numba.core.ir.Assign object at 0x000001AEF344BC70>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x000001AEF344BF40>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AEF331AAC0>],
             '$8load_deref.3': [<numba.core.ir.Assign object at 0x000001AEF344BD90>],
             'dtype': [<numba.core.ir.Assign object at 0x000001AEF331A8E0>],
             'shape': [<numba.core.ir.Assign object at 0x000001AEF3230970>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4428)
           2	LOAD_GLOBAL(arg=0, lineno=4429)
           4	LOAD_FAST(arg=0, lineno=4429)
           6	CALL_FUNCTION(arg=1, lineno=4429)
           8	POP_TOP(arg=None, lineno=4429)
          10	LOAD_CONST(arg=0, lineno=4429)
          12	RETURN_VALUE(arg=None, lineno=4429)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4428)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4429)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4429)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4429)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$self4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=POP_TOP(arg=None, lineno=4429)
12-22 13:04 DEBUG    stack ['$6call_function.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4429)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4429)
12-22 13:04 DEBUG    stack ['$const10.3']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3'}), (12, {'retval': '$const10.3', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4428)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3 = const(NoneType, None)       ['$const10.3']
    $12return_value.4 = cast(value=$const10.3) ['$12return_value.4', '$const10.3']
    return $12return_value.4                 ['$12return_value.4']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF3515040>
12-22 13:04 DEBUG    on stmt: self = arg(0, name=self)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
12-22 13:04 DEBUG    on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4428)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const10.3 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $12return_value.4 = cast(value=$const10.3)
12-22 13:04 DEBUG    on stmt: return $12return_value.4
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$12return_value.4': [<numba.core.ir.Assign object at 0x000001AEF34EB940>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AEF34EB8B0>],
             '$6call_function.2': [<numba.core.ir.Assign object at 0x000001AEF34EB700>],
             '$const10.3': [<numba.core.ir.Assign object at 0x000001AEF34EB0D0>],
             'self': [<numba.core.ir.Assign object at 0x000001AEF3515190>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4437)
           2	LOAD_GLOBAL(arg=0, lineno=4438)
           4	LOAD_ATTR(arg=1, lineno=4438)
           6	LOAD_FAST(arg=0, lineno=4438)
           8	LOAD_FAST(arg=1, lineno=4438)
          10	LOAD_CONST(arg=1, lineno=4438)
          12	CALL_FUNCTION_KW(arg=2, lineno=4438)
          14	STORE_FAST(arg=2, lineno=4438)
          16	LOAD_FAST(arg=2, lineno=4439)
          18	LOAD_METHOD(arg=2, lineno=4439)
          20	CALL_METHOD(arg=0, lineno=4439)
          22	POP_TOP(arg=None, lineno=4439)
          24	LOAD_FAST(arg=2, lineno=4440)
          26	RETURN_VALUE(arg=None, lineno=4440)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4437)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4438)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4438)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$shape6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4438)
12-22 13:04 DEBUG    stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4438)
12-22 13:04 DEBUG    stack ['$12call_function_kw.5']
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4439)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4439)
12-22 13:04 DEBUG    stack ['$arr16.6']
12-22 13:04 DEBUG    dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4439)
12-22 13:04 DEBUG    stack ['$18load_method.7']
12-22 13:04 DEBUG    dispatch pc=22, inst=POP_TOP(arg=None, lineno=4439)
12-22 13:04 DEBUG    stack ['$20call_method.8']
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4440)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4440)
12-22 13:04 DEBUG    stack ['$arr24.9']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4437)], kws=[('dtype', Var(dtype, arrayobj.py:4437))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12326A90>
12-22 13:04 DEBUG    on stmt: shape = arg(0, name=shape)
12-22 13:04 DEBUG    on stmt: dtype = arg(1, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
12-22 13:04 DEBUG    on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4437)], kws=[('dtype', Var(dtype, arrayobj.py:4437))], vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
12-22 13:04 DEBUG    on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $26return_value.10 = cast(value=arr)
12-22 13:04 DEBUG    on stmt: return $26return_value.10
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$18load_method.7': [<numba.core.ir.Assign object at 0x000001AEF3318A90>],
             '$20call_method.8': [<numba.core.ir.Assign object at 0x000001AEF33180D0>],
             '$26return_value.10': [<numba.core.ir.Assign object at 0x000001AEF1D66B80>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AEF3318040>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x000001AEF3318160>],
             'arr': [<numba.core.ir.Assign object at 0x000001AEF3318970>],
             'dtype': [<numba.core.ir.Assign object at 0x000001AEF1DCD820>],
             'shape': [<numba.core.ir.Assign object at 0x000001AEF1DCD160>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4369)
           2	LOAD_GLOBAL(arg=0, lineno=4370)
           4	LOAD_FAST(arg=0, lineno=4370)
           6	LOAD_FAST(arg=1, lineno=4370)
           8	LOAD_DEREF(arg=0, lineno=4370)
          10	CALL_FUNCTION(arg=3, lineno=4370)
          12	RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4369)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    stack ['$10call_function.4']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(int32, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF114DFC70>
12-22 13:04 DEBUG    on stmt: shape = arg(0, name=shape)
12-22 13:04 DEBUG    on stmt: dtype = arg(1, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
12-22 13:04 DEBUG    on stmt: $8load_deref.3 = freevar(retty: array(int32, 1d, C))
12-22 13:04 DEBUG    on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $12return_value.5 = cast(value=$10call_function.4)
12-22 13:04 DEBUG    on stmt: return $12return_value.5
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10call_function.4': [<numba.core.ir.Assign object at 0x000001AEF33E38E0>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x000001AEF33E3490>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AF1235A790>],
             '$8load_deref.3': [<numba.core.ir.Assign object at 0x000001AEF33E30D0>],
             'dtype': [<numba.core.ir.Assign object at 0x000001AF123A4FA0>],
             'shape': [<numba.core.ir.Assign object at 0x000001AF114DFE80>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=4369)
           2	LOAD_GLOBAL(arg=0, lineno=4370)
           4	LOAD_FAST(arg=0, lineno=4370)
           6	LOAD_FAST(arg=1, lineno=4370)
           8	LOAD_DEREF(arg=0, lineno=4370)
          10	CALL_FUNCTION(arg=3, lineno=4370)
          12	RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=4369)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4370)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4370)
12-22 13:04 DEBUG    stack ['$10call_function.4']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float32, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AEF34E1D00>
12-22 13:04 DEBUG    on stmt: shape = arg(0, name=shape)
12-22 13:04 DEBUG    on stmt: dtype = arg(1, name=dtype)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
12-22 13:04 DEBUG    on stmt: $8load_deref.3 = freevar(retty: array(float32, 1d, C))
12-22 13:04 DEBUG    on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4369), Var(dtype, arrayobj.py:4369), Var($8load_deref.3, arrayobj.py:4370)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $12return_value.5 = cast(value=$10call_function.4)
12-22 13:04 DEBUG    on stmt: return $12return_value.5
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$10call_function.4': [<numba.core.ir.Assign object at 0x000001AEF357FBB0>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x000001AEF357FD30>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AEF357F640>],
             '$8load_deref.3': [<numba.core.ir.Assign object at 0x000001AEF357F4F0>],
             'dtype': [<numba.core.ir.Assign object at 0x000001AEF357F100>],
             'shape': [<numba.core.ir.Assign object at 0x000001AEF34E1B80>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=8, lineno=2)
          32	STORE_FAST(arg=2, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=3, lineno=3)
          38	JUMP_ABSOLUTE(arg=30, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=1)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$sched4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$sched4.1', '$const6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
12-22 13:04 DEBUG    dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
12-22 13:04 DEBUG    dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
12-22 13:04 DEBUG    dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
12-22 13:04 DEBUG    dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$26call_function.12']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi30.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=30 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=30, inst=FOR_ITER(arg=8, lineno=2)
12-22 13:04 DEBUG    stack ['$phi30.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=40 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
12-22 13:04 DEBUG    stack ['$const40.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=32 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi32.0', '$phi32.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=32 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=32, inst=STORE_FAST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$phi32.0', '$phi32.1']
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0']
12-22 13:04 DEBUG    dispatch pc=36, inst=STORE_FAST(arg=3, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0', '$const34.2']
12-22 13:04 DEBUG    dispatch pc=38, inst=JUMP_ABSOLUTE(arg=30, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    sched = arg(0, name=sched)               ['sched']
    rows = arg(1, name=rows)                 ['rows']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_60 = $phi32.1              ['$phi32.1', 'parfor__index_60']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=8, lineno=2)
          32	STORE_FAST(arg=2, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=3, lineno=3)
          38	JUMP_ABSOLUTE(arg=30, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=1)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$sched4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$sched4.1', '$const6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
12-22 13:04 DEBUG    dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
12-22 13:04 DEBUG    dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
12-22 13:04 DEBUG    dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
12-22 13:04 DEBUG    dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$26call_function.12']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi30.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=30 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=30, inst=FOR_ITER(arg=8, lineno=2)
12-22 13:04 DEBUG    stack ['$phi30.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=40 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
12-22 13:04 DEBUG    stack ['$const40.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=32 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi32.0', '$phi32.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=32 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=32, inst=STORE_FAST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$phi32.0', '$phi32.1']
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0']
12-22 13:04 DEBUG    dispatch pc=36, inst=STORE_FAST(arg=3, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0', '$const34.2']
12-22 13:04 DEBUG    dispatch pc=38, inst=JUMP_ABSOLUTE(arg=30, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    sched = arg(0, name=sched)               ['sched']
    cols = arg(1, name=cols)                 ['cols']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_65 = $phi32.1              ['$phi32.1', 'parfor__index_65']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=8, lineno=2)
          32	STORE_FAST(arg=2, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=3, lineno=3)
          38	JUMP_ABSOLUTE(arg=30, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=1)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$sched4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$sched4.1', '$const6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
12-22 13:04 DEBUG    dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
12-22 13:04 DEBUG    dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
12-22 13:04 DEBUG    dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
12-22 13:04 DEBUG    dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$26call_function.12']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi30.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=30 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=30, inst=FOR_ITER(arg=8, lineno=2)
12-22 13:04 DEBUG    stack ['$phi30.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=40 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
12-22 13:04 DEBUG    stack ['$const40.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=32 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi32.0', '$phi32.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=32 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=32, inst=STORE_FAST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$phi32.0', '$phi32.1']
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0']
12-22 13:04 DEBUG    dispatch pc=36, inst=STORE_FAST(arg=3, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0', '$const34.2']
12-22 13:04 DEBUG    dispatch pc=38, inst=JUMP_ABSOLUTE(arg=30, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    sched = arg(0, name=sched)               ['sched']
    vals = arg(1, name=vals)                 ['vals']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_70 = $phi32.1              ['$phi32.1', 'parfor__index_70']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_GLOBAL(arg=0, lineno=2)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_CONST(arg=1, lineno=2)
           8	BINARY_SUBSCR(arg=None, lineno=2)
          10	LOAD_FAST(arg=0, lineno=2)
          12	LOAD_CONST(arg=2, lineno=2)
          14	BINARY_SUBSCR(arg=None, lineno=2)
          16	LOAD_GLOBAL(arg=1, lineno=2)
          18	LOAD_METHOD(arg=2, lineno=2)
          20	LOAD_CONST(arg=2, lineno=2)
          22	CALL_METHOD(arg=1, lineno=2)
          24	BINARY_ADD(arg=None, lineno=2)
          26	CALL_FUNCTION(arg=2, lineno=2)
          28	GET_ITER(arg=None, lineno=2)
>         30	FOR_ITER(arg=8, lineno=2)
          32	STORE_FAST(arg=2, lineno=2)
          34	LOAD_CONST(arg=1, lineno=3)
          36	STORE_FAST(arg=3, lineno=3)
          38	JUMP_ABSOLUTE(arg=30, lineno=3)
>         40	LOAD_CONST(arg=0, lineno=4)
          42	RETURN_VALUE(arg=None, lineno=4)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=1)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$sched4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$sched4.1', '$const6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$sched10.4', '$const12.5']
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$16load_global.7']
12-22 13:04 DEBUG    dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8']
12-22 13:04 DEBUG    dispatch pc=22, inst=CALL_METHOD(arg=1, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$18load_method.8', '$const20.9']
12-22 13:04 DEBUG    dispatch pc=24, inst=BINARY_ADD(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$14binary_subscr.6', '$22call_method.10']
12-22 13:04 DEBUG    dispatch pc=26, inst=CALL_FUNCTION(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$2load_global.0', '$8binary_subscr.3', '$24binary_add.11']
12-22 13:04 DEBUG    dispatch pc=28, inst=GET_ITER(arg=None, lineno=2)
12-22 13:04 DEBUG    stack ['$26call_function.12']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=30, stack=('$28get_iter.13',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi30.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=30 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=30, inst=FOR_ITER(arg=8, lineno=2)
12-22 13:04 DEBUG    stack ['$phi30.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=40 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=40, inst=LOAD_CONST(arg=0, lineno=4)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=4)
12-22 13:04 DEBUG    stack ['$const40.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=32 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi32.0', '$phi32.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=32 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=32, inst=STORE_FAST(arg=2, lineno=2)
12-22 13:04 DEBUG    stack ['$phi32.0', '$phi32.1']
12-22 13:04 DEBUG    dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0']
12-22 13:04 DEBUG    dispatch pc=36, inst=STORE_FAST(arg=3, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0', '$const34.2']
12-22 13:04 DEBUG    dispatch pc=38, inst=JUMP_ABSOLUTE(arg=30, lineno=3)
12-22 13:04 DEBUG    stack ['$phi32.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=30, stack=('$phi32.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=30 nstack_initial=1)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=40 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.13',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))}})
12-22 13:04 DEBUG    keep phismap: {'$phi30.0': {('$28get_iter.13', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.13'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$sched4.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$sched4.1', 'res': '$8binary_subscr.3'}), (10, {'res': '$sched10.4'}), (12, {'res': '$const12.5'}), (14, {'index': '$const12.5', 'target': '$sched10.4', 'res': '$14binary_subscr.6'}), (16, {'res': '$16load_global.7'}), (18, {'item': '$16load_global.7', 'res': '$18load_method.8'}), (20, {'res': '$const20.9'}), (22, {'func': '$18load_method.8', 'args': ['$const20.9'], 'res': '$22call_method.10'}), (24, {'lhs': '$14binary_subscr.6', 'rhs': '$22call_method.10', 'res': '$24binary_add.11'}), (26, {'func': '$2load_global.0', 'args': ['$8binary_subscr.3', '$24binary_add.11'], 'res': '$26call_function.12'}), (28, {'value': '$26call_function.12', 'res': '$28get_iter.13'})), outgoing_phis={'$phi30.0': '$28get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.13',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: (), 32: ('$phi30.0', '$30for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$const34.2'}), (36, {'value': '$const34.2'}), (38, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi32.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$const40.0'}), (42, {'retval': '$const40.0', 'castval': '$42return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    sched = arg(0, name=sched)               ['sched']
    dists = arg(1, name=dists)               ['dists']
    $2load_global.0 = global(range: <class 'range'>) ['$2load_global.0']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=sched, index=$const6.2, fn=<built-in function getitem>) ['$8binary_subscr.3', '$const6.2', 'sched']
    $const12.5 = const(int, 1)               ['$const12.5']
    $14binary_subscr.6 = getitem(value=sched, index=$const12.5, fn=<built-in function getitem>) ['$14binary_subscr.6', '$const12.5', 'sched']
    $16load_global.7 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$16load_global.7']
    $18load_method.8 = getattr(value=$16load_global.7, attr=uint8) ['$16load_global.7', '$18load_method.8']
    $const20.9 = const(int, 1)               ['$const20.9']
    $22call_method.10 = call $18load_method.8($const20.9, func=$18load_method.8, args=[Var($const20.9, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.8', '$22call_method.10', '$const20.9']
    $24binary_add.11 = $14binary_subscr.6 + $22call_method.10 ['$14binary_subscr.6', '$22call_method.10', '$24binary_add.11']
    $26call_function.12 = call $2load_global.0($8binary_subscr.3, $24binary_add.11, func=$2load_global.0, args=[Var($8binary_subscr.3, <string>:2), Var($24binary_add.11, <string>:2)], kws=(), vararg=None, varkwarg=None, target=None) ['$24binary_add.11', '$26call_function.12', '$2load_global.0', '$8binary_subscr.3']
    $28get_iter.13 = getiter(value=$26call_function.12) ['$26call_function.12', '$28get_iter.13']
    $phi30.0 = $28get_iter.13                ['$28get_iter.13', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 40             ['$30for_iter.3']
label 32:
    parfor__index_75 = $phi32.1              ['$phi32.1', 'parfor__index_75']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 30                                  []
label 40:
    $const40.0 = const(NoneType, None)       ['$const40.0']
    $42return_value.1 = cast(value=$const40.0) ['$42return_value.1', '$const40.0']
    return $42return_value.1                 ['$42return_value.1']

12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=62)
           2	LOAD_GLOBAL(arg=0, lineno=91)
           4	LOAD_METHOD(arg=1, lineno=91)
           6	LOAD_FAST(arg=5, lineno=91)
           8	LOAD_ATTR(arg=2, lineno=91)
          10	LOAD_CONST(arg=1, lineno=91)
          12	BINARY_SUBSCR(arg=None, lineno=91)
          14	CALL_METHOD(arg=1, lineno=91)
          16	GET_ITER(arg=None, lineno=91)
>         18	NOP(arg=3, lineno=91)
          20	FOR_ITER(arg=784, lineno=91)
          22	STORE_FAST(arg=27, lineno=91)
          24	LOAD_FAST(arg=15, lineno=92)
          26	LOAD_FAST(arg=27, lineno=92)
          28	BINARY_SUBSCR(arg=None, lineno=92)
          30	LOAD_FAST(arg=16, lineno=92)
          32	COMPARE_OP(arg=1, lineno=92)
          34	POP_JUMP_IF_FALSE(arg=18, lineno=92)
          36	LOAD_FAST(arg=2, lineno=93)
          38	LOAD_FAST(arg=27, lineno=93)
          40	BINARY_SUBSCR(arg=None, lineno=93)
          42	STORE_FAST(arg=28, lineno=93)
          44	LOAD_FAST(arg=3, lineno=94)
          46	LOAD_FAST(arg=27, lineno=94)
          48	BINARY_SUBSCR(arg=None, lineno=94)
          50	STORE_FAST(arg=29, lineno=94)
          52	LOAD_FAST(arg=0, lineno=96)
          54	LOAD_FAST(arg=28, lineno=96)
          56	BINARY_SUBSCR(arg=None, lineno=96)
          58	STORE_FAST(arg=30, lineno=96)
          60	LOAD_FAST(arg=1, lineno=97)
          62	LOAD_FAST(arg=29, lineno=97)
          64	BINARY_SUBSCR(arg=None, lineno=97)
          66	STORE_FAST(arg=31, lineno=97)
          68	LOAD_GLOBAL(arg=3, lineno=99)
          70	LOAD_FAST(arg=30, lineno=99)
          72	LOAD_FAST(arg=31, lineno=99)
          74	CALL_FUNCTION(arg=2, lineno=99)
          76	STORE_FAST(arg=32, lineno=99)
          78	LOAD_FAST(arg=17, lineno=101)
          80	NOP(arg=1, lineno=101)
          82	POP_JUMP_IF_FALSE(arg=350, lineno=101)
          84	LOAD_CONST(arg=2, lineno=102)
          86	LOAD_CONST(arg=2, lineno=102)
          88	LOAD_FAST(arg=6, lineno=102)
          90	LOAD_GLOBAL(arg=4, lineno=102)
          92	LOAD_FAST(arg=32, lineno=102)
          94	LOAD_FAST(arg=7, lineno=102)
          96	CALL_FUNCTION(arg=2, lineno=102)
          98	BINARY_MULTIPLY(arg=None, lineno=102)
         100	BINARY_ADD(arg=None, lineno=102)
         102	BINARY_TRUE_DIVIDE(arg=None, lineno=102)
         104	STORE_FAST(arg=33, lineno=102)
         106	LOAD_FAST(arg=6, lineno=104)
         108	LOAD_FAST(arg=7, lineno=104)
         110	BINARY_MULTIPLY(arg=None, lineno=104)
         112	LOAD_GLOBAL(arg=4, lineno=104)
         114	LOAD_FAST(arg=32, lineno=104)
         116	LOAD_FAST(arg=7, lineno=104)
         118	LOAD_CONST(arg=3, lineno=104)
         120	BINARY_SUBTRACT(arg=None, lineno=104)
         122	CALL_FUNCTION(arg=2, lineno=104)
         124	BINARY_MULTIPLY(arg=None, lineno=104)
         126	LOAD_CONST(arg=2, lineno=104)
         128	LOAD_FAST(arg=6, lineno=104)
         130	LOAD_GLOBAL(arg=4, lineno=104)
         132	LOAD_FAST(arg=32, lineno=104)
         134	LOAD_FAST(arg=7, lineno=104)
         136	CALL_FUNCTION(arg=2, lineno=104)
         138	BINARY_MULTIPLY(arg=None, lineno=104)
         140	BINARY_ADD(arg=None, lineno=104)
         142	BINARY_TRUE_DIVIDE(arg=None, lineno=104)
         144	STORE_FAST(arg=34, lineno=103)
         146	LOAD_FAST(arg=33, lineno=107)
         148	LOAD_FAST(arg=18, lineno=107)
         150	LOAD_FAST(arg=29, lineno=107)
         152	BINARY_SUBSCR(arg=None, lineno=107)
         154	BINARY_TRUE_DIVIDE(arg=None, lineno=107)
         156	STORE_FAST(arg=35, lineno=107)
         158	LOAD_FAST(arg=33, lineno=108)
         160	LOAD_FAST(arg=18, lineno=108)
         162	LOAD_FAST(arg=28, lineno=108)
         164	BINARY_SUBSCR(arg=None, lineno=108)
         166	BINARY_TRUE_DIVIDE(arg=None, lineno=108)
         168	STORE_FAST(arg=36, lineno=108)
         170	LOAD_FAST(arg=35, lineno=110)
         172	LOAD_CONST(arg=2, lineno=111)
         174	LOAD_FAST(arg=7, lineno=111)
         176	LOAD_CONST(arg=3, lineno=111)
         178	LOAD_FAST(arg=33, lineno=111)
         180	BINARY_SUBTRACT(arg=None, lineno=111)
         182	BINARY_MULTIPLY(arg=None, lineno=111)
         184	BINARY_SUBTRACT(arg=None, lineno=111)
         186	LOAD_GLOBAL(arg=5, lineno=111)
         188	LOAD_METHOD(arg=6, lineno=111)
         190	LOAD_FAST(arg=19, lineno=111)
         192	LOAD_FAST(arg=29, lineno=111)
         194	BINARY_SUBSCR(arg=None, lineno=111)
         196	CALL_METHOD(arg=1, lineno=111)
         198	BINARY_TRUE_DIVIDE(arg=None, lineno=111)
         200	LOAD_FAST(arg=34, lineno=111)
         202	BINARY_ADD(arg=None, lineno=111)
         204	BINARY_MULTIPLY(arg=None, lineno=110)
         206	STORE_FAST(arg=37, lineno=110)
         208	LOAD_FAST(arg=36, lineno=113)
         210	LOAD_CONST(arg=2, lineno=114)
         212	LOAD_FAST(arg=7, lineno=114)
         214	LOAD_CONST(arg=3, lineno=114)
         216	LOAD_FAST(arg=33, lineno=114)
         218	BINARY_SUBTRACT(arg=None, lineno=114)
         220	BINARY_MULTIPLY(arg=None, lineno=114)
         222	BINARY_SUBTRACT(arg=None, lineno=114)
         224	LOAD_GLOBAL(arg=5, lineno=114)
         226	LOAD_METHOD(arg=6, lineno=114)
         228	LOAD_FAST(arg=19, lineno=114)
         230	LOAD_FAST(arg=28, lineno=114)
         232	BINARY_SUBSCR(arg=None, lineno=114)
         234	CALL_METHOD(arg=1, lineno=114)
         236	BINARY_TRUE_DIVIDE(arg=None, lineno=114)
         238	LOAD_FAST(arg=34, lineno=114)
         240	BINARY_ADD(arg=None, lineno=114)
         242	BINARY_MULTIPLY(arg=None, lineno=113)
         244	STORE_FAST(arg=38, lineno=113)
         246	LOAD_FAST(arg=21, lineno=117)
         248	LOAD_FAST(arg=21, lineno=117)
         250	BINARY_MULTIPLY(arg=None, lineno=117)
         252	STORE_FAST(arg=39, lineno=117)
         254	LOAD_FAST(arg=24, lineno=119)
         256	LOAD_FAST(arg=29, lineno=119)
         258	BINARY_SUBSCR(arg=None, lineno=119)
         260	LOAD_FAST(arg=20, lineno=120)
         262	LOAD_FAST(arg=19, lineno=120)
         264	LOAD_FAST(arg=29, lineno=120)
         266	BINARY_SUBSCR(arg=None, lineno=120)
         268	LOAD_FAST(arg=22, lineno=120)
         270	BINARY_SUBTRACT(arg=None, lineno=120)
         272	BINARY_MULTIPLY(arg=None, lineno=120)
         274	LOAD_FAST(arg=39, lineno=120)
         276	BINARY_TRUE_DIVIDE(arg=None, lineno=120)
         278	BINARY_SUBTRACT(arg=None, lineno=119)
         280	STORE_FAST(arg=40, lineno=118)
         282	LOAD_FAST(arg=24, lineno=123)
         284	LOAD_FAST(arg=28, lineno=123)
         286	BINARY_SUBSCR(arg=None, lineno=123)
         288	LOAD_FAST(arg=20, lineno=124)
         290	LOAD_FAST(arg=19, lineno=124)
         292	LOAD_FAST(arg=28, lineno=124)
         294	BINARY_SUBSCR(arg=None, lineno=124)
         296	LOAD_FAST(arg=22, lineno=124)
         298	BINARY_SUBTRACT(arg=None, lineno=124)
         300	BINARY_MULTIPLY(arg=None, lineno=124)
         302	LOAD_FAST(arg=39, lineno=124)
         304	BINARY_TRUE_DIVIDE(arg=None, lineno=124)
         306	BINARY_SUBTRACT(arg=None, lineno=123)
         308	STORE_FAST(arg=41, lineno=122)
         310	LOAD_FAST(arg=23, lineno=128)
         312	LOAD_FAST(arg=26, lineno=129)
         314	BINARY_MULTIPLY(arg=None, lineno=128)
         316	LOAD_FAST(arg=40, lineno=130)
         318	LOAD_FAST(arg=37, lineno=130)
         320	BINARY_MULTIPLY(arg=None, lineno=130)
         322	LOAD_FAST(arg=41, lineno=130)
         324	LOAD_FAST(arg=38, lineno=130)
         326	BINARY_MULTIPLY(arg=None, lineno=130)
         328	BINARY_ADD(arg=None, lineno=130)
         330	BINARY_MULTIPLY(arg=None, lineno=128)
         332	LOAD_FAST(arg=25, lineno=131)
         334	LOAD_FAST(arg=27, lineno=131)
         336	BINARY_SUBSCR(arg=None, lineno=131)
         338	LOAD_FAST(arg=21, lineno=131)
         340	BINARY_MULTIPLY(arg=None, lineno=131)
         342	BINARY_TRUE_DIVIDE(arg=None, lineno=128)
         344	LOAD_FAST(arg=4, lineno=132)
         346	BINARY_TRUE_DIVIDE(arg=None, lineno=128)
         348	STORE_FAST(arg=42, lineno=127)
>        350	LOAD_FAST(arg=32, lineno=135)
         352	LOAD_CONST(arg=4, lineno=135)
         354	COMPARE_OP(arg=4, lineno=135)
         356	NOP(arg=1, lineno=135)
         358	POP_JUMP_IF_FALSE(arg=410, lineno=135)
         360	LOAD_CONST(arg=5, lineno=136)
         362	LOAD_FAST(arg=6, lineno=136)
         364	BINARY_MULTIPLY(arg=None, lineno=136)
         366	LOAD_FAST(arg=7, lineno=136)
         368	BINARY_MULTIPLY(arg=None, lineno=136)
         370	LOAD_GLOBAL(arg=4, lineno=136)
         372	LOAD_FAST(arg=32, lineno=136)
         374	LOAD_FAST(arg=7, lineno=136)
         376	LOAD_CONST(arg=2, lineno=136)
         378	BINARY_SUBTRACT(arg=None, lineno=136)
         380	CALL_FUNCTION(arg=2, lineno=136)
         382	BINARY_MULTIPLY(arg=None, lineno=136)
         384	STORE_FAST(arg=43, lineno=136)
         386	LOAD_FAST(arg=43, lineno=137)
         388	LOAD_FAST(arg=6, lineno=137)
         390	LOAD_GLOBAL(arg=4, lineno=137)
         392	LOAD_FAST(arg=32, lineno=137)
         394	LOAD_FAST(arg=7, lineno=137)
         396	CALL_FUNCTION(arg=2, lineno=137)
         398	BINARY_MULTIPLY(arg=None, lineno=137)
         400	LOAD_CONST(arg=2, lineno=137)
         402	BINARY_ADD(arg=None, lineno=137)
         404	INPLACE_TRUE_DIVIDE(arg=None, lineno=137)
         406	STORE_FAST(arg=43, lineno=137)
         408	JUMP_FORWARD(arg=4, lineno=137)
>        410	LOAD_CONST(arg=4, lineno=139)
         412	STORE_FAST(arg=43, lineno=139)
>        414	LOAD_GLOBAL(arg=7, lineno=141)
         416	LOAD_FAST(arg=10, lineno=141)
         418	CALL_FUNCTION(arg=1, lineno=141)
         420	GET_ITER(arg=None, lineno=141)
>        422	FOR_ITER(arg=116, lineno=141)
         424	STORE_FAST(arg=44, lineno=141)
         426	LOAD_GLOBAL(arg=8, lineno=142)
         428	LOAD_FAST(arg=43, lineno=142)
         430	LOAD_FAST(arg=30, lineno=142)
         432	LOAD_FAST(arg=44, lineno=142)
         434	BINARY_SUBSCR(arg=None, lineno=142)
         436	LOAD_FAST(arg=31, lineno=142)
         438	LOAD_FAST(arg=44, lineno=142)
         440	BINARY_SUBSCR(arg=None, lineno=142)
         442	BINARY_SUBTRACT(arg=None, lineno=142)
         444	BINARY_MULTIPLY(arg=None, lineno=142)
         446	CALL_FUNCTION(arg=1, lineno=142)
         448	STORE_FAST(arg=45, lineno=142)
         450	LOAD_FAST(arg=17, lineno=144)
         452	NOP(arg=1, lineno=144)
         454	POP_JUMP_IF_FALSE(arg=488, lineno=144)
         456	LOAD_FAST(arg=45, lineno=147)
         458	LOAD_GLOBAL(arg=8, lineno=147)
         460	LOAD_CONST(arg=6, lineno=147)
         462	LOAD_FAST(arg=42, lineno=147)
         464	BINARY_MULTIPLY(arg=None, lineno=147)
         466	LOAD_FAST(arg=30, lineno=147)
         468	LOAD_FAST(arg=44, lineno=147)
         470	BINARY_SUBSCR(arg=None, lineno=147)
         472	LOAD_FAST(arg=31, lineno=147)
         474	LOAD_FAST(arg=44, lineno=147)
         476	BINARY_SUBSCR(arg=None, lineno=147)
         478	BINARY_SUBTRACT(arg=None, lineno=147)
         480	BINARY_MULTIPLY(arg=None, lineno=147)
         482	CALL_FUNCTION(arg=1, lineno=147)
         484	INPLACE_ADD(arg=None, lineno=147)
         486	STORE_FAST(arg=45, lineno=147)
>        488	LOAD_FAST(arg=30, lineno=149)
         490	LOAD_FAST(arg=44, lineno=149)
         492	DUP_TOP_TWO(arg=None, lineno=149)
         494	BINARY_SUBSCR(arg=None, lineno=149)
         496	LOAD_FAST(arg=45, lineno=149)
         498	LOAD_FAST(arg=12, lineno=149)
         500	BINARY_MULTIPLY(arg=None, lineno=149)
         502	INPLACE_ADD(arg=None, lineno=149)
         504	ROT_THREE(arg=None, lineno=149)
         506	STORE_SUBSCR(arg=None, lineno=149)
         508	LOAD_FAST(arg=11, lineno=150)
         510	NOP(arg=1, lineno=150)
         512	POP_JUMP_IF_FALSE(arg=422, lineno=150)
         514	LOAD_FAST(arg=31, lineno=151)
         516	LOAD_FAST(arg=44, lineno=151)
         518	DUP_TOP_TWO(arg=None, lineno=151)
         520	BINARY_SUBSCR(arg=None, lineno=151)
         522	LOAD_FAST(arg=45, lineno=151)
         524	UNARY_NEGATIVE(arg=None, lineno=151)
         526	LOAD_FAST(arg=12, lineno=151)
         528	BINARY_MULTIPLY(arg=None, lineno=151)
         530	INPLACE_ADD(arg=None, lineno=151)
         532	ROT_THREE(arg=None, lineno=151)
         534	STORE_SUBSCR(arg=None, lineno=151)
         536	NOP(arg=1, lineno=151)
         538	JUMP_ABSOLUTE(arg=422, lineno=151)
>        540	LOAD_FAST(arg=15, lineno=153)
         542	LOAD_FAST(arg=27, lineno=153)
         544	DUP_TOP_TWO(arg=None, lineno=153)
         546	BINARY_SUBSCR(arg=None, lineno=153)
         548	LOAD_FAST(arg=5, lineno=153)
         550	LOAD_FAST(arg=27, lineno=153)
         552	BINARY_SUBSCR(arg=None, lineno=153)
         554	INPLACE_ADD(arg=None, lineno=153)
         556	ROT_THREE(arg=None, lineno=153)
         558	STORE_SUBSCR(arg=None, lineno=153)
         560	LOAD_GLOBAL(arg=9, lineno=155)
         562	LOAD_FAST(arg=16, lineno=156)
         564	LOAD_FAST(arg=14, lineno=156)
         566	LOAD_FAST(arg=27, lineno=156)
         568	BINARY_SUBSCR(arg=None, lineno=156)
         570	BINARY_SUBTRACT(arg=None, lineno=156)
         572	LOAD_FAST(arg=13, lineno=156)
         574	LOAD_FAST(arg=27, lineno=156)
         576	BINARY_SUBSCR(arg=None, lineno=156)
         578	BINARY_TRUE_DIVIDE(arg=None, lineno=156)
         580	CALL_FUNCTION(arg=1, lineno=155)
         582	STORE_FAST(arg=46, lineno=155)
         584	LOAD_GLOBAL(arg=7, lineno=159)
         586	LOAD_FAST(arg=46, lineno=159)
         588	CALL_FUNCTION(arg=1, lineno=159)
         590	GET_ITER(arg=None, lineno=159)
>        592	FOR_ITER(arg=186, lineno=159)
         594	STORE_FAST(arg=47, lineno=159)
         596	LOAD_GLOBAL(arg=10, lineno=160)
         598	LOAD_FAST(arg=8, lineno=160)
         600	CALL_FUNCTION(arg=1, lineno=160)
         602	LOAD_FAST(arg=4, lineno=160)
         604	BINARY_MODULO(arg=None, lineno=160)
         606	STORE_FAST(arg=29, lineno=160)
         608	LOAD_FAST(arg=1, lineno=162)
         610	LOAD_FAST(arg=29, lineno=162)
         612	BINARY_SUBSCR(arg=None, lineno=162)
         614	STORE_FAST(arg=31, lineno=162)
         616	LOAD_GLOBAL(arg=3, lineno=164)
         618	LOAD_FAST(arg=30, lineno=164)
         620	LOAD_FAST(arg=31, lineno=164)
         622	CALL_FUNCTION(arg=2, lineno=164)
         624	STORE_FAST(arg=32, lineno=164)
         626	LOAD_FAST(arg=32, lineno=166)
         628	LOAD_CONST(arg=4, lineno=166)
         630	COMPARE_OP(arg=4, lineno=166)
         632	NOP(arg=2, lineno=166)
         634	POP_JUMP_IF_FALSE(arg=680, lineno=166)
         636	LOAD_CONST(arg=7, lineno=167)
         638	LOAD_FAST(arg=9, lineno=167)
         640	BINARY_MULTIPLY(arg=None, lineno=167)
         642	LOAD_FAST(arg=7, lineno=167)
         644	BINARY_MULTIPLY(arg=None, lineno=167)
         646	STORE_FAST(arg=43, lineno=167)
         648	LOAD_FAST(arg=43, lineno=168)
         650	LOAD_CONST(arg=8, lineno=168)
         652	LOAD_FAST(arg=32, lineno=168)
         654	BINARY_ADD(arg=None, lineno=168)
         656	LOAD_FAST(arg=6, lineno=169)
         658	LOAD_GLOBAL(arg=4, lineno=169)
         660	LOAD_FAST(arg=32, lineno=169)
         662	LOAD_FAST(arg=7, lineno=169)
         664	CALL_FUNCTION(arg=2, lineno=169)
         666	BINARY_MULTIPLY(arg=None, lineno=169)
         668	LOAD_CONST(arg=3, lineno=169)
         670	BINARY_ADD(arg=None, lineno=169)
         672	BINARY_MULTIPLY(arg=None, lineno=168)
         674	INPLACE_TRUE_DIVIDE(arg=None, lineno=168)
         676	STORE_FAST(arg=43, lineno=168)
         678	JUMP_FORWARD(arg=20, lineno=168)
>        680	LOAD_FAST(arg=28, lineno=171)
         682	LOAD_FAST(arg=29, lineno=171)
         684	COMPARE_OP(arg=2, lineno=171)
         686	NOP(arg=2, lineno=171)
         688	POP_JUMP_IF_FALSE(arg=696, lineno=171)
         690	NOP(arg=2, lineno=172)
         692	JUMP_ABSOLUTE(arg=592, lineno=172)
         694	JUMP_FORWARD(arg=4, lineno=172)
>        696	LOAD_CONST(arg=4, lineno=174)
         698	STORE_FAST(arg=43, lineno=174)
>        700	LOAD_GLOBAL(arg=7, lineno=176)
         702	LOAD_FAST(arg=10, lineno=176)
         704	CALL_FUNCTION(arg=1, lineno=176)
         706	GET_ITER(arg=None, lineno=176)
>        708	FOR_ITER(arg=66, lineno=176)
         710	STORE_FAST(arg=44, lineno=176)
         712	LOAD_FAST(arg=43, lineno=177)
         714	LOAD_CONST(arg=4, lineno=177)
         716	COMPARE_OP(arg=4, lineno=177)
         718	NOP(arg=2, lineno=177)
         720	POP_JUMP_IF_FALSE(arg=748, lineno=177)
         722	LOAD_GLOBAL(arg=8, lineno=178)
         724	LOAD_FAST(arg=43, lineno=178)
         726	LOAD_FAST(arg=30, lineno=178)
         728	LOAD_FAST(arg=44, lineno=178)
         730	BINARY_SUBSCR(arg=None, lineno=178)
         732	LOAD_FAST(arg=31, lineno=178)
         734	LOAD_FAST(arg=44, lineno=178)
         736	BINARY_SUBSCR(arg=None, lineno=178)
         738	BINARY_SUBTRACT(arg=None, lineno=178)
         740	BINARY_MULTIPLY(arg=None, lineno=178)
         742	CALL_FUNCTION(arg=1, lineno=178)
         744	STORE_FAST(arg=45, lineno=178)
         746	JUMP_FORWARD(arg=4, lineno=178)
>        748	LOAD_CONST(arg=1, lineno=180)
         750	STORE_FAST(arg=45, lineno=180)
>        752	LOAD_FAST(arg=30, lineno=181)
         754	LOAD_FAST(arg=44, lineno=181)
         756	DUP_TOP_TWO(arg=None, lineno=181)
         758	BINARY_SUBSCR(arg=None, lineno=181)
         760	LOAD_FAST(arg=45, lineno=181)
         762	LOAD_FAST(arg=12, lineno=181)
         764	BINARY_MULTIPLY(arg=None, lineno=181)
         766	INPLACE_ADD(arg=None, lineno=181)
         768	ROT_THREE(arg=None, lineno=181)
         770	STORE_SUBSCR(arg=None, lineno=181)
         772	NOP(arg=2, lineno=181)
         774	JUMP_ABSOLUTE(arg=708, lineno=181)
>        776	NOP(arg=2, lineno=181)
         778	JUMP_ABSOLUTE(arg=592, lineno=181)
>        780	LOAD_FAST(arg=14, lineno=183)
         782	LOAD_FAST(arg=27, lineno=183)
         784	DUP_TOP_TWO(arg=None, lineno=183)
         786	BINARY_SUBSCR(arg=None, lineno=183)
         788	LOAD_FAST(arg=46, lineno=184)
         790	LOAD_FAST(arg=13, lineno=184)
         792	LOAD_FAST(arg=27, lineno=184)
         794	BINARY_SUBSCR(arg=None, lineno=184)
         796	BINARY_MULTIPLY(arg=None, lineno=184)
         798	INPLACE_ADD(arg=None, lineno=183)
         800	ROT_THREE(arg=None, lineno=183)
         802	STORE_SUBSCR(arg=None, lineno=183)
         804	JUMP_ABSOLUTE(arg=18, lineno=183)
>        806	LOAD_CONST(arg=0, lineno=183)
         808	RETURN_VALUE(arg=None, lineno=183)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=62)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=91)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=91)
12-22 13:04 DEBUG    stack ['$2load_global.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=5, lineno=91)
12-22 13:04 DEBUG    stack ['$4load_method.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=91)
12-22 13:04 DEBUG    stack ['$4load_method.1', '$epochs_per_sample6.2']
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=91)
12-22 13:04 DEBUG    stack ['$4load_method.1', '$8load_attr.3']
12-22 13:04 DEBUG    dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=91)
12-22 13:04 DEBUG    stack ['$4load_method.1', '$8load_attr.3', '$const10.4']
12-22 13:04 DEBUG    dispatch pc=14, inst=CALL_METHOD(arg=1, lineno=91)
12-22 13:04 DEBUG    stack ['$4load_method.1', '$12binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=16, inst=GET_ITER(arg=None, lineno=91)
12-22 13:04 DEBUG    stack ['$14call_method.6']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=18, stack=('$16get_iter.7',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi18.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=18 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=18, inst=NOP(arg=3, lineno=91)
12-22 13:04 DEBUG    stack ['$phi18.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=20, stack=('$phi18.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=20 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi20.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=20 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=20, inst=FOR_ITER(arg=784, lineno=91)
12-22 13:04 DEBUG    stack ['$phi20.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=806, stack=(), blockstack=(), npush=0), Edge(pc=22, stack=('$phi20.0', '$20for_iter.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=806 nstack_initial=0), State(pc_initial=22 nstack_initial=2)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=806 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=806, inst=LOAD_CONST(arg=0, lineno=183)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=808, inst=RETURN_VALUE(arg=None, lineno=183)
12-22 13:04 DEBUG    stack ['$const806.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=22 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi22.0', '$phi22.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=22 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=22, inst=STORE_FAST(arg=27, lineno=91)
12-22 13:04 DEBUG    stack ['$phi22.0', '$phi22.1']
12-22 13:04 DEBUG    dispatch pc=24, inst=LOAD_FAST(arg=15, lineno=92)
12-22 13:04 DEBUG    stack ['$phi22.0']
12-22 13:04 DEBUG    dispatch pc=26, inst=LOAD_FAST(arg=27, lineno=92)
12-22 13:04 DEBUG    stack ['$phi22.0', '$epoch_of_next_sample24.2']
12-22 13:04 DEBUG    dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=92)
12-22 13:04 DEBUG    stack ['$phi22.0', '$epoch_of_next_sample24.2', '$i26.3']
12-22 13:04 DEBUG    dispatch pc=30, inst=LOAD_FAST(arg=16, lineno=92)
12-22 13:04 DEBUG    stack ['$phi22.0', '$28binary_subscr.4']
12-22 13:04 DEBUG    dispatch pc=32, inst=COMPARE_OP(arg=1, lineno=92)
12-22 13:04 DEBUG    stack ['$phi22.0', '$28binary_subscr.4', '$n30.5']
12-22 13:04 DEBUG    dispatch pc=34, inst=POP_JUMP_IF_FALSE(arg=18, lineno=92)
12-22 13:04 DEBUG    stack ['$phi22.0', '$32compare_op.6']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=36, stack=('$phi22.0',), blockstack=(), npush=0), Edge(pc=18, stack=('$phi22.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=36 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi36.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=36 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=93)
12-22 13:04 DEBUG    stack ['$phi36.0']
12-22 13:04 DEBUG    dispatch pc=38, inst=LOAD_FAST(arg=27, lineno=93)
12-22 13:04 DEBUG    stack ['$phi36.0', '$head36.1']
12-22 13:04 DEBUG    dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=93)
12-22 13:04 DEBUG    stack ['$phi36.0', '$head36.1', '$i38.2']
12-22 13:04 DEBUG    dispatch pc=42, inst=STORE_FAST(arg=28, lineno=93)
12-22 13:04 DEBUG    stack ['$phi36.0', '$40binary_subscr.3']
12-22 13:04 DEBUG    dispatch pc=44, inst=LOAD_FAST(arg=3, lineno=94)
12-22 13:04 DEBUG    stack ['$phi36.0']
12-22 13:04 DEBUG    dispatch pc=46, inst=LOAD_FAST(arg=27, lineno=94)
12-22 13:04 DEBUG    stack ['$phi36.0', '$tail44.4']
12-22 13:04 DEBUG    dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=94)
12-22 13:04 DEBUG    stack ['$phi36.0', '$tail44.4', '$i46.5']
12-22 13:04 DEBUG    dispatch pc=50, inst=STORE_FAST(arg=29, lineno=94)
12-22 13:04 DEBUG    stack ['$phi36.0', '$48binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=96)
12-22 13:04 DEBUG    stack ['$phi36.0']
12-22 13:04 DEBUG    dispatch pc=54, inst=LOAD_FAST(arg=28, lineno=96)
12-22 13:04 DEBUG    stack ['$phi36.0', '$head_embedding52.7']
12-22 13:04 DEBUG    dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=96)
12-22 13:04 DEBUG    stack ['$phi36.0', '$head_embedding52.7', '$j54.8']
12-22 13:04 DEBUG    dispatch pc=58, inst=STORE_FAST(arg=30, lineno=96)
12-22 13:04 DEBUG    stack ['$phi36.0', '$56binary_subscr.9']
12-22 13:04 DEBUG    dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=97)
12-22 13:04 DEBUG    stack ['$phi36.0']
12-22 13:04 DEBUG    dispatch pc=62, inst=LOAD_FAST(arg=29, lineno=97)
12-22 13:04 DEBUG    stack ['$phi36.0', '$tail_embedding60.10']
12-22 13:04 DEBUG    dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=97)
12-22 13:04 DEBUG    stack ['$phi36.0', '$tail_embedding60.10', '$k62.11']
12-22 13:04 DEBUG    dispatch pc=66, inst=STORE_FAST(arg=31, lineno=97)
12-22 13:04 DEBUG    stack ['$phi36.0', '$64binary_subscr.12']
12-22 13:04 DEBUG    dispatch pc=68, inst=LOAD_GLOBAL(arg=3, lineno=99)
12-22 13:04 DEBUG    stack ['$phi36.0']
12-22 13:04 DEBUG    dispatch pc=70, inst=LOAD_FAST(arg=30, lineno=99)
12-22 13:04 DEBUG    stack ['$phi36.0', '$68load_global.13']
12-22 13:04 DEBUG    dispatch pc=72, inst=LOAD_FAST(arg=31, lineno=99)
12-22 13:04 DEBUG    stack ['$phi36.0', '$68load_global.13', '$current70.14']
12-22 13:04 DEBUG    dispatch pc=74, inst=CALL_FUNCTION(arg=2, lineno=99)
12-22 13:04 DEBUG    stack ['$phi36.0', '$68load_global.13', '$current70.14', '$other72.15']
12-22 13:04 DEBUG    dispatch pc=76, inst=STORE_FAST(arg=32, lineno=99)
12-22 13:04 DEBUG    stack ['$phi36.0', '$74call_function.16']
12-22 13:04 DEBUG    dispatch pc=78, inst=LOAD_FAST(arg=17, lineno=101)
12-22 13:04 DEBUG    stack ['$phi36.0']
12-22 13:04 DEBUG    dispatch pc=80, inst=NOP(arg=1, lineno=101)
12-22 13:04 DEBUG    stack ['$phi36.0', '$densmap_flag78.17']
12-22 13:04 DEBUG    dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=350, lineno=101)
12-22 13:04 DEBUG    stack ['$phi36.0', '$densmap_flag78.17']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=84, stack=('$phi36.0',), blockstack=(), npush=0), Edge(pc=350, stack=('$phi36.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi84.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=84 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=102)
12-22 13:04 DEBUG    stack ['$phi84.0']
12-22 13:04 DEBUG    dispatch pc=86, inst=LOAD_CONST(arg=2, lineno=102)
12-22 13:04 DEBUG    stack ['$phi84.0', '$const84.1']
12-22 13:04 DEBUG    dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=102)
12-22 13:04 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2']
12-22 13:04 DEBUG    dispatch pc=90, inst=LOAD_GLOBAL(arg=4, lineno=102)
12-22 13:04 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3']
12-22 13:04 DEBUG    dispatch pc=92, inst=LOAD_FAST(arg=32, lineno=102)
12-22 13:04 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$90load_global.4']
12-22 13:04 DEBUG    dispatch pc=94, inst=LOAD_FAST(arg=7, lineno=102)
12-22 13:04 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$90load_global.4', '$dist_squared92.5']
12-22 13:04 DEBUG    dispatch pc=96, inst=CALL_FUNCTION(arg=2, lineno=102)
12-22 13:04 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$90load_global.4', '$dist_squared92.5', '$b94.6']
12-22 13:04 DEBUG    dispatch pc=98, inst=BINARY_MULTIPLY(arg=None, lineno=102)
12-22 13:04 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$96call_function.7']
12-22 13:04 DEBUG    dispatch pc=100, inst=BINARY_ADD(arg=None, lineno=102)
12-22 13:04 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$98binary_multiply.8']
12-22 13:04 DEBUG    dispatch pc=102, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=102)
12-22 13:04 DEBUG    stack ['$phi84.0', '$const84.1', '$100binary_add.9']
12-22 13:04 DEBUG    dispatch pc=104, inst=STORE_FAST(arg=33, lineno=102)
12-22 13:04 DEBUG    stack ['$phi84.0', '$102binary_true_divide.10']
12-22 13:04 DEBUG    dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0']
12-22 13:04 DEBUG    dispatch pc=108, inst=LOAD_FAST(arg=7, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$a106.11']
12-22 13:04 DEBUG    dispatch pc=110, inst=BINARY_MULTIPLY(arg=None, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$a106.11', '$b108.12']
12-22 13:04 DEBUG    dispatch pc=112, inst=LOAD_GLOBAL(arg=4, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$110binary_multiply.13']
12-22 13:04 DEBUG    dispatch pc=114, inst=LOAD_FAST(arg=32, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14']
12-22 13:04 DEBUG    dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15']
12-22 13:04 DEBUG    dispatch pc=118, inst=LOAD_CONST(arg=3, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15', '$b116.16']
12-22 13:04 DEBUG    dispatch pc=120, inst=BINARY_SUBTRACT(arg=None, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15', '$b116.16', '$const118.17']
12-22 13:04 DEBUG    dispatch pc=122, inst=CALL_FUNCTION(arg=2, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15', '$120binary_subtract.18']
12-22 13:04 DEBUG    dispatch pc=124, inst=BINARY_MULTIPLY(arg=None, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$122call_function.19']
12-22 13:04 DEBUG    dispatch pc=126, inst=LOAD_CONST(arg=2, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$124binary_multiply.20']
12-22 13:04 DEBUG    dispatch pc=128, inst=LOAD_FAST(arg=6, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21']
12-22 13:04 DEBUG    dispatch pc=130, inst=LOAD_GLOBAL(arg=4, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22']
12-22 13:04 DEBUG    dispatch pc=132, inst=LOAD_FAST(arg=32, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$130load_global.23']
12-22 13:04 DEBUG    dispatch pc=134, inst=LOAD_FAST(arg=7, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$130load_global.23', '$dist_squared132.24']
12-22 13:04 DEBUG    dispatch pc=136, inst=CALL_FUNCTION(arg=2, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$130load_global.23', '$dist_squared132.24', '$b134.25']
12-22 13:04 DEBUG    dispatch pc=138, inst=BINARY_MULTIPLY(arg=None, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$136call_function.26']
12-22 13:04 DEBUG    dispatch pc=140, inst=BINARY_ADD(arg=None, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$138binary_multiply.27']
12-22 13:04 DEBUG    dispatch pc=142, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=104)
12-22 13:04 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$140binary_add.28']
12-22 13:04 DEBUG    dispatch pc=144, inst=STORE_FAST(arg=34, lineno=103)
12-22 13:04 DEBUG    stack ['$phi84.0', '$142binary_true_divide.29']
12-22 13:04 DEBUG    dispatch pc=146, inst=LOAD_FAST(arg=33, lineno=107)
12-22 13:04 DEBUG    stack ['$phi84.0']
12-22 13:04 DEBUG    dispatch pc=148, inst=LOAD_FAST(arg=18, lineno=107)
12-22 13:04 DEBUG    stack ['$phi84.0', '$phi146.30']
12-22 13:04 DEBUG    dispatch pc=150, inst=LOAD_FAST(arg=29, lineno=107)
12-22 13:04 DEBUG    stack ['$phi84.0', '$phi146.30', '$dens_phi_sum148.31']
12-22 13:04 DEBUG    dispatch pc=152, inst=BINARY_SUBSCR(arg=None, lineno=107)
12-22 13:04 DEBUG    stack ['$phi84.0', '$phi146.30', '$dens_phi_sum148.31', '$k150.32']
12-22 13:04 DEBUG    dispatch pc=154, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=107)
12-22 13:04 DEBUG    stack ['$phi84.0', '$phi146.30', '$152binary_subscr.33']
12-22 13:04 DEBUG    dispatch pc=156, inst=STORE_FAST(arg=35, lineno=107)
12-22 13:04 DEBUG    stack ['$phi84.0', '$154binary_true_divide.34']
12-22 13:04 DEBUG    dispatch pc=158, inst=LOAD_FAST(arg=33, lineno=108)
12-22 13:04 DEBUG    stack ['$phi84.0']
12-22 13:04 DEBUG    dispatch pc=160, inst=LOAD_FAST(arg=18, lineno=108)
12-22 13:04 DEBUG    stack ['$phi84.0', '$phi158.35']
12-22 13:04 DEBUG    dispatch pc=162, inst=LOAD_FAST(arg=28, lineno=108)
12-22 13:04 DEBUG    stack ['$phi84.0', '$phi158.35', '$dens_phi_sum160.36']
12-22 13:04 DEBUG    dispatch pc=164, inst=BINARY_SUBSCR(arg=None, lineno=108)
12-22 13:04 DEBUG    stack ['$phi84.0', '$phi158.35', '$dens_phi_sum160.36', '$j162.37']
12-22 13:04 DEBUG    dispatch pc=166, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=108)
12-22 13:04 DEBUG    stack ['$phi84.0', '$phi158.35', '$164binary_subscr.38']
12-22 13:04 DEBUG    dispatch pc=168, inst=STORE_FAST(arg=36, lineno=108)
12-22 13:04 DEBUG    stack ['$phi84.0', '$166binary_true_divide.39']
12-22 13:04 DEBUG    dispatch pc=170, inst=LOAD_FAST(arg=35, lineno=110)
12-22 13:04 DEBUG    stack ['$phi84.0']
12-22 13:04 DEBUG    dispatch pc=172, inst=LOAD_CONST(arg=2, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40']
12-22 13:04 DEBUG    dispatch pc=174, inst=LOAD_FAST(arg=7, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41']
12-22 13:04 DEBUG    dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42']
12-22 13:04 DEBUG    dispatch pc=178, inst=LOAD_FAST(arg=33, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42', '$const176.43']
12-22 13:04 DEBUG    dispatch pc=180, inst=BINARY_SUBTRACT(arg=None, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42', '$const176.43', '$phi178.44']
12-22 13:04 DEBUG    dispatch pc=182, inst=BINARY_MULTIPLY(arg=None, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42', '$180binary_subtract.45']
12-22 13:04 DEBUG    dispatch pc=184, inst=BINARY_SUBTRACT(arg=None, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$182binary_multiply.46']
12-22 13:04 DEBUG    dispatch pc=186, inst=LOAD_GLOBAL(arg=5, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47']
12-22 13:04 DEBUG    dispatch pc=188, inst=LOAD_METHOD(arg=6, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$186load_global.48']
12-22 13:04 DEBUG    dispatch pc=190, inst=LOAD_FAST(arg=19, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49']
12-22 13:04 DEBUG    dispatch pc=192, inst=LOAD_FAST(arg=29, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49', '$dens_re_sum190.50']
12-22 13:04 DEBUG    dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49', '$dens_re_sum190.50', '$k192.51']
12-22 13:04 DEBUG    dispatch pc=196, inst=CALL_METHOD(arg=1, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49', '$194binary_subscr.52']
12-22 13:04 DEBUG    dispatch pc=198, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$196call_method.53']
12-22 13:04 DEBUG    dispatch pc=200, inst=LOAD_FAST(arg=34, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$198binary_true_divide.54']
12-22 13:04 DEBUG    dispatch pc=202, inst=BINARY_ADD(arg=None, lineno=111)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$198binary_true_divide.54', '$dphi_term200.55']
12-22 13:04 DEBUG    dispatch pc=204, inst=BINARY_MULTIPLY(arg=None, lineno=110)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$202binary_add.56']
12-22 13:04 DEBUG    dispatch pc=206, inst=STORE_FAST(arg=37, lineno=110)
12-22 13:04 DEBUG    stack ['$phi84.0', '$204binary_multiply.57']
12-22 13:04 DEBUG    dispatch pc=208, inst=LOAD_FAST(arg=36, lineno=113)
12-22 13:04 DEBUG    stack ['$phi84.0']
12-22 13:04 DEBUG    dispatch pc=210, inst=LOAD_CONST(arg=2, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58']
12-22 13:04 DEBUG    dispatch pc=212, inst=LOAD_FAST(arg=7, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59']
12-22 13:04 DEBUG    dispatch pc=214, inst=LOAD_CONST(arg=3, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60']
12-22 13:04 DEBUG    dispatch pc=216, inst=LOAD_FAST(arg=33, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60', '$const214.61']
12-22 13:04 DEBUG    dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60', '$const214.61', '$phi216.62']
12-22 13:04 DEBUG    dispatch pc=220, inst=BINARY_MULTIPLY(arg=None, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60', '$218binary_subtract.63']
12-22 13:04 DEBUG    dispatch pc=222, inst=BINARY_SUBTRACT(arg=None, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$220binary_multiply.64']
12-22 13:04 DEBUG    dispatch pc=224, inst=LOAD_GLOBAL(arg=5, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65']
12-22 13:04 DEBUG    dispatch pc=226, inst=LOAD_METHOD(arg=6, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$224load_global.66']
12-22 13:04 DEBUG    dispatch pc=228, inst=LOAD_FAST(arg=19, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67']
12-22 13:04 DEBUG    dispatch pc=230, inst=LOAD_FAST(arg=28, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67', '$dens_re_sum228.68']
12-22 13:04 DEBUG    dispatch pc=232, inst=BINARY_SUBSCR(arg=None, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67', '$dens_re_sum228.68', '$j230.69']
12-22 13:04 DEBUG    dispatch pc=234, inst=CALL_METHOD(arg=1, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67', '$232binary_subscr.70']
12-22 13:04 DEBUG    dispatch pc=236, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$234call_method.71']
12-22 13:04 DEBUG    dispatch pc=238, inst=LOAD_FAST(arg=34, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$236binary_true_divide.72']
12-22 13:04 DEBUG    dispatch pc=240, inst=BINARY_ADD(arg=None, lineno=114)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$236binary_true_divide.72', '$dphi_term238.73']
12-22 13:04 DEBUG    dispatch pc=242, inst=BINARY_MULTIPLY(arg=None, lineno=113)
12-22 13:04 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$240binary_add.74']
12-22 13:04 DEBUG    dispatch pc=244, inst=STORE_FAST(arg=38, lineno=113)
12-22 13:04 DEBUG    stack ['$phi84.0', '$242binary_multiply.75']
12-22 13:04 DEBUG    dispatch pc=246, inst=LOAD_FAST(arg=21, lineno=117)
12-22 13:04 DEBUG    stack ['$phi84.0']
12-22 13:04 DEBUG    dispatch pc=248, inst=LOAD_FAST(arg=21, lineno=117)
12-22 13:04 DEBUG    stack ['$phi84.0', '$dens_re_std246.76']
12-22 13:04 DEBUG    dispatch pc=250, inst=BINARY_MULTIPLY(arg=None, lineno=117)
12-22 13:04 DEBUG    stack ['$phi84.0', '$dens_re_std246.76', '$dens_re_std248.77']
12-22 13:04 DEBUG    dispatch pc=252, inst=STORE_FAST(arg=39, lineno=117)
12-22 13:04 DEBUG    stack ['$phi84.0', '$250binary_multiply.78']
12-22 13:04 DEBUG    dispatch pc=254, inst=LOAD_FAST(arg=24, lineno=119)
12-22 13:04 DEBUG    stack ['$phi84.0']
12-22 13:04 DEBUG    dispatch pc=256, inst=LOAD_FAST(arg=29, lineno=119)
12-22 13:04 DEBUG    stack ['$phi84.0', '$dens_R254.79']
12-22 13:04 DEBUG    dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=119)
12-22 13:04 DEBUG    stack ['$phi84.0', '$dens_R254.79', '$k256.80']
12-22 13:04 DEBUG    dispatch pc=260, inst=LOAD_FAST(arg=20, lineno=120)
12-22 13:04 DEBUG    stack ['$phi84.0', '$258binary_subscr.81']
12-22 13:04 DEBUG    dispatch pc=262, inst=LOAD_FAST(arg=19, lineno=120)
12-22 13:04 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82']
12-22 13:04 DEBUG    dispatch pc=264, inst=LOAD_FAST(arg=29, lineno=120)
12-22 13:04 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$dens_re_sum262.83']
12-22 13:04 DEBUG    dispatch pc=266, inst=BINARY_SUBSCR(arg=None, lineno=120)
12-22 13:04 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$dens_re_sum262.83', '$k264.84']
12-22 13:04 DEBUG    dispatch pc=268, inst=LOAD_FAST(arg=22, lineno=120)
12-22 13:04 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$266binary_subscr.85']
12-22 13:04 DEBUG    dispatch pc=270, inst=BINARY_SUBTRACT(arg=None, lineno=120)
12-22 13:04 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$266binary_subscr.85', '$dens_re_mean268.86']
12-22 13:04 DEBUG    dispatch pc=272, inst=BINARY_MULTIPLY(arg=None, lineno=120)
12-22 13:04 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$270binary_subtract.87']
12-22 13:04 DEBUG    dispatch pc=274, inst=LOAD_FAST(arg=39, lineno=120)
12-22 13:04 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$272binary_multiply.88']
12-22 13:04 DEBUG    dispatch pc=276, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=120)
12-22 13:04 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$272binary_multiply.88', '$re_std_sq274.89']
12-22 13:04 DEBUG    dispatch pc=278, inst=BINARY_SUBTRACT(arg=None, lineno=119)
12-22 13:04 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$276binary_true_divide.90']
12-22 13:04 DEBUG    dispatch pc=280, inst=STORE_FAST(arg=40, lineno=118)
12-22 13:04 DEBUG    stack ['$phi84.0', '$278binary_subtract.91']
12-22 13:04 DEBUG    dispatch pc=282, inst=LOAD_FAST(arg=24, lineno=123)
12-22 13:04 DEBUG    stack ['$phi84.0']
12-22 13:04 DEBUG    dispatch pc=284, inst=LOAD_FAST(arg=28, lineno=123)
12-22 13:04 DEBUG    stack ['$phi84.0', '$dens_R282.92']
12-22 13:04 DEBUG    dispatch pc=286, inst=BINARY_SUBSCR(arg=None, lineno=123)
12-22 13:04 DEBUG    stack ['$phi84.0', '$dens_R282.92', '$j284.93']
12-22 13:04 DEBUG    dispatch pc=288, inst=LOAD_FAST(arg=20, lineno=124)
12-22 13:04 DEBUG    stack ['$phi84.0', '$286binary_subscr.94']
12-22 13:04 DEBUG    dispatch pc=290, inst=LOAD_FAST(arg=19, lineno=124)
12-22 13:04 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95']
12-22 13:04 DEBUG    dispatch pc=292, inst=LOAD_FAST(arg=28, lineno=124)
12-22 13:04 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$dens_re_sum290.96']
12-22 13:04 DEBUG    dispatch pc=294, inst=BINARY_SUBSCR(arg=None, lineno=124)
12-22 13:04 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$dens_re_sum290.96', '$j292.97']
12-22 13:04 DEBUG    dispatch pc=296, inst=LOAD_FAST(arg=22, lineno=124)
12-22 13:04 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$294binary_subscr.98']
12-22 13:04 DEBUG    dispatch pc=298, inst=BINARY_SUBTRACT(arg=None, lineno=124)
12-22 13:04 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$294binary_subscr.98', '$dens_re_mean296.99']
12-22 13:04 DEBUG    dispatch pc=300, inst=BINARY_MULTIPLY(arg=None, lineno=124)
12-22 13:04 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$298binary_subtract.100']
12-22 13:04 DEBUG    dispatch pc=302, inst=LOAD_FAST(arg=39, lineno=124)
12-22 13:04 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$300binary_multiply.101']
12-22 13:04 DEBUG    dispatch pc=304, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=124)
12-22 13:04 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$300binary_multiply.101', '$re_std_sq302.102']
12-22 13:04 DEBUG    dispatch pc=306, inst=BINARY_SUBTRACT(arg=None, lineno=123)
12-22 13:04 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$304binary_true_divide.103']
12-22 13:04 DEBUG    dispatch pc=308, inst=STORE_FAST(arg=41, lineno=122)
12-22 13:04 DEBUG    stack ['$phi84.0', '$306binary_subtract.104']
12-22 13:04 DEBUG    dispatch pc=310, inst=LOAD_FAST(arg=23, lineno=128)
12-22 13:04 DEBUG    stack ['$phi84.0']
12-22 13:04 DEBUG    dispatch pc=312, inst=LOAD_FAST(arg=26, lineno=129)
12-22 13:04 DEBUG    stack ['$phi84.0', '$dens_lambda310.105']
12-22 13:04 DEBUG    dispatch pc=314, inst=BINARY_MULTIPLY(arg=None, lineno=128)
12-22 13:04 DEBUG    stack ['$phi84.0', '$dens_lambda310.105', '$dens_mu_tot312.106']
12-22 13:04 DEBUG    dispatch pc=316, inst=LOAD_FAST(arg=40, lineno=130)
12-22 13:04 DEBUG    stack ['$phi84.0', '$314binary_multiply.107']
12-22 13:04 DEBUG    dispatch pc=318, inst=LOAD_FAST(arg=37, lineno=130)
12-22 13:04 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$weight_k316.108']
12-22 13:04 DEBUG    dispatch pc=320, inst=BINARY_MULTIPLY(arg=None, lineno=130)
12-22 13:04 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$weight_k316.108', '$drk318.109']
12-22 13:04 DEBUG    dispatch pc=322, inst=LOAD_FAST(arg=41, lineno=130)
12-22 13:04 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110']
12-22 13:04 DEBUG    dispatch pc=324, inst=LOAD_FAST(arg=38, lineno=130)
12-22 13:04 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110', '$weight_j322.111']
12-22 13:04 DEBUG    dispatch pc=326, inst=BINARY_MULTIPLY(arg=None, lineno=130)
12-22 13:04 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110', '$weight_j322.111', '$drj324.112']
12-22 13:04 DEBUG    dispatch pc=328, inst=BINARY_ADD(arg=None, lineno=130)
12-22 13:04 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110', '$326binary_multiply.113']
12-22 13:04 DEBUG    dispatch pc=330, inst=BINARY_MULTIPLY(arg=None, lineno=128)
12-22 13:04 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$328binary_add.114']
12-22 13:04 DEBUG    dispatch pc=332, inst=LOAD_FAST(arg=25, lineno=131)
12-22 13:04 DEBUG    stack ['$phi84.0', '$330binary_multiply.115']
12-22 13:04 DEBUG    dispatch pc=334, inst=LOAD_FAST(arg=27, lineno=131)
12-22 13:04 DEBUG    stack ['$phi84.0', '$330binary_multiply.115', '$dens_mu332.116']
12-22 13:04 DEBUG    dispatch pc=336, inst=BINARY_SUBSCR(arg=None, lineno=131)
12-22 13:04 DEBUG    stack ['$phi84.0', '$330binary_multiply.115', '$dens_mu332.116', '$i334.117']
12-22 13:04 DEBUG    dispatch pc=338, inst=LOAD_FAST(arg=21, lineno=131)
12-22 13:04 DEBUG    stack ['$phi84.0', '$330binary_multiply.115', '$336binary_subscr.118']
12-22 13:04 DEBUG    dispatch pc=340, inst=BINARY_MULTIPLY(arg=None, lineno=131)
12-22 13:04 DEBUG    stack ['$phi84.0', '$330binary_multiply.115', '$336binary_subscr.118', '$dens_re_std338.119']
12-22 13:04 DEBUG    dispatch pc=342, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=128)
12-22 13:04 DEBUG    stack ['$phi84.0', '$330binary_multiply.115', '$340binary_multiply.120']
12-22 13:04 DEBUG    dispatch pc=344, inst=LOAD_FAST(arg=4, lineno=132)
12-22 13:04 DEBUG    stack ['$phi84.0', '$342binary_true_divide.121']
12-22 13:04 DEBUG    dispatch pc=346, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=128)
12-22 13:04 DEBUG    stack ['$phi84.0', '$342binary_true_divide.121', '$n_vertices344.122']
12-22 13:04 DEBUG    dispatch pc=348, inst=STORE_FAST(arg=42, lineno=127)
12-22 13:04 DEBUG    stack ['$phi84.0', '$346binary_true_divide.123']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=350, stack=('$phi84.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi350.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=350 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=350, inst=LOAD_FAST(arg=32, lineno=135)
12-22 13:04 DEBUG    stack ['$phi350.0']
12-22 13:04 DEBUG    dispatch pc=352, inst=LOAD_CONST(arg=4, lineno=135)
12-22 13:04 DEBUG    stack ['$phi350.0', '$dist_squared350.1']
12-22 13:04 DEBUG    dispatch pc=354, inst=COMPARE_OP(arg=4, lineno=135)
12-22 13:04 DEBUG    stack ['$phi350.0', '$dist_squared350.1', '$const352.2']
12-22 13:04 DEBUG    dispatch pc=356, inst=NOP(arg=1, lineno=135)
12-22 13:04 DEBUG    stack ['$phi350.0', '$354compare_op.3']
12-22 13:04 DEBUG    dispatch pc=358, inst=POP_JUMP_IF_FALSE(arg=410, lineno=135)
12-22 13:04 DEBUG    stack ['$phi350.0', '$354compare_op.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=360, stack=('$phi350.0',), blockstack=(), npush=0), Edge(pc=410, stack=('$phi350.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=360 nstack_initial=1), State(pc_initial=410 nstack_initial=1)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=360 nstack_initial=1), State(pc_initial=410 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi360.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=360 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=360, inst=LOAD_CONST(arg=5, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0']
12-22 13:04 DEBUG    dispatch pc=362, inst=LOAD_FAST(arg=6, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$const360.1']
12-22 13:04 DEBUG    dispatch pc=364, inst=BINARY_MULTIPLY(arg=None, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$const360.1', '$a362.2']
12-22 13:04 DEBUG    dispatch pc=366, inst=LOAD_FAST(arg=7, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$364binary_multiply.3']
12-22 13:04 DEBUG    dispatch pc=368, inst=BINARY_MULTIPLY(arg=None, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$364binary_multiply.3', '$b366.4']
12-22 13:04 DEBUG    dispatch pc=370, inst=LOAD_GLOBAL(arg=4, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$368binary_multiply.5']
12-22 13:04 DEBUG    dispatch pc=372, inst=LOAD_FAST(arg=32, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$370load_global.6']
12-22 13:04 DEBUG    dispatch pc=374, inst=LOAD_FAST(arg=7, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$370load_global.6', '$dist_squared372.7']
12-22 13:04 DEBUG    dispatch pc=376, inst=LOAD_CONST(arg=2, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$370load_global.6', '$dist_squared372.7', '$b374.8']
12-22 13:04 DEBUG    dispatch pc=378, inst=BINARY_SUBTRACT(arg=None, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$370load_global.6', '$dist_squared372.7', '$b374.8', '$const376.9']
12-22 13:04 DEBUG    dispatch pc=380, inst=CALL_FUNCTION(arg=2, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$370load_global.6', '$dist_squared372.7', '$378binary_subtract.10']
12-22 13:04 DEBUG    dispatch pc=382, inst=BINARY_MULTIPLY(arg=None, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$380call_function.11']
12-22 13:04 DEBUG    dispatch pc=384, inst=STORE_FAST(arg=43, lineno=136)
12-22 13:04 DEBUG    stack ['$phi360.0', '$382binary_multiply.12']
12-22 13:04 DEBUG    dispatch pc=386, inst=LOAD_FAST(arg=43, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0']
12-22 13:04 DEBUG    dispatch pc=388, inst=LOAD_FAST(arg=6, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0', '$grad_coeff386.13']
12-22 13:04 DEBUG    dispatch pc=390, inst=LOAD_GLOBAL(arg=4, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$a388.14']
12-22 13:04 DEBUG    dispatch pc=392, inst=LOAD_FAST(arg=32, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$a388.14', '$390load_global.15']
12-22 13:04 DEBUG    dispatch pc=394, inst=LOAD_FAST(arg=7, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$a388.14', '$390load_global.15', '$dist_squared392.16']
12-22 13:04 DEBUG    dispatch pc=396, inst=CALL_FUNCTION(arg=2, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$a388.14', '$390load_global.15', '$dist_squared392.16', '$b394.17']
12-22 13:04 DEBUG    dispatch pc=398, inst=BINARY_MULTIPLY(arg=None, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$a388.14', '$396call_function.18']
12-22 13:04 DEBUG    dispatch pc=400, inst=LOAD_CONST(arg=2, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$398binary_multiply.19']
12-22 13:04 DEBUG    dispatch pc=402, inst=BINARY_ADD(arg=None, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$398binary_multiply.19', '$const400.20']
12-22 13:04 DEBUG    dispatch pc=404, inst=INPLACE_TRUE_DIVIDE(arg=None, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$402binary_add.21']
12-22 13:04 DEBUG    dispatch pc=406, inst=STORE_FAST(arg=43, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0', '$404inplace_true_divide.22']
12-22 13:04 DEBUG    dispatch pc=408, inst=JUMP_FORWARD(arg=4, lineno=137)
12-22 13:04 DEBUG    stack ['$phi360.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=414, stack=('$phi360.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=410 nstack_initial=1), State(pc_initial=414 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi410.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=410 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=410, inst=LOAD_CONST(arg=4, lineno=139)
12-22 13:04 DEBUG    stack ['$phi410.0']
12-22 13:04 DEBUG    dispatch pc=412, inst=STORE_FAST(arg=43, lineno=139)
12-22 13:04 DEBUG    stack ['$phi410.0', '$const410.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=414, stack=('$phi410.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=414 nstack_initial=1), State(pc_initial=414 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi414.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=414 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=414, inst=LOAD_GLOBAL(arg=7, lineno=141)
12-22 13:04 DEBUG    stack ['$phi414.0']
12-22 13:04 DEBUG    dispatch pc=416, inst=LOAD_FAST(arg=10, lineno=141)
12-22 13:04 DEBUG    stack ['$phi414.0', '$414load_global.1']
12-22 13:04 DEBUG    dispatch pc=418, inst=CALL_FUNCTION(arg=1, lineno=141)
12-22 13:04 DEBUG    stack ['$phi414.0', '$414load_global.1', '$dim416.2']
12-22 13:04 DEBUG    dispatch pc=420, inst=GET_ITER(arg=None, lineno=141)
12-22 13:04 DEBUG    stack ['$phi414.0', '$418call_function.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=422, stack=('$phi414.0', '$420get_iter.4'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=414 nstack_initial=1), State(pc_initial=422 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=422 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi422.0', '$phi422.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=422 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=422, inst=FOR_ITER(arg=116, lineno=141)
12-22 13:04 DEBUG    stack ['$phi422.0', '$phi422.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=540, stack=('$phi422.0',), blockstack=(), npush=0), Edge(pc=424, stack=('$phi422.0', '$phi422.1', '$422for_iter.3'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=540 nstack_initial=1), State(pc_initial=424 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi540.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=540 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=540, inst=LOAD_FAST(arg=15, lineno=153)
12-22 13:04 DEBUG    stack ['$phi540.0']
12-22 13:04 DEBUG    dispatch pc=542, inst=LOAD_FAST(arg=27, lineno=153)
12-22 13:04 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1']
12-22 13:04 DEBUG    dispatch pc=544, inst=DUP_TOP_TWO(arg=None, lineno=153)
12-22 13:04 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2']
12-22 13:04 DEBUG    dispatch pc=546, inst=BINARY_SUBSCR(arg=None, lineno=153)
12-22 13:04 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$544dup_top_two.3', '$544dup_top_two.4']
12-22 13:04 DEBUG    dispatch pc=548, inst=LOAD_FAST(arg=5, lineno=153)
12-22 13:04 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$546binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=550, inst=LOAD_FAST(arg=27, lineno=153)
12-22 13:04 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$546binary_subscr.5', '$epochs_per_sample548.6']
12-22 13:04 DEBUG    dispatch pc=552, inst=BINARY_SUBSCR(arg=None, lineno=153)
12-22 13:04 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$546binary_subscr.5', '$epochs_per_sample548.6', '$i550.7']
12-22 13:04 DEBUG    dispatch pc=554, inst=INPLACE_ADD(arg=None, lineno=153)
12-22 13:04 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$546binary_subscr.5', '$552binary_subscr.8']
12-22 13:04 DEBUG    dispatch pc=556, inst=ROT_THREE(arg=None, lineno=153)
12-22 13:04 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$554inplace_add.9']
12-22 13:04 DEBUG    dispatch pc=558, inst=STORE_SUBSCR(arg=None, lineno=153)
12-22 13:04 DEBUG    stack ['$phi540.0', '$554inplace_add.9', '$epoch_of_next_sample540.1', '$i542.2']
12-22 13:04 DEBUG    dispatch pc=560, inst=LOAD_GLOBAL(arg=9, lineno=155)
12-22 13:04 DEBUG    stack ['$phi540.0']
12-22 13:04 DEBUG    dispatch pc=562, inst=LOAD_FAST(arg=16, lineno=156)
12-22 13:04 DEBUG    stack ['$phi540.0', '$560load_global.10']
12-22 13:04 DEBUG    dispatch pc=564, inst=LOAD_FAST(arg=14, lineno=156)
12-22 13:04 DEBUG    stack ['$phi540.0', '$560load_global.10', '$n562.11']
12-22 13:04 DEBUG    dispatch pc=566, inst=LOAD_FAST(arg=27, lineno=156)
12-22 13:04 DEBUG    stack ['$phi540.0', '$560load_global.10', '$n562.11', '$epoch_of_next_negative_sample564.12']
12-22 13:04 DEBUG    dispatch pc=568, inst=BINARY_SUBSCR(arg=None, lineno=156)
12-22 13:04 DEBUG    stack ['$phi540.0', '$560load_global.10', '$n562.11', '$epoch_of_next_negative_sample564.12', '$i566.13']
12-22 13:04 DEBUG    dispatch pc=570, inst=BINARY_SUBTRACT(arg=None, lineno=156)
12-22 13:04 DEBUG    stack ['$phi540.0', '$560load_global.10', '$n562.11', '$568binary_subscr.14']
12-22 13:04 DEBUG    dispatch pc=572, inst=LOAD_FAST(arg=13, lineno=156)
12-22 13:04 DEBUG    stack ['$phi540.0', '$560load_global.10', '$570binary_subtract.15']
12-22 13:04 DEBUG    dispatch pc=574, inst=LOAD_FAST(arg=27, lineno=156)
12-22 13:04 DEBUG    stack ['$phi540.0', '$560load_global.10', '$570binary_subtract.15', '$epochs_per_negative_sample572.16']
12-22 13:04 DEBUG    dispatch pc=576, inst=BINARY_SUBSCR(arg=None, lineno=156)
12-22 13:04 DEBUG    stack ['$phi540.0', '$560load_global.10', '$570binary_subtract.15', '$epochs_per_negative_sample572.16', '$i574.17']
12-22 13:04 DEBUG    dispatch pc=578, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=156)
12-22 13:04 DEBUG    stack ['$phi540.0', '$560load_global.10', '$570binary_subtract.15', '$576binary_subscr.18']
12-22 13:04 DEBUG    dispatch pc=580, inst=CALL_FUNCTION(arg=1, lineno=155)
12-22 13:04 DEBUG    stack ['$phi540.0', '$560load_global.10', '$578binary_true_divide.19']
12-22 13:04 DEBUG    dispatch pc=582, inst=STORE_FAST(arg=46, lineno=155)
12-22 13:04 DEBUG    stack ['$phi540.0', '$580call_function.20']
12-22 13:04 DEBUG    dispatch pc=584, inst=LOAD_GLOBAL(arg=7, lineno=159)
12-22 13:04 DEBUG    stack ['$phi540.0']
12-22 13:04 DEBUG    dispatch pc=586, inst=LOAD_FAST(arg=46, lineno=159)
12-22 13:04 DEBUG    stack ['$phi540.0', '$584load_global.21']
12-22 13:04 DEBUG    dispatch pc=588, inst=CALL_FUNCTION(arg=1, lineno=159)
12-22 13:04 DEBUG    stack ['$phi540.0', '$584load_global.21', '$n_neg_samples586.22']
12-22 13:04 DEBUG    dispatch pc=590, inst=GET_ITER(arg=None, lineno=159)
12-22 13:04 DEBUG    stack ['$phi540.0', '$588call_function.23']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=592, stack=('$phi540.0', '$590get_iter.24'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=424 nstack_initial=3), State(pc_initial=592 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi424.0', '$phi424.1', '$phi424.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=424 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=424, inst=STORE_FAST(arg=44, lineno=141)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$phi424.2']
12-22 13:04 DEBUG    dispatch pc=426, inst=LOAD_GLOBAL(arg=8, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1']
12-22 13:04 DEBUG    dispatch pc=428, inst=LOAD_FAST(arg=43, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3']
12-22 13:04 DEBUG    dispatch pc=430, inst=LOAD_FAST(arg=30, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4']
12-22 13:04 DEBUG    dispatch pc=432, inst=LOAD_FAST(arg=44, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$current430.5']
12-22 13:04 DEBUG    dispatch pc=434, inst=BINARY_SUBSCR(arg=None, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$current430.5', '$d432.6']
12-22 13:04 DEBUG    dispatch pc=436, inst=LOAD_FAST(arg=31, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$434binary_subscr.7']
12-22 13:04 DEBUG    dispatch pc=438, inst=LOAD_FAST(arg=44, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$434binary_subscr.7', '$other436.8']
12-22 13:04 DEBUG    dispatch pc=440, inst=BINARY_SUBSCR(arg=None, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$434binary_subscr.7', '$other436.8', '$d438.9']
12-22 13:04 DEBUG    dispatch pc=442, inst=BINARY_SUBTRACT(arg=None, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$434binary_subscr.7', '$440binary_subscr.10']
12-22 13:04 DEBUG    dispatch pc=444, inst=BINARY_MULTIPLY(arg=None, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$442binary_subtract.11']
12-22 13:04 DEBUG    dispatch pc=446, inst=CALL_FUNCTION(arg=1, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$444binary_multiply.12']
12-22 13:04 DEBUG    dispatch pc=448, inst=STORE_FAST(arg=45, lineno=142)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$446call_function.13']
12-22 13:04 DEBUG    dispatch pc=450, inst=LOAD_FAST(arg=17, lineno=144)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1']
12-22 13:04 DEBUG    dispatch pc=452, inst=NOP(arg=1, lineno=144)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$densmap_flag450.14']
12-22 13:04 DEBUG    dispatch pc=454, inst=POP_JUMP_IF_FALSE(arg=488, lineno=144)
12-22 13:04 DEBUG    stack ['$phi424.0', '$phi424.1', '$densmap_flag450.14']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=456, stack=('$phi424.0', '$phi424.1'), blockstack=(), npush=0), Edge(pc=488, stack=('$phi424.0', '$phi424.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=592 nstack_initial=2), State(pc_initial=456 nstack_initial=2), State(pc_initial=488 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi592.0', '$phi592.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=592 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=592, inst=FOR_ITER(arg=186, lineno=159)
12-22 13:04 DEBUG    stack ['$phi592.0', '$phi592.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=780, stack=('$phi592.0',), blockstack=(), npush=0), Edge(pc=594, stack=('$phi592.0', '$phi592.1', '$592for_iter.3'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=456 nstack_initial=2), State(pc_initial=488 nstack_initial=2), State(pc_initial=780 nstack_initial=1), State(pc_initial=594 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi456.0', '$phi456.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=456 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=456, inst=LOAD_FAST(arg=45, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1']
12-22 13:04 DEBUG    dispatch pc=458, inst=LOAD_GLOBAL(arg=8, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2']
12-22 13:04 DEBUG    dispatch pc=460, inst=LOAD_CONST(arg=6, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3']
12-22 13:04 DEBUG    dispatch pc=462, inst=LOAD_FAST(arg=42, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$const460.4']
12-22 13:04 DEBUG    dispatch pc=464, inst=BINARY_MULTIPLY(arg=None, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$const460.4', '$grad_cor_coeff462.5']
12-22 13:04 DEBUG    dispatch pc=466, inst=LOAD_FAST(arg=30, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6']
12-22 13:04 DEBUG    dispatch pc=468, inst=LOAD_FAST(arg=44, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$current466.7']
12-22 13:04 DEBUG    dispatch pc=470, inst=BINARY_SUBSCR(arg=None, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$current466.7', '$d468.8']
12-22 13:04 DEBUG    dispatch pc=472, inst=LOAD_FAST(arg=31, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$470binary_subscr.9']
12-22 13:04 DEBUG    dispatch pc=474, inst=LOAD_FAST(arg=44, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$470binary_subscr.9', '$other472.10']
12-22 13:04 DEBUG    dispatch pc=476, inst=BINARY_SUBSCR(arg=None, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$470binary_subscr.9', '$other472.10', '$d474.11']
12-22 13:04 DEBUG    dispatch pc=478, inst=BINARY_SUBTRACT(arg=None, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$470binary_subscr.9', '$476binary_subscr.12']
12-22 13:04 DEBUG    dispatch pc=480, inst=BINARY_MULTIPLY(arg=None, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$478binary_subtract.13']
12-22 13:04 DEBUG    dispatch pc=482, inst=CALL_FUNCTION(arg=1, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$480binary_multiply.14']
12-22 13:04 DEBUG    dispatch pc=484, inst=INPLACE_ADD(arg=None, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$482call_function.15']
12-22 13:04 DEBUG    dispatch pc=486, inst=STORE_FAST(arg=45, lineno=147)
12-22 13:04 DEBUG    stack ['$phi456.0', '$phi456.1', '$484inplace_add.16']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=488, stack=('$phi456.0', '$phi456.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=488 nstack_initial=2), State(pc_initial=780 nstack_initial=1), State(pc_initial=594 nstack_initial=3), State(pc_initial=488 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi488.0', '$phi488.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=488 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=488, inst=LOAD_FAST(arg=30, lineno=149)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1']
12-22 13:04 DEBUG    dispatch pc=490, inst=LOAD_FAST(arg=44, lineno=149)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2']
12-22 13:04 DEBUG    dispatch pc=492, inst=DUP_TOP_TWO(arg=None, lineno=149)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3']
12-22 13:04 DEBUG    dispatch pc=494, inst=BINARY_SUBSCR(arg=None, lineno=149)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$492dup_top_two.4', '$492dup_top_two.5']
12-22 13:04 DEBUG    dispatch pc=496, inst=LOAD_FAST(arg=45, lineno=149)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$494binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=498, inst=LOAD_FAST(arg=12, lineno=149)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$494binary_subscr.6', '$grad_d496.7']
12-22 13:04 DEBUG    dispatch pc=500, inst=BINARY_MULTIPLY(arg=None, lineno=149)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$494binary_subscr.6', '$grad_d496.7', '$alpha498.8']
12-22 13:04 DEBUG    dispatch pc=502, inst=INPLACE_ADD(arg=None, lineno=149)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$494binary_subscr.6', '$500binary_multiply.9']
12-22 13:04 DEBUG    dispatch pc=504, inst=ROT_THREE(arg=None, lineno=149)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$502inplace_add.10']
12-22 13:04 DEBUG    dispatch pc=506, inst=STORE_SUBSCR(arg=None, lineno=149)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1', '$502inplace_add.10', '$current488.2', '$d490.3']
12-22 13:04 DEBUG    dispatch pc=508, inst=LOAD_FAST(arg=11, lineno=150)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1']
12-22 13:04 DEBUG    dispatch pc=510, inst=NOP(arg=1, lineno=150)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1', '$move_other508.11']
12-22 13:04 DEBUG    dispatch pc=512, inst=POP_JUMP_IF_FALSE(arg=422, lineno=150)
12-22 13:04 DEBUG    stack ['$phi488.0', '$phi488.1', '$move_other508.11']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=514, stack=('$phi488.0', '$phi488.1'), blockstack=(), npush=0), Edge(pc=422, stack=('$phi488.0', '$phi488.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=780 nstack_initial=1), State(pc_initial=594 nstack_initial=3), State(pc_initial=488 nstack_initial=2), State(pc_initial=514 nstack_initial=2), State(pc_initial=422 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi780.0']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=780 nstack_initial=1)
12-22 13:04 DEBUG    dispatch pc=780, inst=LOAD_FAST(arg=14, lineno=183)
12-22 13:04 DEBUG    stack ['$phi780.0']
12-22 13:04 DEBUG    dispatch pc=782, inst=LOAD_FAST(arg=27, lineno=183)
12-22 13:04 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1']
12-22 13:04 DEBUG    dispatch pc=784, inst=DUP_TOP_TWO(arg=None, lineno=183)
12-22 13:04 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2']
12-22 13:04 DEBUG    dispatch pc=786, inst=BINARY_SUBSCR(arg=None, lineno=183)
12-22 13:04 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$784dup_top_two.3', '$784dup_top_two.4']
12-22 13:04 DEBUG    dispatch pc=788, inst=LOAD_FAST(arg=46, lineno=184)
12-22 13:04 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5']
12-22 13:04 DEBUG    dispatch pc=790, inst=LOAD_FAST(arg=13, lineno=184)
12-22 13:04 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5', '$n_neg_samples788.6']
12-22 13:04 DEBUG    dispatch pc=792, inst=LOAD_FAST(arg=27, lineno=184)
12-22 13:04 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5', '$n_neg_samples788.6', '$epochs_per_negative_sample790.7']
12-22 13:04 DEBUG    dispatch pc=794, inst=BINARY_SUBSCR(arg=None, lineno=184)
12-22 13:04 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5', '$n_neg_samples788.6', '$epochs_per_negative_sample790.7', '$i792.8']
12-22 13:04 DEBUG    dispatch pc=796, inst=BINARY_MULTIPLY(arg=None, lineno=184)
12-22 13:04 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5', '$n_neg_samples788.6', '$794binary_subscr.9']
12-22 13:04 DEBUG    dispatch pc=798, inst=INPLACE_ADD(arg=None, lineno=183)
12-22 13:04 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5', '$796binary_multiply.10']
12-22 13:04 DEBUG    dispatch pc=800, inst=ROT_THREE(arg=None, lineno=183)
12-22 13:04 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$798inplace_add.11']
12-22 13:04 DEBUG    dispatch pc=802, inst=STORE_SUBSCR(arg=None, lineno=183)
12-22 13:04 DEBUG    stack ['$phi780.0', '$798inplace_add.11', '$epoch_of_next_negative_sample780.1', '$i782.2']
12-22 13:04 DEBUG    dispatch pc=804, inst=JUMP_ABSOLUTE(arg=18, lineno=183)
12-22 13:04 DEBUG    stack ['$phi780.0']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=18, stack=('$phi780.0',), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=594 nstack_initial=3), State(pc_initial=488 nstack_initial=2), State(pc_initial=514 nstack_initial=2), State(pc_initial=422 nstack_initial=2), State(pc_initial=18 nstack_initial=1)])
12-22 13:04 DEBUG    stack: ['$phi594.0', '$phi594.1', '$phi594.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=594 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=594, inst=STORE_FAST(arg=47, lineno=159)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$phi594.2']
12-22 13:04 DEBUG    dispatch pc=596, inst=LOAD_GLOBAL(arg=10, lineno=160)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1']
12-22 13:04 DEBUG    dispatch pc=598, inst=LOAD_FAST(arg=8, lineno=160)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$596load_global.3']
12-22 13:04 DEBUG    dispatch pc=600, inst=CALL_FUNCTION(arg=1, lineno=160)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$596load_global.3', '$rng_state598.4']
12-22 13:04 DEBUG    dispatch pc=602, inst=LOAD_FAST(arg=4, lineno=160)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$600call_function.5']
12-22 13:04 DEBUG    dispatch pc=604, inst=BINARY_MODULO(arg=None, lineno=160)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$600call_function.5', '$n_vertices602.6']
12-22 13:04 DEBUG    dispatch pc=606, inst=STORE_FAST(arg=29, lineno=160)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$604binary_modulo.7']
12-22 13:04 DEBUG    dispatch pc=608, inst=LOAD_FAST(arg=1, lineno=162)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1']
12-22 13:04 DEBUG    dispatch pc=610, inst=LOAD_FAST(arg=29, lineno=162)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$tail_embedding608.8']
12-22 13:04 DEBUG    dispatch pc=612, inst=BINARY_SUBSCR(arg=None, lineno=162)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$tail_embedding608.8', '$k610.9']
12-22 13:04 DEBUG    dispatch pc=614, inst=STORE_FAST(arg=31, lineno=162)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$612binary_subscr.10']
12-22 13:04 DEBUG    dispatch pc=616, inst=LOAD_GLOBAL(arg=3, lineno=164)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1']
12-22 13:04 DEBUG    dispatch pc=618, inst=LOAD_FAST(arg=30, lineno=164)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$616load_global.11']
12-22 13:04 DEBUG    dispatch pc=620, inst=LOAD_FAST(arg=31, lineno=164)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$616load_global.11', '$current618.12']
12-22 13:04 DEBUG    dispatch pc=622, inst=CALL_FUNCTION(arg=2, lineno=164)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$616load_global.11', '$current618.12', '$other620.13']
12-22 13:04 DEBUG    dispatch pc=624, inst=STORE_FAST(arg=32, lineno=164)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$622call_function.14']
12-22 13:04 DEBUG    dispatch pc=626, inst=LOAD_FAST(arg=32, lineno=166)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1']
12-22 13:04 DEBUG    dispatch pc=628, inst=LOAD_CONST(arg=4, lineno=166)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$dist_squared626.15']
12-22 13:04 DEBUG    dispatch pc=630, inst=COMPARE_OP(arg=4, lineno=166)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$dist_squared626.15', '$const628.16']
12-22 13:04 DEBUG    dispatch pc=632, inst=NOP(arg=2, lineno=166)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$630compare_op.17']
12-22 13:04 DEBUG    dispatch pc=634, inst=POP_JUMP_IF_FALSE(arg=680, lineno=166)
12-22 13:04 DEBUG    stack ['$phi594.0', '$phi594.1', '$630compare_op.17']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=636, stack=('$phi594.0', '$phi594.1'), blockstack=(), npush=0), Edge(pc=680, stack=('$phi594.0', '$phi594.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=488 nstack_initial=2), State(pc_initial=514 nstack_initial=2), State(pc_initial=422 nstack_initial=2), State(pc_initial=18 nstack_initial=1), State(pc_initial=636 nstack_initial=2), State(pc_initial=680 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=514 nstack_initial=2), State(pc_initial=422 nstack_initial=2), State(pc_initial=18 nstack_initial=1), State(pc_initial=636 nstack_initial=2), State(pc_initial=680 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi514.0', '$phi514.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=514 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=514, inst=LOAD_FAST(arg=31, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1']
12-22 13:04 DEBUG    dispatch pc=516, inst=LOAD_FAST(arg=44, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2']
12-22 13:04 DEBUG    dispatch pc=518, inst=DUP_TOP_TWO(arg=None, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3']
12-22 13:04 DEBUG    dispatch pc=520, inst=BINARY_SUBSCR(arg=None, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$518dup_top_two.4', '$518dup_top_two.5']
12-22 13:04 DEBUG    dispatch pc=522, inst=LOAD_FAST(arg=45, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$520binary_subscr.6']
12-22 13:04 DEBUG    dispatch pc=524, inst=UNARY_NEGATIVE(arg=None, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$520binary_subscr.6', '$grad_d522.7']
12-22 13:04 DEBUG    dispatch pc=526, inst=LOAD_FAST(arg=12, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$520binary_subscr.6', '$524unary_negative.8']
12-22 13:04 DEBUG    dispatch pc=528, inst=BINARY_MULTIPLY(arg=None, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$520binary_subscr.6', '$524unary_negative.8', '$alpha526.9']
12-22 13:04 DEBUG    dispatch pc=530, inst=INPLACE_ADD(arg=None, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$520binary_subscr.6', '$528binary_multiply.10']
12-22 13:04 DEBUG    dispatch pc=532, inst=ROT_THREE(arg=None, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$530inplace_add.11']
12-22 13:04 DEBUG    dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1', '$530inplace_add.11', '$other514.2', '$d516.3']
12-22 13:04 DEBUG    dispatch pc=536, inst=NOP(arg=1, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1']
12-22 13:04 DEBUG    dispatch pc=538, inst=JUMP_ABSOLUTE(arg=422, lineno=151)
12-22 13:04 DEBUG    stack ['$phi514.0', '$phi514.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=422, stack=('$phi514.0', '$phi514.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=422 nstack_initial=2), State(pc_initial=18 nstack_initial=1), State(pc_initial=636 nstack_initial=2), State(pc_initial=680 nstack_initial=2), State(pc_initial=422 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=636 nstack_initial=2), State(pc_initial=680 nstack_initial=2), State(pc_initial=422 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=636 nstack_initial=2), State(pc_initial=680 nstack_initial=2), State(pc_initial=422 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi636.0', '$phi636.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=636 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=636, inst=LOAD_CONST(arg=7, lineno=167)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1']
12-22 13:04 DEBUG    dispatch pc=638, inst=LOAD_FAST(arg=9, lineno=167)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$const636.2']
12-22 13:04 DEBUG    dispatch pc=640, inst=BINARY_MULTIPLY(arg=None, lineno=167)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$const636.2', '$gamma638.3']
12-22 13:04 DEBUG    dispatch pc=642, inst=LOAD_FAST(arg=7, lineno=167)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$640binary_multiply.4']
12-22 13:04 DEBUG    dispatch pc=644, inst=BINARY_MULTIPLY(arg=None, lineno=167)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$640binary_multiply.4', '$b642.5']
12-22 13:04 DEBUG    dispatch pc=646, inst=STORE_FAST(arg=43, lineno=167)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$644binary_multiply.6']
12-22 13:04 DEBUG    dispatch pc=648, inst=LOAD_FAST(arg=43, lineno=168)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1']
12-22 13:04 DEBUG    dispatch pc=650, inst=LOAD_CONST(arg=8, lineno=168)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7']
12-22 13:04 DEBUG    dispatch pc=652, inst=LOAD_FAST(arg=32, lineno=168)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$const650.8']
12-22 13:04 DEBUG    dispatch pc=654, inst=BINARY_ADD(arg=None, lineno=168)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$const650.8', '$dist_squared652.9']
12-22 13:04 DEBUG    dispatch pc=656, inst=LOAD_FAST(arg=6, lineno=169)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10']
12-22 13:04 DEBUG    dispatch pc=658, inst=LOAD_GLOBAL(arg=4, lineno=169)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$a656.11']
12-22 13:04 DEBUG    dispatch pc=660, inst=LOAD_FAST(arg=32, lineno=169)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$a656.11', '$658load_global.12']
12-22 13:04 DEBUG    dispatch pc=662, inst=LOAD_FAST(arg=7, lineno=169)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$a656.11', '$658load_global.12', '$dist_squared660.13']
12-22 13:04 DEBUG    dispatch pc=664, inst=CALL_FUNCTION(arg=2, lineno=169)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$a656.11', '$658load_global.12', '$dist_squared660.13', '$b662.14']
12-22 13:04 DEBUG    dispatch pc=666, inst=BINARY_MULTIPLY(arg=None, lineno=169)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$a656.11', '$664call_function.15']
12-22 13:04 DEBUG    dispatch pc=668, inst=LOAD_CONST(arg=3, lineno=169)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$666binary_multiply.16']
12-22 13:04 DEBUG    dispatch pc=670, inst=BINARY_ADD(arg=None, lineno=169)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$666binary_multiply.16', '$const668.17']
12-22 13:04 DEBUG    dispatch pc=672, inst=BINARY_MULTIPLY(arg=None, lineno=168)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$670binary_add.18']
12-22 13:04 DEBUG    dispatch pc=674, inst=INPLACE_TRUE_DIVIDE(arg=None, lineno=168)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$672binary_multiply.19']
12-22 13:04 DEBUG    dispatch pc=676, inst=STORE_FAST(arg=43, lineno=168)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1', '$674inplace_true_divide.20']
12-22 13:04 DEBUG    dispatch pc=678, inst=JUMP_FORWARD(arg=20, lineno=168)
12-22 13:04 DEBUG    stack ['$phi636.0', '$phi636.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=700, stack=('$phi636.0', '$phi636.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=680 nstack_initial=2), State(pc_initial=422 nstack_initial=2), State(pc_initial=700 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi680.0', '$phi680.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=680 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=680, inst=LOAD_FAST(arg=28, lineno=171)
12-22 13:04 DEBUG    stack ['$phi680.0', '$phi680.1']
12-22 13:04 DEBUG    dispatch pc=682, inst=LOAD_FAST(arg=29, lineno=171)
12-22 13:04 DEBUG    stack ['$phi680.0', '$phi680.1', '$j680.2']
12-22 13:04 DEBUG    dispatch pc=684, inst=COMPARE_OP(arg=2, lineno=171)
12-22 13:04 DEBUG    stack ['$phi680.0', '$phi680.1', '$j680.2', '$k682.3']
12-22 13:04 DEBUG    dispatch pc=686, inst=NOP(arg=2, lineno=171)
12-22 13:04 DEBUG    stack ['$phi680.0', '$phi680.1', '$684compare_op.4']
12-22 13:04 DEBUG    dispatch pc=688, inst=POP_JUMP_IF_FALSE(arg=696, lineno=171)
12-22 13:04 DEBUG    stack ['$phi680.0', '$phi680.1', '$684compare_op.4']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=690, stack=('$phi680.0', '$phi680.1'), blockstack=(), npush=0), Edge(pc=696, stack=('$phi680.0', '$phi680.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=422 nstack_initial=2), State(pc_initial=700 nstack_initial=2), State(pc_initial=690 nstack_initial=2), State(pc_initial=696 nstack_initial=2)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=700 nstack_initial=2), State(pc_initial=690 nstack_initial=2), State(pc_initial=696 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi700.0', '$phi700.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=700 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=700, inst=LOAD_GLOBAL(arg=7, lineno=176)
12-22 13:04 DEBUG    stack ['$phi700.0', '$phi700.1']
12-22 13:04 DEBUG    dispatch pc=702, inst=LOAD_FAST(arg=10, lineno=176)
12-22 13:04 DEBUG    stack ['$phi700.0', '$phi700.1', '$700load_global.2']
12-22 13:04 DEBUG    dispatch pc=704, inst=CALL_FUNCTION(arg=1, lineno=176)
12-22 13:04 DEBUG    stack ['$phi700.0', '$phi700.1', '$700load_global.2', '$dim702.3']
12-22 13:04 DEBUG    dispatch pc=706, inst=GET_ITER(arg=None, lineno=176)
12-22 13:04 DEBUG    stack ['$phi700.0', '$phi700.1', '$704call_function.4']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=708, stack=('$phi700.0', '$phi700.1', '$706get_iter.5'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=690 nstack_initial=2), State(pc_initial=696 nstack_initial=2), State(pc_initial=708 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi690.0', '$phi690.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=690 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=690, inst=NOP(arg=2, lineno=172)
12-22 13:04 DEBUG    stack ['$phi690.0', '$phi690.1']
12-22 13:04 DEBUG    dispatch pc=692, inst=JUMP_ABSOLUTE(arg=592, lineno=172)
12-22 13:04 DEBUG    stack ['$phi690.0', '$phi690.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=592, stack=('$phi690.0', '$phi690.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=696 nstack_initial=2), State(pc_initial=708 nstack_initial=3), State(pc_initial=592 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi696.0', '$phi696.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=696 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=696, inst=LOAD_CONST(arg=4, lineno=174)
12-22 13:04 DEBUG    stack ['$phi696.0', '$phi696.1']
12-22 13:04 DEBUG    dispatch pc=698, inst=STORE_FAST(arg=43, lineno=174)
12-22 13:04 DEBUG    stack ['$phi696.0', '$phi696.1', '$const696.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=700, stack=('$phi696.0', '$phi696.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=708 nstack_initial=3), State(pc_initial=592 nstack_initial=2), State(pc_initial=700 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi708.0', '$phi708.1', '$phi708.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=708 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=708, inst=FOR_ITER(arg=66, lineno=176)
12-22 13:04 DEBUG    stack ['$phi708.0', '$phi708.1', '$phi708.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=776, stack=('$phi708.0', '$phi708.1'), blockstack=(), npush=0), Edge(pc=710, stack=('$phi708.0', '$phi708.1', '$phi708.2', '$708for_iter.4'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=592 nstack_initial=2), State(pc_initial=700 nstack_initial=2), State(pc_initial=776 nstack_initial=2), State(pc_initial=710 nstack_initial=4)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=700 nstack_initial=2), State(pc_initial=776 nstack_initial=2), State(pc_initial=710 nstack_initial=4)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=776 nstack_initial=2), State(pc_initial=710 nstack_initial=4)])
12-22 13:04 DEBUG    stack: ['$phi776.0', '$phi776.1']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=776 nstack_initial=2)
12-22 13:04 DEBUG    dispatch pc=776, inst=NOP(arg=2, lineno=181)
12-22 13:04 DEBUG    stack ['$phi776.0', '$phi776.1']
12-22 13:04 DEBUG    dispatch pc=778, inst=JUMP_ABSOLUTE(arg=592, lineno=181)
12-22 13:04 DEBUG    stack ['$phi776.0', '$phi776.1']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=592, stack=('$phi776.0', '$phi776.1'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=710 nstack_initial=4), State(pc_initial=592 nstack_initial=2)])
12-22 13:04 DEBUG    stack: ['$phi710.0', '$phi710.1', '$phi710.2', '$phi710.3']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=710 nstack_initial=4)
12-22 13:04 DEBUG    dispatch pc=710, inst=STORE_FAST(arg=44, lineno=176)
12-22 13:04 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2', '$phi710.3']
12-22 13:04 DEBUG    dispatch pc=712, inst=LOAD_FAST(arg=43, lineno=177)
12-22 13:04 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2']
12-22 13:04 DEBUG    dispatch pc=714, inst=LOAD_CONST(arg=4, lineno=177)
12-22 13:04 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2', '$grad_coeff712.4']
12-22 13:04 DEBUG    dispatch pc=716, inst=COMPARE_OP(arg=4, lineno=177)
12-22 13:04 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2', '$grad_coeff712.4', '$const714.5']
12-22 13:04 DEBUG    dispatch pc=718, inst=NOP(arg=2, lineno=177)
12-22 13:04 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2', '$716compare_op.6']
12-22 13:04 DEBUG    dispatch pc=720, inst=POP_JUMP_IF_FALSE(arg=748, lineno=177)
12-22 13:04 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2', '$716compare_op.6']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=722, stack=('$phi710.0', '$phi710.1', '$phi710.2'), blockstack=(), npush=0), Edge(pc=748, stack=('$phi710.0', '$phi710.1', '$phi710.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=592 nstack_initial=2), State(pc_initial=722 nstack_initial=3), State(pc_initial=748 nstack_initial=3)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=722 nstack_initial=3), State(pc_initial=748 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi722.0', '$phi722.1', '$phi722.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=722 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=722, inst=LOAD_GLOBAL(arg=8, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2']
12-22 13:04 DEBUG    dispatch pc=724, inst=LOAD_FAST(arg=43, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3']
12-22 13:04 DEBUG    dispatch pc=726, inst=LOAD_FAST(arg=30, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4']
12-22 13:04 DEBUG    dispatch pc=728, inst=LOAD_FAST(arg=44, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$current726.5']
12-22 13:04 DEBUG    dispatch pc=730, inst=BINARY_SUBSCR(arg=None, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$current726.5', '$d728.6']
12-22 13:04 DEBUG    dispatch pc=732, inst=LOAD_FAST(arg=31, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$730binary_subscr.7']
12-22 13:04 DEBUG    dispatch pc=734, inst=LOAD_FAST(arg=44, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$730binary_subscr.7', '$other732.8']
12-22 13:04 DEBUG    dispatch pc=736, inst=BINARY_SUBSCR(arg=None, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$730binary_subscr.7', '$other732.8', '$d734.9']
12-22 13:04 DEBUG    dispatch pc=738, inst=BINARY_SUBTRACT(arg=None, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$730binary_subscr.7', '$736binary_subscr.10']
12-22 13:04 DEBUG    dispatch pc=740, inst=BINARY_MULTIPLY(arg=None, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$738binary_subtract.11']
12-22 13:04 DEBUG    dispatch pc=742, inst=CALL_FUNCTION(arg=1, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$740binary_multiply.12']
12-22 13:04 DEBUG    dispatch pc=744, inst=STORE_FAST(arg=45, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$742call_function.13']
12-22 13:04 DEBUG    dispatch pc=746, inst=JUMP_FORWARD(arg=4, lineno=178)
12-22 13:04 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=752, stack=('$phi722.0', '$phi722.1', '$phi722.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=748 nstack_initial=3), State(pc_initial=752 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi748.0', '$phi748.1', '$phi748.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=748 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=748, inst=LOAD_CONST(arg=1, lineno=180)
12-22 13:04 DEBUG    stack ['$phi748.0', '$phi748.1', '$phi748.2']
12-22 13:04 DEBUG    dispatch pc=750, inst=STORE_FAST(arg=45, lineno=180)
12-22 13:04 DEBUG    stack ['$phi748.0', '$phi748.1', '$phi748.2', '$const748.3']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=752, stack=('$phi748.0', '$phi748.1', '$phi748.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=752 nstack_initial=3), State(pc_initial=752 nstack_initial=3)])
12-22 13:04 DEBUG    stack: ['$phi752.0', '$phi752.1', '$phi752.2']
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=752 nstack_initial=3)
12-22 13:04 DEBUG    dispatch pc=752, inst=LOAD_FAST(arg=30, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2']
12-22 13:04 DEBUG    dispatch pc=754, inst=LOAD_FAST(arg=44, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3']
12-22 13:04 DEBUG    dispatch pc=756, inst=DUP_TOP_TWO(arg=None, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4']
12-22 13:04 DEBUG    dispatch pc=758, inst=BINARY_SUBSCR(arg=None, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$756dup_top_two.5', '$756dup_top_two.6']
12-22 13:04 DEBUG    dispatch pc=760, inst=LOAD_FAST(arg=45, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$758binary_subscr.7']
12-22 13:04 DEBUG    dispatch pc=762, inst=LOAD_FAST(arg=12, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$758binary_subscr.7', '$grad_d760.8']
12-22 13:04 DEBUG    dispatch pc=764, inst=BINARY_MULTIPLY(arg=None, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$758binary_subscr.7', '$grad_d760.8', '$alpha762.9']
12-22 13:04 DEBUG    dispatch pc=766, inst=INPLACE_ADD(arg=None, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$758binary_subscr.7', '$764binary_multiply.10']
12-22 13:04 DEBUG    dispatch pc=768, inst=ROT_THREE(arg=None, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$766inplace_add.11']
12-22 13:04 DEBUG    dispatch pc=770, inst=STORE_SUBSCR(arg=None, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$766inplace_add.11', '$current752.3', '$d754.4']
12-22 13:04 DEBUG    dispatch pc=772, inst=NOP(arg=2, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2']
12-22 13:04 DEBUG    dispatch pc=774, inst=JUMP_ABSOLUTE(arg=708, lineno=181)
12-22 13:04 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=708, stack=('$phi752.0', '$phi752.1', '$phi752.2'), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=752 nstack_initial=3), State(pc_initial=708 nstack_initial=3)])
12-22 13:04 DEBUG    pending: deque([State(pc_initial=708 nstack_initial=3)])
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): set(),
             State(pc_initial=20 nstack_initial=1): {'$phi20.0'},
             State(pc_initial=22 nstack_initial=2): {'$phi22.1'},
             State(pc_initial=36 nstack_initial=1): set(),
             State(pc_initial=84 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=360 nstack_initial=1): set(),
             State(pc_initial=410 nstack_initial=1): set(),
             State(pc_initial=414 nstack_initial=1): set(),
             State(pc_initial=422 nstack_initial=2): {'$phi422.1'},
             State(pc_initial=424 nstack_initial=3): {'$phi424.2'},
             State(pc_initial=456 nstack_initial=2): set(),
             State(pc_initial=488 nstack_initial=2): set(),
             State(pc_initial=514 nstack_initial=2): set(),
             State(pc_initial=540 nstack_initial=1): set(),
             State(pc_initial=592 nstack_initial=2): {'$phi592.1'},
             State(pc_initial=594 nstack_initial=3): {'$phi594.2'},
             State(pc_initial=636 nstack_initial=2): set(),
             State(pc_initial=680 nstack_initial=2): set(),
             State(pc_initial=690 nstack_initial=2): set(),
             State(pc_initial=696 nstack_initial=2): set(),
             State(pc_initial=700 nstack_initial=2): set(),
             State(pc_initial=708 nstack_initial=3): {'$phi708.2'},
             State(pc_initial=710 nstack_initial=4): {'$phi710.3'},
             State(pc_initial=722 nstack_initial=3): set(),
             State(pc_initial=748 nstack_initial=3): set(),
             State(pc_initial=752 nstack_initial=3): set(),
             State(pc_initial=776 nstack_initial=2): set(),
             State(pc_initial=780 nstack_initial=1): set(),
             State(pc_initial=806 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi22.1': State(pc_initial=20 nstack_initial=1),
 '$phi422.1': State(pc_initial=414 nstack_initial=1),
 '$phi424.2': State(pc_initial=422 nstack_initial=2),
 '$phi592.1': State(pc_initial=540 nstack_initial=1),
 '$phi594.2': State(pc_initial=592 nstack_initial=2),
 '$phi708.2': State(pc_initial=700 nstack_initial=2),
 '$phi710.3': State(pc_initial=708 nstack_initial=3)}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                          ('$phi780.0',
                           State(pc_initial=780 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi22.0': {('$phi20.0', State(pc_initial=20 nstack_initial=1))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi36.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi360.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi414.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=1)),
                           ('$phi410.0',
                            State(pc_initial=410 nstack_initial=1))},
             '$phi422.0': {('$phi414.0',
                            State(pc_initial=414 nstack_initial=1)),
                           ('$phi488.0',
                            State(pc_initial=488 nstack_initial=2)),
                           ('$phi514.0',
                            State(pc_initial=514 nstack_initial=2))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1)),
                           ('$phi488.1',
                            State(pc_initial=488 nstack_initial=2)),
                           ('$phi514.1',
                            State(pc_initial=514 nstack_initial=2))},
             '$phi424.0': {('$phi422.0',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi424.1': {('$phi422.1',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$phi424.0',
                            State(pc_initial=424 nstack_initial=3))},
             '$phi456.1': {('$phi424.1',
                            State(pc_initial=424 nstack_initial=3))},
             '$phi488.0': {('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi488.1': {('$phi424.1',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.1',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi514.0': {('$phi488.0',
                            State(pc_initial=488 nstack_initial=2))},
             '$phi514.1': {('$phi488.1',
                            State(pc_initial=488 nstack_initial=2))},
             '$phi540.0': {('$phi422.0',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi592.0': {('$phi540.0',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi690.0',
                            State(pc_initial=690 nstack_initial=2)),
                           ('$phi776.0',
                            State(pc_initial=776 nstack_initial=2))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi690.1',
                            State(pc_initial=690 nstack_initial=2)),
                           ('$phi776.1',
                            State(pc_initial=776 nstack_initial=2))},
             '$phi594.0': {('$phi592.0',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi594.1': {('$phi592.1',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$phi594.0',
                            State(pc_initial=594 nstack_initial=3))},
             '$phi636.1': {('$phi594.1',
                            State(pc_initial=594 nstack_initial=3))},
             '$phi680.0': {('$phi594.0',
                            State(pc_initial=594 nstack_initial=3))},
             '$phi680.1': {('$phi594.1',
                            State(pc_initial=594 nstack_initial=3))},
             '$phi690.0': {('$phi680.0',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi690.1': {('$phi680.1',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi696.0': {('$phi680.0',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi696.1': {('$phi680.1',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi700.0': {('$phi636.0',
                            State(pc_initial=636 nstack_initial=2)),
                           ('$phi696.0',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi700.1': {('$phi636.1',
                            State(pc_initial=636 nstack_initial=2)),
                           ('$phi696.1',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi708.0': {('$phi700.0',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi752.0',
                            State(pc_initial=752 nstack_initial=3))},
             '$phi708.1': {('$phi700.1',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi752.1',
                            State(pc_initial=752 nstack_initial=3))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi752.2',
                            State(pc_initial=752 nstack_initial=3))},
             '$phi710.0': {('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi710.1': {('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi710.2': {('$phi708.2',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$phi710.0',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi722.1': {('$phi710.1',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi722.2': {('$phi710.2',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi748.0': {('$phi710.0',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi748.1': {('$phi710.1',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi748.2': {('$phi710.2',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi752.0': {('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi752.1': {('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi752.2': {('$phi722.2',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.2',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi776.0': {('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi776.1': {('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi780.0': {('$phi592.0',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi84.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=1)),
                          ('$phi592.0',
                           State(pc_initial=592 nstack_initial=2))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=1)),
                          ('$phi592.0',
                           State(pc_initial=592 nstack_initial=2))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi592.0',
                           State(pc_initial=592 nstack_initial=2))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi36.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi592.0',
                           State(pc_initial=592 nstack_initial=2))},
             '$phi360.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi410.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi414.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi422.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.1',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi424.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi424.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.1',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi456.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1)),
                           ('$phi456.1',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi488.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi488.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi514.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi514.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi540.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi592.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi594.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi594.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi636.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi680.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi680.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi690.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi690.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi696.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi696.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi700.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi700.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi708.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi708.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi722.2',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.2',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi710.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi710.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi710.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi722.2',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.2',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi722.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi722.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi722.2',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.2',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi748.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi748.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi748.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi722.2',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.2',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi752.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi752.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi752.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi776.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi776.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi780.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi592.0',
                           State(pc_initial=592 nstack_initial=2))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi424.0', State(pc_initial=424 nstack_initial=3)),
                          ('$phi456.0', State(pc_initial=456 nstack_initial=2)),
                          ('$phi680.0', State(pc_initial=680 nstack_initial=2)),
                          ('$phi708.0',
                           State(pc_initial=708 nstack_initial=3))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                          ('$phi424.0', State(pc_initial=424 nstack_initial=3)),
                          ('$phi456.0', State(pc_initial=456 nstack_initial=2)),
                          ('$phi680.0', State(pc_initial=680 nstack_initial=2)),
                          ('$phi708.0',
                           State(pc_initial=708 nstack_initial=3))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                          ('$phi424.0', State(pc_initial=424 nstack_initial=3)),
                          ('$phi456.0', State(pc_initial=456 nstack_initial=2)),
                          ('$phi680.0', State(pc_initial=680 nstack_initial=2)),
                          ('$phi708.0',
                           State(pc_initial=708 nstack_initial=3))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi36.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi424.0', State(pc_initial=424 nstack_initial=3)),
                          ('$phi456.0', State(pc_initial=456 nstack_initial=2)),
                          ('$phi680.0', State(pc_initial=680 nstack_initial=2)),
                          ('$phi708.0',
                           State(pc_initial=708 nstack_initial=3))},
             '$phi360.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi410.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi414.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi424.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi456.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi488.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi488.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi514.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi514.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi540.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi592.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi594.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi594.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi636.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi680.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi680.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi690.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi690.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi696.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi700.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi700.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi708.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi708.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi710.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi710.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi722.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi748.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi748.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi752.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi752.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi752.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi776.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi780.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi722.0', State(pc_initial=722 nstack_initial=3)),
                          ('$phi748.0',
                           State(pc_initial=748 nstack_initial=3))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi722.0', State(pc_initial=722 nstack_initial=3)),
                          ('$phi748.0',
                           State(pc_initial=748 nstack_initial=3))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi722.0', State(pc_initial=722 nstack_initial=3)),
                          ('$phi748.0',
                           State(pc_initial=748 nstack_initial=3))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi722.0', State(pc_initial=722 nstack_initial=3)),
                          ('$phi748.0',
                           State(pc_initial=748 nstack_initial=3))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi36.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi722.0', State(pc_initial=722 nstack_initial=3)),
                          ('$phi748.0',
                           State(pc_initial=748 nstack_initial=3))},
             '$phi360.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi410.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi414.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi424.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi456.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi488.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi488.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi514.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi514.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi540.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi592.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi594.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi636.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi680.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi680.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi690.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi690.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi696.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi700.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi700.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi708.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi710.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi710.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi722.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi722.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi748.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi748.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi752.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi752.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi752.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi776.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi780.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi36.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi360.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi410.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi414.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi424.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi456.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi488.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi488.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi514.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi514.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi540.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi592.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi594.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi636.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi680.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi680.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi690.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi690.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi696.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi700.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi700.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi708.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi710.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi710.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi722.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi722.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi748.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi748.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi752.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi752.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi752.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi776.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi780.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi36.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi360.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi410.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi414.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi424.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi456.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi488.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi488.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi514.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi514.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi540.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi592.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi594.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi636.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi680.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi680.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi690.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi690.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi696.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi700.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi700.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi708.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi710.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi710.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi722.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi722.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi748.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi748.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi752.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi752.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi752.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi776.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi780.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:04 DEBUG    keep phismap: {'$phi20.0': {('$16get_iter.7', State(pc_initial=0 nstack_initial=0))},
 '$phi22.1': {('$20for_iter.2', State(pc_initial=20 nstack_initial=1))},
 '$phi422.1': {('$420get_iter.4', State(pc_initial=414 nstack_initial=1))},
 '$phi424.2': {('$422for_iter.3', State(pc_initial=422 nstack_initial=2))},
 '$phi592.1': {('$590get_iter.24', State(pc_initial=540 nstack_initial=1))},
 '$phi594.2': {('$592for_iter.3', State(pc_initial=592 nstack_initial=2))},
 '$phi708.2': {('$706get_iter.5', State(pc_initial=700 nstack_initial=2))},
 '$phi710.3': {('$708for_iter.4', State(pc_initial=708 nstack_initial=3))}}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi20.0': '$16get_iter.7'},
             State(pc_initial=20 nstack_initial=1): {'$phi22.1': '$20for_iter.2'},
             State(pc_initial=414 nstack_initial=1): {'$phi422.1': '$420get_iter.4'},
             State(pc_initial=422 nstack_initial=2): {'$phi424.2': '$422for_iter.3'},
             State(pc_initial=540 nstack_initial=1): {'$phi592.1': '$590get_iter.24'},
             State(pc_initial=592 nstack_initial=2): {'$phi594.2': '$592for_iter.3'},
             State(pc_initial=700 nstack_initial=2): {'$phi708.2': '$706get_iter.5'},
             State(pc_initial=708 nstack_initial=3): {'$phi710.3': '$708for_iter.4'}})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$epochs_per_sample6.2'}), (8, {'item': '$epochs_per_sample6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'func': '$4load_method.1', 'args': ['$12binary_subscr.5'], 'res': '$14call_method.6'}), (16, {'value': '$14call_method.6', 'res': '$16get_iter.7'})), outgoing_phis={'$phi20.0': '$16get_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.7',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ('$phi18.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=20 nstack_initial=1):
AdaptBlockInfo(insts=((20, {'iterator': '$phi20.0', 'pair': '$20for_iter.1', 'indval': '$20for_iter.2', 'pred': '$20for_iter.3'}),), outgoing_phis={'$phi22.1': '$20for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={806: (), 22: ('$phi20.0', '$20for_iter.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=22 nstack_initial=2):
AdaptBlockInfo(insts=((22, {'value': '$phi22.1'}), (24, {'res': '$epoch_of_next_sample24.2'}), (26, {'res': '$i26.3'}), (28, {'index': '$i26.3', 'target': '$epoch_of_next_sample24.2', 'res': '$28binary_subscr.4'}), (30, {'res': '$n30.5'}), (32, {'lhs': '$28binary_subscr.4', 'rhs': '$n30.5', 'res': '$32compare_op.6'}), (34, {'pred': '$32compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi22.0',), 18: ('$phi22.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'res': '$head36.1'}), (38, {'res': '$i38.2'}), (40, {'index': '$i38.2', 'target': '$head36.1', 'res': '$40binary_subscr.3'}), (42, {'value': '$40binary_subscr.3'}), (44, {'res': '$tail44.4'}), (46, {'res': '$i46.5'}), (48, {'index': '$i46.5', 'target': '$tail44.4', 'res': '$48binary_subscr.6'}), (50, {'value': '$48binary_subscr.6'}), (52, {'res': '$head_embedding52.7'}), (54, {'res': '$j54.8'}), (56, {'index': '$j54.8', 'target': '$head_embedding52.7', 'res': '$56binary_subscr.9'}), (58, {'value': '$56binary_subscr.9'}), (60, {'res': '$tail_embedding60.10'}), (62, {'res': '$k62.11'}), (64, {'index': '$k62.11', 'target': '$tail_embedding60.10', 'res': '$64binary_subscr.12'}), (66, {'value': '$64binary_subscr.12'}), (68, {'res': '$68load_global.13'}), (70, {'res': '$current70.14'}), (72, {'res': '$other72.15'}), (74, {'func': '$68load_global.13', 'args': ['$current70.14', '$other72.15'], 'res': '$74call_function.16'}), (76, {'value': '$74call_function.16'}), (78, {'res': '$densmap_flag78.17'}), (80, {}), (82, {'pred': '$densmap_flag78.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi36.0',), 350: ('$phi36.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((84, {'res': '$const84.1'}), (86, {'res': '$const86.2'}), (88, {'res': '$a88.3'}), (90, {'res': '$90load_global.4'}), (92, {'res': '$dist_squared92.5'}), (94, {'res': '$b94.6'}), (96, {'func': '$90load_global.4', 'args': ['$dist_squared92.5', '$b94.6'], 'res': '$96call_function.7'}), (98, {'lhs': '$a88.3', 'rhs': '$96call_function.7', 'res': '$98binary_multiply.8'}), (100, {'lhs': '$const86.2', 'rhs': '$98binary_multiply.8', 'res': '$100binary_add.9'}), (102, {'lhs': '$const84.1', 'rhs': '$100binary_add.9', 'res': '$102binary_true_divide.10'}), (104, {'value': '$102binary_true_divide.10'}), (106, {'res': '$a106.11'}), (108, {'res': '$b108.12'}), (110, {'lhs': '$a106.11', 'rhs': '$b108.12', 'res': '$110binary_multiply.13'}), (112, {'res': '$112load_global.14'}), (114, {'res': '$dist_squared114.15'}), (116, {'res': '$b116.16'}), (118, {'res': '$const118.17'}), (120, {'lhs': '$b116.16', 'rhs': '$const118.17', 'res': '$120binary_subtract.18'}), (122, {'func': '$112load_global.14', 'args': ['$dist_squared114.15', '$120binary_subtract.18'], 'res': '$122call_function.19'}), (124, {'lhs': '$110binary_multiply.13', 'rhs': '$122call_function.19', 'res': '$124binary_multiply.20'}), (126, {'res': '$const126.21'}), (128, {'res': '$a128.22'}), (130, {'res': '$130load_global.23'}), (132, {'res': '$dist_squared132.24'}), (134, {'res': '$b134.25'}), (136, {'func': '$130load_global.23', 'args': ['$dist_squared132.24', '$b134.25'], 'res': '$136call_function.26'}), (138, {'lhs': '$a128.22', 'rhs': '$136call_function.26', 'res': '$138binary_multiply.27'}), (140, {'lhs': '$const126.21', 'rhs': '$138binary_multiply.27', 'res': '$140binary_add.28'}), (142, {'lhs': '$124binary_multiply.20', 'rhs': '$140binary_add.28', 'res': '$142binary_true_divide.29'}), (144, {'value': '$142binary_true_divide.29'}), (146, {'res': '$phi146.30'}), (148, {'res': '$dens_phi_sum148.31'}), (150, {'res': '$k150.32'}), (152, {'index': '$k150.32', 'target': '$dens_phi_sum148.31', 'res': '$152binary_subscr.33'}), (154, {'lhs': '$phi146.30', 'rhs': '$152binary_subscr.33', 'res': '$154binary_true_divide.34'}), (156, {'value': '$154binary_true_divide.34'}), (158, {'res': '$phi158.35'}), (160, {'res': '$dens_phi_sum160.36'}), (162, {'res': '$j162.37'}), (164, {'index': '$j162.37', 'target': '$dens_phi_sum160.36', 'res': '$164binary_subscr.38'}), (166, {'lhs': '$phi158.35', 'rhs': '$164binary_subscr.38', 'res': '$166binary_true_divide.39'}), (168, {'value': '$166binary_true_divide.39'}), (170, {'res': '$q_jk170.40'}), (172, {'res': '$const172.41'}), (174, {'res': '$b174.42'}), (176, {'res': '$const176.43'}), (178, {'res': '$phi178.44'}), (180, {'lhs': '$const176.43', 'rhs': '$phi178.44', 'res': '$180binary_subtract.45'}), (182, {'lhs': '$b174.42', 'rhs': '$180binary_subtract.45', 'res': '$182binary_multiply.46'}), (184, {'lhs': '$const172.41', 'rhs': '$182binary_multiply.46', 'res': '$184binary_subtract.47'}), (186, {'res': '$186load_global.48'}), (188, {'item': '$186load_global.48', 'res': '$188load_method.49'}), (190, {'res': '$dens_re_sum190.50'}), (192, {'res': '$k192.51'}), (194, {'index': '$k192.51', 'target': '$dens_re_sum190.50', 'res': '$194binary_subscr.52'}), (196, {'func': '$188load_method.49', 'args': ['$194binary_subscr.52'], 'res': '$196call_method.53'}), (198, {'lhs': '$184binary_subtract.47', 'rhs': '$196call_method.53', 'res': '$198binary_true_divide.54'}), (200, {'res': '$dphi_term200.55'}), (202, {'lhs': '$198binary_true_divide.54', 'rhs': '$dphi_term200.55', 'res': '$202binary_add.56'}), (204, {'lhs': '$q_jk170.40', 'rhs': '$202binary_add.56', 'res': '$204binary_multiply.57'}), (206, {'value': '$204binary_multiply.57'}), (208, {'res': '$q_kj208.58'}), (210, {'res': '$const210.59'}), (212, {'res': '$b212.60'}), (214, {'res': '$const214.61'}), (216, {'res': '$phi216.62'}), (218, {'lhs': '$const214.61', 'rhs': '$phi216.62', 'res': '$218binary_subtract.63'}), (220, {'lhs': '$b212.60', 'rhs': '$218binary_subtract.63', 'res': '$220binary_multiply.64'}), (222, {'lhs': '$const210.59', 'rhs': '$220binary_multiply.64', 'res': '$222binary_subtract.65'}), (224, {'res': '$224load_global.66'}), (226, {'item': '$224load_global.66', 'res': '$226load_method.67'}), (228, {'res': '$dens_re_sum228.68'}), (230, {'res': '$j230.69'}), (232, {'index': '$j230.69', 'target': '$dens_re_sum228.68', 'res': '$232binary_subscr.70'}), (234, {'func': '$226load_method.67', 'args': ['$232binary_subscr.70'], 'res': '$234call_method.71'}), (236, {'lhs': '$222binary_subtract.65', 'rhs': '$234call_method.71', 'res': '$236binary_true_divide.72'}), (238, {'res': '$dphi_term238.73'}), (240, {'lhs': '$236binary_true_divide.72', 'rhs': '$dphi_term238.73', 'res': '$240binary_add.74'}), (242, {'lhs': '$q_kj208.58', 'rhs': '$240binary_add.74', 'res': '$242binary_multiply.75'}), (244, {'value': '$242binary_multiply.75'}), (246, {'res': '$dens_re_std246.76'}), (248, {'res': '$dens_re_std248.77'}), (250, {'lhs': '$dens_re_std246.76', 'rhs': '$dens_re_std248.77', 'res': '$250binary_multiply.78'}), (252, {'value': '$250binary_multiply.78'}), (254, {'res': '$dens_R254.79'}), (256, {'res': '$k256.80'}), (258, {'index': '$k256.80', 'target': '$dens_R254.79', 'res': '$258binary_subscr.81'}), (260, {'res': '$dens_re_cov260.82'}), (262, {'res': '$dens_re_sum262.83'}), (264, {'res': '$k264.84'}), (266, {'index': '$k264.84', 'target': '$dens_re_sum262.83', 'res': '$266binary_subscr.85'}), (268, {'res': '$dens_re_mean268.86'}), (270, {'lhs': '$266binary_subscr.85', 'rhs': '$dens_re_mean268.86', 'res': '$270binary_subtract.87'}), (272, {'lhs': '$dens_re_cov260.82', 'rhs': '$270binary_subtract.87', 'res': '$272binary_multiply.88'}), (274, {'res': '$re_std_sq274.89'}), (276, {'lhs': '$272binary_multiply.88', 'rhs': '$re_std_sq274.89', 'res': '$276binary_true_divide.90'}), (278, {'lhs': '$258binary_subscr.81', 'rhs': '$276binary_true_divide.90', 'res': '$278binary_subtract.91'}), (280, {'value': '$278binary_subtract.91'}), (282, {'res': '$dens_R282.92'}), (284, {'res': '$j284.93'}), (286, {'index': '$j284.93', 'target': '$dens_R282.92', 'res': '$286binary_subscr.94'}), (288, {'res': '$dens_re_cov288.95'}), (290, {'res': '$dens_re_sum290.96'}), (292, {'res': '$j292.97'}), (294, {'index': '$j292.97', 'target': '$dens_re_sum290.96', 'res': '$294binary_subscr.98'}), (296, {'res': '$dens_re_mean296.99'}), (298, {'lhs': '$294binary_subscr.98', 'rhs': '$dens_re_mean296.99', 'res': '$298binary_subtract.100'}), (300, {'lhs': '$dens_re_cov288.95', 'rhs': '$298binary_subtract.100', 'res': '$300binary_multiply.101'}), (302, {'res': '$re_std_sq302.102'}), (304, {'lhs': '$300binary_multiply.101', 'rhs': '$re_std_sq302.102', 'res': '$304binary_true_divide.103'}), (306, {'lhs': '$286binary_subscr.94', 'rhs': '$304binary_true_divide.103', 'res': '$306binary_subtract.104'}), (308, {'value': '$306binary_subtract.104'}), (310, {'res': '$dens_lambda310.105'}), (312, {'res': '$dens_mu_tot312.106'}), (314, {'lhs': '$dens_lambda310.105', 'rhs': '$dens_mu_tot312.106', 'res': '$314binary_multiply.107'}), (316, {'res': '$weight_k316.108'}), (318, {'res': '$drk318.109'}), (320, {'lhs': '$weight_k316.108', 'rhs': '$drk318.109', 'res': '$320binary_multiply.110'}), (322, {'res': '$weight_j322.111'}), (324, {'res': '$drj324.112'}), (326, {'lhs': '$weight_j322.111', 'rhs': '$drj324.112', 'res': '$326binary_multiply.113'}), (328, {'lhs': '$320binary_multiply.110', 'rhs': '$326binary_multiply.113', 'res': '$328binary_add.114'}), (330, {'lhs': '$314binary_multiply.107', 'rhs': '$328binary_add.114', 'res': '$330binary_multiply.115'}), (332, {'res': '$dens_mu332.116'}), (334, {'res': '$i334.117'}), (336, {'index': '$i334.117', 'target': '$dens_mu332.116', 'res': '$336binary_subscr.118'}), (338, {'res': '$dens_re_std338.119'}), (340, {'lhs': '$336binary_subscr.118', 'rhs': '$dens_re_std338.119', 'res': '$340binary_multiply.120'}), (342, {'lhs': '$330binary_multiply.115', 'rhs': '$340binary_multiply.120', 'res': '$342binary_true_divide.121'}), (344, {'res': '$n_vertices344.122'}), (346, {'lhs': '$342binary_true_divide.121', 'rhs': '$n_vertices344.122', 'res': '$346binary_true_divide.123'}), (348, {'value': '$346binary_true_divide.123'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi84.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$dist_squared350.1'}), (352, {'res': '$const352.2'}), (354, {'lhs': '$dist_squared350.1', 'rhs': '$const352.2', 'res': '$354compare_op.3'}), (356, {}), (358, {'pred': '$354compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={360: ('$phi350.0',), 410: ('$phi350.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=360 nstack_initial=1):
AdaptBlockInfo(insts=((360, {'res': '$const360.1'}), (362, {'res': '$a362.2'}), (364, {'lhs': '$const360.1', 'rhs': '$a362.2', 'res': '$364binary_multiply.3'}), (366, {'res': '$b366.4'}), (368, {'lhs': '$364binary_multiply.3', 'rhs': '$b366.4', 'res': '$368binary_multiply.5'}), (370, {'res': '$370load_global.6'}), (372, {'res': '$dist_squared372.7'}), (374, {'res': '$b374.8'}), (376, {'res': '$const376.9'}), (378, {'lhs': '$b374.8', 'rhs': '$const376.9', 'res': '$378binary_subtract.10'}), (380, {'func': '$370load_global.6', 'args': ['$dist_squared372.7', '$378binary_subtract.10'], 'res': '$380call_function.11'}), (382, {'lhs': '$368binary_multiply.5', 'rhs': '$380call_function.11', 'res': '$382binary_multiply.12'}), (384, {'value': '$382binary_multiply.12'}), (386, {'res': '$grad_coeff386.13'}), (388, {'res': '$a388.14'}), (390, {'res': '$390load_global.15'}), (392, {'res': '$dist_squared392.16'}), (394, {'res': '$b394.17'}), (396, {'func': '$390load_global.15', 'args': ['$dist_squared392.16', '$b394.17'], 'res': '$396call_function.18'}), (398, {'lhs': '$a388.14', 'rhs': '$396call_function.18', 'res': '$398binary_multiply.19'}), (400, {'res': '$const400.20'}), (402, {'lhs': '$398binary_multiply.19', 'rhs': '$const400.20', 'res': '$402binary_add.21'}), (404, {'lhs': '$grad_coeff386.13', 'rhs': '$402binary_add.21', 'res': '$404inplace_true_divide.22'}), (406, {'value': '$404inplace_true_divide.22'}), (408, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={414: ('$phi360.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=410 nstack_initial=1):
AdaptBlockInfo(insts=((410, {'res': '$const410.1'}), (412, {'value': '$const410.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={414: ('$phi410.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=414 nstack_initial=1):
AdaptBlockInfo(insts=((414, {'res': '$414load_global.1'}), (416, {'res': '$dim416.2'}), (418, {'func': '$414load_global.1', 'args': ['$dim416.2'], 'res': '$418call_function.3'}), (420, {'value': '$418call_function.3', 'res': '$420get_iter.4'})), outgoing_phis={'$phi422.1': '$420get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={422: ('$phi414.0', '$420get_iter.4')})
12-22 13:04 DEBUG    block_infos State(pc_initial=422 nstack_initial=2):
AdaptBlockInfo(insts=((422, {'iterator': '$phi422.1', 'pair': '$422for_iter.2', 'indval': '$422for_iter.3', 'pred': '$422for_iter.4'}),), outgoing_phis={'$phi424.2': '$422for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={540: ('$phi422.0',), 424: ('$phi422.0', '$phi422.1', '$422for_iter.3')})
12-22 13:04 DEBUG    block_infos State(pc_initial=424 nstack_initial=3):
AdaptBlockInfo(insts=((424, {'value': '$phi424.2'}), (426, {'res': '$426load_global.3'}), (428, {'res': '$grad_coeff428.4'}), (430, {'res': '$current430.5'}), (432, {'res': '$d432.6'}), (434, {'index': '$d432.6', 'target': '$current430.5', 'res': '$434binary_subscr.7'}), (436, {'res': '$other436.8'}), (438, {'res': '$d438.9'}), (440, {'index': '$d438.9', 'target': '$other436.8', 'res': '$440binary_subscr.10'}), (442, {'lhs': '$434binary_subscr.7', 'rhs': '$440binary_subscr.10', 'res': '$442binary_subtract.11'}), (444, {'lhs': '$grad_coeff428.4', 'rhs': '$442binary_subtract.11', 'res': '$444binary_multiply.12'}), (446, {'func': '$426load_global.3', 'args': ['$444binary_multiply.12'], 'res': '$446call_function.13'}), (448, {'value': '$446call_function.13'}), (450, {'res': '$densmap_flag450.14'}), (452, {}), (454, {'pred': '$densmap_flag450.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={456: ('$phi424.0', '$phi424.1'), 488: ('$phi424.0', '$phi424.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=456 nstack_initial=2):
AdaptBlockInfo(insts=((456, {'res': '$grad_d456.2'}), (458, {'res': '$458load_global.3'}), (460, {'res': '$const460.4'}), (462, {'res': '$grad_cor_coeff462.5'}), (464, {'lhs': '$const460.4', 'rhs': '$grad_cor_coeff462.5', 'res': '$464binary_multiply.6'}), (466, {'res': '$current466.7'}), (468, {'res': '$d468.8'}), (470, {'index': '$d468.8', 'target': '$current466.7', 'res': '$470binary_subscr.9'}), (472, {'res': '$other472.10'}), (474, {'res': '$d474.11'}), (476, {'index': '$d474.11', 'target': '$other472.10', 'res': '$476binary_subscr.12'}), (478, {'lhs': '$470binary_subscr.9', 'rhs': '$476binary_subscr.12', 'res': '$478binary_subtract.13'}), (480, {'lhs': '$464binary_multiply.6', 'rhs': '$478binary_subtract.13', 'res': '$480binary_multiply.14'}), (482, {'func': '$458load_global.3', 'args': ['$480binary_multiply.14'], 'res': '$482call_function.15'}), (484, {'lhs': '$grad_d456.2', 'rhs': '$482call_function.15', 'res': '$484inplace_add.16'}), (486, {'value': '$484inplace_add.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={488: ('$phi456.0', '$phi456.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=488 nstack_initial=2):
AdaptBlockInfo(insts=((488, {'res': '$current488.2'}), (490, {'res': '$d490.3'}), (492, {'orig': ['$current488.2', '$d490.3'], 'duped': ['$492dup_top_two.4', '$492dup_top_two.5']}), (494, {'index': '$492dup_top_two.5', 'target': '$492dup_top_two.4', 'res': '$494binary_subscr.6'}), (496, {'res': '$grad_d496.7'}), (498, {'res': '$alpha498.8'}), (500, {'lhs': '$grad_d496.7', 'rhs': '$alpha498.8', 'res': '$500binary_multiply.9'}), (502, {'lhs': '$494binary_subscr.6', 'rhs': '$500binary_multiply.9', 'res': '$502inplace_add.10'}), (506, {'target': '$current488.2', 'index': '$d490.3', 'value': '$502inplace_add.10'}), (508, {'res': '$move_other508.11'}), (510, {}), (512, {'pred': '$move_other508.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={514: ('$phi488.0', '$phi488.1'), 422: ('$phi488.0', '$phi488.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=514 nstack_initial=2):
AdaptBlockInfo(insts=((514, {'res': '$other514.2'}), (516, {'res': '$d516.3'}), (518, {'orig': ['$other514.2', '$d516.3'], 'duped': ['$518dup_top_two.4', '$518dup_top_two.5']}), (520, {'index': '$518dup_top_two.5', 'target': '$518dup_top_two.4', 'res': '$520binary_subscr.6'}), (522, {'res': '$grad_d522.7'}), (524, {'value': '$grad_d522.7', 'res': '$524unary_negative.8'}), (526, {'res': '$alpha526.9'}), (528, {'lhs': '$524unary_negative.8', 'rhs': '$alpha526.9', 'res': '$528binary_multiply.10'}), (530, {'lhs': '$520binary_subscr.6', 'rhs': '$528binary_multiply.10', 'res': '$530inplace_add.11'}), (534, {'target': '$other514.2', 'index': '$d516.3', 'value': '$530inplace_add.11'}), (536, {}), (538, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={422: ('$phi514.0', '$phi514.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=540 nstack_initial=1):
AdaptBlockInfo(insts=((540, {'res': '$epoch_of_next_sample540.1'}), (542, {'res': '$i542.2'}), (544, {'orig': ['$epoch_of_next_sample540.1', '$i542.2'], 'duped': ['$544dup_top_two.3', '$544dup_top_two.4']}), (546, {'index': '$544dup_top_two.4', 'target': '$544dup_top_two.3', 'res': '$546binary_subscr.5'}), (548, {'res': '$epochs_per_sample548.6'}), (550, {'res': '$i550.7'}), (552, {'index': '$i550.7', 'target': '$epochs_per_sample548.6', 'res': '$552binary_subscr.8'}), (554, {'lhs': '$546binary_subscr.5', 'rhs': '$552binary_subscr.8', 'res': '$554inplace_add.9'}), (558, {'target': '$epoch_of_next_sample540.1', 'index': '$i542.2', 'value': '$554inplace_add.9'}), (560, {'res': '$560load_global.10'}), (562, {'res': '$n562.11'}), (564, {'res': '$epoch_of_next_negative_sample564.12'}), (566, {'res': '$i566.13'}), (568, {'index': '$i566.13', 'target': '$epoch_of_next_negative_sample564.12', 'res': '$568binary_subscr.14'}), (570, {'lhs': '$n562.11', 'rhs': '$568binary_subscr.14', 'res': '$570binary_subtract.15'}), (572, {'res': '$epochs_per_negative_sample572.16'}), (574, {'res': '$i574.17'}), (576, {'index': '$i574.17', 'target': '$epochs_per_negative_sample572.16', 'res': '$576binary_subscr.18'}), (578, {'lhs': '$570binary_subtract.15', 'rhs': '$576binary_subscr.18', 'res': '$578binary_true_divide.19'}), (580, {'func': '$560load_global.10', 'args': ['$578binary_true_divide.19'], 'res': '$580call_function.20'}), (582, {'value': '$580call_function.20'}), (584, {'res': '$584load_global.21'}), (586, {'res': '$n_neg_samples586.22'}), (588, {'func': '$584load_global.21', 'args': ['$n_neg_samples586.22'], 'res': '$588call_function.23'}), (590, {'value': '$588call_function.23', 'res': '$590get_iter.24'})), outgoing_phis={'$phi592.1': '$590get_iter.24'}, blockstack=(), active_try_block=None, outgoing_edgepushed={592: ('$phi540.0', '$590get_iter.24')})
12-22 13:04 DEBUG    block_infos State(pc_initial=592 nstack_initial=2):
AdaptBlockInfo(insts=((592, {'iterator': '$phi592.1', 'pair': '$592for_iter.2', 'indval': '$592for_iter.3', 'pred': '$592for_iter.4'}),), outgoing_phis={'$phi594.2': '$592for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={780: ('$phi592.0',), 594: ('$phi592.0', '$phi592.1', '$592for_iter.3')})
12-22 13:04 DEBUG    block_infos State(pc_initial=594 nstack_initial=3):
AdaptBlockInfo(insts=((594, {'value': '$phi594.2'}), (596, {'res': '$596load_global.3'}), (598, {'res': '$rng_state598.4'}), (600, {'func': '$596load_global.3', 'args': ['$rng_state598.4'], 'res': '$600call_function.5'}), (602, {'res': '$n_vertices602.6'}), (604, {'lhs': '$600call_function.5', 'rhs': '$n_vertices602.6', 'res': '$604binary_modulo.7'}), (606, {'value': '$604binary_modulo.7'}), (608, {'res': '$tail_embedding608.8'}), (610, {'res': '$k610.9'}), (612, {'index': '$k610.9', 'target': '$tail_embedding608.8', 'res': '$612binary_subscr.10'}), (614, {'value': '$612binary_subscr.10'}), (616, {'res': '$616load_global.11'}), (618, {'res': '$current618.12'}), (620, {'res': '$other620.13'}), (622, {'func': '$616load_global.11', 'args': ['$current618.12', '$other620.13'], 'res': '$622call_function.14'}), (624, {'value': '$622call_function.14'}), (626, {'res': '$dist_squared626.15'}), (628, {'res': '$const628.16'}), (630, {'lhs': '$dist_squared626.15', 'rhs': '$const628.16', 'res': '$630compare_op.17'}), (632, {}), (634, {'pred': '$630compare_op.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={636: ('$phi594.0', '$phi594.1'), 680: ('$phi594.0', '$phi594.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=636 nstack_initial=2):
AdaptBlockInfo(insts=((636, {'res': '$const636.2'}), (638, {'res': '$gamma638.3'}), (640, {'lhs': '$const636.2', 'rhs': '$gamma638.3', 'res': '$640binary_multiply.4'}), (642, {'res': '$b642.5'}), (644, {'lhs': '$640binary_multiply.4', 'rhs': '$b642.5', 'res': '$644binary_multiply.6'}), (646, {'value': '$644binary_multiply.6'}), (648, {'res': '$grad_coeff648.7'}), (650, {'res': '$const650.8'}), (652, {'res': '$dist_squared652.9'}), (654, {'lhs': '$const650.8', 'rhs': '$dist_squared652.9', 'res': '$654binary_add.10'}), (656, {'res': '$a656.11'}), (658, {'res': '$658load_global.12'}), (660, {'res': '$dist_squared660.13'}), (662, {'res': '$b662.14'}), (664, {'func': '$658load_global.12', 'args': ['$dist_squared660.13', '$b662.14'], 'res': '$664call_function.15'}), (666, {'lhs': '$a656.11', 'rhs': '$664call_function.15', 'res': '$666binary_multiply.16'}), (668, {'res': '$const668.17'}), (670, {'lhs': '$666binary_multiply.16', 'rhs': '$const668.17', 'res': '$670binary_add.18'}), (672, {'lhs': '$654binary_add.10', 'rhs': '$670binary_add.18', 'res': '$672binary_multiply.19'}), (674, {'lhs': '$grad_coeff648.7', 'rhs': '$672binary_multiply.19', 'res': '$674inplace_true_divide.20'}), (676, {'value': '$674inplace_true_divide.20'}), (678, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={700: ('$phi636.0', '$phi636.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=680 nstack_initial=2):
AdaptBlockInfo(insts=((680, {'res': '$j680.2'}), (682, {'res': '$k682.3'}), (684, {'lhs': '$j680.2', 'rhs': '$k682.3', 'res': '$684compare_op.4'}), (686, {}), (688, {'pred': '$684compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={690: ('$phi680.0', '$phi680.1'), 696: ('$phi680.0', '$phi680.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=690 nstack_initial=2):
AdaptBlockInfo(insts=((690, {}), (692, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={592: ('$phi690.0', '$phi690.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=696 nstack_initial=2):
AdaptBlockInfo(insts=((696, {'res': '$const696.2'}), (698, {'value': '$const696.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={700: ('$phi696.0', '$phi696.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=700 nstack_initial=2):
AdaptBlockInfo(insts=((700, {'res': '$700load_global.2'}), (702, {'res': '$dim702.3'}), (704, {'func': '$700load_global.2', 'args': ['$dim702.3'], 'res': '$704call_function.4'}), (706, {'value': '$704call_function.4', 'res': '$706get_iter.5'})), outgoing_phis={'$phi708.2': '$706get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={708: ('$phi700.0', '$phi700.1', '$706get_iter.5')})
12-22 13:04 DEBUG    block_infos State(pc_initial=708 nstack_initial=3):
AdaptBlockInfo(insts=((708, {'iterator': '$phi708.2', 'pair': '$708for_iter.3', 'indval': '$708for_iter.4', 'pred': '$708for_iter.5'}),), outgoing_phis={'$phi710.3': '$708for_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={776: ('$phi708.0', '$phi708.1'), 710: ('$phi708.0', '$phi708.1', '$phi708.2', '$708for_iter.4')})
12-22 13:04 DEBUG    block_infos State(pc_initial=710 nstack_initial=4):
AdaptBlockInfo(insts=((710, {'value': '$phi710.3'}), (712, {'res': '$grad_coeff712.4'}), (714, {'res': '$const714.5'}), (716, {'lhs': '$grad_coeff712.4', 'rhs': '$const714.5', 'res': '$716compare_op.6'}), (718, {}), (720, {'pred': '$716compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={722: ('$phi710.0', '$phi710.1', '$phi710.2'), 748: ('$phi710.0', '$phi710.1', '$phi710.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=722 nstack_initial=3):
AdaptBlockInfo(insts=((722, {'res': '$722load_global.3'}), (724, {'res': '$grad_coeff724.4'}), (726, {'res': '$current726.5'}), (728, {'res': '$d728.6'}), (730, {'index': '$d728.6', 'target': '$current726.5', 'res': '$730binary_subscr.7'}), (732, {'res': '$other732.8'}), (734, {'res': '$d734.9'}), (736, {'index': '$d734.9', 'target': '$other732.8', 'res': '$736binary_subscr.10'}), (738, {'lhs': '$730binary_subscr.7', 'rhs': '$736binary_subscr.10', 'res': '$738binary_subtract.11'}), (740, {'lhs': '$grad_coeff724.4', 'rhs': '$738binary_subtract.11', 'res': '$740binary_multiply.12'}), (742, {'func': '$722load_global.3', 'args': ['$740binary_multiply.12'], 'res': '$742call_function.13'}), (744, {'value': '$742call_function.13'}), (746, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={752: ('$phi722.0', '$phi722.1', '$phi722.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=748 nstack_initial=3):
AdaptBlockInfo(insts=((748, {'res': '$const748.3'}), (750, {'value': '$const748.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={752: ('$phi748.0', '$phi748.1', '$phi748.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=752 nstack_initial=3):
AdaptBlockInfo(insts=((752, {'res': '$current752.3'}), (754, {'res': '$d754.4'}), (756, {'orig': ['$current752.3', '$d754.4'], 'duped': ['$756dup_top_two.5', '$756dup_top_two.6']}), (758, {'index': '$756dup_top_two.6', 'target': '$756dup_top_two.5', 'res': '$758binary_subscr.7'}), (760, {'res': '$grad_d760.8'}), (762, {'res': '$alpha762.9'}), (764, {'lhs': '$grad_d760.8', 'rhs': '$alpha762.9', 'res': '$764binary_multiply.10'}), (766, {'lhs': '$758binary_subscr.7', 'rhs': '$764binary_multiply.10', 'res': '$766inplace_add.11'}), (770, {'target': '$current752.3', 'index': '$d754.4', 'value': '$766inplace_add.11'}), (772, {}), (774, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={708: ('$phi752.0', '$phi752.1', '$phi752.2')})
12-22 13:04 DEBUG    block_infos State(pc_initial=776 nstack_initial=2):
AdaptBlockInfo(insts=((776, {}), (778, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={592: ('$phi776.0', '$phi776.1')})
12-22 13:04 DEBUG    block_infos State(pc_initial=780 nstack_initial=1):
AdaptBlockInfo(insts=((780, {'res': '$epoch_of_next_negative_sample780.1'}), (782, {'res': '$i782.2'}), (784, {'orig': ['$epoch_of_next_negative_sample780.1', '$i782.2'], 'duped': ['$784dup_top_two.3', '$784dup_top_two.4']}), (786, {'index': '$784dup_top_two.4', 'target': '$784dup_top_two.3', 'res': '$786binary_subscr.5'}), (788, {'res': '$n_neg_samples788.6'}), (790, {'res': '$epochs_per_negative_sample790.7'}), (792, {'res': '$i792.8'}), (794, {'index': '$i792.8', 'target': '$epochs_per_negative_sample790.7', 'res': '$794binary_subscr.9'}), (796, {'lhs': '$n_neg_samples788.6', 'rhs': '$794binary_subscr.9', 'res': '$796binary_multiply.10'}), (798, {'lhs': '$786binary_subscr.5', 'rhs': '$796binary_multiply.10', 'res': '$798inplace_add.11'}), (802, {'target': '$epoch_of_next_negative_sample780.1', 'index': '$i782.2', 'value': '$798inplace_add.11'}), (804, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi780.0',)})
12-22 13:04 DEBUG    block_infos State(pc_initial=806 nstack_initial=0):
AdaptBlockInfo(insts=((806, {'res': '$const806.0'}), (808, {'retval': '$const806.0', 'castval': '$808return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    head_embedding = arg(0, name=head_embedding) ['head_embedding']
    tail_embedding = arg(1, name=tail_embedding) ['tail_embedding']
    head = arg(2, name=head)                 ['head']
    tail = arg(3, name=tail)                 ['tail']
    n_vertices = arg(4, name=n_vertices)     ['n_vertices']
    epochs_per_sample = arg(5, name=epochs_per_sample) ['epochs_per_sample']
    a = arg(6, name=a)                       ['a']
    b = arg(7, name=b)                       ['b']
    rng_state = arg(8, name=rng_state)       ['rng_state']
    gamma = arg(9, name=gamma)               ['gamma']
    dim = arg(10, name=dim)                  ['dim']
    move_other = arg(11, name=move_other)    ['move_other']
    alpha = arg(12, name=alpha)              ['alpha']
    epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample) ['epochs_per_negative_sample']
    epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample) ['epoch_of_next_negative_sample']
    epoch_of_next_sample = arg(15, name=epoch_of_next_sample) ['epoch_of_next_sample']
    n = arg(16, name=n)                      ['n']
    densmap_flag = arg(17, name=densmap_flag) ['densmap_flag']
    dens_phi_sum = arg(18, name=dens_phi_sum) ['dens_phi_sum']
    dens_re_sum = arg(19, name=dens_re_sum)  ['dens_re_sum']
    dens_re_cov = arg(20, name=dens_re_cov)  ['dens_re_cov']
    dens_re_std = arg(21, name=dens_re_std)  ['dens_re_std']
    dens_re_mean = arg(22, name=dens_re_mean) ['dens_re_mean']
    dens_lambda = arg(23, name=dens_lambda)  ['dens_lambda']
    dens_R = arg(24, name=dens_R)            ['dens_R']
    dens_mu = arg(25, name=dens_mu)          ['dens_mu']
    dens_mu_tot = arg(26, name=dens_mu_tot)  ['dens_mu_tot']
    $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=prange) ['$2load_global.0', '$4load_method.1']
    $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape) ['$8load_attr.3', 'epochs_per_sample']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None) ['$12binary_subscr.5', '$14call_method.6', '$4load_method.1']
    $16get_iter.7 = getiter(value=$14call_method.6) ['$14call_method.6', '$16get_iter.7']
    $phi20.0 = $16get_iter.7                 ['$16get_iter.7', '$phi20.0']
    jump 18                                  []
label 18:
    jump 20                                  []
label 20:
    $20for_iter.1 = iternext(value=$phi20.0) ['$20for_iter.1', '$phi20.0']
    $20for_iter.2 = pair_first(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.2']
    $20for_iter.3 = pair_second(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.3']
    $phi22.1 = $20for_iter.2                 ['$20for_iter.2', '$phi22.1']
    branch $20for_iter.3, 22, 806            ['$20for_iter.3']
label 22:
    i = $phi22.1                             ['$phi22.1', 'i']
    $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>) ['$28binary_subscr.4', 'epoch_of_next_sample', 'i']
    $32compare_op.6 = $28binary_subscr.4 <= n ['$28binary_subscr.4', '$32compare_op.6', 'n']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None) ['$32compare_op.6', '$34pred', 'bool34']
    branch $34pred, 36, 18                   ['$34pred']
label 36:
    j = getitem(value=head, index=i, fn=<built-in function getitem>) ['head', 'i', 'j']
    k = getitem(value=tail, index=i, fn=<built-in function getitem>) ['i', 'k', 'tail']
    current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>) ['current', 'head_embedding', 'j']
    other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>) ['k', 'other', 'tail_embedding']
    $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>)) ['$68load_global.13']
    dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.13', 'current', 'dist_squared', 'other']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None) ['$82pred', 'bool82', 'densmap_flag']
    branch $82pred, 84, 350                  ['$82pred']
label 84:
    $const84.1 = const(float, 1.0)           ['$const84.1']
    $const86.2 = const(float, 1.0)           ['$const86.2']
    $90load_global.4 = global(pow: <built-in function pow>) ['$90load_global.4']
    $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.4', '$96call_function.7', 'b', 'dist_squared']
    $98binary_multiply.8 = a * $96call_function.7 ['$96call_function.7', '$98binary_multiply.8', 'a']
    $100binary_add.9 = $const86.2 + $98binary_multiply.8 ['$100binary_add.9', '$98binary_multiply.8', '$const86.2']
    phi = $const84.1 / $100binary_add.9      ['$100binary_add.9', '$const84.1', 'phi']
    $110binary_multiply.13 = a * b           ['$110binary_multiply.13', 'a', 'b']
    $112load_global.14 = global(pow: <built-in function pow>) ['$112load_global.14']
    $const118.17 = const(int, 1)             ['$const118.17']
    $120binary_subtract.18 = b - $const118.17 ['$120binary_subtract.18', '$const118.17', 'b']
    $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_global.14', '$120binary_subtract.18', '$122call_function.19', 'dist_squared']
    $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19 ['$110binary_multiply.13', '$122call_function.19', '$124binary_multiply.20']
    $const126.21 = const(float, 1.0)         ['$const126.21']
    $130load_global.23 = global(pow: <built-in function pow>) ['$130load_global.23']
    $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$130load_global.23', '$136call_function.26', 'b', 'dist_squared']
    $138binary_multiply.27 = a * $136call_function.26 ['$136call_function.26', '$138binary_multiply.27', 'a']
    $140binary_add.28 = $const126.21 + $138binary_multiply.27 ['$138binary_multiply.27', '$140binary_add.28', '$const126.21']
    dphi_term = $124binary_multiply.20 / $140binary_add.28 ['$124binary_multiply.20', '$140binary_add.28', 'dphi_term']
    $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>) ['$152binary_subscr.33', 'dens_phi_sum', 'k']
    q_jk = phi / $152binary_subscr.33        ['$152binary_subscr.33', 'phi', 'q_jk']
    $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>) ['$164binary_subscr.38', 'dens_phi_sum', 'j']
    q_kj = phi / $164binary_subscr.38        ['$164binary_subscr.38', 'phi', 'q_kj']
    $const172.41 = const(float, 1.0)         ['$const172.41']
    $const176.43 = const(int, 1)             ['$const176.43']
    $180binary_subtract.45 = $const176.43 - phi ['$180binary_subtract.45', '$const176.43', 'phi']
    $182binary_multiply.46 = b * $180binary_subtract.45 ['$180binary_subtract.45', '$182binary_multiply.46', 'b']
    $184binary_subtract.47 = $const172.41 - $182binary_multiply.46 ['$182binary_multiply.46', '$184binary_subtract.47', '$const172.41']
    $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$186load_global.48']
    $188load_method.49 = getattr(value=$186load_global.48, attr=exp) ['$186load_global.48', '$188load_method.49']
    $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>) ['$194binary_subscr.52', 'dens_re_sum', 'k']
    $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None) ['$188load_method.49', '$194binary_subscr.52', '$196call_method.53']
    $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53 ['$184binary_subtract.47', '$196call_method.53', '$198binary_true_divide.54']
    $202binary_add.56 = $198binary_true_divide.54 + dphi_term ['$198binary_true_divide.54', '$202binary_add.56', 'dphi_term']
    drk = q_jk * $202binary_add.56           ['$202binary_add.56', 'drk', 'q_jk']
    $const210.59 = const(float, 1.0)         ['$const210.59']
    $const214.61 = const(int, 1)             ['$const214.61']
    $218binary_subtract.63 = $const214.61 - phi ['$218binary_subtract.63', '$const214.61', 'phi']
    $220binary_multiply.64 = b * $218binary_subtract.63 ['$218binary_subtract.63', '$220binary_multiply.64', 'b']
    $222binary_subtract.65 = $const210.59 - $220binary_multiply.64 ['$220binary_multiply.64', '$222binary_subtract.65', '$const210.59']
    $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$224load_global.66']
    $226load_method.67 = getattr(value=$224load_global.66, attr=exp) ['$224load_global.66', '$226load_method.67']
    $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>) ['$232binary_subscr.70', 'dens_re_sum', 'j']
    $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None) ['$226load_method.67', '$232binary_subscr.70', '$234call_method.71']
    $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71 ['$222binary_subtract.65', '$234call_method.71', '$236binary_true_divide.72']
    $240binary_add.74 = $236binary_true_divide.72 + dphi_term ['$236binary_true_divide.72', '$240binary_add.74', 'dphi_term']
    drj = q_kj * $240binary_add.74           ['$240binary_add.74', 'drj', 'q_kj']
    re_std_sq = dens_re_std * dens_re_std    ['dens_re_std', 'dens_re_std', 're_std_sq']
    $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>) ['$258binary_subscr.81', 'dens_R', 'k']
    $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>) ['$266binary_subscr.85', 'dens_re_sum', 'k']
    $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean ['$266binary_subscr.85', '$270binary_subtract.87', 'dens_re_mean']
    $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87 ['$270binary_subtract.87', '$272binary_multiply.88', 'dens_re_cov']
    $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq ['$272binary_multiply.88', '$276binary_true_divide.90', 're_std_sq']
    weight_k = $258binary_subscr.81 - $276binary_true_divide.90 ['$258binary_subscr.81', '$276binary_true_divide.90', 'weight_k']
    $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>) ['$286binary_subscr.94', 'dens_R', 'j']
    $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>) ['$294binary_subscr.98', 'dens_re_sum', 'j']
    $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean ['$294binary_subscr.98', '$298binary_subtract.100', 'dens_re_mean']
    $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100 ['$298binary_subtract.100', '$300binary_multiply.101', 'dens_re_cov']
    $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq ['$300binary_multiply.101', '$304binary_true_divide.103', 're_std_sq']
    weight_j = $286binary_subscr.94 - $304binary_true_divide.103 ['$286binary_subscr.94', '$304binary_true_divide.103', 'weight_j']
    $314binary_multiply.107 = dens_lambda * dens_mu_tot ['$314binary_multiply.107', 'dens_lambda', 'dens_mu_tot']
    $320binary_multiply.110 = weight_k * drk ['$320binary_multiply.110', 'drk', 'weight_k']
    $326binary_multiply.113 = weight_j * drj ['$326binary_multiply.113', 'drj', 'weight_j']
    $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113 ['$320binary_multiply.110', '$326binary_multiply.113', '$328binary_add.114']
    $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114 ['$314binary_multiply.107', '$328binary_add.114', '$330binary_multiply.115']
    $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>) ['$336binary_subscr.118', 'dens_mu', 'i']
    $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std ['$336binary_subscr.118', '$340binary_multiply.120', 'dens_re_std']
    $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120 ['$330binary_multiply.115', '$340binary_multiply.120', '$342binary_true_divide.121']
    grad_cor_coeff = $342binary_true_divide.121 / n_vertices ['$342binary_true_divide.121', 'grad_cor_coeff', 'n_vertices']
    jump 350                                 []
label 350:
    $const352.2 = const(float, 0.0)          ['$const352.2']
    $354compare_op.3 = dist_squared > $const352.2 ['$354compare_op.3', '$const352.2', 'dist_squared']
    bool358 = global(bool: <class 'bool'>)   ['bool358']
    $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.3', '$358pred', 'bool358']
    branch $358pred, 360, 410                ['$358pred']
label 360:
    $const360.1 = const(float, -2.0)         ['$const360.1']
    $364binary_multiply.3 = $const360.1 * a  ['$364binary_multiply.3', '$const360.1', 'a']
    $368binary_multiply.5 = $364binary_multiply.3 * b ['$364binary_multiply.3', '$368binary_multiply.5', 'b']
    $370load_global.6 = global(pow: <built-in function pow>) ['$370load_global.6']
    $const376.9 = const(float, 1.0)          ['$const376.9']
    $378binary_subtract.10 = b - $const376.9 ['$378binary_subtract.10', '$const376.9', 'b']
    $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None) ['$370load_global.6', '$378binary_subtract.10', '$380call_function.11', 'dist_squared']
    grad_coeff = $368binary_multiply.5 * $380call_function.11 ['$368binary_multiply.5', '$380call_function.11', 'grad_coeff']
    $390load_global.15 = global(pow: <built-in function pow>) ['$390load_global.15']
    $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$390load_global.15', '$396call_function.18', 'b', 'dist_squared']
    $398binary_multiply.19 = a * $396call_function.18 ['$396call_function.18', '$398binary_multiply.19', 'a']
    $const400.20 = const(float, 1.0)         ['$const400.20']
    $402binary_add.21 = $398binary_multiply.19 + $const400.20 ['$398binary_multiply.19', '$402binary_add.21', '$const400.20']
    $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined) ['$402binary_add.21', '$404inplace_true_divide.22', 'grad_coeff']
    grad_coeff = $404inplace_true_divide.22  ['$404inplace_true_divide.22', 'grad_coeff']
    jump 414                                 []
label 410:
    grad_coeff = const(float, 0.0)           ['grad_coeff']
    jump 414                                 []
label 414:
    $414load_global.1 = global(range: <class 'range'>) ['$414load_global.1']
    $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$414load_global.1', '$418call_function.3', 'dim']
    $420get_iter.4 = getiter(value=$418call_function.3) ['$418call_function.3', '$420get_iter.4']
    $phi422.1 = $420get_iter.4               ['$420get_iter.4', '$phi422.1']
    jump 422                                 []
label 422:
    $422for_iter.2 = iternext(value=$phi422.1) ['$422for_iter.2', '$phi422.1']
    $422for_iter.3 = pair_first(value=$422for_iter.2) ['$422for_iter.2', '$422for_iter.3']
    $422for_iter.4 = pair_second(value=$422for_iter.2) ['$422for_iter.2', '$422for_iter.4']
    $phi424.2 = $422for_iter.3               ['$422for_iter.3', '$phi424.2']
    branch $422for_iter.4, 424, 540          ['$422for_iter.4']
label 424:
    d = $phi424.2                            ['$phi424.2', 'd']
    $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>)) ['$426load_global.3']
    $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$434binary_subscr.7', 'current', 'd']
    $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$440binary_subscr.10', 'd', 'other']
    $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10 ['$434binary_subscr.7', '$440binary_subscr.10', '$442binary_subtract.11']
    $444binary_multiply.12 = grad_coeff * $442binary_subtract.11 ['$442binary_subtract.11', '$444binary_multiply.12', 'grad_coeff']
    grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None) ['$426load_global.3', '$444binary_multiply.12', 'grad_d']
    bool454 = global(bool: <class 'bool'>)   ['bool454']
    $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None) ['$454pred', 'bool454', 'densmap_flag']
    branch $454pred, 456, 488                ['$454pred']
label 456:
    $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>)) ['$458load_global.3']
    $const460.4 = const(int, 2)              ['$const460.4']
    $464binary_multiply.6 = $const460.4 * grad_cor_coeff ['$464binary_multiply.6', '$const460.4', 'grad_cor_coeff']
    $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$470binary_subscr.9', 'current', 'd']
    $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$476binary_subscr.12', 'd', 'other']
    $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12 ['$470binary_subscr.9', '$476binary_subscr.12', '$478binary_subtract.13']
    $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13 ['$464binary_multiply.6', '$478binary_subtract.13', '$480binary_multiply.14']
    $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None) ['$458load_global.3', '$480binary_multiply.14', '$482call_function.15']
    $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined) ['$482call_function.15', '$484inplace_add.16', 'grad_d']
    grad_d = $484inplace_add.16              ['$484inplace_add.16', 'grad_d']
    jump 488                                 []
label 488:
    $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$494binary_subscr.6', 'current', 'd']
    $500binary_multiply.9 = grad_d * alpha   ['$500binary_multiply.9', 'alpha', 'grad_d']
    $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$494binary_subscr.6', '$500binary_multiply.9', '$502inplace_add.10']
    current[d] = $502inplace_add.10          ['$502inplace_add.10', 'current', 'd']
    bool512 = global(bool: <class 'bool'>)   ['bool512']
    $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None) ['$512pred', 'bool512', 'move_other']
    branch $512pred, 514, 422                ['$512pred']
label 514:
    $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$520binary_subscr.6', 'd', 'other']
    $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d) ['$524unary_negative.8', 'grad_d']
    $528binary_multiply.10 = $524unary_negative.8 * alpha ['$524unary_negative.8', '$528binary_multiply.10', 'alpha']
    $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined) ['$520binary_subscr.6', '$528binary_multiply.10', '$530inplace_add.11']
    other[d] = $530inplace_add.11            ['$530inplace_add.11', 'd', 'other']
    jump 422                                 []
label 540:
    $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>) ['$546binary_subscr.5', 'epoch_of_next_sample', 'i']
    $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>) ['$552binary_subscr.8', 'epochs_per_sample', 'i']
    $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined) ['$546binary_subscr.5', '$552binary_subscr.8', '$554inplace_add.9']
    epoch_of_next_sample[i] = $554inplace_add.9 ['$554inplace_add.9', 'epoch_of_next_sample', 'i']
    $560load_global.10 = global(int: <class 'int'>) ['$560load_global.10']
    $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>) ['$568binary_subscr.14', 'epoch_of_next_negative_sample', 'i']
    $570binary_subtract.15 = n - $568binary_subscr.14 ['$568binary_subscr.14', '$570binary_subtract.15', 'n']
    $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>) ['$576binary_subscr.18', 'epochs_per_negative_sample', 'i']
    $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18 ['$570binary_subtract.15', '$576binary_subscr.18', '$578binary_true_divide.19']
    n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.10', '$578binary_true_divide.19', 'n_neg_samples']
    $584load_global.21 = global(range: <class 'range'>) ['$584load_global.21']
    $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None) ['$584load_global.21', '$588call_function.23', 'n_neg_samples']
    $590get_iter.24 = getiter(value=$588call_function.23) ['$588call_function.23', '$590get_iter.24']
    $phi592.1 = $590get_iter.24              ['$590get_iter.24', '$phi592.1']
    jump 592                                 []
label 592:
    $592for_iter.2 = iternext(value=$phi592.1) ['$592for_iter.2', '$phi592.1']
    $592for_iter.3 = pair_first(value=$592for_iter.2) ['$592for_iter.2', '$592for_iter.3']
    $592for_iter.4 = pair_second(value=$592for_iter.2) ['$592for_iter.2', '$592for_iter.4']
    $phi594.2 = $592for_iter.3               ['$592for_iter.3', '$phi594.2']
    branch $592for_iter.4, 594, 780          ['$592for_iter.4']
label 594:
    p = $phi594.2                            ['$phi594.2', 'p']
    $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>)) ['$596load_global.3']
    $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$596load_global.3', '$600call_function.5', 'rng_state']
    k = $600call_function.5 % n_vertices     ['$600call_function.5', 'k', 'n_vertices']
    other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>) ['k', 'other', 'tail_embedding']
    $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>)) ['$616load_global.11']
    dist_squared = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.11', 'current', 'dist_squared', 'other']
    $const628.16 = const(float, 0.0)         ['$const628.16']
    $630compare_op.17 = dist_squared > $const628.16 ['$630compare_op.17', '$const628.16', 'dist_squared']
    bool634 = global(bool: <class 'bool'>)   ['bool634']
    $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None) ['$630compare_op.17', '$634pred', 'bool634']
    branch $634pred, 636, 680                ['$634pred']
label 636:
    $const636.2 = const(float, 2.0)          ['$const636.2']
    $640binary_multiply.4 = $const636.2 * gamma ['$640binary_multiply.4', '$const636.2', 'gamma']
    grad_coeff = $640binary_multiply.4 * b   ['$640binary_multiply.4', 'b', 'grad_coeff']
    $const650.8 = const(float, 0.001)        ['$const650.8']
    $654binary_add.10 = $const650.8 + dist_squared ['$654binary_add.10', '$const650.8', 'dist_squared']
    $658load_global.12 = global(pow: <built-in function pow>) ['$658load_global.12']
    $664call_function.15 = call $658load_global.12(dist_squared, b, func=$658load_global.12, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$658load_global.12', '$664call_function.15', 'b', 'dist_squared']
    $666binary_multiply.16 = a * $664call_function.15 ['$664call_function.15', '$666binary_multiply.16', 'a']
    $const668.17 = const(int, 1)             ['$const668.17']
    $670binary_add.18 = $666binary_multiply.16 + $const668.17 ['$666binary_multiply.16', '$670binary_add.18', '$const668.17']
    $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18 ['$654binary_add.10', '$670binary_add.18', '$672binary_multiply.19']
    $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$672binary_multiply.19', '$674inplace_true_divide.20', 'grad_coeff']
    grad_coeff = $674inplace_true_divide.20  ['$674inplace_true_divide.20', 'grad_coeff']
    jump 700                                 []
label 680:
    $684compare_op.4 = j == k                ['$684compare_op.4', 'j', 'k']
    bool688 = global(bool: <class 'bool'>)   ['bool688']
    $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None) ['$684compare_op.4', '$688pred', 'bool688']
    branch $688pred, 690, 696                ['$688pred']
label 690:
    jump 592                                 []
label 696:
    grad_coeff = const(float, 0.0)           ['grad_coeff']
    jump 700                                 []
label 700:
    $700load_global.2 = global(range: <class 'range'>) ['$700load_global.2']
    $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$700load_global.2', '$704call_function.4', 'dim']
    $706get_iter.5 = getiter(value=$704call_function.4) ['$704call_function.4', '$706get_iter.5']
    $phi708.2 = $706get_iter.5               ['$706get_iter.5', '$phi708.2']
    jump 708                                 []
label 708:
    $708for_iter.3 = iternext(value=$phi708.2) ['$708for_iter.3', '$phi708.2']
    $708for_iter.4 = pair_first(value=$708for_iter.3) ['$708for_iter.3', '$708for_iter.4']
    $708for_iter.5 = pair_second(value=$708for_iter.3) ['$708for_iter.3', '$708for_iter.5']
    $phi710.3 = $708for_iter.4               ['$708for_iter.4', '$phi710.3']
    branch $708for_iter.5, 710, 776          ['$708for_iter.5']
label 710:
    d = $phi710.3                            ['$phi710.3', 'd']
    $const714.5 = const(float, 0.0)          ['$const714.5']
    $716compare_op.6 = grad_coeff > $const714.5 ['$716compare_op.6', '$const714.5', 'grad_coeff']
    bool720 = global(bool: <class 'bool'>)   ['bool720']
    $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None) ['$716compare_op.6', '$720pred', 'bool720']
    branch $720pred, 722, 748                ['$720pred']
label 722:
    $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>)) ['$722load_global.3']
    $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$730binary_subscr.7', 'current', 'd']
    $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$736binary_subscr.10', 'd', 'other']
    $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10 ['$730binary_subscr.7', '$736binary_subscr.10', '$738binary_subtract.11']
    $740binary_multiply.12 = grad_coeff * $738binary_subtract.11 ['$738binary_subtract.11', '$740binary_multiply.12', 'grad_coeff']
    grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None) ['$722load_global.3', '$740binary_multiply.12', 'grad_d']
    jump 752                                 []
label 748:
    grad_d = const(int, 0)                   ['grad_d']
    jump 752                                 []
label 752:
    $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$758binary_subscr.7', 'current', 'd']
    $764binary_multiply.10 = grad_d * alpha  ['$764binary_multiply.10', 'alpha', 'grad_d']
    $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined) ['$758binary_subscr.7', '$764binary_multiply.10', '$766inplace_add.11']
    current[d] = $766inplace_add.11          ['$766inplace_add.11', 'current', 'd']
    jump 708                                 []
label 776:
    jump 592                                 []
label 780:
    $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>) ['$786binary_subscr.5', 'epoch_of_next_negative_sample', 'i']
    $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>) ['$794binary_subscr.9', 'epochs_per_negative_sample', 'i']
    $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9 ['$794binary_subscr.9', '$796binary_multiply.10', 'n_neg_samples']
    $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined) ['$786binary_subscr.5', '$796binary_multiply.10', '$798inplace_add.11']
    epoch_of_next_negative_sample[i] = $798inplace_add.11 ['$798inplace_add.11', 'epoch_of_next_negative_sample', 'i']
    jump 18                                  []
label 806:
    $const806.0 = const(NoneType, None)      ['$const806.0']
    $808return_value.1 = cast(value=$const806.0) ['$808return_value.1', '$const806.0']
    return $808return_value.1                ['$808return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block analysis pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block analysis pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block analysis pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block analysis pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block analysis pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block analysis pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block analysis pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block analysis pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block analysis pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block analysis pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block analysis pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block analysis pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block analysis pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block analysis pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block analysis pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block analysis pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block analysis pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block analysis pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared, b, func=$658load_global.12, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block analysis pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block analysis pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block analysis pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block analysis pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block analysis pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block analysis pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: d = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block analysis pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block analysis pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block analysis pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block analysis pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block analysis pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block analysis pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block analysis pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block analysis pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block analysis pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11233850>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$100binary_add.9': [<numba.core.ir.Assign object at 0x000001AF114B6130>],
             '$110binary_multiply.13': [<numba.core.ir.Assign object at 0x000001AF114B6790>],
             '$112load_global.14': [<numba.core.ir.Assign object at 0x000001AF114B6910>],
             '$120binary_subtract.18': [<numba.core.ir.Assign object at 0x000001AF114B6E50>],
             '$122call_function.19': [<numba.core.ir.Assign object at 0x000001AF114DA040>],
             '$124binary_multiply.20': [<numba.core.ir.Assign object at 0x000001AF114DA190>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AF1122DFA0>],
             '$130load_global.23': [<numba.core.ir.Assign object at 0x000001AF114DA5B0>],
             '$136call_function.26': [<numba.core.ir.Assign object at 0x000001AF114DA9A0>],
             '$138binary_multiply.27': [<numba.core.ir.Assign object at 0x000001AF114DAAF0>],
             '$140binary_add.28': [<numba.core.ir.Assign object at 0x000001AF114DAC70>],
             '$14call_method.6': [<numba.core.ir.Assign object at 0x000001AF114D6760>],
             '$152binary_subscr.33': [<numba.core.ir.Assign object at 0x000001AF114DD430>],
             '$164binary_subscr.38': [<numba.core.ir.Assign object at 0x000001AF114DDBB0>],
             '$16get_iter.7': [<numba.core.ir.Assign object at 0x000001AF114D68B0>],
             '$180binary_subtract.45': [<numba.core.ir.Assign object at 0x000001AF11492670>],
             '$182binary_multiply.46': [<numba.core.ir.Assign object at 0x000001AF114927F0>],
             '$184binary_subtract.47': [<numba.core.ir.Assign object at 0x000001AF11492970>],
             '$186load_global.48': [<numba.core.ir.Assign object at 0x000001AF11492AF0>],
             '$188load_method.49': [<numba.core.ir.Assign object at 0x000001AF11492C70>],
             '$194binary_subscr.52': [<numba.core.ir.Assign object at 0x000001AF1148F070>],
             '$196call_method.53': [<numba.core.ir.Assign object at 0x000001AF1148F220>],
             '$198binary_true_divide.54': [<numba.core.ir.Assign object at 0x000001AF1148F370>],
             '$202binary_add.56': [<numba.core.ir.Assign object at 0x000001AF1148F610>],
             '$20for_iter.1': [<numba.core.ir.Assign object at 0x000001AF114D6D30>],
             '$20for_iter.2': [<numba.core.ir.Assign object at 0x000001AF114D6E50>],
             '$20for_iter.3': [<numba.core.ir.Assign object at 0x000001AF114D6F70>],
             '$218binary_subtract.63': [<numba.core.ir.Assign object at 0x000001AF11474D60>],
             '$220binary_multiply.64': [<numba.core.ir.Assign object at 0x000001AF11474A00>],
             '$222binary_subtract.65': [<numba.core.ir.Assign object at 0x000001AF11474BE0>],
             '$224load_global.66': [<numba.core.ir.Assign object at 0x000001AF11474250>],
             '$226load_method.67': [<numba.core.ir.Assign object at 0x000001AF11474700>],
             '$232binary_subscr.70': [<numba.core.ir.Assign object at 0x000001AF11474070>],
             '$234call_method.71': [<numba.core.ir.Assign object at 0x000001AF11474E50>],
             '$236binary_true_divide.72': [<numba.core.ir.Assign object at 0x000001AF114744F0>],
             '$240binary_add.74': [<numba.core.ir.Assign object at 0x000001AF114812B0>],
             '$258binary_subscr.81': [<numba.core.ir.Assign object at 0x000001AEF392F760>],
             '$266binary_subscr.85': [<numba.core.ir.Assign object at 0x000001AF11481460>],
             '$270binary_subtract.87': [<numba.core.ir.Assign object at 0x000001AF11483070>],
             '$272binary_multiply.88': [<numba.core.ir.Assign object at 0x000001AF114831F0>],
             '$276binary_true_divide.90': [<numba.core.ir.Assign object at 0x000001AF11483490>],
             '$286binary_subscr.94': [<numba.core.ir.Assign object at 0x000001AF11483AF0>],
             '$28binary_subscr.4': [<numba.core.ir.Assign object at 0x000001AF114B8610>],
             '$294binary_subscr.98': [<numba.core.ir.Assign object at 0x000001AF11483FD0>],
             '$298binary_subtract.100': [<numba.core.ir.Assign object at 0x000001AF114912B0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AF114D0E50>],
             '$300binary_multiply.101': [<numba.core.ir.Assign object at 0x000001AF11491430>],
             '$304binary_true_divide.103': [<numba.core.ir.Assign object at 0x000001AF114916D0>],
             '$314binary_multiply.107': [<numba.core.ir.Assign object at 0x000001AF11491D30>],
             '$320binary_multiply.110': [<numba.core.ir.Assign object at 0x000001AF11480130>],
             '$326binary_multiply.113': [<numba.core.ir.Assign object at 0x000001AF114804F0>],
             '$328binary_add.114': [<numba.core.ir.Assign object at 0x000001AF11480670>],
             '$32compare_op.6': [<numba.core.ir.Assign object at 0x000001AF114B88B0>],
             '$330binary_multiply.115': [<numba.core.ir.Assign object at 0x000001AF114807F0>],
             '$336binary_subscr.118': [<numba.core.ir.Assign object at 0x000001AF11480BB0>],
             '$340binary_multiply.120': [<numba.core.ir.Assign object at 0x000001AF11480E50>],
             '$342binary_true_divide.121': [<numba.core.ir.Assign object at 0x000001AF11480FD0>],
             '$34pred': [<numba.core.ir.Assign object at 0x000001AF114B8B50>],
             '$354compare_op.3': [<numba.core.ir.Assign object at 0x000001AF114DD2E0>],
             '$358pred': [<numba.core.ir.Assign object at 0x000001AF11492280>],
             '$364binary_multiply.3': [<numba.core.ir.Assign object at 0x000001AF114813D0>],
             '$368binary_multiply.5': [<numba.core.ir.Assign object at 0x000001AF11481DF0>],
             '$370load_global.6': [<numba.core.ir.Assign object at 0x000001AF11483880>],
             '$378binary_subtract.10': [<numba.core.ir.Assign object at 0x000001AF11480940>],
             '$380call_function.11': [<numba.core.ir.Assign object at 0x000001AF11486400>],
             '$390load_global.15': [<numba.core.ir.Assign object at 0x000001AF114869D0>],
             '$396call_function.18': [<numba.core.ir.Assign object at 0x000001AF11486DC0>],
             '$398binary_multiply.19': [<numba.core.ir.Assign object at 0x000001AF11486F10>],
             '$402binary_add.21': [<numba.core.ir.Assign object at 0x000001AF114A9370>],
             '$404inplace_true_divide.22': [<numba.core.ir.Assign object at 0x000001AF114A9310>],
             '$414load_global.1': [<numba.core.ir.Assign object at 0x000001AF114A9F40>],
             '$418call_function.3': [<numba.core.ir.Assign object at 0x000001AF114A9790>],
             '$420get_iter.4': [<numba.core.ir.Assign object at 0x000001AF114A9940>],
             '$422for_iter.2': [<numba.core.ir.Assign object at 0x000001AF114A9C10>],
             '$422for_iter.3': [<numba.core.ir.Assign object at 0x000001AF114A90A0>],
             '$422for_iter.4': [<numba.core.ir.Assign object at 0x000001AF114A50D0>],
             '$426load_global.3': [<numba.core.ir.Assign object at 0x000001AF114A54F0>],
             '$434binary_subscr.7': [<numba.core.ir.Assign object at 0x000001AF114A59D0>],
             '$440binary_subscr.10': [<numba.core.ir.Assign object at 0x000001AF114A5D90>],
             '$442binary_subtract.11': [<numba.core.ir.Assign object at 0x000001AF114A5F10>],
             '$444binary_multiply.12': [<numba.core.ir.Assign object at 0x000001AF114A2460>],
             '$454pred': [<numba.core.ir.Assign object at 0x000001AF114A2040>],
             '$458load_global.3': [<numba.core.ir.Assign object at 0x000001AF114A2160>],
             '$464binary_multiply.6': [<numba.core.ir.Assign object at 0x000001AF114A2EB0>],
             '$470binary_subscr.9': [<numba.core.ir.Assign object at 0x000001AF114A4070>],
             '$476binary_subscr.12': [<numba.core.ir.Assign object at 0x000001AF114A4430>],
             '$478binary_subtract.13': [<numba.core.ir.Assign object at 0x000001AF114A45B0>],
             '$480binary_multiply.14': [<numba.core.ir.Assign object at 0x000001AF114A4730>],
             '$482call_function.15': [<numba.core.ir.Assign object at 0x000001AF114A48E0>],
             '$484inplace_add.16': [<numba.core.ir.Assign object at 0x000001AF114A4A30>],
             '$494binary_subscr.6': [<numba.core.ir.Assign object at 0x000001AF114A4F70>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x000001AF114D0FD0>],
             '$500binary_multiply.9': [<numba.core.ir.Assign object at 0x000001AF114A1370>],
             '$502inplace_add.10': [<numba.core.ir.Assign object at 0x000001AF114A14F0>],
             '$512pred': [<numba.core.ir.Assign object at 0x000001AF114A1970>],
             '$520binary_subscr.6': [<numba.core.ir.Assign object at 0x000001AF114A1D90>],
             '$524unary_negative.8': [<numba.core.ir.Assign object at 0x000001AF11499070>],
             '$528binary_multiply.10': [<numba.core.ir.Assign object at 0x000001AF11499310>],
             '$530inplace_add.11': [<numba.core.ir.Assign object at 0x000001AF11499490>],
             '$546binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AF11499A30>],
             '$552binary_subscr.8': [<numba.core.ir.Assign object at 0x000001AF11499DF0>],
             '$554inplace_add.9': [<numba.core.ir.Assign object at 0x000001AF11499F70>],
             '$560load_global.10': [<numba.core.ir.Assign object at 0x000001AF1149A1F0>],
             '$568binary_subscr.14': [<numba.core.ir.Assign object at 0x000001AF1149A6D0>],
             '$570binary_subtract.15': [<numba.core.ir.Assign object at 0x000001AF1149A850>],
             '$576binary_subscr.18': [<numba.core.ir.Assign object at 0x000001AF1149AC10>],
             '$578binary_true_divide.19': [<numba.core.ir.Assign object at 0x000001AF1149AD90>],
             '$584load_global.21': [<numba.core.ir.Assign object at 0x000001AF1149C1F0>],
             '$588call_function.23': [<numba.core.ir.Assign object at 0x000001AF1149C4C0>],
             '$590get_iter.24': [<numba.core.ir.Assign object at 0x000001AF1149C610>],
             '$592for_iter.2': [<numba.core.ir.Assign object at 0x000001AF1149A9A0>],
             '$592for_iter.3': [<numba.core.ir.Assign object at 0x000001AF1149C310>],
             '$592for_iter.4': [<numba.core.ir.Assign object at 0x000001AF1149C730>],
             '$596load_global.3': [<numba.core.ir.Assign object at 0x000001AF1149CB50>],
             '$600call_function.5': [<numba.core.ir.Assign object at 0x000001AF1149CE20>],
             '$616load_global.11': [<numba.core.ir.Assign object at 0x000001AF1148B790>],
             '$630compare_op.17': [<numba.core.ir.Assign object at 0x000001AF11488070>],
             '$634pred': [<numba.core.ir.Assign object at 0x000001AF11488310>],
             '$640binary_multiply.4': [<numba.core.ir.Assign object at 0x000001AF1148BD60>],
             '$654binary_add.10': [<numba.core.ir.Assign object at 0x000001AF11488C10>],
             '$658load_global.12': [<numba.core.ir.Assign object at 0x000001AF11488EB0>],
             '$664call_function.15': [<numba.core.ir.Assign object at 0x000001AF1147C2E0>],
             '$666binary_multiply.16': [<numba.core.ir.Assign object at 0x000001AF1147C430>],
             '$670binary_add.18': [<numba.core.ir.Assign object at 0x000001AF1147C730>],
             '$672binary_multiply.19': [<numba.core.ir.Assign object at 0x000001AF1147C8B0>],
             '$674inplace_true_divide.20': [<numba.core.ir.Assign object at 0x000001AF1147CA30>],
             '$684compare_op.4': [<numba.core.ir.Assign object at 0x000001AF1147CCD0>],
             '$688pred': [<numba.core.ir.Assign object at 0x000001AF1147CF70>],
             '$68load_global.13': [<numba.core.ir.Assign object at 0x000001AF114C10D0>],
             '$700load_global.2': [<numba.core.ir.Assign object at 0x000001AF114775B0>],
             '$704call_function.4': [<numba.core.ir.Assign object at 0x000001AF11477880>],
             '$706get_iter.5': [<numba.core.ir.Assign object at 0x000001AF114779D0>],
             '$708for_iter.3': [<numba.core.ir.Assign object at 0x000001AF11477D30>],
             '$708for_iter.4': [<numba.core.ir.Assign object at 0x000001AF11477E50>],
             '$708for_iter.5': [<numba.core.ir.Assign object at 0x000001AF11477F70>],
             '$716compare_op.6': [<numba.core.ir.Assign object at 0x000001AF11479610>],
             '$720pred': [<numba.core.ir.Assign object at 0x000001AF114798B0>],
             '$722load_global.3': [<numba.core.ir.Assign object at 0x000001AF11479AF0>],
             '$730binary_subscr.7': [<numba.core.ir.Assign object at 0x000001AF11479FD0>],
             '$736binary_subscr.10': [<numba.core.ir.Assign object at 0x000001AF114733D0>],
             '$738binary_subtract.11': [<numba.core.ir.Assign object at 0x000001AF11473550>],
             '$740binary_multiply.12': [<numba.core.ir.Assign object at 0x000001AF114736D0>],
             '$758binary_subscr.7': [<numba.core.ir.Assign object at 0x000001AF114AE070>],
             '$764binary_multiply.10': [<numba.core.ir.Assign object at 0x000001AF114AE430>],
             '$766inplace_add.11': [<numba.core.ir.Assign object at 0x000001AF114AE5B0>],
             '$786binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AF114AECD0>],
             '$794binary_subscr.9': [<numba.core.ir.Assign object at 0x000001AF112181F0>],
             '$796binary_multiply.10': [<numba.core.ir.Assign object at 0x000001AF11218370>],
             '$798inplace_add.11': [<numba.core.ir.Assign object at 0x000001AF112184F0>],
             '$808return_value.1': [<numba.core.ir.Assign object at 0x000001AF11218790>],
             '$82pred': [<numba.core.ir.Assign object at 0x000001AF114C1970>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x000001AF114D62B0>],
             '$90load_global.4': [<numba.core.ir.Assign object at 0x000001AF114C1A00>],
             '$96call_function.7': [<numba.core.ir.Assign object at 0x000001AF114C1E20>],
             '$98binary_multiply.8': [<numba.core.ir.Assign object at 0x000001AF114C1F70>],
             '$const10.4': [<numba.core.ir.Assign object at 0x000001AF114D6430>],
             '$const118.17': [<numba.core.ir.Assign object at 0x000001AF114B6CD0>],
             '$const126.21': [<numba.core.ir.Assign object at 0x000001AF114DA310>],
             '$const172.41': [<numba.core.ir.Assign object at 0x000001AF11492130>],
             '$const176.43': [<numba.core.ir.Assign object at 0x000001AF114923D0>],
             '$const210.59': [<numba.core.ir.Assign object at 0x000001AF1148FB50>],
             '$const214.61': [<numba.core.ir.Assign object at 0x000001AF1148FDF0>],
             '$const352.2': [<numba.core.ir.Assign object at 0x000001AF114DA820>],
             '$const360.1': [<numba.core.ir.Assign object at 0x000001AF1148FA00>],
             '$const376.9': [<numba.core.ir.Assign object at 0x000001AF11491E80>],
             '$const400.20': [<numba.core.ir.Assign object at 0x000001AF114A9430>],
             '$const460.4': [<numba.core.ir.Assign object at 0x000001AF114A22E0>],
             '$const628.16': [<numba.core.ir.Assign object at 0x000001AF1148BEB0>],
             '$const636.2': [<numba.core.ir.Assign object at 0x000001AF1148B400>],
             '$const650.8': [<numba.core.ir.Assign object at 0x000001AF11488970>],
             '$const668.17': [<numba.core.ir.Assign object at 0x000001AF1147C5B0>],
             '$const714.5': [<numba.core.ir.Assign object at 0x000001AF11479490>],
             '$const806.0': [<numba.core.ir.Assign object at 0x000001AF114AEF40>],
             '$const84.1': [<numba.core.ir.Assign object at 0x000001AF114D8A60>],
             '$const86.2': [<numba.core.ir.Assign object at 0x000001AF114B8730>],
             '$phi20.0': [<numba.core.ir.Assign object at 0x000001AF114D6160>],
             '$phi22.1': [<numba.core.ir.Assign object at 0x000001AF114D6C40>],
             '$phi422.1': [<numba.core.ir.Assign object at 0x000001AF114A9670>],
             '$phi424.2': [<numba.core.ir.Assign object at 0x000001AF114A9AF0>],
             '$phi592.1': [<numba.core.ir.Assign object at 0x000001AF114996D0>],
             '$phi594.2': [<numba.core.ir.Assign object at 0x000001AF1149A430>],
             '$phi708.2': [<numba.core.ir.Assign object at 0x000001AF114771C0>],
             '$phi710.3': [<numba.core.ir.Assign object at 0x000001AF11477C40>],
             'a': [<numba.core.ir.Assign object at 0x000001AF114CA610>],
             'alpha': [<numba.core.ir.Assign object at 0x000001AF114CACD0>],
             'b': [<numba.core.ir.Assign object at 0x000001AF114CA730>],
             'bool34': [<numba.core.ir.Assign object at 0x000001AF114B8A30>],
             'bool358': [<numba.core.ir.Assign object at 0x000001AF114DDA60>],
             'bool454': [<numba.core.ir.Assign object at 0x000001AF114A2850>],
             'bool512': [<numba.core.ir.Assign object at 0x000001AF114A1850>],
             'bool634': [<numba.core.ir.Assign object at 0x000001AF114881F0>],
             'bool688': [<numba.core.ir.Assign object at 0x000001AF1147CE50>],
             'bool720': [<numba.core.ir.Assign object at 0x000001AF11479790>],
             'bool82': [<numba.core.ir.Assign object at 0x000001AF114C1850>],
             'current': [<numba.core.ir.Assign object at 0x000001AF114D8910>],
             'd': [<numba.core.ir.Assign object at 0x000001AF114A5370>,
                   <numba.core.ir.Assign object at 0x000001AF114791F0>],
             'dens_R': [<numba.core.ir.Assign object at 0x000001AF114D0A90>],
             'dens_lambda': [<numba.core.ir.Assign object at 0x000001AF114D0970>],
             'dens_mu': [<numba.core.ir.Assign object at 0x000001AF114D0BB0>],
             'dens_mu_tot': [<numba.core.ir.Assign object at 0x000001AF114D0CD0>],
             'dens_phi_sum': [<numba.core.ir.Assign object at 0x000001AF114D03D0>],
             'dens_re_cov': [<numba.core.ir.Assign object at 0x000001AF114D0610>],
             'dens_re_mean': [<numba.core.ir.Assign object at 0x000001AF114D0850>],
             'dens_re_std': [<numba.core.ir.Assign object at 0x000001AF114D0730>],
             'dens_re_sum': [<numba.core.ir.Assign object at 0x000001AF114D04F0>],
             'densmap_flag': [<numba.core.ir.Assign object at 0x000001AF114D02B0>],
             'dim': [<numba.core.ir.Assign object at 0x000001AF114CAA90>],
             'dist_squared': [<numba.core.ir.Assign object at 0x000001AF114C14C0>,
                              <numba.core.ir.Assign object at 0x000001AF1148BB80>],
             'dphi_term': [<numba.core.ir.Assign object at 0x000001AF114DADF0>],
             'drj': [<numba.core.ir.Assign object at 0x000001AF11481F40>],
             'drk': [<numba.core.ir.Assign object at 0x000001AF1148F790>],
             'epoch_of_next_negative_sample': [<numba.core.ir.Assign object at 0x000001AF114CAF10>],
             'epoch_of_next_sample': [<numba.core.ir.Assign object at 0x000001AF114D0070>],
             'epochs_per_negative_sample': [<numba.core.ir.Assign object at 0x000001AF114CADF0>],
             'epochs_per_sample': [<numba.core.ir.Assign object at 0x000001AF114CA4F0>],
             'gamma': [<numba.core.ir.Assign object at 0x000001AF114CA970>],
             'grad_coeff': [<numba.core.ir.Assign object at 0x000001AF114864F0>,
                            <numba.core.ir.Assign object at 0x000001AF114A9040>,
                            <numba.core.ir.Assign object at 0x000001AF11486760>,
                            <numba.core.ir.Assign object at 0x000001AF11488610>,
                            <numba.core.ir.Assign object at 0x000001AF1147CAF0>,
                            <numba.core.ir.Assign object at 0x000001AF11477310>],
             'grad_cor_coeff': [<numba.core.ir.Assign object at 0x000001AF114862B0>],
             'grad_d': [<numba.core.ir.Assign object at 0x000001AF114A2580>,
                        <numba.core.ir.Assign object at 0x000001AF114A4AF0>,
                        <numba.core.ir.Assign object at 0x000001AF11473880>,
                        <numba.core.ir.Assign object at 0x000001AF11473910>],
             'head': [<numba.core.ir.Assign object at 0x000001AF114CA190>],
             'head_embedding': [<numba.core.ir.Assign object at 0x000001AF125DDAF0>],
             'i': [<numba.core.ir.Assign object at 0x000001AF114B8250>],
             'j': [<numba.core.ir.Assign object at 0x000001AF114B8F10>],
             'k': [<numba.core.ir.Assign object at 0x000001AF114D8430>,
                   <numba.core.ir.Assign object at 0x000001AF1148B0D0>],
             'move_other': [<numba.core.ir.Assign object at 0x000001AF114CABB0>],
             'n': [<numba.core.ir.Assign object at 0x000001AF114D0190>],
             'n_neg_samples': [<numba.core.ir.Assign object at 0x000001AF1149AF40>],
             'n_vertices': [<numba.core.ir.Assign object at 0x000001AF114CA3D0>],
             'other': [<numba.core.ir.Assign object at 0x000001AF114D8DF0>,
                       <numba.core.ir.Assign object at 0x000001AF1148B550>],
             'p': [<numba.core.ir.Assign object at 0x000001AF1149C9D0>],
             'phi': [<numba.core.ir.Assign object at 0x000001AF114B62B0>],
             'q_jk': [<numba.core.ir.Assign object at 0x000001AF114DD5B0>],
             'q_kj': [<numba.core.ir.Assign object at 0x000001AF114DDD30>],
             're_std_sq': [<numba.core.ir.Assign object at 0x000001AF11481670>],
             'rng_state': [<numba.core.ir.Assign object at 0x000001AF114CA850>],
             'tail': [<numba.core.ir.Assign object at 0x000001AF114CA2B0>],
             'tail_embedding': [<numba.core.ir.Assign object at 0x000001AF114CA070>],
             'weight_j': [<numba.core.ir.Assign object at 0x000001AF11491850>],
             'weight_k': [<numba.core.ir.Assign object at 0x000001AF11483610>]})
12-22 13:04 DEBUG    SSA violators {'dist_squared', 'd', 'other', 'grad_d', 'grad_coeff', 'k'}
12-22 13:04 DEBUG    Fix SSA violator on var dist_squared
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    first assign: dist_squared
12-22 13:04 DEBUG    replaced with: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    replaced with: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared, b, func=$658load_global.12, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: d = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {36: [<numba.core.ir.Assign object at 0x000001AF112266A0>],
             594: [<numba.core.ir.Assign object at 0x000001AF11226C40>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='dist_squared' stmt=$96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 84
12-22 13:04 DEBUG    idom 36 from label 84
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='dist_squared' stmt=$122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 84
12-22 13:04 DEBUG    idom 36 from label 84
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='dist_squared' stmt=$136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 84
12-22 13:04 DEBUG    idom 36 from label 84
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    find_def var='dist_squared' stmt=$354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    find_def_from_top label 350
12-22 13:04 DEBUG    idom 36 from label 350
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='dist_squared' stmt=$380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 360
12-22 13:04 DEBUG    idom 350 from label 360
12-22 13:04 DEBUG    find_def_from_bottom label 350
12-22 13:04 DEBUG    find_def_from_top label 350
12-22 13:04 DEBUG    idom 36 from label 350
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='dist_squared' stmt=$396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 360
12-22 13:04 DEBUG    idom 350 from label 360
12-22 13:04 DEBUG    find_def_from_bottom label 350
12-22 13:04 DEBUG    find_def_from_top label 350
12-22 13:04 DEBUG    idom 36 from label 350
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared > $const628.16
12-22 13:04 DEBUG    find_def var='dist_squared' stmt=$630compare_op.17 = dist_squared > $const628.16
12-22 13:04 DEBUG    replaced with: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared
12-22 13:04 DEBUG    find_def var='dist_squared' stmt=$654binary_add.10 = $const650.8 + dist_squared
12-22 13:04 DEBUG    find_def_from_top label 636
12-22 13:04 DEBUG    idom 594 from label 636
12-22 13:04 DEBUG    find_def_from_bottom label 594
12-22 13:04 DEBUG    replaced with: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared, b, func=$658load_global.12, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='dist_squared' stmt=$664call_function.15 = call $658load_global.12(dist_squared, b, func=$658load_global.12, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_top label 636
12-22 13:04 DEBUG    idom 594 from label 636
12-22 13:04 DEBUG    find_def_from_bottom label 594
12-22 13:04 DEBUG    replaced with: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: d = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226AF0>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    Fix SSA violator on var d
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    first assign: d
12-22 13:04 DEBUG    replaced with: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: d = $phi710.3
12-22 13:04 DEBUG    replaced with: d.1 = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF112262E0>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {424: [<numba.core.ir.Assign object at 0x000001AF11226AC0>],
             710: [<numba.core.ir.Assign object at 0x000001AF11226670>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='d' stmt=$434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='d' stmt=$440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='d' stmt=$470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 456
12-22 13:04 DEBUG    idom 424 from label 456
12-22 13:04 DEBUG    find_def_from_bottom label 424
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='d' stmt=$476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 456
12-22 13:04 DEBUG    idom 424 from label 456
12-22 13:04 DEBUG    find_def_from_bottom label 424
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='d' stmt=$494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 488
12-22 13:04 DEBUG    idom 424 from label 488
12-22 13:04 DEBUG    find_def_from_bottom label 424
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    find_def var='d' stmt=current[d] = $502inplace_add.10
12-22 13:04 DEBUG    find_def_from_top label 488
12-22 13:04 DEBUG    idom 424 from label 488
12-22 13:04 DEBUG    find_def_from_bottom label 424
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='d' stmt=$520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 514
12-22 13:04 DEBUG    idom 488 from label 514
12-22 13:04 DEBUG    find_def_from_bottom label 488
12-22 13:04 DEBUG    find_def_from_top label 488
12-22 13:04 DEBUG    idom 424 from label 488
12-22 13:04 DEBUG    find_def_from_bottom label 424
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    find_def var='d' stmt=other[d] = $530inplace_add.11
12-22 13:04 DEBUG    find_def_from_top label 514
12-22 13:04 DEBUG    idom 488 from label 514
12-22 13:04 DEBUG    find_def_from_bottom label 488
12-22 13:04 DEBUG    find_def_from_top label 488
12-22 13:04 DEBUG    idom 424 from label 488
12-22 13:04 DEBUG    find_def_from_bottom label 424
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='d' stmt=$730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 722
12-22 13:04 DEBUG    idom 710 from label 722
12-22 13:04 DEBUG    find_def_from_bottom label 710
12-22 13:04 DEBUG    replaced with: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='d' stmt=$736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 722
12-22 13:04 DEBUG    idom 710 from label 722
12-22 13:04 DEBUG    find_def_from_bottom label 710
12-22 13:04 DEBUG    replaced with: $736binary_subscr.10 = getitem(value=other, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='d' stmt=$758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 752
12-22 13:04 DEBUG    idom 710 from label 752
12-22 13:04 DEBUG    find_def_from_bottom label 710
12-22 13:04 DEBUG    replaced with: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $766inplace_add.11
12-22 13:04 DEBUG    find_def var='d' stmt=current[d] = $766inplace_add.11
12-22 13:04 DEBUG    find_def_from_top label 752
12-22 13:04 DEBUG    idom 710 from label 752
12-22 13:04 DEBUG    find_def_from_bottom label 710
12-22 13:04 DEBUG    replaced with: current[d.1] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11529790>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    Fix SSA violator on var other
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    first assign: other
12-22 13:04 DEBUG    replaced with: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    replaced with: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF125DD940>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {36: [<numba.core.ir.Assign object at 0x000001AF11226FD0>],
             594: [<numba.core.ir.Assign object at 0x000001AF11226B20>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='other' stmt=dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='other' stmt=$440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 424
12-22 13:04 DEBUG    idom 422 from label 424
12-22 13:04 DEBUG    find_def_from_bottom label 422
12-22 13:04 DEBUG    find_def_from_top label 422
12-22 13:04 DEBUG    idom 414 from label 422
12-22 13:04 DEBUG    find_def_from_bottom label 414
12-22 13:04 DEBUG    find_def_from_top label 414
12-22 13:04 DEBUG    idom 350 from label 414
12-22 13:04 DEBUG    find_def_from_bottom label 350
12-22 13:04 DEBUG    find_def_from_top label 350
12-22 13:04 DEBUG    idom 36 from label 350
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='other' stmt=$476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 456
12-22 13:04 DEBUG    idom 424 from label 456
12-22 13:04 DEBUG    find_def_from_bottom label 424
12-22 13:04 DEBUG    find_def_from_top label 424
12-22 13:04 DEBUG    idom 422 from label 424
12-22 13:04 DEBUG    find_def_from_bottom label 422
12-22 13:04 DEBUG    find_def_from_top label 422
12-22 13:04 DEBUG    idom 414 from label 422
12-22 13:04 DEBUG    find_def_from_bottom label 414
12-22 13:04 DEBUG    find_def_from_top label 414
12-22 13:04 DEBUG    idom 350 from label 414
12-22 13:04 DEBUG    find_def_from_bottom label 350
12-22 13:04 DEBUG    find_def_from_top label 350
12-22 13:04 DEBUG    idom 36 from label 350
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='other' stmt=$520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 514
12-22 13:04 DEBUG    idom 488 from label 514
12-22 13:04 DEBUG    find_def_from_bottom label 488
12-22 13:04 DEBUG    find_def_from_top label 488
12-22 13:04 DEBUG    idom 424 from label 488
12-22 13:04 DEBUG    find_def_from_bottom label 424
12-22 13:04 DEBUG    find_def_from_top label 424
12-22 13:04 DEBUG    idom 422 from label 424
12-22 13:04 DEBUG    find_def_from_bottom label 422
12-22 13:04 DEBUG    find_def_from_top label 422
12-22 13:04 DEBUG    idom 414 from label 422
12-22 13:04 DEBUG    find_def_from_bottom label 414
12-22 13:04 DEBUG    find_def_from_top label 414
12-22 13:04 DEBUG    idom 350 from label 414
12-22 13:04 DEBUG    find_def_from_bottom label 350
12-22 13:04 DEBUG    find_def_from_top label 350
12-22 13:04 DEBUG    idom 36 from label 350
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    find_def var='other' stmt=other[d] = $530inplace_add.11
12-22 13:04 DEBUG    find_def_from_top label 514
12-22 13:04 DEBUG    idom 488 from label 514
12-22 13:04 DEBUG    find_def_from_bottom label 488
12-22 13:04 DEBUG    find_def_from_top label 488
12-22 13:04 DEBUG    idom 424 from label 488
12-22 13:04 DEBUG    find_def_from_bottom label 424
12-22 13:04 DEBUG    find_def_from_top label 424
12-22 13:04 DEBUG    idom 422 from label 424
12-22 13:04 DEBUG    find_def_from_bottom label 422
12-22 13:04 DEBUG    find_def_from_top label 422
12-22 13:04 DEBUG    idom 414 from label 422
12-22 13:04 DEBUG    find_def_from_bottom label 414
12-22 13:04 DEBUG    find_def_from_top label 414
12-22 13:04 DEBUG    idom 350 from label 414
12-22 13:04 DEBUG    find_def_from_bottom label 350
12-22 13:04 DEBUG    find_def_from_top label 350
12-22 13:04 DEBUG    idom 36 from label 350
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def var='other' stmt=dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    replaced with: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='other' stmt=$736binary_subscr.10 = getitem(value=other, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 722
12-22 13:04 DEBUG    idom 710 from label 722
12-22 13:04 DEBUG    find_def_from_bottom label 710
12-22 13:04 DEBUG    find_def_from_top label 710
12-22 13:04 DEBUG    idom 708 from label 710
12-22 13:04 DEBUG    find_def_from_bottom label 708
12-22 13:04 DEBUG    find_def_from_top label 708
12-22 13:04 DEBUG    idom 700 from label 708
12-22 13:04 DEBUG    find_def_from_bottom label 700
12-22 13:04 DEBUG    find_def_from_top label 700
12-22 13:04 DEBUG    idom 594 from label 700
12-22 13:04 DEBUG    find_def_from_bottom label 594
12-22 13:04 DEBUG    replaced with: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    Fix SSA violator on var grad_d
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    first assign: grad_d
12-22 13:04 DEBUG    replaced with: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:04 DEBUG    replaced with: grad_d.1 = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    replaced with: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:04 DEBUG    replaced with: grad_d.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218970>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {424: [<numba.core.ir.Assign object at 0x000001AF11226820>],
             456: [<numba.core.ir.Assign object at 0x000001AF11226D00>],
             722: [<numba.core.ir.Assign object at 0x000001AF11226880>],
             748: [<numba.core.ir.Assign object at 0x000001AF1122DDC0>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='grad_d' stmt=$484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def_from_top label 456
12-22 13:04 DEBUG    idom 424 from label 456
12-22 13:04 DEBUG    find_def_from_bottom label 424
12-22 13:04 DEBUG    on stmt: grad_d.1 = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:04 DEBUG    find_def var='grad_d' stmt=$500binary_multiply.9 = grad_d * alpha
12-22 13:04 DEBUG    find_def_from_top label 488
12-22 13:04 DEBUG    insert phi node grad_d.4 = phi(incoming_values=[], incoming_blocks=[]) at 488
12-22 13:04 DEBUG    find_def_from_bottom label 424
12-22 13:04 DEBUG    incoming_def grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_bottom label 456
12-22 13:04 DEBUG    incoming_def grad_d.1 = $484inplace_add.16
12-22 13:04 DEBUG    replaced with: $500binary_multiply.9 = grad_d.4 * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:04 DEBUG    find_def var='grad_d' stmt=$524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:04 DEBUG    find_def_from_top label 514
12-22 13:04 DEBUG    idom 488 from label 514
12-22 13:04 DEBUG    find_def_from_bottom label 488
12-22 13:04 DEBUG    replaced with: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: grad_d.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:04 DEBUG    find_def var='grad_d' stmt=$764binary_multiply.10 = grad_d * alpha
12-22 13:04 DEBUG    find_def_from_top label 752
12-22 13:04 DEBUG    insert phi node grad_d.5 = phi(incoming_values=[], incoming_blocks=[]) at 752
12-22 13:04 DEBUG    find_def_from_bottom label 722
12-22 13:04 DEBUG    incoming_def grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    find_def_from_bottom label 748
12-22 13:04 DEBUG    incoming_def grad_d.3 = const(int, 0)
12-22 13:04 DEBUG    replaced with: $764binary_multiply.10 = grad_d.5 * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF125DDA60>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    Fix SSA violator on var grad_coeff
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    first assign: grad_coeff
12-22 13:04 DEBUG    replaced with: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:04 DEBUG    replaced with: grad_coeff.1 = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    replaced with: grad_coeff.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d.1 = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: grad_d.4 = phi(incoming_values=[Var(grad_d, layouts.py:142), Var(grad_d.1, layouts.py:147)], incoming_blocks=[424, 456])
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d.4 * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:04 DEBUG    replaced with: grad_coeff.3 = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:04 DEBUG    replaced with: grad_coeff.4 = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:04 DEBUG    replaced with: grad_coeff.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: grad_d.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: grad_d.5 = phi(incoming_values=[Var(grad_d.2, layouts.py:178), Var(grad_d.3, layouts.py:180)], incoming_blocks=[722, 748])
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d.5 * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11226280>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {360: [<numba.core.ir.Assign object at 0x000001AF11226E20>,
                   <numba.core.ir.Assign object at 0x000001AF11226E80>],
             410: [<numba.core.ir.Assign object at 0x000001AF11226B50>],
             636: [<numba.core.ir.Assign object at 0x000001AF125DD640>,
                   <numba.core.ir.Assign object at 0x000001AF1122D7F0>],
             696: [<numba.core.ir.Assign object at 0x000001AF1122D430>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='grad_coeff' stmt=$404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff.1 = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: grad_coeff.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    find_def var='grad_coeff' stmt=$444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:04 DEBUG    find_def_from_top label 424
12-22 13:04 DEBUG    idom 422 from label 424
12-22 13:04 DEBUG    find_def_from_bottom label 422
12-22 13:04 DEBUG    find_def_from_top label 422
12-22 13:04 DEBUG    idom 414 from label 422
12-22 13:04 DEBUG    find_def_from_bottom label 414
12-22 13:04 DEBUG    find_def_from_top label 414
12-22 13:04 DEBUG    insert phi node grad_coeff.6 = phi(incoming_values=[], incoming_blocks=[]) at 414
12-22 13:04 DEBUG    find_def_from_bottom label 360
12-22 13:04 DEBUG    incoming_def grad_coeff.1 = $404inplace_true_divide.22
12-22 13:04 DEBUG    find_def_from_bottom label 410
12-22 13:04 DEBUG    incoming_def grad_coeff.2 = const(float, 0.0)
12-22 13:04 DEBUG    replaced with: $444binary_multiply.12 = grad_coeff.6 * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d.1 = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: grad_d.4 = phi(incoming_values=[Var(grad_d, layouts.py:142), Var(grad_d.1, layouts.py:147)], incoming_blocks=[424, 456])
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d.4 * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff.3 = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    find_def var='grad_coeff' stmt=$674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    replaced with: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff.4 = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: grad_coeff.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    find_def var='grad_coeff' stmt=$716compare_op.6 = grad_coeff > $const714.5
12-22 13:04 DEBUG    find_def_from_top label 710
12-22 13:04 DEBUG    idom 708 from label 710
12-22 13:04 DEBUG    find_def_from_bottom label 708
12-22 13:04 DEBUG    find_def_from_top label 708
12-22 13:04 DEBUG    idom 700 from label 708
12-22 13:04 DEBUG    find_def_from_bottom label 700
12-22 13:04 DEBUG    find_def_from_top label 700
12-22 13:04 DEBUG    insert phi node grad_coeff.7 = phi(incoming_values=[], incoming_blocks=[]) at 700
12-22 13:04 DEBUG    find_def_from_bottom label 696
12-22 13:04 DEBUG    incoming_def grad_coeff.5 = const(float, 0.0)
12-22 13:04 DEBUG    find_def_from_bottom label 636
12-22 13:04 DEBUG    incoming_def grad_coeff.4 = $674inplace_true_divide.20
12-22 13:04 DEBUG    replaced with: $716compare_op.6 = grad_coeff.7 > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    find_def var='grad_coeff' stmt=$740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:04 DEBUG    find_def_from_top label 722
12-22 13:04 DEBUG    idom 710 from label 722
12-22 13:04 DEBUG    find_def_from_bottom label 710
12-22 13:04 DEBUG    find_def_from_top label 710
12-22 13:04 DEBUG    idom 708 from label 710
12-22 13:04 DEBUG    find_def_from_bottom label 708
12-22 13:04 DEBUG    find_def_from_top label 708
12-22 13:04 DEBUG    idom 700 from label 708
12-22 13:04 DEBUG    find_def_from_bottom label 700
12-22 13:04 DEBUG    replaced with: $740binary_multiply.12 = grad_coeff.7 * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: grad_d.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: grad_d.5 = phi(incoming_values=[Var(grad_d.2, layouts.py:178), Var(grad_d.3, layouts.py:180)], incoming_blocks=[722, 748])
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d.5 * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1122D8B0>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    Fix SSA violator on var k
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    first assign: k
12-22 13:04 DEBUG    replaced with: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff.1 = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: grad_coeff.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: grad_coeff.6 = phi(incoming_values=[Var(grad_coeff.1, layouts.py:137), Var(grad_coeff.2, layouts.py:139)], incoming_blocks=[360, 410])
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff.6 * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d.1 = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: grad_d.4 = phi(incoming_values=[Var(grad_d, layouts.py:142), Var(grad_d.1, layouts.py:147)], incoming_blocks=[424, 456])
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d.4 * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    replaced with: k.1 = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff.3 = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff.4 = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: grad_coeff.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: grad_coeff.7 = phi(incoming_values=[Var(grad_coeff.5, layouts.py:174), Var(grad_coeff.4, layouts.py:168)], incoming_blocks=[696, 636])
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff.7 > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff.7 * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: grad_d.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: grad_d.5 = phi(incoming_values=[Var(grad_d.2, layouts.py:178), Var(grad_d.3, layouts.py:180)], incoming_blocks=[722, 748])
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d.5 * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF11218EE0>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {36: [<numba.core.ir.Assign object at 0x000001AF1122DEB0>],
             594: [<numba.core.ir.Assign object at 0x000001AF11226EB0>]})
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:04 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:04 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:04 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:04 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:04 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:04 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:04 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:04 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:04 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:04 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:04 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:04 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:04 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:04 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:04 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:04 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:04 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:04 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:04 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:04 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:04 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:04 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:04 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:04 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:04 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:04 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:04 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:04 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:04 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 20
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:04 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:04 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:04 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: i = $phi22.1
12-22 13:04 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:04 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='k' stmt=other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:04 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:04 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:04 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:04 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:04 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:04 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:04 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:04 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:04 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='k' stmt=$152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 84
12-22 13:04 DEBUG    idom 36 from label 84
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:04 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:04 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:04 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:04 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:04 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:04 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='k' stmt=$194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 84
12-22 13:04 DEBUG    idom 36 from label 84
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:04 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:04 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:04 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:04 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:04 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:04 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:04 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:04 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:04 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:04 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:04 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:04 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='k' stmt=$258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 84
12-22 13:04 DEBUG    idom 36 from label 84
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='k' stmt=$266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def_from_top label 84
12-22 13:04 DEBUG    idom 36 from label 84
12-22 13:04 DEBUG    find_def_from_bottom label 36
12-22 13:04 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:04 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:04 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:04 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:04 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:04 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:04 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:04 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:04 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:04 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:04 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:04 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:04 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:04 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:04 DEBUG    on stmt: jump 350
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:04 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:04 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:04 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:04 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:04 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:04 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:04 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:04 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:04 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff.1 = $404inplace_true_divide.22
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: grad_coeff.2 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 414
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: grad_coeff.6 = phi(incoming_values=[Var(grad_coeff.1, layouts.py:137), Var(grad_coeff.2, layouts.py:139)], incoming_blocks=[360, 410])
12-22 13:04 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:04 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:04 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:04 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: d = $phi424.2
12-22 13:04 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:04 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff.6 * $442binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:04 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:04 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:04 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:04 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_d.1 = $484inplace_add.16
12-22 13:04 DEBUG    on stmt: jump 488
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: grad_d.4 = phi(incoming_values=[Var(grad_d, layouts.py:142), Var(grad_d.1, layouts.py:147)], incoming_blocks=[424, 456])
12-22 13:04 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $500binary_multiply.9 = grad_d.4 * alpha
12-22 13:04 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:04 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
12-22 13:04 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:04 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 809
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:04 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:04 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:04 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:04 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:04 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:04 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:04 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:04 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: p = $phi594.2
12-22 13:04 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:04 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: k.1 = $600call_function.5 % n_vertices
12-22 13:04 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    find_def var='k' stmt=other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:04 DEBUG    replaced with: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:04 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:04 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:04 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:04 DEBUG    on stmt: grad_coeff.3 = $640binary_multiply.4 * b
12-22 13:04 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:04 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:04 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:04 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:04 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:04 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:04 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:04 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: grad_coeff.4 = $674inplace_true_divide.20
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:04 DEBUG    find_def var='k' stmt=$684compare_op.4 = j == k
12-22 13:04 DEBUG    find_def_from_top label 680
12-22 13:04 DEBUG    idom 594 from label 680
12-22 13:04 DEBUG    find_def_from_bottom label 594
12-22 13:04 DEBUG    replaced with: $684compare_op.4 = j == k.1
12-22 13:04 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: grad_coeff.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: jump 700
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: grad_coeff.7 = phi(incoming_values=[Var(grad_coeff.5, layouts.py:174), Var(grad_coeff.4, layouts.py:168)], incoming_blocks=[696, 636])
12-22 13:04 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:04 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:04 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:04 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:04 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:04 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:04 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:04 DEBUG    on stmt: $716compare_op.6 = grad_coeff.7 > $const714.5
12-22 13:04 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:04 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:04 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff.7 * $738binary_subtract.11
12-22 13:04 DEBUG    on stmt: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: grad_d.3 = const(int, 0)
12-22 13:04 DEBUG    on stmt: jump 752
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: grad_d.5 = phi(incoming_values=[Var(grad_d.2, layouts.py:178), Var(grad_d.3, layouts.py:180)], incoming_blocks=[722, 748])
12-22 13:04 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $764binary_multiply.10 = grad_d.5 * alpha
12-22 13:04 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 708
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 808
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:04 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:04 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:04 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:04 DEBUG    on stmt: jump 807
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:04 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:04 DEBUG    on stmt: return $808return_value.1
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 18
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 592
12-22 13:04 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:04 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF11226490>
12-22 13:04 DEBUG    on stmt: jump 422
12-22 13:04 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=8)
           2	LOAD_FAST(arg=0, lineno=22)
           4	LOAD_CONST(arg=1, lineno=22)
           6	COMPARE_OP(arg=4, lineno=22)
           8	POP_JUMP_IF_FALSE(arg=14, lineno=22)
          10	LOAD_CONST(arg=1, lineno=23)
          12	RETURN_VALUE(arg=None, lineno=23)
>         14	LOAD_FAST(arg=0, lineno=24)
          16	LOAD_CONST(arg=2, lineno=24)
          18	COMPARE_OP(arg=0, lineno=24)
          20	POP_JUMP_IF_FALSE(arg=26, lineno=24)
          22	LOAD_CONST(arg=2, lineno=25)
          24	RETURN_VALUE(arg=None, lineno=25)
>         26	LOAD_FAST(arg=0, lineno=27)
          28	RETURN_VALUE(arg=None, lineno=27)
          30	LOAD_CONST(arg=3, lineno=27)
          32	RETURN_VALUE(arg=None, lineno=27)
12-22 13:04 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=8)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=22)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=22)
12-22 13:04 DEBUG    stack ['$val2.0']
12-22 13:04 DEBUG    dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=22)
12-22 13:04 DEBUG    stack ['$val2.0', '$const4.1']
12-22 13:04 DEBUG    dispatch pc=8, inst=POP_JUMP_IF_FALSE(arg=14, lineno=22)
12-22 13:04 DEBUG    stack ['$6compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=10 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=23)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=23)
12-22 13:04 DEBUG    stack ['$const10.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=14 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=14 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=24)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=16, inst=LOAD_CONST(arg=2, lineno=24)
12-22 13:04 DEBUG    stack ['$val14.0']
12-22 13:04 DEBUG    dispatch pc=18, inst=COMPARE_OP(arg=0, lineno=24)
12-22 13:04 DEBUG    stack ['$val14.0', '$const16.1']
12-22 13:04 DEBUG    dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=26, lineno=24)
12-22 13:04 DEBUG    stack ['$18compare_op.2']
12-22 13:04 DEBUG    end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=(), blockstack=(), npush=0)]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=22 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=25)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=25)
12-22 13:04 DEBUG    stack ['$const22.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    pending: deque([State(pc_initial=26 nstack_initial=0)])
12-22 13:04 DEBUG    stack: []
12-22 13:04 DEBUG    state.pc_initial: State(pc_initial=26 nstack_initial=0)
12-22 13:04 DEBUG    dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=27)
12-22 13:04 DEBUG    stack []
12-22 13:04 DEBUG    dispatch pc=28, inst=RETURN_VALUE(arg=None, lineno=27)
12-22 13:04 DEBUG    stack ['$val26.0']
12-22 13:04 DEBUG    end state. edges=[]
12-22 13:04 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:04 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set()})
12-22 13:04 DEBUG    defmap: {}
12-22 13:04 DEBUG    phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    changing phismap: defaultdict(<class 'set'>, {})
12-22 13:04 DEBUG    keep phismap: {}
12-22 13:04 DEBUG    new_out: defaultdict(<class 'dict'>, {})
12-22 13:04 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:04 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$val2.0'}), (4, {'res': '$const4.1'}), (6, {'lhs': '$val2.0', 'rhs': '$const4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$const10.0'}), (12, {'retval': '$const10.0', 'castval': '$12return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$val14.0'}), (16, {'res': '$const16.1'}), (18, {'lhs': '$val14.0', 'rhs': '$const16.1', 'res': '$18compare_op.2'}), (20, {'pred': '$18compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 26: ()})
12-22 13:04 DEBUG    block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$const22.0'}), (24, {'retval': '$const22.0', 'castval': '$24return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$val26.0'}), (28, {'retval': '$val26.0', 'castval': '$28return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:04 DEBUG    label 0:
    val = arg(0, name=val)                   ['val']
    $const4.1 = const(float, 4.0)            ['$const4.1']
    $6compare_op.2 = val > $const4.1         ['$6compare_op.2', '$const4.1', 'val']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, layouts.py:22),), kws=(), vararg=None, varkwarg=None, target=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
label 10:
    $const10.0 = const(float, 4.0)           ['$const10.0']
    $12return_value.1 = cast(value=$const10.0) ['$12return_value.1', '$const10.0']
    return $12return_value.1                 ['$12return_value.1']
label 14:
    $const16.1 = const(float, -4.0)          ['$const16.1']
    $18compare_op.2 = val < $const16.1       ['$18compare_op.2', '$const16.1', 'val']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, layouts.py:24),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$20pred', 'bool20']
    branch $20pred, 22, 26                   ['$20pred']
label 22:
    $const22.0 = const(float, -4.0)          ['$const22.0']
    $24return_value.1 = cast(value=$const22.0) ['$24return_value.1', '$const22.0']
    return $24return_value.1                 ['$24return_value.1']
label 26:
    $28return_value.1 = cast(value=val)      ['$28return_value.1', 'val']
    return $28return_value.1                 ['$28return_value.1']

12-22 13:04 DEBUG    ==== SSA block analysis pass on 0
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11363F10>
12-22 13:04 DEBUG    on stmt: val = arg(0, name=val)
12-22 13:04 DEBUG    on stmt: $const4.1 = const(float, 4.0)
12-22 13:04 DEBUG    on stmt: $6compare_op.2 = val > $const4.1
12-22 13:04 DEBUG    on stmt: bool8 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, layouts.py:22),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $8pred, 10, 14
12-22 13:04 DEBUG    ==== SSA block analysis pass on 10
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11363F10>
12-22 13:04 DEBUG    on stmt: $const10.0 = const(float, 4.0)
12-22 13:04 DEBUG    on stmt: $12return_value.1 = cast(value=$const10.0)
12-22 13:04 DEBUG    on stmt: return $12return_value.1
12-22 13:04 DEBUG    ==== SSA block analysis pass on 14
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11363F10>
12-22 13:04 DEBUG    on stmt: $const16.1 = const(float, -4.0)
12-22 13:04 DEBUG    on stmt: $18compare_op.2 = val < $const16.1
12-22 13:04 DEBUG    on stmt: bool20 = global(bool: <class 'bool'>)
12-22 13:04 DEBUG    on stmt: $20pred = call bool20($18compare_op.2, func=bool20, args=(Var($18compare_op.2, layouts.py:24),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:04 DEBUG    on stmt: branch $20pred, 22, 26
12-22 13:04 DEBUG    ==== SSA block analysis pass on 22
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11363F10>
12-22 13:04 DEBUG    on stmt: $const22.0 = const(float, -4.0)
12-22 13:04 DEBUG    on stmt: $24return_value.1 = cast(value=$const22.0)
12-22 13:04 DEBUG    on stmt: return $24return_value.1
12-22 13:04 DEBUG    ==== SSA block analysis pass on 26
12-22 13:04 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF11363F10>
12-22 13:04 DEBUG    on stmt: $28return_value.1 = cast(value=val)
12-22 13:04 DEBUG    on stmt: return $28return_value.1
12-22 13:04 DEBUG    defs defaultdict(<class 'list'>,
            {'$12return_value.1': [<numba.core.ir.Assign object at 0x000001AF11229640>],
             '$18compare_op.2': [<numba.core.ir.Assign object at 0x000001AF1120FD90>],
             '$20pred': [<numba.core.ir.Assign object at 0x000001AF1120D7C0>],
             '$24return_value.1': [<numba.core.ir.Assign object at 0x000001AF1120D9D0>],
             '$28return_value.1': [<numba.core.ir.Assign object at 0x000001AF11202370>],
             '$6compare_op.2': [<numba.core.ir.Assign object at 0x000001AF1136CAF0>],
             '$8pred': [<numba.core.ir.Assign object at 0x000001AF11363040>],
             '$const10.0': [<numba.core.ir.Assign object at 0x000001AF11229D00>],
             '$const16.1': [<numba.core.ir.Assign object at 0x000001AF1120F790>],
             '$const22.0': [<numba.core.ir.Assign object at 0x000001AF1120DAC0>],
             '$const4.1': [<numba.core.ir.Assign object at 0x000001AF1136C970>],
             'bool20': [<numba.core.ir.Assign object at 0x000001AF1120D340>],
             'bool8': [<numba.core.ir.Assign object at 0x000001AF11363580>],
             'val': [<numba.core.ir.Assign object at 0x000001AF1136C6D0>]})
12-22 13:04 DEBUG    SSA violators set()
12-22 13:05 INFO     global n_training: 937
12-22 13:05 INFO     global n_test: 313
12-22 13:06 INFO     >> Basalt Global Model Train accuracy: 0.097202
12-22 13:06 INFO     >> Basalt Global Model Test accuracy: 0.100000
12-22 13:06 INFO     >> Basalt Global Model Train loss: 2.303360
12-22 13:06 INFO     ######################in comm round:###############################1
12-22 13:06 INFO     Training network 0. n_training: 2456
12-22 13:06 INFO     >> Training accuracy: 0.007401
12-22 13:06 INFO     >> Test accuracy: 0.100000
12-22 13:06 INFO      ** Training complete **
12-22 13:06 INFO     net 0 final test acc 0.100000
12-22 13:06 INFO     Training network 1. n_training: 2424
12-22 13:07 INFO     >> Training accuracy: 0.263514
12-22 13:07 INFO     >> Test accuracy: 0.100000
12-22 13:07 INFO      ** Training complete **
12-22 13:07 INFO     net 1 final test acc 0.100000
12-22 13:07 INFO     Training network 2. n_training: 3322
12-22 13:07 INFO     >> Training accuracy: 0.125000
12-22 13:07 INFO     >> Test accuracy: 0.100000
12-22 13:07 INFO      ** Training complete **
12-22 13:07 INFO     net 2 final test acc 0.100000
12-22 13:07 INFO     Training network 3. n_training: 3010
12-22 13:08 INFO     >> Training accuracy: 0.000665
12-22 13:08 INFO     >> Test accuracy: 0.100000
12-22 13:08 INFO      ** Training complete **
12-22 13:08 INFO     net 3 final test acc 0.100000
12-22 13:08 INFO     Training network 4. n_training: 3390
12-22 13:08 INFO     >> Training accuracy: 0.128906
12-22 13:08 INFO     >> Test accuracy: 0.100000
12-22 13:08 INFO      ** Training complete **
12-22 13:08 INFO     net 4 final test acc 0.100000
12-22 13:08 INFO     Training network 5. n_training: 3089
12-22 13:09 INFO     >> Training accuracy: 0.165039
12-22 13:09 INFO     >> Test accuracy: 0.100000
12-22 13:09 INFO      ** Training complete **
12-22 13:09 INFO     net 5 final test acc 0.100000
12-22 13:09 INFO     Training network 6. n_training: 4543
12-22 13:09 INFO     >> Training accuracy: 0.069866
12-22 13:09 INFO     >> Test accuracy: 0.100000
12-22 13:09 INFO      ** Training complete **
12-22 13:09 INFO     net 6 final test acc 0.100000
12-22 13:09 INFO     Training network 7. n_training: 3000
12-22 13:10 INFO     >> Training accuracy: 0.329144
12-22 13:10 INFO     >> Test accuracy: 0.100000
12-22 13:10 INFO      ** Training complete **
12-22 13:10 INFO     net 7 final test acc 0.100000
12-22 13:10 INFO     Training network 8. n_training: 3485
12-22 13:10 INFO     >> Training accuracy: 0.096933
12-22 13:10 INFO     >> Test accuracy: 0.100000
12-22 13:10 INFO      ** Training complete **
12-22 13:10 INFO     net 8 final test acc 0.100000
12-22 13:10 INFO     Training network 9. n_training: 2293
12-22 13:11 INFO     >> Training accuracy: 0.122768
12-22 13:11 INFO     >> Test accuracy: 0.100000
12-22 13:11 INFO      ** Training complete **
12-22 13:11 INFO     net 9 final test acc 0.100000
12-22 13:11 INFO     Training network 10. n_training: 3141
12-22 13:11 INFO     >> Training accuracy: 0.004783
12-22 13:11 INFO     >> Test accuracy: 0.100000
12-22 13:11 INFO      ** Training complete **
12-22 13:11 INFO     net 10 final test acc 0.100000
12-22 13:11 INFO     Training network 11. n_training: 3641
12-22 13:12 INFO     >> Training accuracy: 0.007254
12-22 13:12 INFO     >> Test accuracy: 0.100000
12-22 13:12 INFO      ** Training complete **
12-22 13:12 INFO     net 11 final test acc 0.100000
12-22 13:12 INFO     Training network 12. n_training: 2437
12-22 13:12 INFO     >> Training accuracy: 0.009046
12-22 13:12 INFO     >> Test accuracy: 0.100000
12-22 13:12 INFO      ** Training complete **
12-22 13:12 INFO     net 12 final test acc 0.100000
12-22 13:12 INFO     Training network 13. n_training: 3212
12-22 13:12 INFO     >> Training accuracy: 0.107500
12-22 13:12 INFO     >> Test accuracy: 0.100000
12-22 13:12 INFO      ** Training complete **
12-22 13:12 INFO     net 13 final test acc 0.100000
12-22 13:12 INFO     Training network 14. n_training: 2132
12-22 13:13 INFO     >> Training accuracy: 0.244792
12-22 13:13 INFO     >> Test accuracy: 0.100000
12-22 13:13 INFO      ** Training complete **
12-22 13:13 INFO     net 14 final test acc 0.100000
12-22 13:13 INFO     Training network 15. n_training: 3459
12-22 13:13 INFO     >> Training accuracy: 0.002604
12-22 13:13 INFO     >> Test accuracy: 0.100000
12-22 13:13 INFO      ** Training complete **
12-22 13:13 INFO     net 15 final test acc 0.100000
12-22 13:13 INFO     Training network 16. n_training: 2426
12-22 13:14 INFO     >> Training accuracy: 0.003801
12-22 13:14 INFO     >> Test accuracy: 0.100000
12-22 13:14 INFO      ** Training complete **
12-22 13:14 INFO     net 16 final test acc 0.100000
12-22 13:14 INFO     Training network 17. n_training: 2535
12-22 13:14 INFO     >> Training accuracy: 0.162660
12-22 13:14 INFO     >> Test accuracy: 0.100000
12-22 13:14 INFO      ** Training complete **
12-22 13:14 INFO     net 17 final test acc 0.100000
12-22 13:14 INFO     Training network 18. n_training: 2992
12-22 13:15 INFO     >> Training accuracy: 0.141644
12-22 13:15 INFO     >> Test accuracy: 0.100000
12-22 13:15 INFO      ** Training complete **
12-22 13:15 INFO     net 18 final test acc 0.100000
12-22 13:15 INFO     Training network 19. n_training: 3013
12-22 13:15 INFO     >> Training accuracy: 0.042886
12-22 13:15 INFO     >> Test accuracy: 0.100000
12-22 13:15 INFO      ** Training complete **
12-22 13:15 INFO     net 19 final test acc 0.100000
12-22 13:15 DEBUG    bytecode dump:
>          0	NOP(arg=None, lineno=62)
           2	LOAD_GLOBAL(arg=0, lineno=91)
           4	LOAD_METHOD(arg=1, lineno=91)
           6	LOAD_FAST(arg=5, lineno=91)
           8	LOAD_ATTR(arg=2, lineno=91)
          10	LOAD_CONST(arg=1, lineno=91)
          12	BINARY_SUBSCR(arg=None, lineno=91)
          14	CALL_METHOD(arg=1, lineno=91)
          16	GET_ITER(arg=None, lineno=91)
>         18	NOP(arg=3, lineno=91)
          20	FOR_ITER(arg=784, lineno=91)
          22	STORE_FAST(arg=27, lineno=91)
          24	LOAD_FAST(arg=15, lineno=92)
          26	LOAD_FAST(arg=27, lineno=92)
          28	BINARY_SUBSCR(arg=None, lineno=92)
          30	LOAD_FAST(arg=16, lineno=92)
          32	COMPARE_OP(arg=1, lineno=92)
          34	POP_JUMP_IF_FALSE(arg=18, lineno=92)
          36	LOAD_FAST(arg=2, lineno=93)
          38	LOAD_FAST(arg=27, lineno=93)
          40	BINARY_SUBSCR(arg=None, lineno=93)
          42	STORE_FAST(arg=28, lineno=93)
          44	LOAD_FAST(arg=3, lineno=94)
          46	LOAD_FAST(arg=27, lineno=94)
          48	BINARY_SUBSCR(arg=None, lineno=94)
          50	STORE_FAST(arg=29, lineno=94)
          52	LOAD_FAST(arg=0, lineno=96)
          54	LOAD_FAST(arg=28, lineno=96)
          56	BINARY_SUBSCR(arg=None, lineno=96)
          58	STORE_FAST(arg=30, lineno=96)
          60	LOAD_FAST(arg=1, lineno=97)
          62	LOAD_FAST(arg=29, lineno=97)
          64	BINARY_SUBSCR(arg=None, lineno=97)
          66	STORE_FAST(arg=31, lineno=97)
          68	LOAD_GLOBAL(arg=3, lineno=99)
          70	LOAD_FAST(arg=30, lineno=99)
          72	LOAD_FAST(arg=31, lineno=99)
          74	CALL_FUNCTION(arg=2, lineno=99)
          76	STORE_FAST(arg=32, lineno=99)
          78	LOAD_FAST(arg=17, lineno=101)
          80	NOP(arg=1, lineno=101)
          82	POP_JUMP_IF_FALSE(arg=350, lineno=101)
          84	LOAD_CONST(arg=2, lineno=102)
          86	LOAD_CONST(arg=2, lineno=102)
          88	LOAD_FAST(arg=6, lineno=102)
          90	LOAD_GLOBAL(arg=4, lineno=102)
          92	LOAD_FAST(arg=32, lineno=102)
          94	LOAD_FAST(arg=7, lineno=102)
          96	CALL_FUNCTION(arg=2, lineno=102)
          98	BINARY_MULTIPLY(arg=None, lineno=102)
         100	BINARY_ADD(arg=None, lineno=102)
         102	BINARY_TRUE_DIVIDE(arg=None, lineno=102)
         104	STORE_FAST(arg=33, lineno=102)
         106	LOAD_FAST(arg=6, lineno=104)
         108	LOAD_FAST(arg=7, lineno=104)
         110	BINARY_MULTIPLY(arg=None, lineno=104)
         112	LOAD_GLOBAL(arg=4, lineno=104)
         114	LOAD_FAST(arg=32, lineno=104)
         116	LOAD_FAST(arg=7, lineno=104)
         118	LOAD_CONST(arg=3, lineno=104)
         120	BINARY_SUBTRACT(arg=None, lineno=104)
         122	CALL_FUNCTION(arg=2, lineno=104)
         124	BINARY_MULTIPLY(arg=None, lineno=104)
         126	LOAD_CONST(arg=2, lineno=104)
         128	LOAD_FAST(arg=6, lineno=104)
         130	LOAD_GLOBAL(arg=4, lineno=104)
         132	LOAD_FAST(arg=32, lineno=104)
         134	LOAD_FAST(arg=7, lineno=104)
         136	CALL_FUNCTION(arg=2, lineno=104)
         138	BINARY_MULTIPLY(arg=None, lineno=104)
         140	BINARY_ADD(arg=None, lineno=104)
         142	BINARY_TRUE_DIVIDE(arg=None, lineno=104)
         144	STORE_FAST(arg=34, lineno=103)
         146	LOAD_FAST(arg=33, lineno=107)
         148	LOAD_FAST(arg=18, lineno=107)
         150	LOAD_FAST(arg=29, lineno=107)
         152	BINARY_SUBSCR(arg=None, lineno=107)
         154	BINARY_TRUE_DIVIDE(arg=None, lineno=107)
         156	STORE_FAST(arg=35, lineno=107)
         158	LOAD_FAST(arg=33, lineno=108)
         160	LOAD_FAST(arg=18, lineno=108)
         162	LOAD_FAST(arg=28, lineno=108)
         164	BINARY_SUBSCR(arg=None, lineno=108)
         166	BINARY_TRUE_DIVIDE(arg=None, lineno=108)
         168	STORE_FAST(arg=36, lineno=108)
         170	LOAD_FAST(arg=35, lineno=110)
         172	LOAD_CONST(arg=2, lineno=111)
         174	LOAD_FAST(arg=7, lineno=111)
         176	LOAD_CONST(arg=3, lineno=111)
         178	LOAD_FAST(arg=33, lineno=111)
         180	BINARY_SUBTRACT(arg=None, lineno=111)
         182	BINARY_MULTIPLY(arg=None, lineno=111)
         184	BINARY_SUBTRACT(arg=None, lineno=111)
         186	LOAD_GLOBAL(arg=5, lineno=111)
         188	LOAD_METHOD(arg=6, lineno=111)
         190	LOAD_FAST(arg=19, lineno=111)
         192	LOAD_FAST(arg=29, lineno=111)
         194	BINARY_SUBSCR(arg=None, lineno=111)
         196	CALL_METHOD(arg=1, lineno=111)
         198	BINARY_TRUE_DIVIDE(arg=None, lineno=111)
         200	LOAD_FAST(arg=34, lineno=111)
         202	BINARY_ADD(arg=None, lineno=111)
         204	BINARY_MULTIPLY(arg=None, lineno=110)
         206	STORE_FAST(arg=37, lineno=110)
         208	LOAD_FAST(arg=36, lineno=113)
         210	LOAD_CONST(arg=2, lineno=114)
         212	LOAD_FAST(arg=7, lineno=114)
         214	LOAD_CONST(arg=3, lineno=114)
         216	LOAD_FAST(arg=33, lineno=114)
         218	BINARY_SUBTRACT(arg=None, lineno=114)
         220	BINARY_MULTIPLY(arg=None, lineno=114)
         222	BINARY_SUBTRACT(arg=None, lineno=114)
         224	LOAD_GLOBAL(arg=5, lineno=114)
         226	LOAD_METHOD(arg=6, lineno=114)
         228	LOAD_FAST(arg=19, lineno=114)
         230	LOAD_FAST(arg=28, lineno=114)
         232	BINARY_SUBSCR(arg=None, lineno=114)
         234	CALL_METHOD(arg=1, lineno=114)
         236	BINARY_TRUE_DIVIDE(arg=None, lineno=114)
         238	LOAD_FAST(arg=34, lineno=114)
         240	BINARY_ADD(arg=None, lineno=114)
         242	BINARY_MULTIPLY(arg=None, lineno=113)
         244	STORE_FAST(arg=38, lineno=113)
         246	LOAD_FAST(arg=21, lineno=117)
         248	LOAD_FAST(arg=21, lineno=117)
         250	BINARY_MULTIPLY(arg=None, lineno=117)
         252	STORE_FAST(arg=39, lineno=117)
         254	LOAD_FAST(arg=24, lineno=119)
         256	LOAD_FAST(arg=29, lineno=119)
         258	BINARY_SUBSCR(arg=None, lineno=119)
         260	LOAD_FAST(arg=20, lineno=120)
         262	LOAD_FAST(arg=19, lineno=120)
         264	LOAD_FAST(arg=29, lineno=120)
         266	BINARY_SUBSCR(arg=None, lineno=120)
         268	LOAD_FAST(arg=22, lineno=120)
         270	BINARY_SUBTRACT(arg=None, lineno=120)
         272	BINARY_MULTIPLY(arg=None, lineno=120)
         274	LOAD_FAST(arg=39, lineno=120)
         276	BINARY_TRUE_DIVIDE(arg=None, lineno=120)
         278	BINARY_SUBTRACT(arg=None, lineno=119)
         280	STORE_FAST(arg=40, lineno=118)
         282	LOAD_FAST(arg=24, lineno=123)
         284	LOAD_FAST(arg=28, lineno=123)
         286	BINARY_SUBSCR(arg=None, lineno=123)
         288	LOAD_FAST(arg=20, lineno=124)
         290	LOAD_FAST(arg=19, lineno=124)
         292	LOAD_FAST(arg=28, lineno=124)
         294	BINARY_SUBSCR(arg=None, lineno=124)
         296	LOAD_FAST(arg=22, lineno=124)
         298	BINARY_SUBTRACT(arg=None, lineno=124)
         300	BINARY_MULTIPLY(arg=None, lineno=124)
         302	LOAD_FAST(arg=39, lineno=124)
         304	BINARY_TRUE_DIVIDE(arg=None, lineno=124)
         306	BINARY_SUBTRACT(arg=None, lineno=123)
         308	STORE_FAST(arg=41, lineno=122)
         310	LOAD_FAST(arg=23, lineno=128)
         312	LOAD_FAST(arg=26, lineno=129)
         314	BINARY_MULTIPLY(arg=None, lineno=128)
         316	LOAD_FAST(arg=40, lineno=130)
         318	LOAD_FAST(arg=37, lineno=130)
         320	BINARY_MULTIPLY(arg=None, lineno=130)
         322	LOAD_FAST(arg=41, lineno=130)
         324	LOAD_FAST(arg=38, lineno=130)
         326	BINARY_MULTIPLY(arg=None, lineno=130)
         328	BINARY_ADD(arg=None, lineno=130)
         330	BINARY_MULTIPLY(arg=None, lineno=128)
         332	LOAD_FAST(arg=25, lineno=131)
         334	LOAD_FAST(arg=27, lineno=131)
         336	BINARY_SUBSCR(arg=None, lineno=131)
         338	LOAD_FAST(arg=21, lineno=131)
         340	BINARY_MULTIPLY(arg=None, lineno=131)
         342	BINARY_TRUE_DIVIDE(arg=None, lineno=128)
         344	LOAD_FAST(arg=4, lineno=132)
         346	BINARY_TRUE_DIVIDE(arg=None, lineno=128)
         348	STORE_FAST(arg=42, lineno=127)
>        350	LOAD_FAST(arg=32, lineno=135)
         352	LOAD_CONST(arg=4, lineno=135)
         354	COMPARE_OP(arg=4, lineno=135)
         356	NOP(arg=1, lineno=135)
         358	POP_JUMP_IF_FALSE(arg=410, lineno=135)
         360	LOAD_CONST(arg=5, lineno=136)
         362	LOAD_FAST(arg=6, lineno=136)
         364	BINARY_MULTIPLY(arg=None, lineno=136)
         366	LOAD_FAST(arg=7, lineno=136)
         368	BINARY_MULTIPLY(arg=None, lineno=136)
         370	LOAD_GLOBAL(arg=4, lineno=136)
         372	LOAD_FAST(arg=32, lineno=136)
         374	LOAD_FAST(arg=7, lineno=136)
         376	LOAD_CONST(arg=2, lineno=136)
         378	BINARY_SUBTRACT(arg=None, lineno=136)
         380	CALL_FUNCTION(arg=2, lineno=136)
         382	BINARY_MULTIPLY(arg=None, lineno=136)
         384	STORE_FAST(arg=43, lineno=136)
         386	LOAD_FAST(arg=43, lineno=137)
         388	LOAD_FAST(arg=6, lineno=137)
         390	LOAD_GLOBAL(arg=4, lineno=137)
         392	LOAD_FAST(arg=32, lineno=137)
         394	LOAD_FAST(arg=7, lineno=137)
         396	CALL_FUNCTION(arg=2, lineno=137)
         398	BINARY_MULTIPLY(arg=None, lineno=137)
         400	LOAD_CONST(arg=2, lineno=137)
         402	BINARY_ADD(arg=None, lineno=137)
         404	INPLACE_TRUE_DIVIDE(arg=None, lineno=137)
         406	STORE_FAST(arg=43, lineno=137)
         408	JUMP_FORWARD(arg=4, lineno=137)
>        410	LOAD_CONST(arg=4, lineno=139)
         412	STORE_FAST(arg=43, lineno=139)
>        414	LOAD_GLOBAL(arg=7, lineno=141)
         416	LOAD_FAST(arg=10, lineno=141)
         418	CALL_FUNCTION(arg=1, lineno=141)
         420	GET_ITER(arg=None, lineno=141)
>        422	FOR_ITER(arg=116, lineno=141)
         424	STORE_FAST(arg=44, lineno=141)
         426	LOAD_GLOBAL(arg=8, lineno=142)
         428	LOAD_FAST(arg=43, lineno=142)
         430	LOAD_FAST(arg=30, lineno=142)
         432	LOAD_FAST(arg=44, lineno=142)
         434	BINARY_SUBSCR(arg=None, lineno=142)
         436	LOAD_FAST(arg=31, lineno=142)
         438	LOAD_FAST(arg=44, lineno=142)
         440	BINARY_SUBSCR(arg=None, lineno=142)
         442	BINARY_SUBTRACT(arg=None, lineno=142)
         444	BINARY_MULTIPLY(arg=None, lineno=142)
         446	CALL_FUNCTION(arg=1, lineno=142)
         448	STORE_FAST(arg=45, lineno=142)
         450	LOAD_FAST(arg=17, lineno=144)
         452	NOP(arg=1, lineno=144)
         454	POP_JUMP_IF_FALSE(arg=488, lineno=144)
         456	LOAD_FAST(arg=45, lineno=147)
         458	LOAD_GLOBAL(arg=8, lineno=147)
         460	LOAD_CONST(arg=6, lineno=147)
         462	LOAD_FAST(arg=42, lineno=147)
         464	BINARY_MULTIPLY(arg=None, lineno=147)
         466	LOAD_FAST(arg=30, lineno=147)
         468	LOAD_FAST(arg=44, lineno=147)
         470	BINARY_SUBSCR(arg=None, lineno=147)
         472	LOAD_FAST(arg=31, lineno=147)
         474	LOAD_FAST(arg=44, lineno=147)
         476	BINARY_SUBSCR(arg=None, lineno=147)
         478	BINARY_SUBTRACT(arg=None, lineno=147)
         480	BINARY_MULTIPLY(arg=None, lineno=147)
         482	CALL_FUNCTION(arg=1, lineno=147)
         484	INPLACE_ADD(arg=None, lineno=147)
         486	STORE_FAST(arg=45, lineno=147)
>        488	LOAD_FAST(arg=30, lineno=149)
         490	LOAD_FAST(arg=44, lineno=149)
         492	DUP_TOP_TWO(arg=None, lineno=149)
         494	BINARY_SUBSCR(arg=None, lineno=149)
         496	LOAD_FAST(arg=45, lineno=149)
         498	LOAD_FAST(arg=12, lineno=149)
         500	BINARY_MULTIPLY(arg=None, lineno=149)
         502	INPLACE_ADD(arg=None, lineno=149)
         504	ROT_THREE(arg=None, lineno=149)
         506	STORE_SUBSCR(arg=None, lineno=149)
         508	LOAD_FAST(arg=11, lineno=150)
         510	NOP(arg=1, lineno=150)
         512	POP_JUMP_IF_FALSE(arg=422, lineno=150)
         514	LOAD_FAST(arg=31, lineno=151)
         516	LOAD_FAST(arg=44, lineno=151)
         518	DUP_TOP_TWO(arg=None, lineno=151)
         520	BINARY_SUBSCR(arg=None, lineno=151)
         522	LOAD_FAST(arg=45, lineno=151)
         524	UNARY_NEGATIVE(arg=None, lineno=151)
         526	LOAD_FAST(arg=12, lineno=151)
         528	BINARY_MULTIPLY(arg=None, lineno=151)
         530	INPLACE_ADD(arg=None, lineno=151)
         532	ROT_THREE(arg=None, lineno=151)
         534	STORE_SUBSCR(arg=None, lineno=151)
         536	NOP(arg=1, lineno=151)
         538	JUMP_ABSOLUTE(arg=422, lineno=151)
>        540	LOAD_FAST(arg=15, lineno=153)
         542	LOAD_FAST(arg=27, lineno=153)
         544	DUP_TOP_TWO(arg=None, lineno=153)
         546	BINARY_SUBSCR(arg=None, lineno=153)
         548	LOAD_FAST(arg=5, lineno=153)
         550	LOAD_FAST(arg=27, lineno=153)
         552	BINARY_SUBSCR(arg=None, lineno=153)
         554	INPLACE_ADD(arg=None, lineno=153)
         556	ROT_THREE(arg=None, lineno=153)
         558	STORE_SUBSCR(arg=None, lineno=153)
         560	LOAD_GLOBAL(arg=9, lineno=155)
         562	LOAD_FAST(arg=16, lineno=156)
         564	LOAD_FAST(arg=14, lineno=156)
         566	LOAD_FAST(arg=27, lineno=156)
         568	BINARY_SUBSCR(arg=None, lineno=156)
         570	BINARY_SUBTRACT(arg=None, lineno=156)
         572	LOAD_FAST(arg=13, lineno=156)
         574	LOAD_FAST(arg=27, lineno=156)
         576	BINARY_SUBSCR(arg=None, lineno=156)
         578	BINARY_TRUE_DIVIDE(arg=None, lineno=156)
         580	CALL_FUNCTION(arg=1, lineno=155)
         582	STORE_FAST(arg=46, lineno=155)
         584	LOAD_GLOBAL(arg=7, lineno=159)
         586	LOAD_FAST(arg=46, lineno=159)
         588	CALL_FUNCTION(arg=1, lineno=159)
         590	GET_ITER(arg=None, lineno=159)
>        592	FOR_ITER(arg=186, lineno=159)
         594	STORE_FAST(arg=47, lineno=159)
         596	LOAD_GLOBAL(arg=10, lineno=160)
         598	LOAD_FAST(arg=8, lineno=160)
         600	CALL_FUNCTION(arg=1, lineno=160)
         602	LOAD_FAST(arg=4, lineno=160)
         604	BINARY_MODULO(arg=None, lineno=160)
         606	STORE_FAST(arg=29, lineno=160)
         608	LOAD_FAST(arg=1, lineno=162)
         610	LOAD_FAST(arg=29, lineno=162)
         612	BINARY_SUBSCR(arg=None, lineno=162)
         614	STORE_FAST(arg=31, lineno=162)
         616	LOAD_GLOBAL(arg=3, lineno=164)
         618	LOAD_FAST(arg=30, lineno=164)
         620	LOAD_FAST(arg=31, lineno=164)
         622	CALL_FUNCTION(arg=2, lineno=164)
         624	STORE_FAST(arg=32, lineno=164)
         626	LOAD_FAST(arg=32, lineno=166)
         628	LOAD_CONST(arg=4, lineno=166)
         630	COMPARE_OP(arg=4, lineno=166)
         632	NOP(arg=2, lineno=166)
         634	POP_JUMP_IF_FALSE(arg=680, lineno=166)
         636	LOAD_CONST(arg=7, lineno=167)
         638	LOAD_FAST(arg=9, lineno=167)
         640	BINARY_MULTIPLY(arg=None, lineno=167)
         642	LOAD_FAST(arg=7, lineno=167)
         644	BINARY_MULTIPLY(arg=None, lineno=167)
         646	STORE_FAST(arg=43, lineno=167)
         648	LOAD_FAST(arg=43, lineno=168)
         650	LOAD_CONST(arg=8, lineno=168)
         652	LOAD_FAST(arg=32, lineno=168)
         654	BINARY_ADD(arg=None, lineno=168)
         656	LOAD_FAST(arg=6, lineno=169)
         658	LOAD_GLOBAL(arg=4, lineno=169)
         660	LOAD_FAST(arg=32, lineno=169)
         662	LOAD_FAST(arg=7, lineno=169)
         664	CALL_FUNCTION(arg=2, lineno=169)
         666	BINARY_MULTIPLY(arg=None, lineno=169)
         668	LOAD_CONST(arg=3, lineno=169)
         670	BINARY_ADD(arg=None, lineno=169)
         672	BINARY_MULTIPLY(arg=None, lineno=168)
         674	INPLACE_TRUE_DIVIDE(arg=None, lineno=168)
         676	STORE_FAST(arg=43, lineno=168)
         678	JUMP_FORWARD(arg=20, lineno=168)
>        680	LOAD_FAST(arg=28, lineno=171)
         682	LOAD_FAST(arg=29, lineno=171)
         684	COMPARE_OP(arg=2, lineno=171)
         686	NOP(arg=2, lineno=171)
         688	POP_JUMP_IF_FALSE(arg=696, lineno=171)
         690	NOP(arg=2, lineno=172)
         692	JUMP_ABSOLUTE(arg=592, lineno=172)
         694	JUMP_FORWARD(arg=4, lineno=172)
>        696	LOAD_CONST(arg=4, lineno=174)
         698	STORE_FAST(arg=43, lineno=174)
>        700	LOAD_GLOBAL(arg=7, lineno=176)
         702	LOAD_FAST(arg=10, lineno=176)
         704	CALL_FUNCTION(arg=1, lineno=176)
         706	GET_ITER(arg=None, lineno=176)
>        708	FOR_ITER(arg=66, lineno=176)
         710	STORE_FAST(arg=44, lineno=176)
         712	LOAD_FAST(arg=43, lineno=177)
         714	LOAD_CONST(arg=4, lineno=177)
         716	COMPARE_OP(arg=4, lineno=177)
         718	NOP(arg=2, lineno=177)
         720	POP_JUMP_IF_FALSE(arg=748, lineno=177)
         722	LOAD_GLOBAL(arg=8, lineno=178)
         724	LOAD_FAST(arg=43, lineno=178)
         726	LOAD_FAST(arg=30, lineno=178)
         728	LOAD_FAST(arg=44, lineno=178)
         730	BINARY_SUBSCR(arg=None, lineno=178)
         732	LOAD_FAST(arg=31, lineno=178)
         734	LOAD_FAST(arg=44, lineno=178)
         736	BINARY_SUBSCR(arg=None, lineno=178)
         738	BINARY_SUBTRACT(arg=None, lineno=178)
         740	BINARY_MULTIPLY(arg=None, lineno=178)
         742	CALL_FUNCTION(arg=1, lineno=178)
         744	STORE_FAST(arg=45, lineno=178)
         746	JUMP_FORWARD(arg=4, lineno=178)
>        748	LOAD_CONST(arg=1, lineno=180)
         750	STORE_FAST(arg=45, lineno=180)
>        752	LOAD_FAST(arg=30, lineno=181)
         754	LOAD_FAST(arg=44, lineno=181)
         756	DUP_TOP_TWO(arg=None, lineno=181)
         758	BINARY_SUBSCR(arg=None, lineno=181)
         760	LOAD_FAST(arg=45, lineno=181)
         762	LOAD_FAST(arg=12, lineno=181)
         764	BINARY_MULTIPLY(arg=None, lineno=181)
         766	INPLACE_ADD(arg=None, lineno=181)
         768	ROT_THREE(arg=None, lineno=181)
         770	STORE_SUBSCR(arg=None, lineno=181)
         772	NOP(arg=2, lineno=181)
         774	JUMP_ABSOLUTE(arg=708, lineno=181)
>        776	NOP(arg=2, lineno=181)
         778	JUMP_ABSOLUTE(arg=592, lineno=181)
>        780	LOAD_FAST(arg=14, lineno=183)
         782	LOAD_FAST(arg=27, lineno=183)
         784	DUP_TOP_TWO(arg=None, lineno=183)
         786	BINARY_SUBSCR(arg=None, lineno=183)
         788	LOAD_FAST(arg=46, lineno=184)
         790	LOAD_FAST(arg=13, lineno=184)
         792	LOAD_FAST(arg=27, lineno=184)
         794	BINARY_SUBSCR(arg=None, lineno=184)
         796	BINARY_MULTIPLY(arg=None, lineno=184)
         798	INPLACE_ADD(arg=None, lineno=183)
         800	ROT_THREE(arg=None, lineno=183)
         802	STORE_SUBSCR(arg=None, lineno=183)
         804	JUMP_ABSOLUTE(arg=18, lineno=183)
>        806	LOAD_CONST(arg=0, lineno=183)
         808	RETURN_VALUE(arg=None, lineno=183)
12-22 13:15 DEBUG    pending: deque([State(pc_initial=0 nstack_initial=0)])
12-22 13:15 DEBUG    stack: []
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=0 nstack_initial=0)
12-22 13:15 DEBUG    dispatch pc=0, inst=NOP(arg=None, lineno=62)
12-22 13:15 DEBUG    stack []
12-22 13:15 DEBUG    dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=91)
12-22 13:15 DEBUG    stack []
12-22 13:15 DEBUG    dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=91)
12-22 13:15 DEBUG    stack ['$2load_global.0']
12-22 13:15 DEBUG    dispatch pc=6, inst=LOAD_FAST(arg=5, lineno=91)
12-22 13:15 DEBUG    stack ['$4load_method.1']
12-22 13:15 DEBUG    dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=91)
12-22 13:15 DEBUG    stack ['$4load_method.1', '$epochs_per_sample6.2']
12-22 13:15 DEBUG    dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=91)
12-22 13:15 DEBUG    stack ['$4load_method.1', '$8load_attr.3']
12-22 13:15 DEBUG    dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=91)
12-22 13:15 DEBUG    stack ['$4load_method.1', '$8load_attr.3', '$const10.4']
12-22 13:15 DEBUG    dispatch pc=14, inst=CALL_METHOD(arg=1, lineno=91)
12-22 13:15 DEBUG    stack ['$4load_method.1', '$12binary_subscr.5']
12-22 13:15 DEBUG    dispatch pc=16, inst=GET_ITER(arg=None, lineno=91)
12-22 13:15 DEBUG    stack ['$14call_method.6']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=18, stack=('$16get_iter.7',), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=1)])
12-22 13:15 DEBUG    stack: ['$phi18.0']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=18 nstack_initial=1)
12-22 13:15 DEBUG    dispatch pc=18, inst=NOP(arg=3, lineno=91)
12-22 13:15 DEBUG    stack ['$phi18.0']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=20, stack=('$phi18.0',), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=20 nstack_initial=1)])
12-22 13:15 DEBUG    stack: ['$phi20.0']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=20 nstack_initial=1)
12-22 13:15 DEBUG    dispatch pc=20, inst=FOR_ITER(arg=784, lineno=91)
12-22 13:15 DEBUG    stack ['$phi20.0']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=806, stack=(), blockstack=(), npush=0), Edge(pc=22, stack=('$phi20.0', '$20for_iter.2'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=806 nstack_initial=0), State(pc_initial=22 nstack_initial=2)])
12-22 13:15 DEBUG    stack: []
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=806 nstack_initial=0)
12-22 13:15 DEBUG    dispatch pc=806, inst=LOAD_CONST(arg=0, lineno=183)
12-22 13:15 DEBUG    stack []
12-22 13:15 DEBUG    dispatch pc=808, inst=RETURN_VALUE(arg=None, lineno=183)
12-22 13:15 DEBUG    stack ['$const806.0']
12-22 13:15 DEBUG    end state. edges=[]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=22 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi22.0', '$phi22.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=22 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=22, inst=STORE_FAST(arg=27, lineno=91)
12-22 13:15 DEBUG    stack ['$phi22.0', '$phi22.1']
12-22 13:15 DEBUG    dispatch pc=24, inst=LOAD_FAST(arg=15, lineno=92)
12-22 13:15 DEBUG    stack ['$phi22.0']
12-22 13:15 DEBUG    dispatch pc=26, inst=LOAD_FAST(arg=27, lineno=92)
12-22 13:15 DEBUG    stack ['$phi22.0', '$epoch_of_next_sample24.2']
12-22 13:15 DEBUG    dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=92)
12-22 13:15 DEBUG    stack ['$phi22.0', '$epoch_of_next_sample24.2', '$i26.3']
12-22 13:15 DEBUG    dispatch pc=30, inst=LOAD_FAST(arg=16, lineno=92)
12-22 13:15 DEBUG    stack ['$phi22.0', '$28binary_subscr.4']
12-22 13:15 DEBUG    dispatch pc=32, inst=COMPARE_OP(arg=1, lineno=92)
12-22 13:15 DEBUG    stack ['$phi22.0', '$28binary_subscr.4', '$n30.5']
12-22 13:15 DEBUG    dispatch pc=34, inst=POP_JUMP_IF_FALSE(arg=18, lineno=92)
12-22 13:15 DEBUG    stack ['$phi22.0', '$32compare_op.6']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=36, stack=('$phi22.0',), blockstack=(), npush=0), Edge(pc=18, stack=('$phi22.0',), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=36 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
12-22 13:15 DEBUG    stack: ['$phi36.0']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=36 nstack_initial=1)
12-22 13:15 DEBUG    dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=93)
12-22 13:15 DEBUG    stack ['$phi36.0']
12-22 13:15 DEBUG    dispatch pc=38, inst=LOAD_FAST(arg=27, lineno=93)
12-22 13:15 DEBUG    stack ['$phi36.0', '$head36.1']
12-22 13:15 DEBUG    dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=93)
12-22 13:15 DEBUG    stack ['$phi36.0', '$head36.1', '$i38.2']
12-22 13:15 DEBUG    dispatch pc=42, inst=STORE_FAST(arg=28, lineno=93)
12-22 13:15 DEBUG    stack ['$phi36.0', '$40binary_subscr.3']
12-22 13:15 DEBUG    dispatch pc=44, inst=LOAD_FAST(arg=3, lineno=94)
12-22 13:15 DEBUG    stack ['$phi36.0']
12-22 13:15 DEBUG    dispatch pc=46, inst=LOAD_FAST(arg=27, lineno=94)
12-22 13:15 DEBUG    stack ['$phi36.0', '$tail44.4']
12-22 13:15 DEBUG    dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=94)
12-22 13:15 DEBUG    stack ['$phi36.0', '$tail44.4', '$i46.5']
12-22 13:15 DEBUG    dispatch pc=50, inst=STORE_FAST(arg=29, lineno=94)
12-22 13:15 DEBUG    stack ['$phi36.0', '$48binary_subscr.6']
12-22 13:15 DEBUG    dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=96)
12-22 13:15 DEBUG    stack ['$phi36.0']
12-22 13:15 DEBUG    dispatch pc=54, inst=LOAD_FAST(arg=28, lineno=96)
12-22 13:15 DEBUG    stack ['$phi36.0', '$head_embedding52.7']
12-22 13:15 DEBUG    dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=96)
12-22 13:15 DEBUG    stack ['$phi36.0', '$head_embedding52.7', '$j54.8']
12-22 13:15 DEBUG    dispatch pc=58, inst=STORE_FAST(arg=30, lineno=96)
12-22 13:15 DEBUG    stack ['$phi36.0', '$56binary_subscr.9']
12-22 13:15 DEBUG    dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=97)
12-22 13:15 DEBUG    stack ['$phi36.0']
12-22 13:15 DEBUG    dispatch pc=62, inst=LOAD_FAST(arg=29, lineno=97)
12-22 13:15 DEBUG    stack ['$phi36.0', '$tail_embedding60.10']
12-22 13:15 DEBUG    dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=97)
12-22 13:15 DEBUG    stack ['$phi36.0', '$tail_embedding60.10', '$k62.11']
12-22 13:15 DEBUG    dispatch pc=66, inst=STORE_FAST(arg=31, lineno=97)
12-22 13:15 DEBUG    stack ['$phi36.0', '$64binary_subscr.12']
12-22 13:15 DEBUG    dispatch pc=68, inst=LOAD_GLOBAL(arg=3, lineno=99)
12-22 13:15 DEBUG    stack ['$phi36.0']
12-22 13:15 DEBUG    dispatch pc=70, inst=LOAD_FAST(arg=30, lineno=99)
12-22 13:15 DEBUG    stack ['$phi36.0', '$68load_global.13']
12-22 13:15 DEBUG    dispatch pc=72, inst=LOAD_FAST(arg=31, lineno=99)
12-22 13:15 DEBUG    stack ['$phi36.0', '$68load_global.13', '$current70.14']
12-22 13:15 DEBUG    dispatch pc=74, inst=CALL_FUNCTION(arg=2, lineno=99)
12-22 13:15 DEBUG    stack ['$phi36.0', '$68load_global.13', '$current70.14', '$other72.15']
12-22 13:15 DEBUG    dispatch pc=76, inst=STORE_FAST(arg=32, lineno=99)
12-22 13:15 DEBUG    stack ['$phi36.0', '$74call_function.16']
12-22 13:15 DEBUG    dispatch pc=78, inst=LOAD_FAST(arg=17, lineno=101)
12-22 13:15 DEBUG    stack ['$phi36.0']
12-22 13:15 DEBUG    dispatch pc=80, inst=NOP(arg=1, lineno=101)
12-22 13:15 DEBUG    stack ['$phi36.0', '$densmap_flag78.17']
12-22 13:15 DEBUG    dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=350, lineno=101)
12-22 13:15 DEBUG    stack ['$phi36.0', '$densmap_flag78.17']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=84, stack=('$phi36.0',), blockstack=(), npush=0), Edge(pc=350, stack=('$phi36.0',), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
12-22 13:15 DEBUG    pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
12-22 13:15 DEBUG    stack: ['$phi84.0']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=84 nstack_initial=1)
12-22 13:15 DEBUG    dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=102)
12-22 13:15 DEBUG    stack ['$phi84.0']
12-22 13:15 DEBUG    dispatch pc=86, inst=LOAD_CONST(arg=2, lineno=102)
12-22 13:15 DEBUG    stack ['$phi84.0', '$const84.1']
12-22 13:15 DEBUG    dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=102)
12-22 13:15 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2']
12-22 13:15 DEBUG    dispatch pc=90, inst=LOAD_GLOBAL(arg=4, lineno=102)
12-22 13:15 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3']
12-22 13:15 DEBUG    dispatch pc=92, inst=LOAD_FAST(arg=32, lineno=102)
12-22 13:15 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$90load_global.4']
12-22 13:15 DEBUG    dispatch pc=94, inst=LOAD_FAST(arg=7, lineno=102)
12-22 13:15 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$90load_global.4', '$dist_squared92.5']
12-22 13:15 DEBUG    dispatch pc=96, inst=CALL_FUNCTION(arg=2, lineno=102)
12-22 13:15 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$90load_global.4', '$dist_squared92.5', '$b94.6']
12-22 13:15 DEBUG    dispatch pc=98, inst=BINARY_MULTIPLY(arg=None, lineno=102)
12-22 13:15 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$a88.3', '$96call_function.7']
12-22 13:15 DEBUG    dispatch pc=100, inst=BINARY_ADD(arg=None, lineno=102)
12-22 13:15 DEBUG    stack ['$phi84.0', '$const84.1', '$const86.2', '$98binary_multiply.8']
12-22 13:15 DEBUG    dispatch pc=102, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=102)
12-22 13:15 DEBUG    stack ['$phi84.0', '$const84.1', '$100binary_add.9']
12-22 13:15 DEBUG    dispatch pc=104, inst=STORE_FAST(arg=33, lineno=102)
12-22 13:15 DEBUG    stack ['$phi84.0', '$102binary_true_divide.10']
12-22 13:15 DEBUG    dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0']
12-22 13:15 DEBUG    dispatch pc=108, inst=LOAD_FAST(arg=7, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$a106.11']
12-22 13:15 DEBUG    dispatch pc=110, inst=BINARY_MULTIPLY(arg=None, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$a106.11', '$b108.12']
12-22 13:15 DEBUG    dispatch pc=112, inst=LOAD_GLOBAL(arg=4, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$110binary_multiply.13']
12-22 13:15 DEBUG    dispatch pc=114, inst=LOAD_FAST(arg=32, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14']
12-22 13:15 DEBUG    dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15']
12-22 13:15 DEBUG    dispatch pc=118, inst=LOAD_CONST(arg=3, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15', '$b116.16']
12-22 13:15 DEBUG    dispatch pc=120, inst=BINARY_SUBTRACT(arg=None, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15', '$b116.16', '$const118.17']
12-22 13:15 DEBUG    dispatch pc=122, inst=CALL_FUNCTION(arg=2, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$112load_global.14', '$dist_squared114.15', '$120binary_subtract.18']
12-22 13:15 DEBUG    dispatch pc=124, inst=BINARY_MULTIPLY(arg=None, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$110binary_multiply.13', '$122call_function.19']
12-22 13:15 DEBUG    dispatch pc=126, inst=LOAD_CONST(arg=2, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$124binary_multiply.20']
12-22 13:15 DEBUG    dispatch pc=128, inst=LOAD_FAST(arg=6, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21']
12-22 13:15 DEBUG    dispatch pc=130, inst=LOAD_GLOBAL(arg=4, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22']
12-22 13:15 DEBUG    dispatch pc=132, inst=LOAD_FAST(arg=32, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$130load_global.23']
12-22 13:15 DEBUG    dispatch pc=134, inst=LOAD_FAST(arg=7, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$130load_global.23', '$dist_squared132.24']
12-22 13:15 DEBUG    dispatch pc=136, inst=CALL_FUNCTION(arg=2, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$130load_global.23', '$dist_squared132.24', '$b134.25']
12-22 13:15 DEBUG    dispatch pc=138, inst=BINARY_MULTIPLY(arg=None, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$a128.22', '$136call_function.26']
12-22 13:15 DEBUG    dispatch pc=140, inst=BINARY_ADD(arg=None, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$const126.21', '$138binary_multiply.27']
12-22 13:15 DEBUG    dispatch pc=142, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=104)
12-22 13:15 DEBUG    stack ['$phi84.0', '$124binary_multiply.20', '$140binary_add.28']
12-22 13:15 DEBUG    dispatch pc=144, inst=STORE_FAST(arg=34, lineno=103)
12-22 13:15 DEBUG    stack ['$phi84.0', '$142binary_true_divide.29']
12-22 13:15 DEBUG    dispatch pc=146, inst=LOAD_FAST(arg=33, lineno=107)
12-22 13:15 DEBUG    stack ['$phi84.0']
12-22 13:15 DEBUG    dispatch pc=148, inst=LOAD_FAST(arg=18, lineno=107)
12-22 13:15 DEBUG    stack ['$phi84.0', '$phi146.30']
12-22 13:15 DEBUG    dispatch pc=150, inst=LOAD_FAST(arg=29, lineno=107)
12-22 13:15 DEBUG    stack ['$phi84.0', '$phi146.30', '$dens_phi_sum148.31']
12-22 13:15 DEBUG    dispatch pc=152, inst=BINARY_SUBSCR(arg=None, lineno=107)
12-22 13:15 DEBUG    stack ['$phi84.0', '$phi146.30', '$dens_phi_sum148.31', '$k150.32']
12-22 13:15 DEBUG    dispatch pc=154, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=107)
12-22 13:15 DEBUG    stack ['$phi84.0', '$phi146.30', '$152binary_subscr.33']
12-22 13:15 DEBUG    dispatch pc=156, inst=STORE_FAST(arg=35, lineno=107)
12-22 13:15 DEBUG    stack ['$phi84.0', '$154binary_true_divide.34']
12-22 13:15 DEBUG    dispatch pc=158, inst=LOAD_FAST(arg=33, lineno=108)
12-22 13:15 DEBUG    stack ['$phi84.0']
12-22 13:15 DEBUG    dispatch pc=160, inst=LOAD_FAST(arg=18, lineno=108)
12-22 13:15 DEBUG    stack ['$phi84.0', '$phi158.35']
12-22 13:15 DEBUG    dispatch pc=162, inst=LOAD_FAST(arg=28, lineno=108)
12-22 13:15 DEBUG    stack ['$phi84.0', '$phi158.35', '$dens_phi_sum160.36']
12-22 13:15 DEBUG    dispatch pc=164, inst=BINARY_SUBSCR(arg=None, lineno=108)
12-22 13:15 DEBUG    stack ['$phi84.0', '$phi158.35', '$dens_phi_sum160.36', '$j162.37']
12-22 13:15 DEBUG    dispatch pc=166, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=108)
12-22 13:15 DEBUG    stack ['$phi84.0', '$phi158.35', '$164binary_subscr.38']
12-22 13:15 DEBUG    dispatch pc=168, inst=STORE_FAST(arg=36, lineno=108)
12-22 13:15 DEBUG    stack ['$phi84.0', '$166binary_true_divide.39']
12-22 13:15 DEBUG    dispatch pc=170, inst=LOAD_FAST(arg=35, lineno=110)
12-22 13:15 DEBUG    stack ['$phi84.0']
12-22 13:15 DEBUG    dispatch pc=172, inst=LOAD_CONST(arg=2, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40']
12-22 13:15 DEBUG    dispatch pc=174, inst=LOAD_FAST(arg=7, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41']
12-22 13:15 DEBUG    dispatch pc=176, inst=LOAD_CONST(arg=3, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42']
12-22 13:15 DEBUG    dispatch pc=178, inst=LOAD_FAST(arg=33, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42', '$const176.43']
12-22 13:15 DEBUG    dispatch pc=180, inst=BINARY_SUBTRACT(arg=None, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42', '$const176.43', '$phi178.44']
12-22 13:15 DEBUG    dispatch pc=182, inst=BINARY_MULTIPLY(arg=None, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$b174.42', '$180binary_subtract.45']
12-22 13:15 DEBUG    dispatch pc=184, inst=BINARY_SUBTRACT(arg=None, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$const172.41', '$182binary_multiply.46']
12-22 13:15 DEBUG    dispatch pc=186, inst=LOAD_GLOBAL(arg=5, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47']
12-22 13:15 DEBUG    dispatch pc=188, inst=LOAD_METHOD(arg=6, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$186load_global.48']
12-22 13:15 DEBUG    dispatch pc=190, inst=LOAD_FAST(arg=19, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49']
12-22 13:15 DEBUG    dispatch pc=192, inst=LOAD_FAST(arg=29, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49', '$dens_re_sum190.50']
12-22 13:15 DEBUG    dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49', '$dens_re_sum190.50', '$k192.51']
12-22 13:15 DEBUG    dispatch pc=196, inst=CALL_METHOD(arg=1, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$188load_method.49', '$194binary_subscr.52']
12-22 13:15 DEBUG    dispatch pc=198, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$184binary_subtract.47', '$196call_method.53']
12-22 13:15 DEBUG    dispatch pc=200, inst=LOAD_FAST(arg=34, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$198binary_true_divide.54']
12-22 13:15 DEBUG    dispatch pc=202, inst=BINARY_ADD(arg=None, lineno=111)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$198binary_true_divide.54', '$dphi_term200.55']
12-22 13:15 DEBUG    dispatch pc=204, inst=BINARY_MULTIPLY(arg=None, lineno=110)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_jk170.40', '$202binary_add.56']
12-22 13:15 DEBUG    dispatch pc=206, inst=STORE_FAST(arg=37, lineno=110)
12-22 13:15 DEBUG    stack ['$phi84.0', '$204binary_multiply.57']
12-22 13:15 DEBUG    dispatch pc=208, inst=LOAD_FAST(arg=36, lineno=113)
12-22 13:15 DEBUG    stack ['$phi84.0']
12-22 13:15 DEBUG    dispatch pc=210, inst=LOAD_CONST(arg=2, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58']
12-22 13:15 DEBUG    dispatch pc=212, inst=LOAD_FAST(arg=7, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59']
12-22 13:15 DEBUG    dispatch pc=214, inst=LOAD_CONST(arg=3, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60']
12-22 13:15 DEBUG    dispatch pc=216, inst=LOAD_FAST(arg=33, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60', '$const214.61']
12-22 13:15 DEBUG    dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60', '$const214.61', '$phi216.62']
12-22 13:15 DEBUG    dispatch pc=220, inst=BINARY_MULTIPLY(arg=None, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$b212.60', '$218binary_subtract.63']
12-22 13:15 DEBUG    dispatch pc=222, inst=BINARY_SUBTRACT(arg=None, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$const210.59', '$220binary_multiply.64']
12-22 13:15 DEBUG    dispatch pc=224, inst=LOAD_GLOBAL(arg=5, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65']
12-22 13:15 DEBUG    dispatch pc=226, inst=LOAD_METHOD(arg=6, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$224load_global.66']
12-22 13:15 DEBUG    dispatch pc=228, inst=LOAD_FAST(arg=19, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67']
12-22 13:15 DEBUG    dispatch pc=230, inst=LOAD_FAST(arg=28, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67', '$dens_re_sum228.68']
12-22 13:15 DEBUG    dispatch pc=232, inst=BINARY_SUBSCR(arg=None, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67', '$dens_re_sum228.68', '$j230.69']
12-22 13:15 DEBUG    dispatch pc=234, inst=CALL_METHOD(arg=1, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$226load_method.67', '$232binary_subscr.70']
12-22 13:15 DEBUG    dispatch pc=236, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$222binary_subtract.65', '$234call_method.71']
12-22 13:15 DEBUG    dispatch pc=238, inst=LOAD_FAST(arg=34, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$236binary_true_divide.72']
12-22 13:15 DEBUG    dispatch pc=240, inst=BINARY_ADD(arg=None, lineno=114)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$236binary_true_divide.72', '$dphi_term238.73']
12-22 13:15 DEBUG    dispatch pc=242, inst=BINARY_MULTIPLY(arg=None, lineno=113)
12-22 13:15 DEBUG    stack ['$phi84.0', '$q_kj208.58', '$240binary_add.74']
12-22 13:15 DEBUG    dispatch pc=244, inst=STORE_FAST(arg=38, lineno=113)
12-22 13:15 DEBUG    stack ['$phi84.0', '$242binary_multiply.75']
12-22 13:15 DEBUG    dispatch pc=246, inst=LOAD_FAST(arg=21, lineno=117)
12-22 13:15 DEBUG    stack ['$phi84.0']
12-22 13:15 DEBUG    dispatch pc=248, inst=LOAD_FAST(arg=21, lineno=117)
12-22 13:15 DEBUG    stack ['$phi84.0', '$dens_re_std246.76']
12-22 13:15 DEBUG    dispatch pc=250, inst=BINARY_MULTIPLY(arg=None, lineno=117)
12-22 13:15 DEBUG    stack ['$phi84.0', '$dens_re_std246.76', '$dens_re_std248.77']
12-22 13:15 DEBUG    dispatch pc=252, inst=STORE_FAST(arg=39, lineno=117)
12-22 13:15 DEBUG    stack ['$phi84.0', '$250binary_multiply.78']
12-22 13:15 DEBUG    dispatch pc=254, inst=LOAD_FAST(arg=24, lineno=119)
12-22 13:15 DEBUG    stack ['$phi84.0']
12-22 13:15 DEBUG    dispatch pc=256, inst=LOAD_FAST(arg=29, lineno=119)
12-22 13:15 DEBUG    stack ['$phi84.0', '$dens_R254.79']
12-22 13:15 DEBUG    dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=119)
12-22 13:15 DEBUG    stack ['$phi84.0', '$dens_R254.79', '$k256.80']
12-22 13:15 DEBUG    dispatch pc=260, inst=LOAD_FAST(arg=20, lineno=120)
12-22 13:15 DEBUG    stack ['$phi84.0', '$258binary_subscr.81']
12-22 13:15 DEBUG    dispatch pc=262, inst=LOAD_FAST(arg=19, lineno=120)
12-22 13:15 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82']
12-22 13:15 DEBUG    dispatch pc=264, inst=LOAD_FAST(arg=29, lineno=120)
12-22 13:15 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$dens_re_sum262.83']
12-22 13:15 DEBUG    dispatch pc=266, inst=BINARY_SUBSCR(arg=None, lineno=120)
12-22 13:15 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$dens_re_sum262.83', '$k264.84']
12-22 13:15 DEBUG    dispatch pc=268, inst=LOAD_FAST(arg=22, lineno=120)
12-22 13:15 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$266binary_subscr.85']
12-22 13:15 DEBUG    dispatch pc=270, inst=BINARY_SUBTRACT(arg=None, lineno=120)
12-22 13:15 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$266binary_subscr.85', '$dens_re_mean268.86']
12-22 13:15 DEBUG    dispatch pc=272, inst=BINARY_MULTIPLY(arg=None, lineno=120)
12-22 13:15 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$dens_re_cov260.82', '$270binary_subtract.87']
12-22 13:15 DEBUG    dispatch pc=274, inst=LOAD_FAST(arg=39, lineno=120)
12-22 13:15 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$272binary_multiply.88']
12-22 13:15 DEBUG    dispatch pc=276, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=120)
12-22 13:15 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$272binary_multiply.88', '$re_std_sq274.89']
12-22 13:15 DEBUG    dispatch pc=278, inst=BINARY_SUBTRACT(arg=None, lineno=119)
12-22 13:15 DEBUG    stack ['$phi84.0', '$258binary_subscr.81', '$276binary_true_divide.90']
12-22 13:15 DEBUG    dispatch pc=280, inst=STORE_FAST(arg=40, lineno=118)
12-22 13:15 DEBUG    stack ['$phi84.0', '$278binary_subtract.91']
12-22 13:15 DEBUG    dispatch pc=282, inst=LOAD_FAST(arg=24, lineno=123)
12-22 13:15 DEBUG    stack ['$phi84.0']
12-22 13:15 DEBUG    dispatch pc=284, inst=LOAD_FAST(arg=28, lineno=123)
12-22 13:15 DEBUG    stack ['$phi84.0', '$dens_R282.92']
12-22 13:15 DEBUG    dispatch pc=286, inst=BINARY_SUBSCR(arg=None, lineno=123)
12-22 13:15 DEBUG    stack ['$phi84.0', '$dens_R282.92', '$j284.93']
12-22 13:15 DEBUG    dispatch pc=288, inst=LOAD_FAST(arg=20, lineno=124)
12-22 13:15 DEBUG    stack ['$phi84.0', '$286binary_subscr.94']
12-22 13:15 DEBUG    dispatch pc=290, inst=LOAD_FAST(arg=19, lineno=124)
12-22 13:15 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95']
12-22 13:15 DEBUG    dispatch pc=292, inst=LOAD_FAST(arg=28, lineno=124)
12-22 13:15 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$dens_re_sum290.96']
12-22 13:15 DEBUG    dispatch pc=294, inst=BINARY_SUBSCR(arg=None, lineno=124)
12-22 13:15 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$dens_re_sum290.96', '$j292.97']
12-22 13:15 DEBUG    dispatch pc=296, inst=LOAD_FAST(arg=22, lineno=124)
12-22 13:15 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$294binary_subscr.98']
12-22 13:15 DEBUG    dispatch pc=298, inst=BINARY_SUBTRACT(arg=None, lineno=124)
12-22 13:15 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$294binary_subscr.98', '$dens_re_mean296.99']
12-22 13:15 DEBUG    dispatch pc=300, inst=BINARY_MULTIPLY(arg=None, lineno=124)
12-22 13:15 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$dens_re_cov288.95', '$298binary_subtract.100']
12-22 13:15 DEBUG    dispatch pc=302, inst=LOAD_FAST(arg=39, lineno=124)
12-22 13:15 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$300binary_multiply.101']
12-22 13:15 DEBUG    dispatch pc=304, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=124)
12-22 13:15 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$300binary_multiply.101', '$re_std_sq302.102']
12-22 13:15 DEBUG    dispatch pc=306, inst=BINARY_SUBTRACT(arg=None, lineno=123)
12-22 13:15 DEBUG    stack ['$phi84.0', '$286binary_subscr.94', '$304binary_true_divide.103']
12-22 13:15 DEBUG    dispatch pc=308, inst=STORE_FAST(arg=41, lineno=122)
12-22 13:15 DEBUG    stack ['$phi84.0', '$306binary_subtract.104']
12-22 13:15 DEBUG    dispatch pc=310, inst=LOAD_FAST(arg=23, lineno=128)
12-22 13:15 DEBUG    stack ['$phi84.0']
12-22 13:15 DEBUG    dispatch pc=312, inst=LOAD_FAST(arg=26, lineno=129)
12-22 13:15 DEBUG    stack ['$phi84.0', '$dens_lambda310.105']
12-22 13:15 DEBUG    dispatch pc=314, inst=BINARY_MULTIPLY(arg=None, lineno=128)
12-22 13:15 DEBUG    stack ['$phi84.0', '$dens_lambda310.105', '$dens_mu_tot312.106']
12-22 13:15 DEBUG    dispatch pc=316, inst=LOAD_FAST(arg=40, lineno=130)
12-22 13:15 DEBUG    stack ['$phi84.0', '$314binary_multiply.107']
12-22 13:15 DEBUG    dispatch pc=318, inst=LOAD_FAST(arg=37, lineno=130)
12-22 13:15 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$weight_k316.108']
12-22 13:15 DEBUG    dispatch pc=320, inst=BINARY_MULTIPLY(arg=None, lineno=130)
12-22 13:15 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$weight_k316.108', '$drk318.109']
12-22 13:15 DEBUG    dispatch pc=322, inst=LOAD_FAST(arg=41, lineno=130)
12-22 13:15 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110']
12-22 13:15 DEBUG    dispatch pc=324, inst=LOAD_FAST(arg=38, lineno=130)
12-22 13:15 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110', '$weight_j322.111']
12-22 13:15 DEBUG    dispatch pc=326, inst=BINARY_MULTIPLY(arg=None, lineno=130)
12-22 13:15 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110', '$weight_j322.111', '$drj324.112']
12-22 13:15 DEBUG    dispatch pc=328, inst=BINARY_ADD(arg=None, lineno=130)
12-22 13:15 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$320binary_multiply.110', '$326binary_multiply.113']
12-22 13:15 DEBUG    dispatch pc=330, inst=BINARY_MULTIPLY(arg=None, lineno=128)
12-22 13:15 DEBUG    stack ['$phi84.0', '$314binary_multiply.107', '$328binary_add.114']
12-22 13:15 DEBUG    dispatch pc=332, inst=LOAD_FAST(arg=25, lineno=131)
12-22 13:15 DEBUG    stack ['$phi84.0', '$330binary_multiply.115']
12-22 13:15 DEBUG    dispatch pc=334, inst=LOAD_FAST(arg=27, lineno=131)
12-22 13:15 DEBUG    stack ['$phi84.0', '$330binary_multiply.115', '$dens_mu332.116']
12-22 13:15 DEBUG    dispatch pc=336, inst=BINARY_SUBSCR(arg=None, lineno=131)
12-22 13:15 DEBUG    stack ['$phi84.0', '$330binary_multiply.115', '$dens_mu332.116', '$i334.117']
12-22 13:15 DEBUG    dispatch pc=338, inst=LOAD_FAST(arg=21, lineno=131)
12-22 13:15 DEBUG    stack ['$phi84.0', '$330binary_multiply.115', '$336binary_subscr.118']
12-22 13:15 DEBUG    dispatch pc=340, inst=BINARY_MULTIPLY(arg=None, lineno=131)
12-22 13:15 DEBUG    stack ['$phi84.0', '$330binary_multiply.115', '$336binary_subscr.118', '$dens_re_std338.119']
12-22 13:15 DEBUG    dispatch pc=342, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=128)
12-22 13:15 DEBUG    stack ['$phi84.0', '$330binary_multiply.115', '$340binary_multiply.120']
12-22 13:15 DEBUG    dispatch pc=344, inst=LOAD_FAST(arg=4, lineno=132)
12-22 13:15 DEBUG    stack ['$phi84.0', '$342binary_true_divide.121']
12-22 13:15 DEBUG    dispatch pc=346, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=128)
12-22 13:15 DEBUG    stack ['$phi84.0', '$342binary_true_divide.121', '$n_vertices344.122']
12-22 13:15 DEBUG    dispatch pc=348, inst=STORE_FAST(arg=42, lineno=127)
12-22 13:15 DEBUG    stack ['$phi84.0', '$346binary_true_divide.123']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=350, stack=('$phi84.0',), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
12-22 13:15 DEBUG    stack: ['$phi350.0']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=350 nstack_initial=1)
12-22 13:15 DEBUG    dispatch pc=350, inst=LOAD_FAST(arg=32, lineno=135)
12-22 13:15 DEBUG    stack ['$phi350.0']
12-22 13:15 DEBUG    dispatch pc=352, inst=LOAD_CONST(arg=4, lineno=135)
12-22 13:15 DEBUG    stack ['$phi350.0', '$dist_squared350.1']
12-22 13:15 DEBUG    dispatch pc=354, inst=COMPARE_OP(arg=4, lineno=135)
12-22 13:15 DEBUG    stack ['$phi350.0', '$dist_squared350.1', '$const352.2']
12-22 13:15 DEBUG    dispatch pc=356, inst=NOP(arg=1, lineno=135)
12-22 13:15 DEBUG    stack ['$phi350.0', '$354compare_op.3']
12-22 13:15 DEBUG    dispatch pc=358, inst=POP_JUMP_IF_FALSE(arg=410, lineno=135)
12-22 13:15 DEBUG    stack ['$phi350.0', '$354compare_op.3']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=360, stack=('$phi350.0',), blockstack=(), npush=0), Edge(pc=410, stack=('$phi350.0',), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=360 nstack_initial=1), State(pc_initial=410 nstack_initial=1)])
12-22 13:15 DEBUG    pending: deque([State(pc_initial=360 nstack_initial=1), State(pc_initial=410 nstack_initial=1)])
12-22 13:15 DEBUG    stack: ['$phi360.0']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=360 nstack_initial=1)
12-22 13:15 DEBUG    dispatch pc=360, inst=LOAD_CONST(arg=5, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0']
12-22 13:15 DEBUG    dispatch pc=362, inst=LOAD_FAST(arg=6, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$const360.1']
12-22 13:15 DEBUG    dispatch pc=364, inst=BINARY_MULTIPLY(arg=None, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$const360.1', '$a362.2']
12-22 13:15 DEBUG    dispatch pc=366, inst=LOAD_FAST(arg=7, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$364binary_multiply.3']
12-22 13:15 DEBUG    dispatch pc=368, inst=BINARY_MULTIPLY(arg=None, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$364binary_multiply.3', '$b366.4']
12-22 13:15 DEBUG    dispatch pc=370, inst=LOAD_GLOBAL(arg=4, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$368binary_multiply.5']
12-22 13:15 DEBUG    dispatch pc=372, inst=LOAD_FAST(arg=32, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$370load_global.6']
12-22 13:15 DEBUG    dispatch pc=374, inst=LOAD_FAST(arg=7, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$370load_global.6', '$dist_squared372.7']
12-22 13:15 DEBUG    dispatch pc=376, inst=LOAD_CONST(arg=2, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$370load_global.6', '$dist_squared372.7', '$b374.8']
12-22 13:15 DEBUG    dispatch pc=378, inst=BINARY_SUBTRACT(arg=None, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$370load_global.6', '$dist_squared372.7', '$b374.8', '$const376.9']
12-22 13:15 DEBUG    dispatch pc=380, inst=CALL_FUNCTION(arg=2, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$370load_global.6', '$dist_squared372.7', '$378binary_subtract.10']
12-22 13:15 DEBUG    dispatch pc=382, inst=BINARY_MULTIPLY(arg=None, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$368binary_multiply.5', '$380call_function.11']
12-22 13:15 DEBUG    dispatch pc=384, inst=STORE_FAST(arg=43, lineno=136)
12-22 13:15 DEBUG    stack ['$phi360.0', '$382binary_multiply.12']
12-22 13:15 DEBUG    dispatch pc=386, inst=LOAD_FAST(arg=43, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0']
12-22 13:15 DEBUG    dispatch pc=388, inst=LOAD_FAST(arg=6, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0', '$grad_coeff386.13']
12-22 13:15 DEBUG    dispatch pc=390, inst=LOAD_GLOBAL(arg=4, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$a388.14']
12-22 13:15 DEBUG    dispatch pc=392, inst=LOAD_FAST(arg=32, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$a388.14', '$390load_global.15']
12-22 13:15 DEBUG    dispatch pc=394, inst=LOAD_FAST(arg=7, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$a388.14', '$390load_global.15', '$dist_squared392.16']
12-22 13:15 DEBUG    dispatch pc=396, inst=CALL_FUNCTION(arg=2, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$a388.14', '$390load_global.15', '$dist_squared392.16', '$b394.17']
12-22 13:15 DEBUG    dispatch pc=398, inst=BINARY_MULTIPLY(arg=None, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$a388.14', '$396call_function.18']
12-22 13:15 DEBUG    dispatch pc=400, inst=LOAD_CONST(arg=2, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$398binary_multiply.19']
12-22 13:15 DEBUG    dispatch pc=402, inst=BINARY_ADD(arg=None, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$398binary_multiply.19', '$const400.20']
12-22 13:15 DEBUG    dispatch pc=404, inst=INPLACE_TRUE_DIVIDE(arg=None, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0', '$grad_coeff386.13', '$402binary_add.21']
12-22 13:15 DEBUG    dispatch pc=406, inst=STORE_FAST(arg=43, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0', '$404inplace_true_divide.22']
12-22 13:15 DEBUG    dispatch pc=408, inst=JUMP_FORWARD(arg=4, lineno=137)
12-22 13:15 DEBUG    stack ['$phi360.0']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=414, stack=('$phi360.0',), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=410 nstack_initial=1), State(pc_initial=414 nstack_initial=1)])
12-22 13:15 DEBUG    stack: ['$phi410.0']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=410 nstack_initial=1)
12-22 13:15 DEBUG    dispatch pc=410, inst=LOAD_CONST(arg=4, lineno=139)
12-22 13:15 DEBUG    stack ['$phi410.0']
12-22 13:15 DEBUG    dispatch pc=412, inst=STORE_FAST(arg=43, lineno=139)
12-22 13:15 DEBUG    stack ['$phi410.0', '$const410.1']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=414, stack=('$phi410.0',), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=414 nstack_initial=1), State(pc_initial=414 nstack_initial=1)])
12-22 13:15 DEBUG    stack: ['$phi414.0']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=414 nstack_initial=1)
12-22 13:15 DEBUG    dispatch pc=414, inst=LOAD_GLOBAL(arg=7, lineno=141)
12-22 13:15 DEBUG    stack ['$phi414.0']
12-22 13:15 DEBUG    dispatch pc=416, inst=LOAD_FAST(arg=10, lineno=141)
12-22 13:15 DEBUG    stack ['$phi414.0', '$414load_global.1']
12-22 13:15 DEBUG    dispatch pc=418, inst=CALL_FUNCTION(arg=1, lineno=141)
12-22 13:15 DEBUG    stack ['$phi414.0', '$414load_global.1', '$dim416.2']
12-22 13:15 DEBUG    dispatch pc=420, inst=GET_ITER(arg=None, lineno=141)
12-22 13:15 DEBUG    stack ['$phi414.0', '$418call_function.3']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=422, stack=('$phi414.0', '$420get_iter.4'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=414 nstack_initial=1), State(pc_initial=422 nstack_initial=2)])
12-22 13:15 DEBUG    pending: deque([State(pc_initial=422 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi422.0', '$phi422.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=422 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=422, inst=FOR_ITER(arg=116, lineno=141)
12-22 13:15 DEBUG    stack ['$phi422.0', '$phi422.1']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=540, stack=('$phi422.0',), blockstack=(), npush=0), Edge(pc=424, stack=('$phi422.0', '$phi422.1', '$422for_iter.3'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=540 nstack_initial=1), State(pc_initial=424 nstack_initial=3)])
12-22 13:15 DEBUG    stack: ['$phi540.0']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=540 nstack_initial=1)
12-22 13:15 DEBUG    dispatch pc=540, inst=LOAD_FAST(arg=15, lineno=153)
12-22 13:15 DEBUG    stack ['$phi540.0']
12-22 13:15 DEBUG    dispatch pc=542, inst=LOAD_FAST(arg=27, lineno=153)
12-22 13:15 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1']
12-22 13:15 DEBUG    dispatch pc=544, inst=DUP_TOP_TWO(arg=None, lineno=153)
12-22 13:15 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2']
12-22 13:15 DEBUG    dispatch pc=546, inst=BINARY_SUBSCR(arg=None, lineno=153)
12-22 13:15 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$544dup_top_two.3', '$544dup_top_two.4']
12-22 13:15 DEBUG    dispatch pc=548, inst=LOAD_FAST(arg=5, lineno=153)
12-22 13:15 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$546binary_subscr.5']
12-22 13:15 DEBUG    dispatch pc=550, inst=LOAD_FAST(arg=27, lineno=153)
12-22 13:15 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$546binary_subscr.5', '$epochs_per_sample548.6']
12-22 13:15 DEBUG    dispatch pc=552, inst=BINARY_SUBSCR(arg=None, lineno=153)
12-22 13:15 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$546binary_subscr.5', '$epochs_per_sample548.6', '$i550.7']
12-22 13:15 DEBUG    dispatch pc=554, inst=INPLACE_ADD(arg=None, lineno=153)
12-22 13:15 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$546binary_subscr.5', '$552binary_subscr.8']
12-22 13:15 DEBUG    dispatch pc=556, inst=ROT_THREE(arg=None, lineno=153)
12-22 13:15 DEBUG    stack ['$phi540.0', '$epoch_of_next_sample540.1', '$i542.2', '$554inplace_add.9']
12-22 13:15 DEBUG    dispatch pc=558, inst=STORE_SUBSCR(arg=None, lineno=153)
12-22 13:15 DEBUG    stack ['$phi540.0', '$554inplace_add.9', '$epoch_of_next_sample540.1', '$i542.2']
12-22 13:15 DEBUG    dispatch pc=560, inst=LOAD_GLOBAL(arg=9, lineno=155)
12-22 13:15 DEBUG    stack ['$phi540.0']
12-22 13:15 DEBUG    dispatch pc=562, inst=LOAD_FAST(arg=16, lineno=156)
12-22 13:15 DEBUG    stack ['$phi540.0', '$560load_global.10']
12-22 13:15 DEBUG    dispatch pc=564, inst=LOAD_FAST(arg=14, lineno=156)
12-22 13:15 DEBUG    stack ['$phi540.0', '$560load_global.10', '$n562.11']
12-22 13:15 DEBUG    dispatch pc=566, inst=LOAD_FAST(arg=27, lineno=156)
12-22 13:15 DEBUG    stack ['$phi540.0', '$560load_global.10', '$n562.11', '$epoch_of_next_negative_sample564.12']
12-22 13:15 DEBUG    dispatch pc=568, inst=BINARY_SUBSCR(arg=None, lineno=156)
12-22 13:15 DEBUG    stack ['$phi540.0', '$560load_global.10', '$n562.11', '$epoch_of_next_negative_sample564.12', '$i566.13']
12-22 13:15 DEBUG    dispatch pc=570, inst=BINARY_SUBTRACT(arg=None, lineno=156)
12-22 13:15 DEBUG    stack ['$phi540.0', '$560load_global.10', '$n562.11', '$568binary_subscr.14']
12-22 13:15 DEBUG    dispatch pc=572, inst=LOAD_FAST(arg=13, lineno=156)
12-22 13:15 DEBUG    stack ['$phi540.0', '$560load_global.10', '$570binary_subtract.15']
12-22 13:15 DEBUG    dispatch pc=574, inst=LOAD_FAST(arg=27, lineno=156)
12-22 13:15 DEBUG    stack ['$phi540.0', '$560load_global.10', '$570binary_subtract.15', '$epochs_per_negative_sample572.16']
12-22 13:15 DEBUG    dispatch pc=576, inst=BINARY_SUBSCR(arg=None, lineno=156)
12-22 13:15 DEBUG    stack ['$phi540.0', '$560load_global.10', '$570binary_subtract.15', '$epochs_per_negative_sample572.16', '$i574.17']
12-22 13:15 DEBUG    dispatch pc=578, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=156)
12-22 13:15 DEBUG    stack ['$phi540.0', '$560load_global.10', '$570binary_subtract.15', '$576binary_subscr.18']
12-22 13:15 DEBUG    dispatch pc=580, inst=CALL_FUNCTION(arg=1, lineno=155)
12-22 13:15 DEBUG    stack ['$phi540.0', '$560load_global.10', '$578binary_true_divide.19']
12-22 13:15 DEBUG    dispatch pc=582, inst=STORE_FAST(arg=46, lineno=155)
12-22 13:15 DEBUG    stack ['$phi540.0', '$580call_function.20']
12-22 13:15 DEBUG    dispatch pc=584, inst=LOAD_GLOBAL(arg=7, lineno=159)
12-22 13:15 DEBUG    stack ['$phi540.0']
12-22 13:15 DEBUG    dispatch pc=586, inst=LOAD_FAST(arg=46, lineno=159)
12-22 13:15 DEBUG    stack ['$phi540.0', '$584load_global.21']
12-22 13:15 DEBUG    dispatch pc=588, inst=CALL_FUNCTION(arg=1, lineno=159)
12-22 13:15 DEBUG    stack ['$phi540.0', '$584load_global.21', '$n_neg_samples586.22']
12-22 13:15 DEBUG    dispatch pc=590, inst=GET_ITER(arg=None, lineno=159)
12-22 13:15 DEBUG    stack ['$phi540.0', '$588call_function.23']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=592, stack=('$phi540.0', '$590get_iter.24'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=424 nstack_initial=3), State(pc_initial=592 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi424.0', '$phi424.1', '$phi424.2']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=424 nstack_initial=3)
12-22 13:15 DEBUG    dispatch pc=424, inst=STORE_FAST(arg=44, lineno=141)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$phi424.2']
12-22 13:15 DEBUG    dispatch pc=426, inst=LOAD_GLOBAL(arg=8, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1']
12-22 13:15 DEBUG    dispatch pc=428, inst=LOAD_FAST(arg=43, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3']
12-22 13:15 DEBUG    dispatch pc=430, inst=LOAD_FAST(arg=30, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4']
12-22 13:15 DEBUG    dispatch pc=432, inst=LOAD_FAST(arg=44, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$current430.5']
12-22 13:15 DEBUG    dispatch pc=434, inst=BINARY_SUBSCR(arg=None, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$current430.5', '$d432.6']
12-22 13:15 DEBUG    dispatch pc=436, inst=LOAD_FAST(arg=31, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$434binary_subscr.7']
12-22 13:15 DEBUG    dispatch pc=438, inst=LOAD_FAST(arg=44, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$434binary_subscr.7', '$other436.8']
12-22 13:15 DEBUG    dispatch pc=440, inst=BINARY_SUBSCR(arg=None, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$434binary_subscr.7', '$other436.8', '$d438.9']
12-22 13:15 DEBUG    dispatch pc=442, inst=BINARY_SUBTRACT(arg=None, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$434binary_subscr.7', '$440binary_subscr.10']
12-22 13:15 DEBUG    dispatch pc=444, inst=BINARY_MULTIPLY(arg=None, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$grad_coeff428.4', '$442binary_subtract.11']
12-22 13:15 DEBUG    dispatch pc=446, inst=CALL_FUNCTION(arg=1, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$426load_global.3', '$444binary_multiply.12']
12-22 13:15 DEBUG    dispatch pc=448, inst=STORE_FAST(arg=45, lineno=142)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$446call_function.13']
12-22 13:15 DEBUG    dispatch pc=450, inst=LOAD_FAST(arg=17, lineno=144)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1']
12-22 13:15 DEBUG    dispatch pc=452, inst=NOP(arg=1, lineno=144)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$densmap_flag450.14']
12-22 13:15 DEBUG    dispatch pc=454, inst=POP_JUMP_IF_FALSE(arg=488, lineno=144)
12-22 13:15 DEBUG    stack ['$phi424.0', '$phi424.1', '$densmap_flag450.14']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=456, stack=('$phi424.0', '$phi424.1'), blockstack=(), npush=0), Edge(pc=488, stack=('$phi424.0', '$phi424.1'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=592 nstack_initial=2), State(pc_initial=456 nstack_initial=2), State(pc_initial=488 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi592.0', '$phi592.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=592 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=592, inst=FOR_ITER(arg=186, lineno=159)
12-22 13:15 DEBUG    stack ['$phi592.0', '$phi592.1']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=780, stack=('$phi592.0',), blockstack=(), npush=0), Edge(pc=594, stack=('$phi592.0', '$phi592.1', '$592for_iter.3'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=456 nstack_initial=2), State(pc_initial=488 nstack_initial=2), State(pc_initial=780 nstack_initial=1), State(pc_initial=594 nstack_initial=3)])
12-22 13:15 DEBUG    stack: ['$phi456.0', '$phi456.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=456 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=456, inst=LOAD_FAST(arg=45, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1']
12-22 13:15 DEBUG    dispatch pc=458, inst=LOAD_GLOBAL(arg=8, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2']
12-22 13:15 DEBUG    dispatch pc=460, inst=LOAD_CONST(arg=6, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3']
12-22 13:15 DEBUG    dispatch pc=462, inst=LOAD_FAST(arg=42, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$const460.4']
12-22 13:15 DEBUG    dispatch pc=464, inst=BINARY_MULTIPLY(arg=None, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$const460.4', '$grad_cor_coeff462.5']
12-22 13:15 DEBUG    dispatch pc=466, inst=LOAD_FAST(arg=30, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6']
12-22 13:15 DEBUG    dispatch pc=468, inst=LOAD_FAST(arg=44, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$current466.7']
12-22 13:15 DEBUG    dispatch pc=470, inst=BINARY_SUBSCR(arg=None, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$current466.7', '$d468.8']
12-22 13:15 DEBUG    dispatch pc=472, inst=LOAD_FAST(arg=31, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$470binary_subscr.9']
12-22 13:15 DEBUG    dispatch pc=474, inst=LOAD_FAST(arg=44, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$470binary_subscr.9', '$other472.10']
12-22 13:15 DEBUG    dispatch pc=476, inst=BINARY_SUBSCR(arg=None, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$470binary_subscr.9', '$other472.10', '$d474.11']
12-22 13:15 DEBUG    dispatch pc=478, inst=BINARY_SUBTRACT(arg=None, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$470binary_subscr.9', '$476binary_subscr.12']
12-22 13:15 DEBUG    dispatch pc=480, inst=BINARY_MULTIPLY(arg=None, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$464binary_multiply.6', '$478binary_subtract.13']
12-22 13:15 DEBUG    dispatch pc=482, inst=CALL_FUNCTION(arg=1, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$458load_global.3', '$480binary_multiply.14']
12-22 13:15 DEBUG    dispatch pc=484, inst=INPLACE_ADD(arg=None, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$grad_d456.2', '$482call_function.15']
12-22 13:15 DEBUG    dispatch pc=486, inst=STORE_FAST(arg=45, lineno=147)
12-22 13:15 DEBUG    stack ['$phi456.0', '$phi456.1', '$484inplace_add.16']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=488, stack=('$phi456.0', '$phi456.1'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=488 nstack_initial=2), State(pc_initial=780 nstack_initial=1), State(pc_initial=594 nstack_initial=3), State(pc_initial=488 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi488.0', '$phi488.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=488 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=488, inst=LOAD_FAST(arg=30, lineno=149)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1']
12-22 13:15 DEBUG    dispatch pc=490, inst=LOAD_FAST(arg=44, lineno=149)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2']
12-22 13:15 DEBUG    dispatch pc=492, inst=DUP_TOP_TWO(arg=None, lineno=149)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3']
12-22 13:15 DEBUG    dispatch pc=494, inst=BINARY_SUBSCR(arg=None, lineno=149)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$492dup_top_two.4', '$492dup_top_two.5']
12-22 13:15 DEBUG    dispatch pc=496, inst=LOAD_FAST(arg=45, lineno=149)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$494binary_subscr.6']
12-22 13:15 DEBUG    dispatch pc=498, inst=LOAD_FAST(arg=12, lineno=149)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$494binary_subscr.6', '$grad_d496.7']
12-22 13:15 DEBUG    dispatch pc=500, inst=BINARY_MULTIPLY(arg=None, lineno=149)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$494binary_subscr.6', '$grad_d496.7', '$alpha498.8']
12-22 13:15 DEBUG    dispatch pc=502, inst=INPLACE_ADD(arg=None, lineno=149)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$494binary_subscr.6', '$500binary_multiply.9']
12-22 13:15 DEBUG    dispatch pc=504, inst=ROT_THREE(arg=None, lineno=149)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1', '$current488.2', '$d490.3', '$502inplace_add.10']
12-22 13:15 DEBUG    dispatch pc=506, inst=STORE_SUBSCR(arg=None, lineno=149)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1', '$502inplace_add.10', '$current488.2', '$d490.3']
12-22 13:15 DEBUG    dispatch pc=508, inst=LOAD_FAST(arg=11, lineno=150)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1']
12-22 13:15 DEBUG    dispatch pc=510, inst=NOP(arg=1, lineno=150)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1', '$move_other508.11']
12-22 13:15 DEBUG    dispatch pc=512, inst=POP_JUMP_IF_FALSE(arg=422, lineno=150)
12-22 13:15 DEBUG    stack ['$phi488.0', '$phi488.1', '$move_other508.11']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=514, stack=('$phi488.0', '$phi488.1'), blockstack=(), npush=0), Edge(pc=422, stack=('$phi488.0', '$phi488.1'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=780 nstack_initial=1), State(pc_initial=594 nstack_initial=3), State(pc_initial=488 nstack_initial=2), State(pc_initial=514 nstack_initial=2), State(pc_initial=422 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi780.0']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=780 nstack_initial=1)
12-22 13:15 DEBUG    dispatch pc=780, inst=LOAD_FAST(arg=14, lineno=183)
12-22 13:15 DEBUG    stack ['$phi780.0']
12-22 13:15 DEBUG    dispatch pc=782, inst=LOAD_FAST(arg=27, lineno=183)
12-22 13:15 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1']
12-22 13:15 DEBUG    dispatch pc=784, inst=DUP_TOP_TWO(arg=None, lineno=183)
12-22 13:15 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2']
12-22 13:15 DEBUG    dispatch pc=786, inst=BINARY_SUBSCR(arg=None, lineno=183)
12-22 13:15 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$784dup_top_two.3', '$784dup_top_two.4']
12-22 13:15 DEBUG    dispatch pc=788, inst=LOAD_FAST(arg=46, lineno=184)
12-22 13:15 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5']
12-22 13:15 DEBUG    dispatch pc=790, inst=LOAD_FAST(arg=13, lineno=184)
12-22 13:15 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5', '$n_neg_samples788.6']
12-22 13:15 DEBUG    dispatch pc=792, inst=LOAD_FAST(arg=27, lineno=184)
12-22 13:15 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5', '$n_neg_samples788.6', '$epochs_per_negative_sample790.7']
12-22 13:15 DEBUG    dispatch pc=794, inst=BINARY_SUBSCR(arg=None, lineno=184)
12-22 13:15 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5', '$n_neg_samples788.6', '$epochs_per_negative_sample790.7', '$i792.8']
12-22 13:15 DEBUG    dispatch pc=796, inst=BINARY_MULTIPLY(arg=None, lineno=184)
12-22 13:15 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5', '$n_neg_samples788.6', '$794binary_subscr.9']
12-22 13:15 DEBUG    dispatch pc=798, inst=INPLACE_ADD(arg=None, lineno=183)
12-22 13:15 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$786binary_subscr.5', '$796binary_multiply.10']
12-22 13:15 DEBUG    dispatch pc=800, inst=ROT_THREE(arg=None, lineno=183)
12-22 13:15 DEBUG    stack ['$phi780.0', '$epoch_of_next_negative_sample780.1', '$i782.2', '$798inplace_add.11']
12-22 13:15 DEBUG    dispatch pc=802, inst=STORE_SUBSCR(arg=None, lineno=183)
12-22 13:15 DEBUG    stack ['$phi780.0', '$798inplace_add.11', '$epoch_of_next_negative_sample780.1', '$i782.2']
12-22 13:15 DEBUG    dispatch pc=804, inst=JUMP_ABSOLUTE(arg=18, lineno=183)
12-22 13:15 DEBUG    stack ['$phi780.0']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=18, stack=('$phi780.0',), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=594 nstack_initial=3), State(pc_initial=488 nstack_initial=2), State(pc_initial=514 nstack_initial=2), State(pc_initial=422 nstack_initial=2), State(pc_initial=18 nstack_initial=1)])
12-22 13:15 DEBUG    stack: ['$phi594.0', '$phi594.1', '$phi594.2']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=594 nstack_initial=3)
12-22 13:15 DEBUG    dispatch pc=594, inst=STORE_FAST(arg=47, lineno=159)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$phi594.2']
12-22 13:15 DEBUG    dispatch pc=596, inst=LOAD_GLOBAL(arg=10, lineno=160)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1']
12-22 13:15 DEBUG    dispatch pc=598, inst=LOAD_FAST(arg=8, lineno=160)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$596load_global.3']
12-22 13:15 DEBUG    dispatch pc=600, inst=CALL_FUNCTION(arg=1, lineno=160)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$596load_global.3', '$rng_state598.4']
12-22 13:15 DEBUG    dispatch pc=602, inst=LOAD_FAST(arg=4, lineno=160)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$600call_function.5']
12-22 13:15 DEBUG    dispatch pc=604, inst=BINARY_MODULO(arg=None, lineno=160)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$600call_function.5', '$n_vertices602.6']
12-22 13:15 DEBUG    dispatch pc=606, inst=STORE_FAST(arg=29, lineno=160)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$604binary_modulo.7']
12-22 13:15 DEBUG    dispatch pc=608, inst=LOAD_FAST(arg=1, lineno=162)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1']
12-22 13:15 DEBUG    dispatch pc=610, inst=LOAD_FAST(arg=29, lineno=162)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$tail_embedding608.8']
12-22 13:15 DEBUG    dispatch pc=612, inst=BINARY_SUBSCR(arg=None, lineno=162)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$tail_embedding608.8', '$k610.9']
12-22 13:15 DEBUG    dispatch pc=614, inst=STORE_FAST(arg=31, lineno=162)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$612binary_subscr.10']
12-22 13:15 DEBUG    dispatch pc=616, inst=LOAD_GLOBAL(arg=3, lineno=164)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1']
12-22 13:15 DEBUG    dispatch pc=618, inst=LOAD_FAST(arg=30, lineno=164)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$616load_global.11']
12-22 13:15 DEBUG    dispatch pc=620, inst=LOAD_FAST(arg=31, lineno=164)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$616load_global.11', '$current618.12']
12-22 13:15 DEBUG    dispatch pc=622, inst=CALL_FUNCTION(arg=2, lineno=164)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$616load_global.11', '$current618.12', '$other620.13']
12-22 13:15 DEBUG    dispatch pc=624, inst=STORE_FAST(arg=32, lineno=164)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$622call_function.14']
12-22 13:15 DEBUG    dispatch pc=626, inst=LOAD_FAST(arg=32, lineno=166)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1']
12-22 13:15 DEBUG    dispatch pc=628, inst=LOAD_CONST(arg=4, lineno=166)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$dist_squared626.15']
12-22 13:15 DEBUG    dispatch pc=630, inst=COMPARE_OP(arg=4, lineno=166)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$dist_squared626.15', '$const628.16']
12-22 13:15 DEBUG    dispatch pc=632, inst=NOP(arg=2, lineno=166)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$630compare_op.17']
12-22 13:15 DEBUG    dispatch pc=634, inst=POP_JUMP_IF_FALSE(arg=680, lineno=166)
12-22 13:15 DEBUG    stack ['$phi594.0', '$phi594.1', '$630compare_op.17']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=636, stack=('$phi594.0', '$phi594.1'), blockstack=(), npush=0), Edge(pc=680, stack=('$phi594.0', '$phi594.1'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=488 nstack_initial=2), State(pc_initial=514 nstack_initial=2), State(pc_initial=422 nstack_initial=2), State(pc_initial=18 nstack_initial=1), State(pc_initial=636 nstack_initial=2), State(pc_initial=680 nstack_initial=2)])
12-22 13:15 DEBUG    pending: deque([State(pc_initial=514 nstack_initial=2), State(pc_initial=422 nstack_initial=2), State(pc_initial=18 nstack_initial=1), State(pc_initial=636 nstack_initial=2), State(pc_initial=680 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi514.0', '$phi514.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=514 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=514, inst=LOAD_FAST(arg=31, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1']
12-22 13:15 DEBUG    dispatch pc=516, inst=LOAD_FAST(arg=44, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2']
12-22 13:15 DEBUG    dispatch pc=518, inst=DUP_TOP_TWO(arg=None, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3']
12-22 13:15 DEBUG    dispatch pc=520, inst=BINARY_SUBSCR(arg=None, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$518dup_top_two.4', '$518dup_top_two.5']
12-22 13:15 DEBUG    dispatch pc=522, inst=LOAD_FAST(arg=45, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$520binary_subscr.6']
12-22 13:15 DEBUG    dispatch pc=524, inst=UNARY_NEGATIVE(arg=None, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$520binary_subscr.6', '$grad_d522.7']
12-22 13:15 DEBUG    dispatch pc=526, inst=LOAD_FAST(arg=12, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$520binary_subscr.6', '$524unary_negative.8']
12-22 13:15 DEBUG    dispatch pc=528, inst=BINARY_MULTIPLY(arg=None, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$520binary_subscr.6', '$524unary_negative.8', '$alpha526.9']
12-22 13:15 DEBUG    dispatch pc=530, inst=INPLACE_ADD(arg=None, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$520binary_subscr.6', '$528binary_multiply.10']
12-22 13:15 DEBUG    dispatch pc=532, inst=ROT_THREE(arg=None, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1', '$other514.2', '$d516.3', '$530inplace_add.11']
12-22 13:15 DEBUG    dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1', '$530inplace_add.11', '$other514.2', '$d516.3']
12-22 13:15 DEBUG    dispatch pc=536, inst=NOP(arg=1, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1']
12-22 13:15 DEBUG    dispatch pc=538, inst=JUMP_ABSOLUTE(arg=422, lineno=151)
12-22 13:15 DEBUG    stack ['$phi514.0', '$phi514.1']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=422, stack=('$phi514.0', '$phi514.1'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=422 nstack_initial=2), State(pc_initial=18 nstack_initial=1), State(pc_initial=636 nstack_initial=2), State(pc_initial=680 nstack_initial=2), State(pc_initial=422 nstack_initial=2)])
12-22 13:15 DEBUG    pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=636 nstack_initial=2), State(pc_initial=680 nstack_initial=2), State(pc_initial=422 nstack_initial=2)])
12-22 13:15 DEBUG    pending: deque([State(pc_initial=636 nstack_initial=2), State(pc_initial=680 nstack_initial=2), State(pc_initial=422 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi636.0', '$phi636.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=636 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=636, inst=LOAD_CONST(arg=7, lineno=167)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1']
12-22 13:15 DEBUG    dispatch pc=638, inst=LOAD_FAST(arg=9, lineno=167)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$const636.2']
12-22 13:15 DEBUG    dispatch pc=640, inst=BINARY_MULTIPLY(arg=None, lineno=167)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$const636.2', '$gamma638.3']
12-22 13:15 DEBUG    dispatch pc=642, inst=LOAD_FAST(arg=7, lineno=167)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$640binary_multiply.4']
12-22 13:15 DEBUG    dispatch pc=644, inst=BINARY_MULTIPLY(arg=None, lineno=167)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$640binary_multiply.4', '$b642.5']
12-22 13:15 DEBUG    dispatch pc=646, inst=STORE_FAST(arg=43, lineno=167)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$644binary_multiply.6']
12-22 13:15 DEBUG    dispatch pc=648, inst=LOAD_FAST(arg=43, lineno=168)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1']
12-22 13:15 DEBUG    dispatch pc=650, inst=LOAD_CONST(arg=8, lineno=168)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7']
12-22 13:15 DEBUG    dispatch pc=652, inst=LOAD_FAST(arg=32, lineno=168)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$const650.8']
12-22 13:15 DEBUG    dispatch pc=654, inst=BINARY_ADD(arg=None, lineno=168)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$const650.8', '$dist_squared652.9']
12-22 13:15 DEBUG    dispatch pc=656, inst=LOAD_FAST(arg=6, lineno=169)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10']
12-22 13:15 DEBUG    dispatch pc=658, inst=LOAD_GLOBAL(arg=4, lineno=169)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$a656.11']
12-22 13:15 DEBUG    dispatch pc=660, inst=LOAD_FAST(arg=32, lineno=169)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$a656.11', '$658load_global.12']
12-22 13:15 DEBUG    dispatch pc=662, inst=LOAD_FAST(arg=7, lineno=169)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$a656.11', '$658load_global.12', '$dist_squared660.13']
12-22 13:15 DEBUG    dispatch pc=664, inst=CALL_FUNCTION(arg=2, lineno=169)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$a656.11', '$658load_global.12', '$dist_squared660.13', '$b662.14']
12-22 13:15 DEBUG    dispatch pc=666, inst=BINARY_MULTIPLY(arg=None, lineno=169)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$a656.11', '$664call_function.15']
12-22 13:15 DEBUG    dispatch pc=668, inst=LOAD_CONST(arg=3, lineno=169)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$666binary_multiply.16']
12-22 13:15 DEBUG    dispatch pc=670, inst=BINARY_ADD(arg=None, lineno=169)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$666binary_multiply.16', '$const668.17']
12-22 13:15 DEBUG    dispatch pc=672, inst=BINARY_MULTIPLY(arg=None, lineno=168)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$654binary_add.10', '$670binary_add.18']
12-22 13:15 DEBUG    dispatch pc=674, inst=INPLACE_TRUE_DIVIDE(arg=None, lineno=168)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$grad_coeff648.7', '$672binary_multiply.19']
12-22 13:15 DEBUG    dispatch pc=676, inst=STORE_FAST(arg=43, lineno=168)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1', '$674inplace_true_divide.20']
12-22 13:15 DEBUG    dispatch pc=678, inst=JUMP_FORWARD(arg=20, lineno=168)
12-22 13:15 DEBUG    stack ['$phi636.0', '$phi636.1']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=700, stack=('$phi636.0', '$phi636.1'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=680 nstack_initial=2), State(pc_initial=422 nstack_initial=2), State(pc_initial=700 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi680.0', '$phi680.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=680 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=680, inst=LOAD_FAST(arg=28, lineno=171)
12-22 13:15 DEBUG    stack ['$phi680.0', '$phi680.1']
12-22 13:15 DEBUG    dispatch pc=682, inst=LOAD_FAST(arg=29, lineno=171)
12-22 13:15 DEBUG    stack ['$phi680.0', '$phi680.1', '$j680.2']
12-22 13:15 DEBUG    dispatch pc=684, inst=COMPARE_OP(arg=2, lineno=171)
12-22 13:15 DEBUG    stack ['$phi680.0', '$phi680.1', '$j680.2', '$k682.3']
12-22 13:15 DEBUG    dispatch pc=686, inst=NOP(arg=2, lineno=171)
12-22 13:15 DEBUG    stack ['$phi680.0', '$phi680.1', '$684compare_op.4']
12-22 13:15 DEBUG    dispatch pc=688, inst=POP_JUMP_IF_FALSE(arg=696, lineno=171)
12-22 13:15 DEBUG    stack ['$phi680.0', '$phi680.1', '$684compare_op.4']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=690, stack=('$phi680.0', '$phi680.1'), blockstack=(), npush=0), Edge(pc=696, stack=('$phi680.0', '$phi680.1'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=422 nstack_initial=2), State(pc_initial=700 nstack_initial=2), State(pc_initial=690 nstack_initial=2), State(pc_initial=696 nstack_initial=2)])
12-22 13:15 DEBUG    pending: deque([State(pc_initial=700 nstack_initial=2), State(pc_initial=690 nstack_initial=2), State(pc_initial=696 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi700.0', '$phi700.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=700 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=700, inst=LOAD_GLOBAL(arg=7, lineno=176)
12-22 13:15 DEBUG    stack ['$phi700.0', '$phi700.1']
12-22 13:15 DEBUG    dispatch pc=702, inst=LOAD_FAST(arg=10, lineno=176)
12-22 13:15 DEBUG    stack ['$phi700.0', '$phi700.1', '$700load_global.2']
12-22 13:15 DEBUG    dispatch pc=704, inst=CALL_FUNCTION(arg=1, lineno=176)
12-22 13:15 DEBUG    stack ['$phi700.0', '$phi700.1', '$700load_global.2', '$dim702.3']
12-22 13:15 DEBUG    dispatch pc=706, inst=GET_ITER(arg=None, lineno=176)
12-22 13:15 DEBUG    stack ['$phi700.0', '$phi700.1', '$704call_function.4']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=708, stack=('$phi700.0', '$phi700.1', '$706get_iter.5'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=690 nstack_initial=2), State(pc_initial=696 nstack_initial=2), State(pc_initial=708 nstack_initial=3)])
12-22 13:15 DEBUG    stack: ['$phi690.0', '$phi690.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=690 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=690, inst=NOP(arg=2, lineno=172)
12-22 13:15 DEBUG    stack ['$phi690.0', '$phi690.1']
12-22 13:15 DEBUG    dispatch pc=692, inst=JUMP_ABSOLUTE(arg=592, lineno=172)
12-22 13:15 DEBUG    stack ['$phi690.0', '$phi690.1']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=592, stack=('$phi690.0', '$phi690.1'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=696 nstack_initial=2), State(pc_initial=708 nstack_initial=3), State(pc_initial=592 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi696.0', '$phi696.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=696 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=696, inst=LOAD_CONST(arg=4, lineno=174)
12-22 13:15 DEBUG    stack ['$phi696.0', '$phi696.1']
12-22 13:15 DEBUG    dispatch pc=698, inst=STORE_FAST(arg=43, lineno=174)
12-22 13:15 DEBUG    stack ['$phi696.0', '$phi696.1', '$const696.2']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=700, stack=('$phi696.0', '$phi696.1'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=708 nstack_initial=3), State(pc_initial=592 nstack_initial=2), State(pc_initial=700 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi708.0', '$phi708.1', '$phi708.2']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=708 nstack_initial=3)
12-22 13:15 DEBUG    dispatch pc=708, inst=FOR_ITER(arg=66, lineno=176)
12-22 13:15 DEBUG    stack ['$phi708.0', '$phi708.1', '$phi708.2']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=776, stack=('$phi708.0', '$phi708.1'), blockstack=(), npush=0), Edge(pc=710, stack=('$phi708.0', '$phi708.1', '$phi708.2', '$708for_iter.4'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=592 nstack_initial=2), State(pc_initial=700 nstack_initial=2), State(pc_initial=776 nstack_initial=2), State(pc_initial=710 nstack_initial=4)])
12-22 13:15 DEBUG    pending: deque([State(pc_initial=700 nstack_initial=2), State(pc_initial=776 nstack_initial=2), State(pc_initial=710 nstack_initial=4)])
12-22 13:15 DEBUG    pending: deque([State(pc_initial=776 nstack_initial=2), State(pc_initial=710 nstack_initial=4)])
12-22 13:15 DEBUG    stack: ['$phi776.0', '$phi776.1']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=776 nstack_initial=2)
12-22 13:15 DEBUG    dispatch pc=776, inst=NOP(arg=2, lineno=181)
12-22 13:15 DEBUG    stack ['$phi776.0', '$phi776.1']
12-22 13:15 DEBUG    dispatch pc=778, inst=JUMP_ABSOLUTE(arg=592, lineno=181)
12-22 13:15 DEBUG    stack ['$phi776.0', '$phi776.1']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=592, stack=('$phi776.0', '$phi776.1'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=710 nstack_initial=4), State(pc_initial=592 nstack_initial=2)])
12-22 13:15 DEBUG    stack: ['$phi710.0', '$phi710.1', '$phi710.2', '$phi710.3']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=710 nstack_initial=4)
12-22 13:15 DEBUG    dispatch pc=710, inst=STORE_FAST(arg=44, lineno=176)
12-22 13:15 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2', '$phi710.3']
12-22 13:15 DEBUG    dispatch pc=712, inst=LOAD_FAST(arg=43, lineno=177)
12-22 13:15 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2']
12-22 13:15 DEBUG    dispatch pc=714, inst=LOAD_CONST(arg=4, lineno=177)
12-22 13:15 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2', '$grad_coeff712.4']
12-22 13:15 DEBUG    dispatch pc=716, inst=COMPARE_OP(arg=4, lineno=177)
12-22 13:15 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2', '$grad_coeff712.4', '$const714.5']
12-22 13:15 DEBUG    dispatch pc=718, inst=NOP(arg=2, lineno=177)
12-22 13:15 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2', '$716compare_op.6']
12-22 13:15 DEBUG    dispatch pc=720, inst=POP_JUMP_IF_FALSE(arg=748, lineno=177)
12-22 13:15 DEBUG    stack ['$phi710.0', '$phi710.1', '$phi710.2', '$716compare_op.6']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=722, stack=('$phi710.0', '$phi710.1', '$phi710.2'), blockstack=(), npush=0), Edge(pc=748, stack=('$phi710.0', '$phi710.1', '$phi710.2'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=592 nstack_initial=2), State(pc_initial=722 nstack_initial=3), State(pc_initial=748 nstack_initial=3)])
12-22 13:15 DEBUG    pending: deque([State(pc_initial=722 nstack_initial=3), State(pc_initial=748 nstack_initial=3)])
12-22 13:15 DEBUG    stack: ['$phi722.0', '$phi722.1', '$phi722.2']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=722 nstack_initial=3)
12-22 13:15 DEBUG    dispatch pc=722, inst=LOAD_GLOBAL(arg=8, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2']
12-22 13:15 DEBUG    dispatch pc=724, inst=LOAD_FAST(arg=43, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3']
12-22 13:15 DEBUG    dispatch pc=726, inst=LOAD_FAST(arg=30, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4']
12-22 13:15 DEBUG    dispatch pc=728, inst=LOAD_FAST(arg=44, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$current726.5']
12-22 13:15 DEBUG    dispatch pc=730, inst=BINARY_SUBSCR(arg=None, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$current726.5', '$d728.6']
12-22 13:15 DEBUG    dispatch pc=732, inst=LOAD_FAST(arg=31, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$730binary_subscr.7']
12-22 13:15 DEBUG    dispatch pc=734, inst=LOAD_FAST(arg=44, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$730binary_subscr.7', '$other732.8']
12-22 13:15 DEBUG    dispatch pc=736, inst=BINARY_SUBSCR(arg=None, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$730binary_subscr.7', '$other732.8', '$d734.9']
12-22 13:15 DEBUG    dispatch pc=738, inst=BINARY_SUBTRACT(arg=None, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$730binary_subscr.7', '$736binary_subscr.10']
12-22 13:15 DEBUG    dispatch pc=740, inst=BINARY_MULTIPLY(arg=None, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$grad_coeff724.4', '$738binary_subtract.11']
12-22 13:15 DEBUG    dispatch pc=742, inst=CALL_FUNCTION(arg=1, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$722load_global.3', '$740binary_multiply.12']
12-22 13:15 DEBUG    dispatch pc=744, inst=STORE_FAST(arg=45, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2', '$742call_function.13']
12-22 13:15 DEBUG    dispatch pc=746, inst=JUMP_FORWARD(arg=4, lineno=178)
12-22 13:15 DEBUG    stack ['$phi722.0', '$phi722.1', '$phi722.2']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=752, stack=('$phi722.0', '$phi722.1', '$phi722.2'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=748 nstack_initial=3), State(pc_initial=752 nstack_initial=3)])
12-22 13:15 DEBUG    stack: ['$phi748.0', '$phi748.1', '$phi748.2']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=748 nstack_initial=3)
12-22 13:15 DEBUG    dispatch pc=748, inst=LOAD_CONST(arg=1, lineno=180)
12-22 13:15 DEBUG    stack ['$phi748.0', '$phi748.1', '$phi748.2']
12-22 13:15 DEBUG    dispatch pc=750, inst=STORE_FAST(arg=45, lineno=180)
12-22 13:15 DEBUG    stack ['$phi748.0', '$phi748.1', '$phi748.2', '$const748.3']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=752, stack=('$phi748.0', '$phi748.1', '$phi748.2'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=752 nstack_initial=3), State(pc_initial=752 nstack_initial=3)])
12-22 13:15 DEBUG    stack: ['$phi752.0', '$phi752.1', '$phi752.2']
12-22 13:15 DEBUG    state.pc_initial: State(pc_initial=752 nstack_initial=3)
12-22 13:15 DEBUG    dispatch pc=752, inst=LOAD_FAST(arg=30, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2']
12-22 13:15 DEBUG    dispatch pc=754, inst=LOAD_FAST(arg=44, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3']
12-22 13:15 DEBUG    dispatch pc=756, inst=DUP_TOP_TWO(arg=None, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4']
12-22 13:15 DEBUG    dispatch pc=758, inst=BINARY_SUBSCR(arg=None, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$756dup_top_two.5', '$756dup_top_two.6']
12-22 13:15 DEBUG    dispatch pc=760, inst=LOAD_FAST(arg=45, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$758binary_subscr.7']
12-22 13:15 DEBUG    dispatch pc=762, inst=LOAD_FAST(arg=12, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$758binary_subscr.7', '$grad_d760.8']
12-22 13:15 DEBUG    dispatch pc=764, inst=BINARY_MULTIPLY(arg=None, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$758binary_subscr.7', '$grad_d760.8', '$alpha762.9']
12-22 13:15 DEBUG    dispatch pc=766, inst=INPLACE_ADD(arg=None, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$758binary_subscr.7', '$764binary_multiply.10']
12-22 13:15 DEBUG    dispatch pc=768, inst=ROT_THREE(arg=None, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$current752.3', '$d754.4', '$766inplace_add.11']
12-22 13:15 DEBUG    dispatch pc=770, inst=STORE_SUBSCR(arg=None, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2', '$766inplace_add.11', '$current752.3', '$d754.4']
12-22 13:15 DEBUG    dispatch pc=772, inst=NOP(arg=2, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2']
12-22 13:15 DEBUG    dispatch pc=774, inst=JUMP_ABSOLUTE(arg=708, lineno=181)
12-22 13:15 DEBUG    stack ['$phi752.0', '$phi752.1', '$phi752.2']
12-22 13:15 DEBUG    end state. edges=[Edge(pc=708, stack=('$phi752.0', '$phi752.1', '$phi752.2'), blockstack=(), npush=0)]
12-22 13:15 DEBUG    pending: deque([State(pc_initial=752 nstack_initial=3), State(pc_initial=708 nstack_initial=3)])
12-22 13:15 DEBUG    pending: deque([State(pc_initial=708 nstack_initial=3)])
12-22 13:15 DEBUG    -------------------------Prune PHIs-------------------------
12-22 13:15 DEBUG    Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): set(),
             State(pc_initial=20 nstack_initial=1): {'$phi20.0'},
             State(pc_initial=22 nstack_initial=2): {'$phi22.1'},
             State(pc_initial=36 nstack_initial=1): set(),
             State(pc_initial=84 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=360 nstack_initial=1): set(),
             State(pc_initial=410 nstack_initial=1): set(),
             State(pc_initial=414 nstack_initial=1): set(),
             State(pc_initial=422 nstack_initial=2): {'$phi422.1'},
             State(pc_initial=424 nstack_initial=3): {'$phi424.2'},
             State(pc_initial=456 nstack_initial=2): set(),
             State(pc_initial=488 nstack_initial=2): set(),
             State(pc_initial=514 nstack_initial=2): set(),
             State(pc_initial=540 nstack_initial=1): set(),
             State(pc_initial=592 nstack_initial=2): {'$phi592.1'},
             State(pc_initial=594 nstack_initial=3): {'$phi594.2'},
             State(pc_initial=636 nstack_initial=2): set(),
             State(pc_initial=680 nstack_initial=2): set(),
             State(pc_initial=690 nstack_initial=2): set(),
             State(pc_initial=696 nstack_initial=2): set(),
             State(pc_initial=700 nstack_initial=2): set(),
             State(pc_initial=708 nstack_initial=3): {'$phi708.2'},
             State(pc_initial=710 nstack_initial=4): {'$phi710.3'},
             State(pc_initial=722 nstack_initial=3): set(),
             State(pc_initial=748 nstack_initial=3): set(),
             State(pc_initial=752 nstack_initial=3): set(),
             State(pc_initial=776 nstack_initial=2): set(),
             State(pc_initial=780 nstack_initial=1): set(),
             State(pc_initial=806 nstack_initial=0): set()})
12-22 13:15 DEBUG    defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi22.1': State(pc_initial=20 nstack_initial=1),
 '$phi422.1': State(pc_initial=414 nstack_initial=1),
 '$phi424.2': State(pc_initial=422 nstack_initial=2),
 '$phi592.1': State(pc_initial=540 nstack_initial=1),
 '$phi594.2': State(pc_initial=592 nstack_initial=2),
 '$phi708.2': State(pc_initial=700 nstack_initial=2),
 '$phi710.3': State(pc_initial=708 nstack_initial=3)}
12-22 13:15 DEBUG    phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                          ('$phi780.0',
                           State(pc_initial=780 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi22.0': {('$phi20.0', State(pc_initial=20 nstack_initial=1))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1)),
                           ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi36.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi360.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi414.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=1)),
                           ('$phi410.0',
                            State(pc_initial=410 nstack_initial=1))},
             '$phi422.0': {('$phi414.0',
                            State(pc_initial=414 nstack_initial=1)),
                           ('$phi488.0',
                            State(pc_initial=488 nstack_initial=2)),
                           ('$phi514.0',
                            State(pc_initial=514 nstack_initial=2))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1)),
                           ('$phi488.1',
                            State(pc_initial=488 nstack_initial=2)),
                           ('$phi514.1',
                            State(pc_initial=514 nstack_initial=2))},
             '$phi424.0': {('$phi422.0',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi424.1': {('$phi422.1',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$phi424.0',
                            State(pc_initial=424 nstack_initial=3))},
             '$phi456.1': {('$phi424.1',
                            State(pc_initial=424 nstack_initial=3))},
             '$phi488.0': {('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi488.1': {('$phi424.1',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.1',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi514.0': {('$phi488.0',
                            State(pc_initial=488 nstack_initial=2))},
             '$phi514.1': {('$phi488.1',
                            State(pc_initial=488 nstack_initial=2))},
             '$phi540.0': {('$phi422.0',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi592.0': {('$phi540.0',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi690.0',
                            State(pc_initial=690 nstack_initial=2)),
                           ('$phi776.0',
                            State(pc_initial=776 nstack_initial=2))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi690.1',
                            State(pc_initial=690 nstack_initial=2)),
                           ('$phi776.1',
                            State(pc_initial=776 nstack_initial=2))},
             '$phi594.0': {('$phi592.0',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi594.1': {('$phi592.1',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$phi594.0',
                            State(pc_initial=594 nstack_initial=3))},
             '$phi636.1': {('$phi594.1',
                            State(pc_initial=594 nstack_initial=3))},
             '$phi680.0': {('$phi594.0',
                            State(pc_initial=594 nstack_initial=3))},
             '$phi680.1': {('$phi594.1',
                            State(pc_initial=594 nstack_initial=3))},
             '$phi690.0': {('$phi680.0',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi690.1': {('$phi680.1',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi696.0': {('$phi680.0',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi696.1': {('$phi680.1',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi700.0': {('$phi636.0',
                            State(pc_initial=636 nstack_initial=2)),
                           ('$phi696.0',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi700.1': {('$phi636.1',
                            State(pc_initial=636 nstack_initial=2)),
                           ('$phi696.1',
                            State(pc_initial=696 nstack_initial=2))},
             '$phi708.0': {('$phi700.0',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi752.0',
                            State(pc_initial=752 nstack_initial=3))},
             '$phi708.1': {('$phi700.1',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi752.1',
                            State(pc_initial=752 nstack_initial=3))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi752.2',
                            State(pc_initial=752 nstack_initial=3))},
             '$phi710.0': {('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi710.1': {('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi710.2': {('$phi708.2',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$phi710.0',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi722.1': {('$phi710.1',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi722.2': {('$phi710.2',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi748.0': {('$phi710.0',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi748.1': {('$phi710.1',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi748.2': {('$phi710.2',
                            State(pc_initial=710 nstack_initial=4))},
             '$phi752.0': {('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi752.1': {('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi752.2': {('$phi722.2',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.2',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi776.0': {('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi776.1': {('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi780.0': {('$phi592.0',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi84.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))}})
12-22 13:15 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=1)),
                          ('$phi592.0',
                           State(pc_initial=592 nstack_initial=2))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=1)),
                          ('$phi592.0',
                           State(pc_initial=592 nstack_initial=2))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi592.0',
                           State(pc_initial=592 nstack_initial=2))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi36.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi592.0',
                           State(pc_initial=592 nstack_initial=2))},
             '$phi360.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi410.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi414.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi422.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.1',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi424.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi424.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.1',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi456.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1)),
                           ('$phi456.1',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi488.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi488.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi514.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2))},
             '$phi514.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi540.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2))},
             '$phi592.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi594.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi594.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi636.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi680.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi680.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi690.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi690.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi696.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi696.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi700.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi700.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi708.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi708.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.1',
                            State(pc_initial=708 nstack_initial=3)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi722.2',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.2',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi710.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi710.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi710.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi722.2',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.2',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi722.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi722.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi722.2',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.2',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi748.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi748.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi748.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2)),
                           ('$phi722.2',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.2',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi752.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi752.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2))},
             '$phi752.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi776.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi776.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi680.1',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi780.0': {('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi592.0',
                           State(pc_initial=592 nstack_initial=2))}})
12-22 13:15 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi424.0', State(pc_initial=424 nstack_initial=3)),
                          ('$phi456.0', State(pc_initial=456 nstack_initial=2)),
                          ('$phi680.0', State(pc_initial=680 nstack_initial=2)),
                          ('$phi708.0',
                           State(pc_initial=708 nstack_initial=3))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                          ('$phi424.0', State(pc_initial=424 nstack_initial=3)),
                          ('$phi456.0', State(pc_initial=456 nstack_initial=2)),
                          ('$phi680.0', State(pc_initial=680 nstack_initial=2)),
                          ('$phi708.0',
                           State(pc_initial=708 nstack_initial=3))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi22.0', State(pc_initial=22 nstack_initial=2)),
                          ('$phi424.0', State(pc_initial=424 nstack_initial=3)),
                          ('$phi456.0', State(pc_initial=456 nstack_initial=2)),
                          ('$phi680.0', State(pc_initial=680 nstack_initial=2)),
                          ('$phi708.0',
                           State(pc_initial=708 nstack_initial=3))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi36.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi424.0', State(pc_initial=424 nstack_initial=3)),
                          ('$phi456.0', State(pc_initial=456 nstack_initial=2)),
                          ('$phi680.0', State(pc_initial=680 nstack_initial=2)),
                          ('$phi708.0',
                           State(pc_initial=708 nstack_initial=3))},
             '$phi360.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi410.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi414.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi424.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi456.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi488.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi488.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi514.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=3)),
                           ('$phi456.0',
                            State(pc_initial=456 nstack_initial=2)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi514.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi540.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi680.0',
                            State(pc_initial=680 nstack_initial=2)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi592.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi594.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi594.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi636.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi680.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi680.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi690.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi690.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi696.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi700.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi700.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1)),
                           ('$phi722.1',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.1',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi708.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi708.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi710.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi710.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi722.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi748.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi748.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi752.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi708.0',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi752.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi752.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi776.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi780.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi722.0', State(pc_initial=722 nstack_initial=3)),
                          ('$phi748.0',
                           State(pc_initial=748 nstack_initial=3))}})
12-22 13:15 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi722.0', State(pc_initial=722 nstack_initial=3)),
                          ('$phi748.0',
                           State(pc_initial=748 nstack_initial=3))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi722.0', State(pc_initial=722 nstack_initial=3)),
                          ('$phi748.0',
                           State(pc_initial=748 nstack_initial=3))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi722.0', State(pc_initial=722 nstack_initial=3)),
                          ('$phi748.0',
                           State(pc_initial=748 nstack_initial=3))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi36.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi722.0', State(pc_initial=722 nstack_initial=3)),
                          ('$phi748.0',
                           State(pc_initial=748 nstack_initial=3))},
             '$phi360.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi410.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi414.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi424.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi456.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi488.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi488.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi514.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi514.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi540.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi722.0',
                            State(pc_initial=722 nstack_initial=3)),
                           ('$phi748.0',
                            State(pc_initial=748 nstack_initial=3))},
             '$phi592.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi594.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi636.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi680.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi680.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi690.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi690.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi696.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi700.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi700.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi708.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi710.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi710.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi722.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi722.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi748.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi748.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi752.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi752.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi752.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi776.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi780.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:15 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi36.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi360.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi410.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi414.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi424.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi456.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi488.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi488.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi514.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi514.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi540.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi592.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi594.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi636.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi680.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi680.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi690.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi690.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi696.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi700.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi700.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi708.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi710.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi710.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi722.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi722.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi748.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi748.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi752.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi752.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi752.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi776.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi780.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:15 DEBUG    changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi22.1': {('$20for_iter.2',
                           State(pc_initial=20 nstack_initial=1))},
             '$phi350.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi36.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi360.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi410.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi414.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi422.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi422.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi424.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi424.2': {('$422for_iter.3',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi456.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi456.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi488.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi488.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi514.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi514.1': {('$420get_iter.4',
                            State(pc_initial=414 nstack_initial=1))},
             '$phi540.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi592.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi592.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi594.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi594.2': {('$592for_iter.3',
                            State(pc_initial=592 nstack_initial=2))},
             '$phi636.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi636.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi680.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi680.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi690.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi690.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi696.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi696.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi700.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi700.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi708.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi708.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi710.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi710.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi710.3': {('$708for_iter.4',
                            State(pc_initial=708 nstack_initial=3))},
             '$phi722.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi722.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi722.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi748.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi748.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi748.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi752.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi752.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi752.2': {('$706get_iter.5',
                            State(pc_initial=700 nstack_initial=2))},
             '$phi776.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi776.1': {('$590get_iter.24',
                            State(pc_initial=540 nstack_initial=1))},
             '$phi780.0': {('$16get_iter.7',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$16get_iter.7',
                           State(pc_initial=0 nstack_initial=0))}})
12-22 13:15 DEBUG    keep phismap: {'$phi20.0': {('$16get_iter.7', State(pc_initial=0 nstack_initial=0))},
 '$phi22.1': {('$20for_iter.2', State(pc_initial=20 nstack_initial=1))},
 '$phi422.1': {('$420get_iter.4', State(pc_initial=414 nstack_initial=1))},
 '$phi424.2': {('$422for_iter.3', State(pc_initial=422 nstack_initial=2))},
 '$phi592.1': {('$590get_iter.24', State(pc_initial=540 nstack_initial=1))},
 '$phi594.2': {('$592for_iter.3', State(pc_initial=592 nstack_initial=2))},
 '$phi708.2': {('$706get_iter.5', State(pc_initial=700 nstack_initial=2))},
 '$phi710.3': {('$708for_iter.4', State(pc_initial=708 nstack_initial=3))}}
12-22 13:15 DEBUG    new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi20.0': '$16get_iter.7'},
             State(pc_initial=20 nstack_initial=1): {'$phi22.1': '$20for_iter.2'},
             State(pc_initial=414 nstack_initial=1): {'$phi422.1': '$420get_iter.4'},
             State(pc_initial=422 nstack_initial=2): {'$phi424.2': '$422for_iter.3'},
             State(pc_initial=540 nstack_initial=1): {'$phi592.1': '$590get_iter.24'},
             State(pc_initial=592 nstack_initial=2): {'$phi594.2': '$592for_iter.3'},
             State(pc_initial=700 nstack_initial=2): {'$phi708.2': '$706get_iter.5'},
             State(pc_initial=708 nstack_initial=3): {'$phi710.3': '$708for_iter.4'}})
12-22 13:15 DEBUG    ----------------------DONE Prune PHIs-----------------------
12-22 13:15 DEBUG    block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$epochs_per_sample6.2'}), (8, {'item': '$epochs_per_sample6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'func': '$4load_method.1', 'args': ['$12binary_subscr.5'], 'res': '$14call_method.6'}), (16, {'value': '$14call_method.6', 'res': '$16get_iter.7'})), outgoing_phis={'$phi20.0': '$16get_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.7',)})
12-22 13:15 DEBUG    block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ('$phi18.0',)})
12-22 13:15 DEBUG    block_infos State(pc_initial=20 nstack_initial=1):
AdaptBlockInfo(insts=((20, {'iterator': '$phi20.0', 'pair': '$20for_iter.1', 'indval': '$20for_iter.2', 'pred': '$20for_iter.3'}),), outgoing_phis={'$phi22.1': '$20for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={806: (), 22: ('$phi20.0', '$20for_iter.2')})
12-22 13:15 DEBUG    block_infos State(pc_initial=22 nstack_initial=2):
AdaptBlockInfo(insts=((22, {'value': '$phi22.1'}), (24, {'res': '$epoch_of_next_sample24.2'}), (26, {'res': '$i26.3'}), (28, {'index': '$i26.3', 'target': '$epoch_of_next_sample24.2', 'res': '$28binary_subscr.4'}), (30, {'res': '$n30.5'}), (32, {'lhs': '$28binary_subscr.4', 'rhs': '$n30.5', 'res': '$32compare_op.6'}), (34, {'pred': '$32compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi22.0',), 18: ('$phi22.0',)})
12-22 13:15 DEBUG    block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'res': '$head36.1'}), (38, {'res': '$i38.2'}), (40, {'index': '$i38.2', 'target': '$head36.1', 'res': '$40binary_subscr.3'}), (42, {'value': '$40binary_subscr.3'}), (44, {'res': '$tail44.4'}), (46, {'res': '$i46.5'}), (48, {'index': '$i46.5', 'target': '$tail44.4', 'res': '$48binary_subscr.6'}), (50, {'value': '$48binary_subscr.6'}), (52, {'res': '$head_embedding52.7'}), (54, {'res': '$j54.8'}), (56, {'index': '$j54.8', 'target': '$head_embedding52.7', 'res': '$56binary_subscr.9'}), (58, {'value': '$56binary_subscr.9'}), (60, {'res': '$tail_embedding60.10'}), (62, {'res': '$k62.11'}), (64, {'index': '$k62.11', 'target': '$tail_embedding60.10', 'res': '$64binary_subscr.12'}), (66, {'value': '$64binary_subscr.12'}), (68, {'res': '$68load_global.13'}), (70, {'res': '$current70.14'}), (72, {'res': '$other72.15'}), (74, {'func': '$68load_global.13', 'args': ['$current70.14', '$other72.15'], 'res': '$74call_function.16'}), (76, {'value': '$74call_function.16'}), (78, {'res': '$densmap_flag78.17'}), (80, {}), (82, {'pred': '$densmap_flag78.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: ('$phi36.0',), 350: ('$phi36.0',)})
12-22 13:15 DEBUG    block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((84, {'res': '$const84.1'}), (86, {'res': '$const86.2'}), (88, {'res': '$a88.3'}), (90, {'res': '$90load_global.4'}), (92, {'res': '$dist_squared92.5'}), (94, {'res': '$b94.6'}), (96, {'func': '$90load_global.4', 'args': ['$dist_squared92.5', '$b94.6'], 'res': '$96call_function.7'}), (98, {'lhs': '$a88.3', 'rhs': '$96call_function.7', 'res': '$98binary_multiply.8'}), (100, {'lhs': '$const86.2', 'rhs': '$98binary_multiply.8', 'res': '$100binary_add.9'}), (102, {'lhs': '$const84.1', 'rhs': '$100binary_add.9', 'res': '$102binary_true_divide.10'}), (104, {'value': '$102binary_true_divide.10'}), (106, {'res': '$a106.11'}), (108, {'res': '$b108.12'}), (110, {'lhs': '$a106.11', 'rhs': '$b108.12', 'res': '$110binary_multiply.13'}), (112, {'res': '$112load_global.14'}), (114, {'res': '$dist_squared114.15'}), (116, {'res': '$b116.16'}), (118, {'res': '$const118.17'}), (120, {'lhs': '$b116.16', 'rhs': '$const118.17', 'res': '$120binary_subtract.18'}), (122, {'func': '$112load_global.14', 'args': ['$dist_squared114.15', '$120binary_subtract.18'], 'res': '$122call_function.19'}), (124, {'lhs': '$110binary_multiply.13', 'rhs': '$122call_function.19', 'res': '$124binary_multiply.20'}), (126, {'res': '$const126.21'}), (128, {'res': '$a128.22'}), (130, {'res': '$130load_global.23'}), (132, {'res': '$dist_squared132.24'}), (134, {'res': '$b134.25'}), (136, {'func': '$130load_global.23', 'args': ['$dist_squared132.24', '$b134.25'], 'res': '$136call_function.26'}), (138, {'lhs': '$a128.22', 'rhs': '$136call_function.26', 'res': '$138binary_multiply.27'}), (140, {'lhs': '$const126.21', 'rhs': '$138binary_multiply.27', 'res': '$140binary_add.28'}), (142, {'lhs': '$124binary_multiply.20', 'rhs': '$140binary_add.28', 'res': '$142binary_true_divide.29'}), (144, {'value': '$142binary_true_divide.29'}), (146, {'res': '$phi146.30'}), (148, {'res': '$dens_phi_sum148.31'}), (150, {'res': '$k150.32'}), (152, {'index': '$k150.32', 'target': '$dens_phi_sum148.31', 'res': '$152binary_subscr.33'}), (154, {'lhs': '$phi146.30', 'rhs': '$152binary_subscr.33', 'res': '$154binary_true_divide.34'}), (156, {'value': '$154binary_true_divide.34'}), (158, {'res': '$phi158.35'}), (160, {'res': '$dens_phi_sum160.36'}), (162, {'res': '$j162.37'}), (164, {'index': '$j162.37', 'target': '$dens_phi_sum160.36', 'res': '$164binary_subscr.38'}), (166, {'lhs': '$phi158.35', 'rhs': '$164binary_subscr.38', 'res': '$166binary_true_divide.39'}), (168, {'value': '$166binary_true_divide.39'}), (170, {'res': '$q_jk170.40'}), (172, {'res': '$const172.41'}), (174, {'res': '$b174.42'}), (176, {'res': '$const176.43'}), (178, {'res': '$phi178.44'}), (180, {'lhs': '$const176.43', 'rhs': '$phi178.44', 'res': '$180binary_subtract.45'}), (182, {'lhs': '$b174.42', 'rhs': '$180binary_subtract.45', 'res': '$182binary_multiply.46'}), (184, {'lhs': '$const172.41', 'rhs': '$182binary_multiply.46', 'res': '$184binary_subtract.47'}), (186, {'res': '$186load_global.48'}), (188, {'item': '$186load_global.48', 'res': '$188load_method.49'}), (190, {'res': '$dens_re_sum190.50'}), (192, {'res': '$k192.51'}), (194, {'index': '$k192.51', 'target': '$dens_re_sum190.50', 'res': '$194binary_subscr.52'}), (196, {'func': '$188load_method.49', 'args': ['$194binary_subscr.52'], 'res': '$196call_method.53'}), (198, {'lhs': '$184binary_subtract.47', 'rhs': '$196call_method.53', 'res': '$198binary_true_divide.54'}), (200, {'res': '$dphi_term200.55'}), (202, {'lhs': '$198binary_true_divide.54', 'rhs': '$dphi_term200.55', 'res': '$202binary_add.56'}), (204, {'lhs': '$q_jk170.40', 'rhs': '$202binary_add.56', 'res': '$204binary_multiply.57'}), (206, {'value': '$204binary_multiply.57'}), (208, {'res': '$q_kj208.58'}), (210, {'res': '$const210.59'}), (212, {'res': '$b212.60'}), (214, {'res': '$const214.61'}), (216, {'res': '$phi216.62'}), (218, {'lhs': '$const214.61', 'rhs': '$phi216.62', 'res': '$218binary_subtract.63'}), (220, {'lhs': '$b212.60', 'rhs': '$218binary_subtract.63', 'res': '$220binary_multiply.64'}), (222, {'lhs': '$const210.59', 'rhs': '$220binary_multiply.64', 'res': '$222binary_subtract.65'}), (224, {'res': '$224load_global.66'}), (226, {'item': '$224load_global.66', 'res': '$226load_method.67'}), (228, {'res': '$dens_re_sum228.68'}), (230, {'res': '$j230.69'}), (232, {'index': '$j230.69', 'target': '$dens_re_sum228.68', 'res': '$232binary_subscr.70'}), (234, {'func': '$226load_method.67', 'args': ['$232binary_subscr.70'], 'res': '$234call_method.71'}), (236, {'lhs': '$222binary_subtract.65', 'rhs': '$234call_method.71', 'res': '$236binary_true_divide.72'}), (238, {'res': '$dphi_term238.73'}), (240, {'lhs': '$236binary_true_divide.72', 'rhs': '$dphi_term238.73', 'res': '$240binary_add.74'}), (242, {'lhs': '$q_kj208.58', 'rhs': '$240binary_add.74', 'res': '$242binary_multiply.75'}), (244, {'value': '$242binary_multiply.75'}), (246, {'res': '$dens_re_std246.76'}), (248, {'res': '$dens_re_std248.77'}), (250, {'lhs': '$dens_re_std246.76', 'rhs': '$dens_re_std248.77', 'res': '$250binary_multiply.78'}), (252, {'value': '$250binary_multiply.78'}), (254, {'res': '$dens_R254.79'}), (256, {'res': '$k256.80'}), (258, {'index': '$k256.80', 'target': '$dens_R254.79', 'res': '$258binary_subscr.81'}), (260, {'res': '$dens_re_cov260.82'}), (262, {'res': '$dens_re_sum262.83'}), (264, {'res': '$k264.84'}), (266, {'index': '$k264.84', 'target': '$dens_re_sum262.83', 'res': '$266binary_subscr.85'}), (268, {'res': '$dens_re_mean268.86'}), (270, {'lhs': '$266binary_subscr.85', 'rhs': '$dens_re_mean268.86', 'res': '$270binary_subtract.87'}), (272, {'lhs': '$dens_re_cov260.82', 'rhs': '$270binary_subtract.87', 'res': '$272binary_multiply.88'}), (274, {'res': '$re_std_sq274.89'}), (276, {'lhs': '$272binary_multiply.88', 'rhs': '$re_std_sq274.89', 'res': '$276binary_true_divide.90'}), (278, {'lhs': '$258binary_subscr.81', 'rhs': '$276binary_true_divide.90', 'res': '$278binary_subtract.91'}), (280, {'value': '$278binary_subtract.91'}), (282, {'res': '$dens_R282.92'}), (284, {'res': '$j284.93'}), (286, {'index': '$j284.93', 'target': '$dens_R282.92', 'res': '$286binary_subscr.94'}), (288, {'res': '$dens_re_cov288.95'}), (290, {'res': '$dens_re_sum290.96'}), (292, {'res': '$j292.97'}), (294, {'index': '$j292.97', 'target': '$dens_re_sum290.96', 'res': '$294binary_subscr.98'}), (296, {'res': '$dens_re_mean296.99'}), (298, {'lhs': '$294binary_subscr.98', 'rhs': '$dens_re_mean296.99', 'res': '$298binary_subtract.100'}), (300, {'lhs': '$dens_re_cov288.95', 'rhs': '$298binary_subtract.100', 'res': '$300binary_multiply.101'}), (302, {'res': '$re_std_sq302.102'}), (304, {'lhs': '$300binary_multiply.101', 'rhs': '$re_std_sq302.102', 'res': '$304binary_true_divide.103'}), (306, {'lhs': '$286binary_subscr.94', 'rhs': '$304binary_true_divide.103', 'res': '$306binary_subtract.104'}), (308, {'value': '$306binary_subtract.104'}), (310, {'res': '$dens_lambda310.105'}), (312, {'res': '$dens_mu_tot312.106'}), (314, {'lhs': '$dens_lambda310.105', 'rhs': '$dens_mu_tot312.106', 'res': '$314binary_multiply.107'}), (316, {'res': '$weight_k316.108'}), (318, {'res': '$drk318.109'}), (320, {'lhs': '$weight_k316.108', 'rhs': '$drk318.109', 'res': '$320binary_multiply.110'}), (322, {'res': '$weight_j322.111'}), (324, {'res': '$drj324.112'}), (326, {'lhs': '$weight_j322.111', 'rhs': '$drj324.112', 'res': '$326binary_multiply.113'}), (328, {'lhs': '$320binary_multiply.110', 'rhs': '$326binary_multiply.113', 'res': '$328binary_add.114'}), (330, {'lhs': '$314binary_multiply.107', 'rhs': '$328binary_add.114', 'res': '$330binary_multiply.115'}), (332, {'res': '$dens_mu332.116'}), (334, {'res': '$i334.117'}), (336, {'index': '$i334.117', 'target': '$dens_mu332.116', 'res': '$336binary_subscr.118'}), (338, {'res': '$dens_re_std338.119'}), (340, {'lhs': '$336binary_subscr.118', 'rhs': '$dens_re_std338.119', 'res': '$340binary_multiply.120'}), (342, {'lhs': '$330binary_multiply.115', 'rhs': '$340binary_multiply.120', 'res': '$342binary_true_divide.121'}), (344, {'res': '$n_vertices344.122'}), (346, {'lhs': '$342binary_true_divide.121', 'rhs': '$n_vertices344.122', 'res': '$346binary_true_divide.123'}), (348, {'value': '$346binary_true_divide.123'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi84.0',)})
12-22 13:15 DEBUG    block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$dist_squared350.1'}), (352, {'res': '$const352.2'}), (354, {'lhs': '$dist_squared350.1', 'rhs': '$const352.2', 'res': '$354compare_op.3'}), (356, {}), (358, {'pred': '$354compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={360: ('$phi350.0',), 410: ('$phi350.0',)})
12-22 13:15 DEBUG    block_infos State(pc_initial=360 nstack_initial=1):
AdaptBlockInfo(insts=((360, {'res': '$const360.1'}), (362, {'res': '$a362.2'}), (364, {'lhs': '$const360.1', 'rhs': '$a362.2', 'res': '$364binary_multiply.3'}), (366, {'res': '$b366.4'}), (368, {'lhs': '$364binary_multiply.3', 'rhs': '$b366.4', 'res': '$368binary_multiply.5'}), (370, {'res': '$370load_global.6'}), (372, {'res': '$dist_squared372.7'}), (374, {'res': '$b374.8'}), (376, {'res': '$const376.9'}), (378, {'lhs': '$b374.8', 'rhs': '$const376.9', 'res': '$378binary_subtract.10'}), (380, {'func': '$370load_global.6', 'args': ['$dist_squared372.7', '$378binary_subtract.10'], 'res': '$380call_function.11'}), (382, {'lhs': '$368binary_multiply.5', 'rhs': '$380call_function.11', 'res': '$382binary_multiply.12'}), (384, {'value': '$382binary_multiply.12'}), (386, {'res': '$grad_coeff386.13'}), (388, {'res': '$a388.14'}), (390, {'res': '$390load_global.15'}), (392, {'res': '$dist_squared392.16'}), (394, {'res': '$b394.17'}), (396, {'func': '$390load_global.15', 'args': ['$dist_squared392.16', '$b394.17'], 'res': '$396call_function.18'}), (398, {'lhs': '$a388.14', 'rhs': '$396call_function.18', 'res': '$398binary_multiply.19'}), (400, {'res': '$const400.20'}), (402, {'lhs': '$398binary_multiply.19', 'rhs': '$const400.20', 'res': '$402binary_add.21'}), (404, {'lhs': '$grad_coeff386.13', 'rhs': '$402binary_add.21', 'res': '$404inplace_true_divide.22'}), (406, {'value': '$404inplace_true_divide.22'}), (408, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={414: ('$phi360.0',)})
12-22 13:15 DEBUG    block_infos State(pc_initial=410 nstack_initial=1):
AdaptBlockInfo(insts=((410, {'res': '$const410.1'}), (412, {'value': '$const410.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={414: ('$phi410.0',)})
12-22 13:15 DEBUG    block_infos State(pc_initial=414 nstack_initial=1):
AdaptBlockInfo(insts=((414, {'res': '$414load_global.1'}), (416, {'res': '$dim416.2'}), (418, {'func': '$414load_global.1', 'args': ['$dim416.2'], 'res': '$418call_function.3'}), (420, {'value': '$418call_function.3', 'res': '$420get_iter.4'})), outgoing_phis={'$phi422.1': '$420get_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={422: ('$phi414.0', '$420get_iter.4')})
12-22 13:15 DEBUG    block_infos State(pc_initial=422 nstack_initial=2):
AdaptBlockInfo(insts=((422, {'iterator': '$phi422.1', 'pair': '$422for_iter.2', 'indval': '$422for_iter.3', 'pred': '$422for_iter.4'}),), outgoing_phis={'$phi424.2': '$422for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={540: ('$phi422.0',), 424: ('$phi422.0', '$phi422.1', '$422for_iter.3')})
12-22 13:15 DEBUG    block_infos State(pc_initial=424 nstack_initial=3):
AdaptBlockInfo(insts=((424, {'value': '$phi424.2'}), (426, {'res': '$426load_global.3'}), (428, {'res': '$grad_coeff428.4'}), (430, {'res': '$current430.5'}), (432, {'res': '$d432.6'}), (434, {'index': '$d432.6', 'target': '$current430.5', 'res': '$434binary_subscr.7'}), (436, {'res': '$other436.8'}), (438, {'res': '$d438.9'}), (440, {'index': '$d438.9', 'target': '$other436.8', 'res': '$440binary_subscr.10'}), (442, {'lhs': '$434binary_subscr.7', 'rhs': '$440binary_subscr.10', 'res': '$442binary_subtract.11'}), (444, {'lhs': '$grad_coeff428.4', 'rhs': '$442binary_subtract.11', 'res': '$444binary_multiply.12'}), (446, {'func': '$426load_global.3', 'args': ['$444binary_multiply.12'], 'res': '$446call_function.13'}), (448, {'value': '$446call_function.13'}), (450, {'res': '$densmap_flag450.14'}), (452, {}), (454, {'pred': '$densmap_flag450.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={456: ('$phi424.0', '$phi424.1'), 488: ('$phi424.0', '$phi424.1')})
12-22 13:15 DEBUG    block_infos State(pc_initial=456 nstack_initial=2):
AdaptBlockInfo(insts=((456, {'res': '$grad_d456.2'}), (458, {'res': '$458load_global.3'}), (460, {'res': '$const460.4'}), (462, {'res': '$grad_cor_coeff462.5'}), (464, {'lhs': '$const460.4', 'rhs': '$grad_cor_coeff462.5', 'res': '$464binary_multiply.6'}), (466, {'res': '$current466.7'}), (468, {'res': '$d468.8'}), (470, {'index': '$d468.8', 'target': '$current466.7', 'res': '$470binary_subscr.9'}), (472, {'res': '$other472.10'}), (474, {'res': '$d474.11'}), (476, {'index': '$d474.11', 'target': '$other472.10', 'res': '$476binary_subscr.12'}), (478, {'lhs': '$470binary_subscr.9', 'rhs': '$476binary_subscr.12', 'res': '$478binary_subtract.13'}), (480, {'lhs': '$464binary_multiply.6', 'rhs': '$478binary_subtract.13', 'res': '$480binary_multiply.14'}), (482, {'func': '$458load_global.3', 'args': ['$480binary_multiply.14'], 'res': '$482call_function.15'}), (484, {'lhs': '$grad_d456.2', 'rhs': '$482call_function.15', 'res': '$484inplace_add.16'}), (486, {'value': '$484inplace_add.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={488: ('$phi456.0', '$phi456.1')})
12-22 13:15 DEBUG    block_infos State(pc_initial=488 nstack_initial=2):
AdaptBlockInfo(insts=((488, {'res': '$current488.2'}), (490, {'res': '$d490.3'}), (492, {'orig': ['$current488.2', '$d490.3'], 'duped': ['$492dup_top_two.4', '$492dup_top_two.5']}), (494, {'index': '$492dup_top_two.5', 'target': '$492dup_top_two.4', 'res': '$494binary_subscr.6'}), (496, {'res': '$grad_d496.7'}), (498, {'res': '$alpha498.8'}), (500, {'lhs': '$grad_d496.7', 'rhs': '$alpha498.8', 'res': '$500binary_multiply.9'}), (502, {'lhs': '$494binary_subscr.6', 'rhs': '$500binary_multiply.9', 'res': '$502inplace_add.10'}), (506, {'target': '$current488.2', 'index': '$d490.3', 'value': '$502inplace_add.10'}), (508, {'res': '$move_other508.11'}), (510, {}), (512, {'pred': '$move_other508.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={514: ('$phi488.0', '$phi488.1'), 422: ('$phi488.0', '$phi488.1')})
12-22 13:15 DEBUG    block_infos State(pc_initial=514 nstack_initial=2):
AdaptBlockInfo(insts=((514, {'res': '$other514.2'}), (516, {'res': '$d516.3'}), (518, {'orig': ['$other514.2', '$d516.3'], 'duped': ['$518dup_top_two.4', '$518dup_top_two.5']}), (520, {'index': '$518dup_top_two.5', 'target': '$518dup_top_two.4', 'res': '$520binary_subscr.6'}), (522, {'res': '$grad_d522.7'}), (524, {'value': '$grad_d522.7', 'res': '$524unary_negative.8'}), (526, {'res': '$alpha526.9'}), (528, {'lhs': '$524unary_negative.8', 'rhs': '$alpha526.9', 'res': '$528binary_multiply.10'}), (530, {'lhs': '$520binary_subscr.6', 'rhs': '$528binary_multiply.10', 'res': '$530inplace_add.11'}), (534, {'target': '$other514.2', 'index': '$d516.3', 'value': '$530inplace_add.11'}), (536, {}), (538, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={422: ('$phi514.0', '$phi514.1')})
12-22 13:15 DEBUG    block_infos State(pc_initial=540 nstack_initial=1):
AdaptBlockInfo(insts=((540, {'res': '$epoch_of_next_sample540.1'}), (542, {'res': '$i542.2'}), (544, {'orig': ['$epoch_of_next_sample540.1', '$i542.2'], 'duped': ['$544dup_top_two.3', '$544dup_top_two.4']}), (546, {'index': '$544dup_top_two.4', 'target': '$544dup_top_two.3', 'res': '$546binary_subscr.5'}), (548, {'res': '$epochs_per_sample548.6'}), (550, {'res': '$i550.7'}), (552, {'index': '$i550.7', 'target': '$epochs_per_sample548.6', 'res': '$552binary_subscr.8'}), (554, {'lhs': '$546binary_subscr.5', 'rhs': '$552binary_subscr.8', 'res': '$554inplace_add.9'}), (558, {'target': '$epoch_of_next_sample540.1', 'index': '$i542.2', 'value': '$554inplace_add.9'}), (560, {'res': '$560load_global.10'}), (562, {'res': '$n562.11'}), (564, {'res': '$epoch_of_next_negative_sample564.12'}), (566, {'res': '$i566.13'}), (568, {'index': '$i566.13', 'target': '$epoch_of_next_negative_sample564.12', 'res': '$568binary_subscr.14'}), (570, {'lhs': '$n562.11', 'rhs': '$568binary_subscr.14', 'res': '$570binary_subtract.15'}), (572, {'res': '$epochs_per_negative_sample572.16'}), (574, {'res': '$i574.17'}), (576, {'index': '$i574.17', 'target': '$epochs_per_negative_sample572.16', 'res': '$576binary_subscr.18'}), (578, {'lhs': '$570binary_subtract.15', 'rhs': '$576binary_subscr.18', 'res': '$578binary_true_divide.19'}), (580, {'func': '$560load_global.10', 'args': ['$578binary_true_divide.19'], 'res': '$580call_function.20'}), (582, {'value': '$580call_function.20'}), (584, {'res': '$584load_global.21'}), (586, {'res': '$n_neg_samples586.22'}), (588, {'func': '$584load_global.21', 'args': ['$n_neg_samples586.22'], 'res': '$588call_function.23'}), (590, {'value': '$588call_function.23', 'res': '$590get_iter.24'})), outgoing_phis={'$phi592.1': '$590get_iter.24'}, blockstack=(), active_try_block=None, outgoing_edgepushed={592: ('$phi540.0', '$590get_iter.24')})
12-22 13:15 DEBUG    block_infos State(pc_initial=592 nstack_initial=2):
AdaptBlockInfo(insts=((592, {'iterator': '$phi592.1', 'pair': '$592for_iter.2', 'indval': '$592for_iter.3', 'pred': '$592for_iter.4'}),), outgoing_phis={'$phi594.2': '$592for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={780: ('$phi592.0',), 594: ('$phi592.0', '$phi592.1', '$592for_iter.3')})
12-22 13:15 DEBUG    block_infos State(pc_initial=594 nstack_initial=3):
AdaptBlockInfo(insts=((594, {'value': '$phi594.2'}), (596, {'res': '$596load_global.3'}), (598, {'res': '$rng_state598.4'}), (600, {'func': '$596load_global.3', 'args': ['$rng_state598.4'], 'res': '$600call_function.5'}), (602, {'res': '$n_vertices602.6'}), (604, {'lhs': '$600call_function.5', 'rhs': '$n_vertices602.6', 'res': '$604binary_modulo.7'}), (606, {'value': '$604binary_modulo.7'}), (608, {'res': '$tail_embedding608.8'}), (610, {'res': '$k610.9'}), (612, {'index': '$k610.9', 'target': '$tail_embedding608.8', 'res': '$612binary_subscr.10'}), (614, {'value': '$612binary_subscr.10'}), (616, {'res': '$616load_global.11'}), (618, {'res': '$current618.12'}), (620, {'res': '$other620.13'}), (622, {'func': '$616load_global.11', 'args': ['$current618.12', '$other620.13'], 'res': '$622call_function.14'}), (624, {'value': '$622call_function.14'}), (626, {'res': '$dist_squared626.15'}), (628, {'res': '$const628.16'}), (630, {'lhs': '$dist_squared626.15', 'rhs': '$const628.16', 'res': '$630compare_op.17'}), (632, {}), (634, {'pred': '$630compare_op.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={636: ('$phi594.0', '$phi594.1'), 680: ('$phi594.0', '$phi594.1')})
12-22 13:15 DEBUG    block_infos State(pc_initial=636 nstack_initial=2):
AdaptBlockInfo(insts=((636, {'res': '$const636.2'}), (638, {'res': '$gamma638.3'}), (640, {'lhs': '$const636.2', 'rhs': '$gamma638.3', 'res': '$640binary_multiply.4'}), (642, {'res': '$b642.5'}), (644, {'lhs': '$640binary_multiply.4', 'rhs': '$b642.5', 'res': '$644binary_multiply.6'}), (646, {'value': '$644binary_multiply.6'}), (648, {'res': '$grad_coeff648.7'}), (650, {'res': '$const650.8'}), (652, {'res': '$dist_squared652.9'}), (654, {'lhs': '$const650.8', 'rhs': '$dist_squared652.9', 'res': '$654binary_add.10'}), (656, {'res': '$a656.11'}), (658, {'res': '$658load_global.12'}), (660, {'res': '$dist_squared660.13'}), (662, {'res': '$b662.14'}), (664, {'func': '$658load_global.12', 'args': ['$dist_squared660.13', '$b662.14'], 'res': '$664call_function.15'}), (666, {'lhs': '$a656.11', 'rhs': '$664call_function.15', 'res': '$666binary_multiply.16'}), (668, {'res': '$const668.17'}), (670, {'lhs': '$666binary_multiply.16', 'rhs': '$const668.17', 'res': '$670binary_add.18'}), (672, {'lhs': '$654binary_add.10', 'rhs': '$670binary_add.18', 'res': '$672binary_multiply.19'}), (674, {'lhs': '$grad_coeff648.7', 'rhs': '$672binary_multiply.19', 'res': '$674inplace_true_divide.20'}), (676, {'value': '$674inplace_true_divide.20'}), (678, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={700: ('$phi636.0', '$phi636.1')})
12-22 13:15 DEBUG    block_infos State(pc_initial=680 nstack_initial=2):
AdaptBlockInfo(insts=((680, {'res': '$j680.2'}), (682, {'res': '$k682.3'}), (684, {'lhs': '$j680.2', 'rhs': '$k682.3', 'res': '$684compare_op.4'}), (686, {}), (688, {'pred': '$684compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={690: ('$phi680.0', '$phi680.1'), 696: ('$phi680.0', '$phi680.1')})
12-22 13:15 DEBUG    block_infos State(pc_initial=690 nstack_initial=2):
AdaptBlockInfo(insts=((690, {}), (692, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={592: ('$phi690.0', '$phi690.1')})
12-22 13:15 DEBUG    block_infos State(pc_initial=696 nstack_initial=2):
AdaptBlockInfo(insts=((696, {'res': '$const696.2'}), (698, {'value': '$const696.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={700: ('$phi696.0', '$phi696.1')})
12-22 13:15 DEBUG    block_infos State(pc_initial=700 nstack_initial=2):
AdaptBlockInfo(insts=((700, {'res': '$700load_global.2'}), (702, {'res': '$dim702.3'}), (704, {'func': '$700load_global.2', 'args': ['$dim702.3'], 'res': '$704call_function.4'}), (706, {'value': '$704call_function.4', 'res': '$706get_iter.5'})), outgoing_phis={'$phi708.2': '$706get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={708: ('$phi700.0', '$phi700.1', '$706get_iter.5')})
12-22 13:15 DEBUG    block_infos State(pc_initial=708 nstack_initial=3):
AdaptBlockInfo(insts=((708, {'iterator': '$phi708.2', 'pair': '$708for_iter.3', 'indval': '$708for_iter.4', 'pred': '$708for_iter.5'}),), outgoing_phis={'$phi710.3': '$708for_iter.4'}, blockstack=(), active_try_block=None, outgoing_edgepushed={776: ('$phi708.0', '$phi708.1'), 710: ('$phi708.0', '$phi708.1', '$phi708.2', '$708for_iter.4')})
12-22 13:15 DEBUG    block_infos State(pc_initial=710 nstack_initial=4):
AdaptBlockInfo(insts=((710, {'value': '$phi710.3'}), (712, {'res': '$grad_coeff712.4'}), (714, {'res': '$const714.5'}), (716, {'lhs': '$grad_coeff712.4', 'rhs': '$const714.5', 'res': '$716compare_op.6'}), (718, {}), (720, {'pred': '$716compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={722: ('$phi710.0', '$phi710.1', '$phi710.2'), 748: ('$phi710.0', '$phi710.1', '$phi710.2')})
12-22 13:15 DEBUG    block_infos State(pc_initial=722 nstack_initial=3):
AdaptBlockInfo(insts=((722, {'res': '$722load_global.3'}), (724, {'res': '$grad_coeff724.4'}), (726, {'res': '$current726.5'}), (728, {'res': '$d728.6'}), (730, {'index': '$d728.6', 'target': '$current726.5', 'res': '$730binary_subscr.7'}), (732, {'res': '$other732.8'}), (734, {'res': '$d734.9'}), (736, {'index': '$d734.9', 'target': '$other732.8', 'res': '$736binary_subscr.10'}), (738, {'lhs': '$730binary_subscr.7', 'rhs': '$736binary_subscr.10', 'res': '$738binary_subtract.11'}), (740, {'lhs': '$grad_coeff724.4', 'rhs': '$738binary_subtract.11', 'res': '$740binary_multiply.12'}), (742, {'func': '$722load_global.3', 'args': ['$740binary_multiply.12'], 'res': '$742call_function.13'}), (744, {'value': '$742call_function.13'}), (746, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={752: ('$phi722.0', '$phi722.1', '$phi722.2')})
12-22 13:15 DEBUG    block_infos State(pc_initial=748 nstack_initial=3):
AdaptBlockInfo(insts=((748, {'res': '$const748.3'}), (750, {'value': '$const748.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={752: ('$phi748.0', '$phi748.1', '$phi748.2')})
12-22 13:15 DEBUG    block_infos State(pc_initial=752 nstack_initial=3):
AdaptBlockInfo(insts=((752, {'res': '$current752.3'}), (754, {'res': '$d754.4'}), (756, {'orig': ['$current752.3', '$d754.4'], 'duped': ['$756dup_top_two.5', '$756dup_top_two.6']}), (758, {'index': '$756dup_top_two.6', 'target': '$756dup_top_two.5', 'res': '$758binary_subscr.7'}), (760, {'res': '$grad_d760.8'}), (762, {'res': '$alpha762.9'}), (764, {'lhs': '$grad_d760.8', 'rhs': '$alpha762.9', 'res': '$764binary_multiply.10'}), (766, {'lhs': '$758binary_subscr.7', 'rhs': '$764binary_multiply.10', 'res': '$766inplace_add.11'}), (770, {'target': '$current752.3', 'index': '$d754.4', 'value': '$766inplace_add.11'}), (772, {}), (774, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={708: ('$phi752.0', '$phi752.1', '$phi752.2')})
12-22 13:15 DEBUG    block_infos State(pc_initial=776 nstack_initial=2):
AdaptBlockInfo(insts=((776, {}), (778, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={592: ('$phi776.0', '$phi776.1')})
12-22 13:15 DEBUG    block_infos State(pc_initial=780 nstack_initial=1):
AdaptBlockInfo(insts=((780, {'res': '$epoch_of_next_negative_sample780.1'}), (782, {'res': '$i782.2'}), (784, {'orig': ['$epoch_of_next_negative_sample780.1', '$i782.2'], 'duped': ['$784dup_top_two.3', '$784dup_top_two.4']}), (786, {'index': '$784dup_top_two.4', 'target': '$784dup_top_two.3', 'res': '$786binary_subscr.5'}), (788, {'res': '$n_neg_samples788.6'}), (790, {'res': '$epochs_per_negative_sample790.7'}), (792, {'res': '$i792.8'}), (794, {'index': '$i792.8', 'target': '$epochs_per_negative_sample790.7', 'res': '$794binary_subscr.9'}), (796, {'lhs': '$n_neg_samples788.6', 'rhs': '$794binary_subscr.9', 'res': '$796binary_multiply.10'}), (798, {'lhs': '$786binary_subscr.5', 'rhs': '$796binary_multiply.10', 'res': '$798inplace_add.11'}), (802, {'target': '$epoch_of_next_negative_sample780.1', 'index': '$i782.2', 'value': '$798inplace_add.11'}), (804, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi780.0',)})
12-22 13:15 DEBUG    block_infos State(pc_initial=806 nstack_initial=0):
AdaptBlockInfo(insts=((806, {'res': '$const806.0'}), (808, {'retval': '$const806.0', 'castval': '$808return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
12-22 13:15 DEBUG    label 0:
    head_embedding = arg(0, name=head_embedding) ['head_embedding']
    tail_embedding = arg(1, name=tail_embedding) ['tail_embedding']
    head = arg(2, name=head)                 ['head']
    tail = arg(3, name=tail)                 ['tail']
    n_vertices = arg(4, name=n_vertices)     ['n_vertices']
    epochs_per_sample = arg(5, name=epochs_per_sample) ['epochs_per_sample']
    a = arg(6, name=a)                       ['a']
    b = arg(7, name=b)                       ['b']
    rng_state = arg(8, name=rng_state)       ['rng_state']
    gamma = arg(9, name=gamma)               ['gamma']
    dim = arg(10, name=dim)                  ['dim']
    move_other = arg(11, name=move_other)    ['move_other']
    alpha = arg(12, name=alpha)              ['alpha']
    epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample) ['epochs_per_negative_sample']
    epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample) ['epoch_of_next_negative_sample']
    epoch_of_next_sample = arg(15, name=epoch_of_next_sample) ['epoch_of_next_sample']
    n = arg(16, name=n)                      ['n']
    densmap_flag = arg(17, name=densmap_flag) ['densmap_flag']
    dens_phi_sum = arg(18, name=dens_phi_sum) ['dens_phi_sum']
    dens_re_sum = arg(19, name=dens_re_sum)  ['dens_re_sum']
    dens_re_cov = arg(20, name=dens_re_cov)  ['dens_re_cov']
    dens_re_std = arg(21, name=dens_re_std)  ['dens_re_std']
    dens_re_mean = arg(22, name=dens_re_mean) ['dens_re_mean']
    dens_lambda = arg(23, name=dens_lambda)  ['dens_lambda']
    dens_R = arg(24, name=dens_R)            ['dens_R']
    dens_mu = arg(25, name=dens_mu)          ['dens_mu']
    dens_mu_tot = arg(26, name=dens_mu_tot)  ['dens_mu_tot']
    $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=prange) ['$2load_global.0', '$4load_method.1']
    $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape) ['$8load_attr.3', 'epochs_per_sample']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None) ['$12binary_subscr.5', '$14call_method.6', '$4load_method.1']
    $16get_iter.7 = getiter(value=$14call_method.6) ['$14call_method.6', '$16get_iter.7']
    $phi20.0 = $16get_iter.7                 ['$16get_iter.7', '$phi20.0']
    jump 18                                  []
label 18:
    jump 20                                  []
label 20:
    $20for_iter.1 = iternext(value=$phi20.0) ['$20for_iter.1', '$phi20.0']
    $20for_iter.2 = pair_first(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.2']
    $20for_iter.3 = pair_second(value=$20for_iter.1) ['$20for_iter.1', '$20for_iter.3']
    $phi22.1 = $20for_iter.2                 ['$20for_iter.2', '$phi22.1']
    branch $20for_iter.3, 22, 806            ['$20for_iter.3']
label 22:
    i = $phi22.1                             ['$phi22.1', 'i']
    $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>) ['$28binary_subscr.4', 'epoch_of_next_sample', 'i']
    $32compare_op.6 = $28binary_subscr.4 <= n ['$28binary_subscr.4', '$32compare_op.6', 'n']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None) ['$32compare_op.6', '$34pred', 'bool34']
    branch $34pred, 36, 18                   ['$34pred']
label 36:
    j = getitem(value=head, index=i, fn=<built-in function getitem>) ['head', 'i', 'j']
    k = getitem(value=tail, index=i, fn=<built-in function getitem>) ['i', 'k', 'tail']
    current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>) ['current', 'head_embedding', 'j']
    other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>) ['k', 'other', 'tail_embedding']
    $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>)) ['$68load_global.13']
    dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.13', 'current', 'dist_squared', 'other']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None) ['$82pred', 'bool82', 'densmap_flag']
    branch $82pred, 84, 350                  ['$82pred']
label 84:
    $const84.1 = const(float, 1.0)           ['$const84.1']
    $const86.2 = const(float, 1.0)           ['$const86.2']
    $90load_global.4 = global(pow: <built-in function pow>) ['$90load_global.4']
    $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$90load_global.4', '$96call_function.7', 'b', 'dist_squared']
    $98binary_multiply.8 = a * $96call_function.7 ['$96call_function.7', '$98binary_multiply.8', 'a']
    $100binary_add.9 = $const86.2 + $98binary_multiply.8 ['$100binary_add.9', '$98binary_multiply.8', '$const86.2']
    phi = $const84.1 / $100binary_add.9      ['$100binary_add.9', '$const84.1', 'phi']
    $110binary_multiply.13 = a * b           ['$110binary_multiply.13', 'a', 'b']
    $112load_global.14 = global(pow: <built-in function pow>) ['$112load_global.14']
    $const118.17 = const(int, 1)             ['$const118.17']
    $120binary_subtract.18 = b - $const118.17 ['$120binary_subtract.18', '$const118.17', 'b']
    $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_global.14', '$120binary_subtract.18', '$122call_function.19', 'dist_squared']
    $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19 ['$110binary_multiply.13', '$122call_function.19', '$124binary_multiply.20']
    $const126.21 = const(float, 1.0)         ['$const126.21']
    $130load_global.23 = global(pow: <built-in function pow>) ['$130load_global.23']
    $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$130load_global.23', '$136call_function.26', 'b', 'dist_squared']
    $138binary_multiply.27 = a * $136call_function.26 ['$136call_function.26', '$138binary_multiply.27', 'a']
    $140binary_add.28 = $const126.21 + $138binary_multiply.27 ['$138binary_multiply.27', '$140binary_add.28', '$const126.21']
    dphi_term = $124binary_multiply.20 / $140binary_add.28 ['$124binary_multiply.20', '$140binary_add.28', 'dphi_term']
    $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>) ['$152binary_subscr.33', 'dens_phi_sum', 'k']
    q_jk = phi / $152binary_subscr.33        ['$152binary_subscr.33', 'phi', 'q_jk']
    $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>) ['$164binary_subscr.38', 'dens_phi_sum', 'j']
    q_kj = phi / $164binary_subscr.38        ['$164binary_subscr.38', 'phi', 'q_kj']
    $const172.41 = const(float, 1.0)         ['$const172.41']
    $const176.43 = const(int, 1)             ['$const176.43']
    $180binary_subtract.45 = $const176.43 - phi ['$180binary_subtract.45', '$const176.43', 'phi']
    $182binary_multiply.46 = b * $180binary_subtract.45 ['$180binary_subtract.45', '$182binary_multiply.46', 'b']
    $184binary_subtract.47 = $const172.41 - $182binary_multiply.46 ['$182binary_multiply.46', '$184binary_subtract.47', '$const172.41']
    $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$186load_global.48']
    $188load_method.49 = getattr(value=$186load_global.48, attr=exp) ['$186load_global.48', '$188load_method.49']
    $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>) ['$194binary_subscr.52', 'dens_re_sum', 'k']
    $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None) ['$188load_method.49', '$194binary_subscr.52', '$196call_method.53']
    $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53 ['$184binary_subtract.47', '$196call_method.53', '$198binary_true_divide.54']
    $202binary_add.56 = $198binary_true_divide.54 + dphi_term ['$198binary_true_divide.54', '$202binary_add.56', 'dphi_term']
    drk = q_jk * $202binary_add.56           ['$202binary_add.56', 'drk', 'q_jk']
    $const210.59 = const(float, 1.0)         ['$const210.59']
    $const214.61 = const(int, 1)             ['$const214.61']
    $218binary_subtract.63 = $const214.61 - phi ['$218binary_subtract.63', '$const214.61', 'phi']
    $220binary_multiply.64 = b * $218binary_subtract.63 ['$218binary_subtract.63', '$220binary_multiply.64', 'b']
    $222binary_subtract.65 = $const210.59 - $220binary_multiply.64 ['$220binary_multiply.64', '$222binary_subtract.65', '$const210.59']
    $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>) ['$224load_global.66']
    $226load_method.67 = getattr(value=$224load_global.66, attr=exp) ['$224load_global.66', '$226load_method.67']
    $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>) ['$232binary_subscr.70', 'dens_re_sum', 'j']
    $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None) ['$226load_method.67', '$232binary_subscr.70', '$234call_method.71']
    $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71 ['$222binary_subtract.65', '$234call_method.71', '$236binary_true_divide.72']
    $240binary_add.74 = $236binary_true_divide.72 + dphi_term ['$236binary_true_divide.72', '$240binary_add.74', 'dphi_term']
    drj = q_kj * $240binary_add.74           ['$240binary_add.74', 'drj', 'q_kj']
    re_std_sq = dens_re_std * dens_re_std    ['dens_re_std', 'dens_re_std', 're_std_sq']
    $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>) ['$258binary_subscr.81', 'dens_R', 'k']
    $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>) ['$266binary_subscr.85', 'dens_re_sum', 'k']
    $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean ['$266binary_subscr.85', '$270binary_subtract.87', 'dens_re_mean']
    $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87 ['$270binary_subtract.87', '$272binary_multiply.88', 'dens_re_cov']
    $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq ['$272binary_multiply.88', '$276binary_true_divide.90', 're_std_sq']
    weight_k = $258binary_subscr.81 - $276binary_true_divide.90 ['$258binary_subscr.81', '$276binary_true_divide.90', 'weight_k']
    $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>) ['$286binary_subscr.94', 'dens_R', 'j']
    $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>) ['$294binary_subscr.98', 'dens_re_sum', 'j']
    $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean ['$294binary_subscr.98', '$298binary_subtract.100', 'dens_re_mean']
    $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100 ['$298binary_subtract.100', '$300binary_multiply.101', 'dens_re_cov']
    $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq ['$300binary_multiply.101', '$304binary_true_divide.103', 're_std_sq']
    weight_j = $286binary_subscr.94 - $304binary_true_divide.103 ['$286binary_subscr.94', '$304binary_true_divide.103', 'weight_j']
    $314binary_multiply.107 = dens_lambda * dens_mu_tot ['$314binary_multiply.107', 'dens_lambda', 'dens_mu_tot']
    $320binary_multiply.110 = weight_k * drk ['$320binary_multiply.110', 'drk', 'weight_k']
    $326binary_multiply.113 = weight_j * drj ['$326binary_multiply.113', 'drj', 'weight_j']
    $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113 ['$320binary_multiply.110', '$326binary_multiply.113', '$328binary_add.114']
    $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114 ['$314binary_multiply.107', '$328binary_add.114', '$330binary_multiply.115']
    $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>) ['$336binary_subscr.118', 'dens_mu', 'i']
    $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std ['$336binary_subscr.118', '$340binary_multiply.120', 'dens_re_std']
    $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120 ['$330binary_multiply.115', '$340binary_multiply.120', '$342binary_true_divide.121']
    grad_cor_coeff = $342binary_true_divide.121 / n_vertices ['$342binary_true_divide.121', 'grad_cor_coeff', 'n_vertices']
    jump 350                                 []
label 350:
    $const352.2 = const(float, 0.0)          ['$const352.2']
    $354compare_op.3 = dist_squared > $const352.2 ['$354compare_op.3', '$const352.2', 'dist_squared']
    bool358 = global(bool: <class 'bool'>)   ['bool358']
    $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.3', '$358pred', 'bool358']
    branch $358pred, 360, 410                ['$358pred']
label 360:
    $const360.1 = const(float, -2.0)         ['$const360.1']
    $364binary_multiply.3 = $const360.1 * a  ['$364binary_multiply.3', '$const360.1', 'a']
    $368binary_multiply.5 = $364binary_multiply.3 * b ['$364binary_multiply.3', '$368binary_multiply.5', 'b']
    $370load_global.6 = global(pow: <built-in function pow>) ['$370load_global.6']
    $const376.9 = const(float, 1.0)          ['$const376.9']
    $378binary_subtract.10 = b - $const376.9 ['$378binary_subtract.10', '$const376.9', 'b']
    $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None) ['$370load_global.6', '$378binary_subtract.10', '$380call_function.11', 'dist_squared']
    grad_coeff = $368binary_multiply.5 * $380call_function.11 ['$368binary_multiply.5', '$380call_function.11', 'grad_coeff']
    $390load_global.15 = global(pow: <built-in function pow>) ['$390load_global.15']
    $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$390load_global.15', '$396call_function.18', 'b', 'dist_squared']
    $398binary_multiply.19 = a * $396call_function.18 ['$396call_function.18', '$398binary_multiply.19', 'a']
    $const400.20 = const(float, 1.0)         ['$const400.20']
    $402binary_add.21 = $398binary_multiply.19 + $const400.20 ['$398binary_multiply.19', '$402binary_add.21', '$const400.20']
    $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined) ['$402binary_add.21', '$404inplace_true_divide.22', 'grad_coeff']
    grad_coeff = $404inplace_true_divide.22  ['$404inplace_true_divide.22', 'grad_coeff']
    jump 414                                 []
label 410:
    grad_coeff = const(float, 0.0)           ['grad_coeff']
    jump 414                                 []
label 414:
    $414load_global.1 = global(range: <class 'range'>) ['$414load_global.1']
    $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$414load_global.1', '$418call_function.3', 'dim']
    $420get_iter.4 = getiter(value=$418call_function.3) ['$418call_function.3', '$420get_iter.4']
    $phi422.1 = $420get_iter.4               ['$420get_iter.4', '$phi422.1']
    jump 422                                 []
label 422:
    $422for_iter.2 = iternext(value=$phi422.1) ['$422for_iter.2', '$phi422.1']
    $422for_iter.3 = pair_first(value=$422for_iter.2) ['$422for_iter.2', '$422for_iter.3']
    $422for_iter.4 = pair_second(value=$422for_iter.2) ['$422for_iter.2', '$422for_iter.4']
    $phi424.2 = $422for_iter.3               ['$422for_iter.3', '$phi424.2']
    branch $422for_iter.4, 424, 540          ['$422for_iter.4']
label 424:
    d = $phi424.2                            ['$phi424.2', 'd']
    $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>)) ['$426load_global.3']
    $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$434binary_subscr.7', 'current', 'd']
    $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$440binary_subscr.10', 'd', 'other']
    $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10 ['$434binary_subscr.7', '$440binary_subscr.10', '$442binary_subtract.11']
    $444binary_multiply.12 = grad_coeff * $442binary_subtract.11 ['$442binary_subtract.11', '$444binary_multiply.12', 'grad_coeff']
    grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None) ['$426load_global.3', '$444binary_multiply.12', 'grad_d']
    bool454 = global(bool: <class 'bool'>)   ['bool454']
    $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None) ['$454pred', 'bool454', 'densmap_flag']
    branch $454pred, 456, 488                ['$454pred']
label 456:
    $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>)) ['$458load_global.3']
    $const460.4 = const(int, 2)              ['$const460.4']
    $464binary_multiply.6 = $const460.4 * grad_cor_coeff ['$464binary_multiply.6', '$const460.4', 'grad_cor_coeff']
    $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$470binary_subscr.9', 'current', 'd']
    $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$476binary_subscr.12', 'd', 'other']
    $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12 ['$470binary_subscr.9', '$476binary_subscr.12', '$478binary_subtract.13']
    $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13 ['$464binary_multiply.6', '$478binary_subtract.13', '$480binary_multiply.14']
    $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None) ['$458load_global.3', '$480binary_multiply.14', '$482call_function.15']
    $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined) ['$482call_function.15', '$484inplace_add.16', 'grad_d']
    grad_d = $484inplace_add.16              ['$484inplace_add.16', 'grad_d']
    jump 488                                 []
label 488:
    $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$494binary_subscr.6', 'current', 'd']
    $500binary_multiply.9 = grad_d * alpha   ['$500binary_multiply.9', 'alpha', 'grad_d']
    $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$494binary_subscr.6', '$500binary_multiply.9', '$502inplace_add.10']
    current[d] = $502inplace_add.10          ['$502inplace_add.10', 'current', 'd']
    bool512 = global(bool: <class 'bool'>)   ['bool512']
    $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None) ['$512pred', 'bool512', 'move_other']
    branch $512pred, 514, 422                ['$512pred']
label 514:
    $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$520binary_subscr.6', 'd', 'other']
    $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d) ['$524unary_negative.8', 'grad_d']
    $528binary_multiply.10 = $524unary_negative.8 * alpha ['$524unary_negative.8', '$528binary_multiply.10', 'alpha']
    $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined) ['$520binary_subscr.6', '$528binary_multiply.10', '$530inplace_add.11']
    other[d] = $530inplace_add.11            ['$530inplace_add.11', 'd', 'other']
    jump 422                                 []
label 540:
    $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>) ['$546binary_subscr.5', 'epoch_of_next_sample', 'i']
    $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>) ['$552binary_subscr.8', 'epochs_per_sample', 'i']
    $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined) ['$546binary_subscr.5', '$552binary_subscr.8', '$554inplace_add.9']
    epoch_of_next_sample[i] = $554inplace_add.9 ['$554inplace_add.9', 'epoch_of_next_sample', 'i']
    $560load_global.10 = global(int: <class 'int'>) ['$560load_global.10']
    $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>) ['$568binary_subscr.14', 'epoch_of_next_negative_sample', 'i']
    $570binary_subtract.15 = n - $568binary_subscr.14 ['$568binary_subscr.14', '$570binary_subtract.15', 'n']
    $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>) ['$576binary_subscr.18', 'epochs_per_negative_sample', 'i']
    $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18 ['$570binary_subtract.15', '$576binary_subscr.18', '$578binary_true_divide.19']
    n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.10', '$578binary_true_divide.19', 'n_neg_samples']
    $584load_global.21 = global(range: <class 'range'>) ['$584load_global.21']
    $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None) ['$584load_global.21', '$588call_function.23', 'n_neg_samples']
    $590get_iter.24 = getiter(value=$588call_function.23) ['$588call_function.23', '$590get_iter.24']
    $phi592.1 = $590get_iter.24              ['$590get_iter.24', '$phi592.1']
    jump 592                                 []
label 592:
    $592for_iter.2 = iternext(value=$phi592.1) ['$592for_iter.2', '$phi592.1']
    $592for_iter.3 = pair_first(value=$592for_iter.2) ['$592for_iter.2', '$592for_iter.3']
    $592for_iter.4 = pair_second(value=$592for_iter.2) ['$592for_iter.2', '$592for_iter.4']
    $phi594.2 = $592for_iter.3               ['$592for_iter.3', '$phi594.2']
    branch $592for_iter.4, 594, 780          ['$592for_iter.4']
label 594:
    p = $phi594.2                            ['$phi594.2', 'p']
    $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>)) ['$596load_global.3']
    $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$596load_global.3', '$600call_function.5', 'rng_state']
    k = $600call_function.5 % n_vertices     ['$600call_function.5', 'k', 'n_vertices']
    other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>) ['k', 'other', 'tail_embedding']
    $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>)) ['$616load_global.11']
    dist_squared = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.11', 'current', 'dist_squared', 'other']
    $const628.16 = const(float, 0.0)         ['$const628.16']
    $630compare_op.17 = dist_squared > $const628.16 ['$630compare_op.17', '$const628.16', 'dist_squared']
    bool634 = global(bool: <class 'bool'>)   ['bool634']
    $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None) ['$630compare_op.17', '$634pred', 'bool634']
    branch $634pred, 636, 680                ['$634pred']
label 636:
    $const636.2 = const(float, 2.0)          ['$const636.2']
    $640binary_multiply.4 = $const636.2 * gamma ['$640binary_multiply.4', '$const636.2', 'gamma']
    grad_coeff = $640binary_multiply.4 * b   ['$640binary_multiply.4', 'b', 'grad_coeff']
    $const650.8 = const(float, 0.001)        ['$const650.8']
    $654binary_add.10 = $const650.8 + dist_squared ['$654binary_add.10', '$const650.8', 'dist_squared']
    $658load_global.12 = global(pow: <built-in function pow>) ['$658load_global.12']
    $664call_function.15 = call $658load_global.12(dist_squared, b, func=$658load_global.12, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$658load_global.12', '$664call_function.15', 'b', 'dist_squared']
    $666binary_multiply.16 = a * $664call_function.15 ['$664call_function.15', '$666binary_multiply.16', 'a']
    $const668.17 = const(int, 1)             ['$const668.17']
    $670binary_add.18 = $666binary_multiply.16 + $const668.17 ['$666binary_multiply.16', '$670binary_add.18', '$const668.17']
    $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18 ['$654binary_add.10', '$670binary_add.18', '$672binary_multiply.19']
    $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$672binary_multiply.19', '$674inplace_true_divide.20', 'grad_coeff']
    grad_coeff = $674inplace_true_divide.20  ['$674inplace_true_divide.20', 'grad_coeff']
    jump 700                                 []
label 680:
    $684compare_op.4 = j == k                ['$684compare_op.4', 'j', 'k']
    bool688 = global(bool: <class 'bool'>)   ['bool688']
    $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None) ['$684compare_op.4', '$688pred', 'bool688']
    branch $688pred, 690, 696                ['$688pred']
label 690:
    jump 592                                 []
label 696:
    grad_coeff = const(float, 0.0)           ['grad_coeff']
    jump 700                                 []
label 700:
    $700load_global.2 = global(range: <class 'range'>) ['$700load_global.2']
    $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None) ['$700load_global.2', '$704call_function.4', 'dim']
    $706get_iter.5 = getiter(value=$704call_function.4) ['$704call_function.4', '$706get_iter.5']
    $phi708.2 = $706get_iter.5               ['$706get_iter.5', '$phi708.2']
    jump 708                                 []
label 708:
    $708for_iter.3 = iternext(value=$phi708.2) ['$708for_iter.3', '$phi708.2']
    $708for_iter.4 = pair_first(value=$708for_iter.3) ['$708for_iter.3', '$708for_iter.4']
    $708for_iter.5 = pair_second(value=$708for_iter.3) ['$708for_iter.3', '$708for_iter.5']
    $phi710.3 = $708for_iter.4               ['$708for_iter.4', '$phi710.3']
    branch $708for_iter.5, 710, 776          ['$708for_iter.5']
label 710:
    d = $phi710.3                            ['$phi710.3', 'd']
    $const714.5 = const(float, 0.0)          ['$const714.5']
    $716compare_op.6 = grad_coeff > $const714.5 ['$716compare_op.6', '$const714.5', 'grad_coeff']
    bool720 = global(bool: <class 'bool'>)   ['bool720']
    $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None) ['$716compare_op.6', '$720pred', 'bool720']
    branch $720pred, 722, 748                ['$720pred']
label 722:
    $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>)) ['$722load_global.3']
    $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$730binary_subscr.7', 'current', 'd']
    $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>) ['$736binary_subscr.10', 'd', 'other']
    $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10 ['$730binary_subscr.7', '$736binary_subscr.10', '$738binary_subtract.11']
    $740binary_multiply.12 = grad_coeff * $738binary_subtract.11 ['$738binary_subtract.11', '$740binary_multiply.12', 'grad_coeff']
    grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None) ['$722load_global.3', '$740binary_multiply.12', 'grad_d']
    jump 752                                 []
label 748:
    grad_d = const(int, 0)                   ['grad_d']
    jump 752                                 []
label 752:
    $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>) ['$758binary_subscr.7', 'current', 'd']
    $764binary_multiply.10 = grad_d * alpha  ['$764binary_multiply.10', 'alpha', 'grad_d']
    $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined) ['$758binary_subscr.7', '$764binary_multiply.10', '$766inplace_add.11']
    current[d] = $766inplace_add.11          ['$766inplace_add.11', 'current', 'd']
    jump 708                                 []
label 776:
    jump 592                                 []
label 780:
    $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>) ['$786binary_subscr.5', 'epoch_of_next_negative_sample', 'i']
    $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>) ['$794binary_subscr.9', 'epochs_per_negative_sample', 'i']
    $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9 ['$794binary_subscr.9', '$796binary_multiply.10', 'n_neg_samples']
    $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined) ['$786binary_subscr.5', '$796binary_multiply.10', '$798inplace_add.11']
    epoch_of_next_negative_sample[i] = $798inplace_add.11 ['$798inplace_add.11', 'epoch_of_next_negative_sample', 'i']
    jump 18                                  []
label 806:
    $const806.0 = const(NoneType, None)      ['$const806.0']
    $808return_value.1 = cast(value=$const806.0) ['$808return_value.1', '$const806.0']
    return $808return_value.1                ['$808return_value.1']

12-22 13:15 DEBUG    ==== SSA block analysis pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block analysis pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block analysis pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block analysis pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block analysis pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block analysis pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block analysis pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block analysis pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block analysis pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block analysis pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block analysis pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block analysis pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block analysis pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block analysis pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block analysis pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block analysis pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block analysis pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block analysis pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block analysis pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared, b, func=$658load_global.12, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block analysis pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block analysis pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block analysis pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block analysis pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block analysis pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block analysis pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: d = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block analysis pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block analysis pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block analysis pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block analysis pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block analysis pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block analysis pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block analysis pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block analysis pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block analysis pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._GatherDefsHandler object at 0x000001AF12324A30>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    defs defaultdict(<class 'list'>,
            {'$100binary_add.9': [<numba.core.ir.Assign object at 0x000001AF12AAFFD0>],
             '$110binary_multiply.13': [<numba.core.ir.Assign object at 0x000001AF12B9FEB0>],
             '$112load_global.14': [<numba.core.ir.Assign object at 0x000001AF12B9FD30>],
             '$120binary_subtract.18': [<numba.core.ir.Assign object at 0x000001AF12B9F7C0>],
             '$122call_function.19': [<numba.core.ir.Assign object at 0x000001AF12B9F4C0>],
             '$124binary_multiply.20': [<numba.core.ir.Assign object at 0x000001AF12B0B0A0>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF372ED90>],
             '$130load_global.23': [<numba.core.ir.Assign object at 0x000001AF12B0BE80>],
             '$136call_function.26': [<numba.core.ir.Assign object at 0x000001AF12B0B4C0>],
             '$138binary_multiply.27': [<numba.core.ir.Assign object at 0x000001AF12B0B400>],
             '$140binary_add.28': [<numba.core.ir.Assign object at 0x000001AF12B0B2B0>],
             '$14call_method.6': [<numba.core.ir.Assign object at 0x000001AF12B44BB0>],
             '$152binary_subscr.33': [<numba.core.ir.Assign object at 0x000001AF128E7130>],
             '$164binary_subscr.38': [<numba.core.ir.Assign object at 0x000001AF112115B0>],
             '$16get_iter.7': [<numba.core.ir.Assign object at 0x000001AF12B44CA0>],
             '$180binary_subtract.45': [<numba.core.ir.Assign object at 0x000001AF11226220>],
             '$182binary_multiply.46': [<numba.core.ir.Assign object at 0x000001AF11226130>],
             '$184binary_subtract.47': [<numba.core.ir.Assign object at 0x000001AF112260D0>],
             '$186load_global.48': [<numba.core.ir.Assign object at 0x000001AF11226190>],
             '$188load_method.49': [<numba.core.ir.Assign object at 0x000001AF11226AC0>],
             '$194binary_subscr.52': [<numba.core.ir.Assign object at 0x000001AF11202C10>],
             '$196call_method.53': [<numba.core.ir.Assign object at 0x000001AF11202D00>],
             '$198binary_true_divide.54': [<numba.core.ir.Assign object at 0x000001AF11202CD0>],
             '$202binary_add.56': [<numba.core.ir.Assign object at 0x000001AF112025E0>],
             '$20for_iter.1': [<numba.core.ir.Assign object at 0x000001AF12B44610>],
             '$20for_iter.2': [<numba.core.ir.Assign object at 0x000001AF12B44340>],
             '$20for_iter.3': [<numba.core.ir.Assign object at 0x000001AF12B444F0>],
             '$218binary_subtract.63': [<numba.core.ir.Assign object at 0x000001AF113913D0>],
             '$220binary_multiply.64': [<numba.core.ir.Assign object at 0x000001AF113912E0>],
             '$222binary_subtract.65': [<numba.core.ir.Assign object at 0x000001AF113915E0>],
             '$224load_global.66': [<numba.core.ir.Assign object at 0x000001AF11391100>],
             '$226load_method.67': [<numba.core.ir.Assign object at 0x000001AF113917F0>],
             '$232binary_subscr.70': [<numba.core.ir.Assign object at 0x000001AF113916A0>],
             '$234call_method.71': [<numba.core.ir.Assign object at 0x000001AF11391E20>],
             '$236binary_true_divide.72': [<numba.core.ir.Assign object at 0x000001AF11391CA0>],
             '$240binary_add.74': [<numba.core.ir.Assign object at 0x000001AF11371190>],
             '$258binary_subscr.81': [<numba.core.ir.Assign object at 0x000001AF1136C550>],
             '$266binary_subscr.85': [<numba.core.ir.Assign object at 0x000001AF11377F10>],
             '$270binary_subtract.87': [<numba.core.ir.Assign object at 0x000001AF11377B20>],
             '$272binary_multiply.88': [<numba.core.ir.Assign object at 0x000001AF11377940>],
             '$276binary_true_divide.90': [<numba.core.ir.Assign object at 0x000001AF11377790>],
             '$286binary_subscr.94': [<numba.core.ir.Assign object at 0x000001AF11377160>],
             '$28binary_subscr.4': [<numba.core.ir.Assign object at 0x000001AF12B4B850>],
             '$294binary_subscr.98': [<numba.core.ir.Assign object at 0x000001AF11529C70>],
             '$298binary_subtract.100': [<numba.core.ir.Assign object at 0x000001AF11529460>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000001AF12B3B4C0>],
             '$300binary_multiply.101': [<numba.core.ir.Assign object at 0x000001AF11529310>],
             '$304binary_true_divide.103': [<numba.core.ir.Assign object at 0x000001AF11529040>],
             '$314binary_multiply.107': [<numba.core.ir.Assign object at 0x000001AEF392F610>],
             '$320binary_multiply.110': [<numba.core.ir.Assign object at 0x000001AEF392F340>],
             '$326binary_multiply.113': [<numba.core.ir.Assign object at 0x000001AEF392F6A0>],
             '$328binary_add.114': [<numba.core.ir.Assign object at 0x000001AF125AB3D0>],
             '$32compare_op.6': [<numba.core.ir.Assign object at 0x000001AF12B4BC70>],
             '$330binary_multiply.115': [<numba.core.ir.Assign object at 0x000001AF125ABD00>],
             '$336binary_subscr.118': [<numba.core.ir.Assign object at 0x000001AF125ABD90>],
             '$340binary_multiply.120': [<numba.core.ir.Assign object at 0x000001AF125AB580>],
             '$342binary_true_divide.121': [<numba.core.ir.Assign object at 0x000001AF125AB0D0>],
             '$34pred': [<numba.core.ir.Assign object at 0x000001AF12B4BAC0>],
             '$354compare_op.3': [<numba.core.ir.Assign object at 0x000001AF128E73D0>],
             '$358pred': [<numba.core.ir.Assign object at 0x000001AF11211100>],
             '$364binary_multiply.3': [<numba.core.ir.Assign object at 0x000001AF11371730>],
             '$368binary_multiply.5': [<numba.core.ir.Assign object at 0x000001AF113770D0>],
             '$370load_global.6': [<numba.core.ir.Assign object at 0x000001AF11377550>],
             '$378binary_subtract.10': [<numba.core.ir.Assign object at 0x000001AF12B4B2E0>],
             '$380call_function.11': [<numba.core.ir.Assign object at 0x000001AF125ABB20>],
             '$390load_global.15': [<numba.core.ir.Assign object at 0x000001AF125C1850>],
             '$396call_function.18': [<numba.core.ir.Assign object at 0x000001AF125C1820>],
             '$398binary_multiply.19': [<numba.core.ir.Assign object at 0x000001AF125C1FD0>],
             '$402binary_add.21': [<numba.core.ir.Assign object at 0x000001AF125C1730>],
             '$404inplace_true_divide.22': [<numba.core.ir.Assign object at 0x000001AF125C1940>],
             '$414load_global.1': [<numba.core.ir.Assign object at 0x000001AF11502040>],
             '$418call_function.3': [<numba.core.ir.Assign object at 0x000001AF11502370>],
             '$420get_iter.4': [<numba.core.ir.Assign object at 0x000001AF11502520>],
             '$422for_iter.2': [<numba.core.ir.Assign object at 0x000001AF11502B50>],
             '$422for_iter.3': [<numba.core.ir.Assign object at 0x000001AF11502C10>],
             '$422for_iter.4': [<numba.core.ir.Assign object at 0x000001AF11502B20>],
             '$426load_global.3': [<numba.core.ir.Assign object at 0x000001AF124C4400>],
             '$434binary_subscr.7': [<numba.core.ir.Assign object at 0x000001AF124C45B0>],
             '$440binary_subscr.10': [<numba.core.ir.Assign object at 0x000001AF124C43D0>],
             '$442binary_subtract.11': [<numba.core.ir.Assign object at 0x000001AF124C41F0>],
             '$444binary_multiply.12': [<numba.core.ir.Assign object at 0x000001AF124C46A0>],
             '$454pred': [<numba.core.ir.Assign object at 0x000001AF124693D0>],
             '$458load_global.3': [<numba.core.ir.Assign object at 0x000001AF12469130>],
             '$464binary_multiply.6': [<numba.core.ir.Assign object at 0x000001AF12469820>],
             '$470binary_subscr.9': [<numba.core.ir.Assign object at 0x000001AF12469A30>],
             '$476binary_subscr.12': [<numba.core.ir.Assign object at 0x000001AEF37CD850>],
             '$478binary_subtract.13': [<numba.core.ir.Assign object at 0x000001AEF37CD820>],
             '$480binary_multiply.14': [<numba.core.ir.Assign object at 0x000001AEF37CDB80>],
             '$482call_function.15': [<numba.core.ir.Assign object at 0x000001AEF37CDD30>],
             '$484inplace_add.16': [<numba.core.ir.Assign object at 0x000001AEF37CDE80>],
             '$494binary_subscr.6': [<numba.core.ir.Assign object at 0x000001AEF37CD2B0>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x000001AF12B3B400>],
             '$500binary_multiply.9': [<numba.core.ir.Assign object at 0x000001AEF3741430>],
             '$502inplace_add.10': [<numba.core.ir.Assign object at 0x000001AF1239A5E0>],
             '$512pred': [<numba.core.ir.Assign object at 0x000001AF1239A0D0>],
             '$520binary_subscr.6': [<numba.core.ir.Assign object at 0x000001AF1239AAC0>],
             '$524unary_negative.8': [<numba.core.ir.Assign object at 0x000001AF1239AEB0>],
             '$528binary_multiply.10': [<numba.core.ir.Assign object at 0x000001AF1239AF10>],
             '$530inplace_add.11': [<numba.core.ir.Assign object at 0x000001AEF393DDC0>],
             '$546binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AEF393D370>],
             '$552binary_subscr.8': [<numba.core.ir.Assign object at 0x000001AEF3888D60>],
             '$554inplace_add.9': [<numba.core.ir.Assign object at 0x000001AEF3888D00>],
             '$560load_global.10': [<numba.core.ir.Assign object at 0x000001AEF3888CA0>],
             '$568binary_subscr.14': [<numba.core.ir.Assign object at 0x000001AEF38882E0>],
             '$570binary_subtract.15': [<numba.core.ir.Assign object at 0x000001AEF38887C0>],
             '$576binary_subscr.18': [<numba.core.ir.Assign object at 0x000001AEF39E9280>],
             '$578binary_true_divide.19': [<numba.core.ir.Assign object at 0x000001AEF39E9490>],
             '$584load_global.21': [<numba.core.ir.Assign object at 0x000001AEF39E9820>],
             '$588call_function.23': [<numba.core.ir.Assign object at 0x000001AEF39E9AF0>],
             '$590get_iter.24': [<numba.core.ir.Assign object at 0x000001AEF39E9C10>],
             '$592for_iter.2': [<numba.core.ir.Assign object at 0x000001AEF39E9E50>],
             '$592for_iter.3': [<numba.core.ir.Assign object at 0x000001AEF39E9940>],
             '$592for_iter.4': [<numba.core.ir.Assign object at 0x000001AEF39E9FA0>],
             '$596load_global.3': [<numba.core.ir.Assign object at 0x000001AEF39EF610>],
             '$600call_function.5': [<numba.core.ir.Assign object at 0x000001AEF39EF9A0>],
             '$616load_global.11': [<numba.core.ir.Assign object at 0x000001AEF39EF280>],
             '$630compare_op.17': [<numba.core.ir.Assign object at 0x000001AEF3698820>],
             '$634pred': [<numba.core.ir.Assign object at 0x000001AEF3698040>],
             '$640binary_multiply.4': [<numba.core.ir.Assign object at 0x000001AEF3698D00>],
             '$654binary_add.10': [<numba.core.ir.Assign object at 0x000001AEF37492E0>],
             '$658load_global.12': [<numba.core.ir.Assign object at 0x000001AEF3749670>],
             '$664call_function.15': [<numba.core.ir.Assign object at 0x000001AEF389FF10>],
             '$666binary_multiply.16': [<numba.core.ir.Assign object at 0x000001AEF3A7F5E0>],
             '$670binary_add.18': [<numba.core.ir.Assign object at 0x000001AEF311D670>],
             '$672binary_multiply.19': [<numba.core.ir.Assign object at 0x000001AEF311D160>],
             '$674inplace_true_divide.20': [<numba.core.ir.Assign object at 0x000001AEF3A82070>],
             '$684compare_op.4': [<numba.core.ir.Assign object at 0x000001AEF3A822E0>],
             '$688pred': [<numba.core.ir.Assign object at 0x000001AEF3A82610>],
             '$68load_global.13': [<numba.core.ir.Assign object at 0x000001AF12B55A00>],
             '$700load_global.2': [<numba.core.ir.Assign object at 0x000001AEF3A82D60>],
             '$704call_function.4': [<numba.core.ir.Assign object at 0x000001AEF3A82E20>],
             '$706get_iter.5': [<numba.core.ir.Assign object at 0x000001AEF3473070>],
             '$708for_iter.3': [<numba.core.ir.Assign object at 0x000001AF123121F0>],
             '$708for_iter.4': [<numba.core.ir.Assign object at 0x000001AF12312970>],
             '$708for_iter.5': [<numba.core.ir.Assign object at 0x000001AF123128B0>],
             '$716compare_op.6': [<numba.core.ir.Assign object at 0x000001AF12312310>],
             '$720pred': [<numba.core.ir.Assign object at 0x000001AF12312AF0>],
             '$722load_global.3': [<numba.core.ir.Assign object at 0x000001AF12290F70>],
             '$730binary_subscr.7': [<numba.core.ir.Assign object at 0x000001AF122903D0>],
             '$736binary_subscr.10': [<numba.core.ir.Assign object at 0x000001AF12290370>],
             '$738binary_subtract.11': [<numba.core.ir.Assign object at 0x000001AF12290220>],
             '$740binary_multiply.12': [<numba.core.ir.Assign object at 0x000001AF12290BE0>],
             '$758binary_subscr.7': [<numba.core.ir.Assign object at 0x000001AF1247BC70>],
             '$764binary_multiply.10': [<numba.core.ir.Assign object at 0x000001AF1247B850>],
             '$766inplace_add.11': [<numba.core.ir.Assign object at 0x000001AF1247B790>],
             '$786binary_subscr.5': [<numba.core.ir.Assign object at 0x000001AF17AED970>],
             '$794binary_subscr.9': [<numba.core.ir.Assign object at 0x000001AF17AEDF10>],
             '$796binary_multiply.10': [<numba.core.ir.Assign object at 0x000001AF17AED820>],
             '$798inplace_add.11': [<numba.core.ir.Assign object at 0x000001AF17AEDEB0>],
             '$808return_value.1': [<numba.core.ir.Assign object at 0x000001AF17AED040>],
             '$82pred': [<numba.core.ir.Assign object at 0x000001AF12B51610>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x000001AF12B3B250>],
             '$90load_global.4': [<numba.core.ir.Assign object at 0x000001AF12B51C70>],
             '$96call_function.7': [<numba.core.ir.Assign object at 0x000001AF12B51250>],
             '$98binary_multiply.8': [<numba.core.ir.Assign object at 0x000001AF12B51BE0>],
             '$const10.4': [<numba.core.ir.Assign object at 0x000001AF12B3B100>],
             '$const118.17': [<numba.core.ir.Assign object at 0x000001AF12B9F940>],
             '$const126.21': [<numba.core.ir.Assign object at 0x000001AF12B0BF10>],
             '$const172.41': [<numba.core.ir.Assign object at 0x000001AF112118B0>],
             '$const176.43': [<numba.core.ir.Assign object at 0x000001AF112261C0>],
             '$const210.59': [<numba.core.ir.Assign object at 0x000001AF11363D90>],
             '$const214.61': [<numba.core.ir.Assign object at 0x000001AF11363C40>],
             '$const352.2': [<numba.core.ir.Assign object at 0x000001AF12B0B8B0>],
             '$const360.1': [<numba.core.ir.Assign object at 0x000001AF113634F0>],
             '$const376.9': [<numba.core.ir.Assign object at 0x000001AEF392FA00>],
             '$const400.20': [<numba.core.ir.Assign object at 0x000001AF125C1D60>],
             '$const460.4': [<numba.core.ir.Assign object at 0x000001AF124693A0>],
             '$const628.16': [<numba.core.ir.Assign object at 0x000001AEF36983A0>],
             '$const636.2': [<numba.core.ir.Assign object at 0x000001AEF39EFDC0>],
             '$const650.8': [<numba.core.ir.Assign object at 0x000001AEF3749A60>],
             '$const668.17': [<numba.core.ir.Assign object at 0x000001AEF32B4730>],
             '$const714.5': [<numba.core.ir.Assign object at 0x000001AF12312FD0>],
             '$const806.0': [<numba.core.ir.Assign object at 0x000001AF17AED9D0>],
             '$const84.1': [<numba.core.ir.Assign object at 0x000001AF12B55AC0>],
             '$const86.2': [<numba.core.ir.Assign object at 0x000001AF12B55A90>],
             '$phi20.0': [<numba.core.ir.Assign object at 0x000001AF12B29130>],
             '$phi22.1': [<numba.core.ir.Assign object at 0x000001AF12B447F0>],
             '$phi422.1': [<numba.core.ir.Assign object at 0x000001AF11502160>],
             '$phi424.2': [<numba.core.ir.Assign object at 0x000001AF11502D30>],
             '$phi592.1': [<numba.core.ir.Assign object at 0x000001AEF393D1C0>],
             '$phi594.2': [<numba.core.ir.Assign object at 0x000001AEF3888E20>],
             '$phi708.2': [<numba.core.ir.Assign object at 0x000001AEF3A82970>],
             '$phi710.3': [<numba.core.ir.Assign object at 0x000001AEF3473F40>],
             'a': [<numba.core.ir.Assign object at 0x000001AF12B29B80>],
             'alpha': [<numba.core.ir.Assign object at 0x000001AF12B308B0>],
             'b': [<numba.core.ir.Assign object at 0x000001AF12B293A0>],
             'bool34': [<numba.core.ir.Assign object at 0x000001AF12B4B940>],
             'bool358': [<numba.core.ir.Assign object at 0x000001AF11211D00>],
             'bool454': [<numba.core.ir.Assign object at 0x000001AF124694C0>],
             'bool512': [<numba.core.ir.Assign object at 0x000001AF1239A730>],
             'bool634': [<numba.core.ir.Assign object at 0x000001AEF3698E20>],
             'bool688': [<numba.core.ir.Assign object at 0x000001AEF3A824C0>],
             'bool720': [<numba.core.ir.Assign object at 0x000001AF123128E0>],
             'bool82': [<numba.core.ir.Assign object at 0x000001AF12B514C0>],
             'current': [<numba.core.ir.Assign object at 0x000001AF12B555E0>],
             'd': [<numba.core.ir.Assign object at 0x000001AF11502610>,
                   <numba.core.ir.Assign object at 0x000001AF12312F70>],
             'dens_R': [<numba.core.ir.Assign object at 0x000001AF12B3BFA0>],
             'dens_lambda': [<numba.core.ir.Assign object at 0x000001AF12B3BE80>],
             'dens_mu': [<numba.core.ir.Assign object at 0x000001AF12B3B820>],
             'dens_mu_tot': [<numba.core.ir.Assign object at 0x000001AF12B3B640>],
             'dens_phi_sum': [<numba.core.ir.Assign object at 0x000001AF12B30130>],
             'dens_re_cov': [<numba.core.ir.Assign object at 0x000001AF12B3B610>],
             'dens_re_mean': [<numba.core.ir.Assign object at 0x000001AF12B3BB20>],
             'dens_re_std': [<numba.core.ir.Assign object at 0x000001AF12B3BC70>],
             'dens_re_sum': [<numba.core.ir.Assign object at 0x000001AF12B30490>],
             'densmap_flag': [<numba.core.ir.Assign object at 0x000001AF12B303D0>],
             'dim': [<numba.core.ir.Assign object at 0x000001AF12B30370>],
             'dist_squared': [<numba.core.ir.Assign object at 0x000001AF12B51190>,
                              <numba.core.ir.Assign object at 0x000001AEF3698610>],
             'dphi_term': [<numba.core.ir.Assign object at 0x000001AF12B0B790>],
             'drj': [<numba.core.ir.Assign object at 0x000001AF113711C0>],
             'drk': [<numba.core.ir.Assign object at 0x000001AF112026A0>],
             'epoch_of_next_negative_sample': [<numba.core.ir.Assign object at 0x000001AF12B30AC0>],
             'epoch_of_next_sample': [<numba.core.ir.Assign object at 0x000001AF12B30580>],
             'epochs_per_negative_sample': [<numba.core.ir.Assign object at 0x000001AF12B30A00>],
             'epochs_per_sample': [<numba.core.ir.Assign object at 0x000001AF12B29AF0>],
             'gamma': [<numba.core.ir.Assign object at 0x000001AF12B30CA0>],
             'grad_coeff': [<numba.core.ir.Assign object at 0x000001AF125C1E50>,
                            <numba.core.ir.Assign object at 0x000001AF115023D0>,
                            <numba.core.ir.Assign object at 0x000001AF125C1A60>,
                            <numba.core.ir.Assign object at 0x000001AEF3698730>,
                            <numba.core.ir.Assign object at 0x000001AEF3A82100>,
                            <numba.core.ir.Assign object at 0x000001AEF3A82AC0>],
             'grad_cor_coeff': [<numba.core.ir.Assign object at 0x000001AF125AB550>],
             'grad_d': [<numba.core.ir.Assign object at 0x000001AF124C4EB0>,
                        <numba.core.ir.Assign object at 0x000001AEF37CDEE0>,
                        <numba.core.ir.Assign object at 0x000001AF12290580>,
                        <numba.core.ir.Assign object at 0x000001AF12290670>],
             'head': [<numba.core.ir.Assign object at 0x000001AF12B29CD0>],
             'head_embedding': [<numba.core.ir.Assign object at 0x000001AF12B29B50>],
             'i': [<numba.core.ir.Assign object at 0x000001AF12B44370>],
             'j': [<numba.core.ir.Assign object at 0x000001AF12B4B040>],
             'k': [<numba.core.ir.Assign object at 0x000001AF12B55FD0>,
                   <numba.core.ir.Assign object at 0x000001AEF39EF8E0>],
             'move_other': [<numba.core.ir.Assign object at 0x000001AF12B30DC0>],
             'n': [<numba.core.ir.Assign object at 0x000001AF12B30850>],
             'n_neg_samples': [<numba.core.ir.Assign object at 0x000001AEF39E95B0>],
             'n_vertices': [<numba.core.ir.Assign object at 0x000001AF12B29D90>],
             'other': [<numba.core.ir.Assign object at 0x000001AF12B551F0>,
                       <numba.core.ir.Assign object at 0x000001AEF39EFFA0>],
             'p': [<numba.core.ir.Assign object at 0x000001AEF39EF430>],
             'phi': [<numba.core.ir.Assign object at 0x000001AF12B9F640>],
             'q_jk': [<numba.core.ir.Assign object at 0x000001AF11211D60>],
             'q_kj': [<numba.core.ir.Assign object at 0x000001AF11211B50>],
             're_std_sq': [<numba.core.ir.Assign object at 0x000001AF1136C250>],
             'rng_state': [<numba.core.ir.Assign object at 0x000001AF12B293D0>],
             'tail': [<numba.core.ir.Assign object at 0x000001AF12B29CA0>],
             'tail_embedding': [<numba.core.ir.Assign object at 0x000001AF12B294F0>],
             'weight_j': [<numba.core.ir.Assign object at 0x000001AEF392F970>],
             'weight_k': [<numba.core.ir.Assign object at 0x000001AF11377DF0>]})
12-22 13:15 DEBUG    SSA violators {'dist_squared', 'd', 'other', 'grad_d', 'grad_coeff', 'k'}
12-22 13:15 DEBUG    Fix SSA violator on var dist_squared
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    first assign: dist_squared
12-22 13:15 DEBUG    replaced with: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    replaced with: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared, b, func=$658load_global.12, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: d = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {36: [<numba.core.ir.Assign object at 0x000001AF12324490>],
             594: [<numba.core.ir.Assign object at 0x000001AEF380BC10>]})
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def var='dist_squared' stmt=$96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def_from_top label 84
12-22 13:15 DEBUG    idom 36 from label 84
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def var='dist_squared' stmt=$122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def_from_top label 84
12-22 13:15 DEBUG    idom 36 from label 84
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def var='dist_squared' stmt=$136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def_from_top label 84
12-22 13:15 DEBUG    idom 36 from label 84
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    find_def var='dist_squared' stmt=$354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    find_def_from_top label 350
12-22 13:15 DEBUG    idom 36 from label 350
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def var='dist_squared' stmt=$380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def_from_top label 360
12-22 13:15 DEBUG    idom 350 from label 360
12-22 13:15 DEBUG    find_def_from_bottom label 350
12-22 13:15 DEBUG    find_def_from_top label 350
12-22 13:15 DEBUG    idom 36 from label 350
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def var='dist_squared' stmt=$396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def_from_top label 360
12-22 13:15 DEBUG    idom 350 from label 360
12-22 13:15 DEBUG    find_def_from_bottom label 350
12-22 13:15 DEBUG    find_def_from_top label 350
12-22 13:15 DEBUG    idom 36 from label 350
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared > $const628.16
12-22 13:15 DEBUG    find_def var='dist_squared' stmt=$630compare_op.17 = dist_squared > $const628.16
12-22 13:15 DEBUG    replaced with: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared
12-22 13:15 DEBUG    find_def var='dist_squared' stmt=$654binary_add.10 = $const650.8 + dist_squared
12-22 13:15 DEBUG    find_def_from_top label 636
12-22 13:15 DEBUG    idom 594 from label 636
12-22 13:15 DEBUG    find_def_from_bottom label 594
12-22 13:15 DEBUG    replaced with: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared, b, func=$658load_global.12, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def var='dist_squared' stmt=$664call_function.15 = call $658load_global.12(dist_squared, b, func=$658load_global.12, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def_from_top label 636
12-22 13:15 DEBUG    idom 594 from label 636
12-22 13:15 DEBUG    find_def_from_bottom label 594
12-22 13:15 DEBUG    replaced with: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: d = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    Fix SSA violator on var d
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    first assign: d
12-22 13:15 DEBUG    replaced with: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: d = $phi710.3
12-22 13:15 DEBUG    replaced with: d.1 = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {424: [<numba.core.ir.Assign object at 0x000001AF12324A30>],
             710: [<numba.core.ir.Assign object at 0x000001AEF380B790>]})
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='d' stmt=$434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='d' stmt=$440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='d' stmt=$470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 456
12-22 13:15 DEBUG    idom 424 from label 456
12-22 13:15 DEBUG    find_def_from_bottom label 424
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='d' stmt=$476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 456
12-22 13:15 DEBUG    idom 424 from label 456
12-22 13:15 DEBUG    find_def_from_bottom label 424
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='d' stmt=$494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 488
12-22 13:15 DEBUG    idom 424 from label 488
12-22 13:15 DEBUG    find_def_from_bottom label 424
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    find_def var='d' stmt=current[d] = $502inplace_add.10
12-22 13:15 DEBUG    find_def_from_top label 488
12-22 13:15 DEBUG    idom 424 from label 488
12-22 13:15 DEBUG    find_def_from_bottom label 424
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='d' stmt=$520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 514
12-22 13:15 DEBUG    idom 488 from label 514
12-22 13:15 DEBUG    find_def_from_bottom label 488
12-22 13:15 DEBUG    find_def_from_top label 488
12-22 13:15 DEBUG    idom 424 from label 488
12-22 13:15 DEBUG    find_def_from_bottom label 424
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    find_def var='d' stmt=other[d] = $530inplace_add.11
12-22 13:15 DEBUG    find_def_from_top label 514
12-22 13:15 DEBUG    idom 488 from label 514
12-22 13:15 DEBUG    find_def_from_bottom label 488
12-22 13:15 DEBUG    find_def_from_top label 488
12-22 13:15 DEBUG    idom 424 from label 488
12-22 13:15 DEBUG    find_def_from_bottom label 424
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='d' stmt=$730binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 722
12-22 13:15 DEBUG    idom 710 from label 722
12-22 13:15 DEBUG    find_def_from_bottom label 710
12-22 13:15 DEBUG    replaced with: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='d' stmt=$736binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 722
12-22 13:15 DEBUG    idom 710 from label 722
12-22 13:15 DEBUG    find_def_from_bottom label 710
12-22 13:15 DEBUG    replaced with: $736binary_subscr.10 = getitem(value=other, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='d' stmt=$758binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 752
12-22 13:15 DEBUG    idom 710 from label 752
12-22 13:15 DEBUG    find_def_from_bottom label 710
12-22 13:15 DEBUG    replaced with: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $766inplace_add.11
12-22 13:15 DEBUG    find_def var='d' stmt=current[d] = $766inplace_add.11
12-22 13:15 DEBUG    find_def_from_top label 752
12-22 13:15 DEBUG    idom 710 from label 752
12-22 13:15 DEBUG    find_def_from_bottom label 710
12-22 13:15 DEBUG    replaced with: current[d.1] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    Fix SSA violator on var other
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    first assign: other
12-22 13:15 DEBUG    replaced with: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    replaced with: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF380B5E0>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {36: [<numba.core.ir.Assign object at 0x000001AEF380BEE0>],
             594: [<numba.core.ir.Assign object at 0x000001AF123249D0>]})
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def var='other' stmt=dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='other' stmt=$440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 424
12-22 13:15 DEBUG    idom 422 from label 424
12-22 13:15 DEBUG    find_def_from_bottom label 422
12-22 13:15 DEBUG    find_def_from_top label 422
12-22 13:15 DEBUG    idom 414 from label 422
12-22 13:15 DEBUG    find_def_from_bottom label 414
12-22 13:15 DEBUG    find_def_from_top label 414
12-22 13:15 DEBUG    idom 350 from label 414
12-22 13:15 DEBUG    find_def_from_bottom label 350
12-22 13:15 DEBUG    find_def_from_top label 350
12-22 13:15 DEBUG    idom 36 from label 350
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='other' stmt=$476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 456
12-22 13:15 DEBUG    idom 424 from label 456
12-22 13:15 DEBUG    find_def_from_bottom label 424
12-22 13:15 DEBUG    find_def_from_top label 424
12-22 13:15 DEBUG    idom 422 from label 424
12-22 13:15 DEBUG    find_def_from_bottom label 422
12-22 13:15 DEBUG    find_def_from_top label 422
12-22 13:15 DEBUG    idom 414 from label 422
12-22 13:15 DEBUG    find_def_from_bottom label 414
12-22 13:15 DEBUG    find_def_from_top label 414
12-22 13:15 DEBUG    idom 350 from label 414
12-22 13:15 DEBUG    find_def_from_bottom label 350
12-22 13:15 DEBUG    find_def_from_top label 350
12-22 13:15 DEBUG    idom 36 from label 350
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='other' stmt=$520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 514
12-22 13:15 DEBUG    idom 488 from label 514
12-22 13:15 DEBUG    find_def_from_bottom label 488
12-22 13:15 DEBUG    find_def_from_top label 488
12-22 13:15 DEBUG    idom 424 from label 488
12-22 13:15 DEBUG    find_def_from_bottom label 424
12-22 13:15 DEBUG    find_def_from_top label 424
12-22 13:15 DEBUG    idom 422 from label 424
12-22 13:15 DEBUG    find_def_from_bottom label 422
12-22 13:15 DEBUG    find_def_from_top label 422
12-22 13:15 DEBUG    idom 414 from label 422
12-22 13:15 DEBUG    find_def_from_bottom label 414
12-22 13:15 DEBUG    find_def_from_top label 414
12-22 13:15 DEBUG    idom 350 from label 414
12-22 13:15 DEBUG    find_def_from_bottom label 350
12-22 13:15 DEBUG    find_def_from_top label 350
12-22 13:15 DEBUG    idom 36 from label 350
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    find_def var='other' stmt=other[d] = $530inplace_add.11
12-22 13:15 DEBUG    find_def_from_top label 514
12-22 13:15 DEBUG    idom 488 from label 514
12-22 13:15 DEBUG    find_def_from_bottom label 488
12-22 13:15 DEBUG    find_def_from_top label 488
12-22 13:15 DEBUG    idom 424 from label 488
12-22 13:15 DEBUG    find_def_from_bottom label 424
12-22 13:15 DEBUG    find_def_from_top label 424
12-22 13:15 DEBUG    idom 422 from label 424
12-22 13:15 DEBUG    find_def_from_bottom label 422
12-22 13:15 DEBUG    find_def_from_top label 422
12-22 13:15 DEBUG    idom 414 from label 422
12-22 13:15 DEBUG    find_def_from_bottom label 414
12-22 13:15 DEBUG    find_def_from_top label 414
12-22 13:15 DEBUG    idom 350 from label 414
12-22 13:15 DEBUG    find_def_from_bottom label 350
12-22 13:15 DEBUG    find_def_from_top label 350
12-22 13:15 DEBUG    idom 36 from label 350
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def var='other' stmt=dist_squared.1 = call $616load_global.11(current, other, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    replaced with: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='other' stmt=$736binary_subscr.10 = getitem(value=other, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 722
12-22 13:15 DEBUG    idom 710 from label 722
12-22 13:15 DEBUG    find_def_from_bottom label 710
12-22 13:15 DEBUG    find_def_from_top label 710
12-22 13:15 DEBUG    idom 708 from label 710
12-22 13:15 DEBUG    find_def_from_bottom label 708
12-22 13:15 DEBUG    find_def_from_top label 708
12-22 13:15 DEBUG    idom 700 from label 708
12-22 13:15 DEBUG    find_def_from_bottom label 700
12-22 13:15 DEBUG    find_def_from_top label 700
12-22 13:15 DEBUG    idom 594 from label 700
12-22 13:15 DEBUG    find_def_from_bottom label 594
12-22 13:15 DEBUG    replaced with: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    Fix SSA violator on var grad_d
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    first assign: grad_d
12-22 13:15 DEBUG    replaced with: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d = $484inplace_add.16
12-22 13:15 DEBUG    replaced with: grad_d.1 = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    replaced with: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: grad_d = const(int, 0)
12-22 13:15 DEBUG    replaced with: grad_d.3 = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF12339F70>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {424: [<numba.core.ir.Assign object at 0x000001AF12324F70>],
             456: [<numba.core.ir.Assign object at 0x000001AF12324460>],
             722: [<numba.core.ir.Assign object at 0x000001AEF380BBB0>],
             748: [<numba.core.ir.Assign object at 0x000001AEF380B880>]})
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    find_def var='grad_d' stmt=$484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    find_def_from_top label 456
12-22 13:15 DEBUG    idom 424 from label 456
12-22 13:15 DEBUG    find_def_from_bottom label 424
12-22 13:15 DEBUG    on stmt: grad_d.1 = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d * alpha
12-22 13:15 DEBUG    find_def var='grad_d' stmt=$500binary_multiply.9 = grad_d * alpha
12-22 13:15 DEBUG    find_def_from_top label 488
12-22 13:15 DEBUG    insert phi node grad_d.4 = phi(incoming_values=[], incoming_blocks=[]) at 488
12-22 13:15 DEBUG    find_def_from_bottom label 424
12-22 13:15 DEBUG    incoming_def grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def_from_bottom label 456
12-22 13:15 DEBUG    incoming_def grad_d.1 = $484inplace_add.16
12-22 13:15 DEBUG    replaced with: $500binary_multiply.9 = grad_d.4 * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:15 DEBUG    find_def var='grad_d' stmt=$524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d)
12-22 13:15 DEBUG    find_def_from_top label 514
12-22 13:15 DEBUG    idom 488 from label 514
12-22 13:15 DEBUG    find_def_from_bottom label 488
12-22 13:15 DEBUG    replaced with: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: grad_d.3 = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d * alpha
12-22 13:15 DEBUG    find_def var='grad_d' stmt=$764binary_multiply.10 = grad_d * alpha
12-22 13:15 DEBUG    find_def_from_top label 752
12-22 13:15 DEBUG    insert phi node grad_d.5 = phi(incoming_values=[], incoming_blocks=[]) at 752
12-22 13:15 DEBUG    find_def_from_bottom label 722
12-22 13:15 DEBUG    incoming_def grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    find_def_from_bottom label 748
12-22 13:15 DEBUG    incoming_def grad_d.3 = const(int, 0)
12-22 13:15 DEBUG    replaced with: $764binary_multiply.10 = grad_d.5 * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF124696D0>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    Fix SSA violator on var grad_coeff
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    first assign: grad_coeff
12-22 13:15 DEBUG    replaced with: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $404inplace_true_divide.22
12-22 13:15 DEBUG    replaced with: grad_coeff.1 = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    replaced with: grad_coeff.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d.1 = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_d.4 = phi(incoming_values=[Var(grad_d, layouts.py:142), Var(grad_d.1, layouts.py:147)], incoming_blocks=[424, 456])
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d.4 * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff = $640binary_multiply.4 * b
12-22 13:15 DEBUG    replaced with: grad_coeff.3 = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff = $674inplace_true_divide.20
12-22 13:15 DEBUG    replaced with: grad_coeff.4 = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff = const(float, 0.0)
12-22 13:15 DEBUG    replaced with: grad_coeff.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_d.3 = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_d.5 = phi(incoming_values=[Var(grad_d.2, layouts.py:178), Var(grad_d.3, layouts.py:180)], incoming_blocks=[722, 748])
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d.5 * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {360: [<numba.core.ir.Assign object at 0x000001AEF380B250>,
                   <numba.core.ir.Assign object at 0x000001AF123244C0>],
             410: [<numba.core.ir.Assign object at 0x000001AF12324310>],
             636: [<numba.core.ir.Assign object at 0x000001AF123396A0>,
                   <numba.core.ir.Assign object at 0x000001AF12339910>],
             696: [<numba.core.ir.Assign object at 0x000001AF1150C730>]})
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    find_def var='grad_coeff' stmt=$404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff.1 = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: grad_coeff.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    find_def var='grad_coeff' stmt=$444binary_multiply.12 = grad_coeff * $442binary_subtract.11
12-22 13:15 DEBUG    find_def_from_top label 424
12-22 13:15 DEBUG    idom 422 from label 424
12-22 13:15 DEBUG    find_def_from_bottom label 422
12-22 13:15 DEBUG    find_def_from_top label 422
12-22 13:15 DEBUG    idom 414 from label 422
12-22 13:15 DEBUG    find_def_from_bottom label 414
12-22 13:15 DEBUG    find_def_from_top label 414
12-22 13:15 DEBUG    insert phi node grad_coeff.6 = phi(incoming_values=[], incoming_blocks=[]) at 414
12-22 13:15 DEBUG    find_def_from_bottom label 360
12-22 13:15 DEBUG    incoming_def grad_coeff.1 = $404inplace_true_divide.22
12-22 13:15 DEBUG    find_def_from_bottom label 410
12-22 13:15 DEBUG    incoming_def grad_coeff.2 = const(float, 0.0)
12-22 13:15 DEBUG    replaced with: $444binary_multiply.12 = grad_coeff.6 * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d.1 = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: grad_d.4 = phi(incoming_values=[Var(grad_d, layouts.py:142), Var(grad_d.1, layouts.py:147)], incoming_blocks=[424, 456])
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d.4 * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff.3 = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    find_def var='grad_coeff' stmt=$674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    replaced with: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff.4 = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: grad_coeff.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    find_def var='grad_coeff' stmt=$716compare_op.6 = grad_coeff > $const714.5
12-22 13:15 DEBUG    find_def_from_top label 710
12-22 13:15 DEBUG    idom 708 from label 710
12-22 13:15 DEBUG    find_def_from_bottom label 708
12-22 13:15 DEBUG    find_def_from_top label 708
12-22 13:15 DEBUG    idom 700 from label 708
12-22 13:15 DEBUG    find_def_from_bottom label 700
12-22 13:15 DEBUG    find_def_from_top label 700
12-22 13:15 DEBUG    insert phi node grad_coeff.7 = phi(incoming_values=[], incoming_blocks=[]) at 700
12-22 13:15 DEBUG    find_def_from_bottom label 696
12-22 13:15 DEBUG    incoming_def grad_coeff.5 = const(float, 0.0)
12-22 13:15 DEBUG    find_def_from_bottom label 636
12-22 13:15 DEBUG    incoming_def grad_coeff.4 = $674inplace_true_divide.20
12-22 13:15 DEBUG    replaced with: $716compare_op.6 = grad_coeff.7 > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    find_def var='grad_coeff' stmt=$740binary_multiply.12 = grad_coeff * $738binary_subtract.11
12-22 13:15 DEBUG    find_def_from_top label 722
12-22 13:15 DEBUG    idom 710 from label 722
12-22 13:15 DEBUG    find_def_from_bottom label 710
12-22 13:15 DEBUG    find_def_from_top label 710
12-22 13:15 DEBUG    idom 708 from label 710
12-22 13:15 DEBUG    find_def_from_bottom label 708
12-22 13:15 DEBUG    find_def_from_top label 708
12-22 13:15 DEBUG    idom 700 from label 708
12-22 13:15 DEBUG    find_def_from_bottom label 700
12-22 13:15 DEBUG    replaced with: $740binary_multiply.12 = grad_coeff.7 * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: grad_d.3 = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: grad_d.5 = phi(incoming_values=[Var(grad_d.2, layouts.py:178), Var(grad_d.3, layouts.py:180)], incoming_blocks=[722, 748])
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d.5 * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF1150C8E0>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    Fix SSA violator on var k
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    first assign: k
12-22 13:15 DEBUG    replaced with: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff.1 = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: grad_coeff.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: grad_coeff.6 = phi(incoming_values=[Var(grad_coeff.1, layouts.py:137), Var(grad_coeff.2, layouts.py:139)], incoming_blocks=[360, 410])
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff.6 * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d.1 = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: grad_d.4 = phi(incoming_values=[Var(grad_d, layouts.py:142), Var(grad_d.1, layouts.py:147)], incoming_blocks=[424, 456])
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d.4 * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    replaced with: k.1 = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff.3 = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff.4 = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: grad_coeff.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: grad_coeff.7 = phi(incoming_values=[Var(grad_coeff.5, layouts.py:174), Var(grad_coeff.4, layouts.py:168)], incoming_blocks=[696, 636])
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff.7 > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff.7 * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: grad_d.3 = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: grad_d.5 = phi(incoming_values=[Var(grad_d.2, layouts.py:178), Var(grad_d.3, layouts.py:180)], incoming_blocks=[722, 748])
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d.5 * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FreshVarHandler object at 0x000001AEF36A1340>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    Replaced assignments: defaultdict(<class 'list'>,
            {36: [<numba.core.ir.Assign object at 0x000001AF1150C7F0>],
             594: [<numba.core.ir.Assign object at 0x000001AF12324C10>]})
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 0
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: head_embedding = arg(0, name=head_embedding)
12-22 13:15 DEBUG    on stmt: tail_embedding = arg(1, name=tail_embedding)
12-22 13:15 DEBUG    on stmt: head = arg(2, name=head)
12-22 13:15 DEBUG    on stmt: tail = arg(3, name=tail)
12-22 13:15 DEBUG    on stmt: n_vertices = arg(4, name=n_vertices)
12-22 13:15 DEBUG    on stmt: epochs_per_sample = arg(5, name=epochs_per_sample)
12-22 13:15 DEBUG    on stmt: a = arg(6, name=a)
12-22 13:15 DEBUG    on stmt: b = arg(7, name=b)
12-22 13:15 DEBUG    on stmt: rng_state = arg(8, name=rng_state)
12-22 13:15 DEBUG    on stmt: gamma = arg(9, name=gamma)
12-22 13:15 DEBUG    on stmt: dim = arg(10, name=dim)
12-22 13:15 DEBUG    on stmt: move_other = arg(11, name=move_other)
12-22 13:15 DEBUG    on stmt: alpha = arg(12, name=alpha)
12-22 13:15 DEBUG    on stmt: epochs_per_negative_sample = arg(13, name=epochs_per_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample = arg(14, name=epoch_of_next_negative_sample)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample = arg(15, name=epoch_of_next_sample)
12-22 13:15 DEBUG    on stmt: n = arg(16, name=n)
12-22 13:15 DEBUG    on stmt: densmap_flag = arg(17, name=densmap_flag)
12-22 13:15 DEBUG    on stmt: dens_phi_sum = arg(18, name=dens_phi_sum)
12-22 13:15 DEBUG    on stmt: dens_re_sum = arg(19, name=dens_re_sum)
12-22 13:15 DEBUG    on stmt: dens_re_cov = arg(20, name=dens_re_cov)
12-22 13:15 DEBUG    on stmt: dens_re_std = arg(21, name=dens_re_std)
12-22 13:15 DEBUG    on stmt: dens_re_mean = arg(22, name=dens_re_mean)
12-22 13:15 DEBUG    on stmt: dens_lambda = arg(23, name=dens_lambda)
12-22 13:15 DEBUG    on stmt: dens_R = arg(24, name=dens_R)
12-22 13:15 DEBUG    on stmt: dens_mu = arg(25, name=dens_mu)
12-22 13:15 DEBUG    on stmt: dens_mu_tot = arg(26, name=dens_mu_tot)
12-22 13:15 DEBUG    on stmt: $2load_global.0 = global(numba: <module 'numba' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numba\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=prange)
12-22 13:15 DEBUG    on stmt: $8load_attr.3 = getattr(value=epochs_per_sample, attr=shape)
12-22 13:15 DEBUG    on stmt: $const10.4 = const(int, 0)
12-22 13:15 DEBUG    on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, layouts.py:91)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $16get_iter.7 = getiter(value=$14call_method.6)
12-22 13:15 DEBUG    on stmt: $phi20.0 = $16get_iter.7
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 18
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 20
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 20
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $20for_iter.1 = iternext(value=$phi20.0)
12-22 13:15 DEBUG    on stmt: $20for_iter.2 = pair_first(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $20for_iter.3 = pair_second(value=$20for_iter.1)
12-22 13:15 DEBUG    on stmt: $phi22.1 = $20for_iter.2
12-22 13:15 DEBUG    on stmt: branch $20for_iter.3, 22, 806
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 22
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: i = $phi22.1
12-22 13:15 DEBUG    on stmt: $28binary_subscr.4 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $32compare_op.6 = $28binary_subscr.4 <= n
12-22 13:15 DEBUG    on stmt: bool34 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $34pred = call bool34($32compare_op.6, func=bool34, args=(Var($32compare_op.6, layouts.py:92),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $34pred, 36, 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 36
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: j = getitem(value=head, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: k = getitem(value=tail, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: current = getitem(value=head_embedding, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='k' stmt=other = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $68load_global.13 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared = call $68load_global.13(current, other, func=$68load_global.13, args=[Var(current, layouts.py:96), Var(other, layouts.py:97)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool82 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $82pred = call bool82(densmap_flag, func=bool82, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $82pred, 84, 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 84
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const84.1 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const86.2 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $90load_global.4 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $96call_function.7 = call $90load_global.4(dist_squared, b, func=$90load_global.4, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $98binary_multiply.8 = a * $96call_function.7
12-22 13:15 DEBUG    on stmt: $100binary_add.9 = $const86.2 + $98binary_multiply.8
12-22 13:15 DEBUG    on stmt: phi = $const84.1 / $100binary_add.9
12-22 13:15 DEBUG    on stmt: $110binary_multiply.13 = a * b
12-22 13:15 DEBUG    on stmt: $112load_global.14 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const118.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $120binary_subtract.18 = b - $const118.17
12-22 13:15 DEBUG    on stmt: $122call_function.19 = call $112load_global.14(dist_squared, $120binary_subtract.18, func=$112load_global.14, args=[Var(dist_squared, layouts.py:99), Var($120binary_subtract.18, layouts.py:104)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $124binary_multiply.20 = $110binary_multiply.13 * $122call_function.19
12-22 13:15 DEBUG    on stmt: $const126.21 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $130load_global.23 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $136call_function.26 = call $130load_global.23(dist_squared, b, func=$130load_global.23, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $138binary_multiply.27 = a * $136call_function.26
12-22 13:15 DEBUG    on stmt: $140binary_add.28 = $const126.21 + $138binary_multiply.27
12-22 13:15 DEBUG    on stmt: dphi_term = $124binary_multiply.20 / $140binary_add.28
12-22 13:15 DEBUG    on stmt: $152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='k' stmt=$152binary_subscr.33 = getitem(value=dens_phi_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 84
12-22 13:15 DEBUG    idom 36 from label 84
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: q_jk = phi / $152binary_subscr.33
12-22 13:15 DEBUG    on stmt: $164binary_subscr.38 = getitem(value=dens_phi_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: q_kj = phi / $164binary_subscr.38
12-22 13:15 DEBUG    on stmt: $const172.41 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const176.43 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $180binary_subtract.45 = $const176.43 - phi
12-22 13:15 DEBUG    on stmt: $182binary_multiply.46 = b * $180binary_subtract.45
12-22 13:15 DEBUG    on stmt: $184binary_subtract.47 = $const172.41 - $182binary_multiply.46
12-22 13:15 DEBUG    on stmt: $186load_global.48 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $188load_method.49 = getattr(value=$186load_global.48, attr=exp)
12-22 13:15 DEBUG    on stmt: $194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='k' stmt=$194binary_subscr.52 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 84
12-22 13:15 DEBUG    idom 36 from label 84
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: $196call_method.53 = call $188load_method.49($194binary_subscr.52, func=$188load_method.49, args=[Var($194binary_subscr.52, layouts.py:111)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $198binary_true_divide.54 = $184binary_subtract.47 / $196call_method.53
12-22 13:15 DEBUG    on stmt: $202binary_add.56 = $198binary_true_divide.54 + dphi_term
12-22 13:15 DEBUG    on stmt: drk = q_jk * $202binary_add.56
12-22 13:15 DEBUG    on stmt: $const210.59 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $const214.61 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $218binary_subtract.63 = $const214.61 - phi
12-22 13:15 DEBUG    on stmt: $220binary_multiply.64 = b * $218binary_subtract.63
12-22 13:15 DEBUG    on stmt: $222binary_subtract.65 = $const210.59 - $220binary_multiply.64
12-22 13:15 DEBUG    on stmt: $224load_global.66 = global(np: <module 'numpy' from 'C:\\Users\\Local_song\\.conda\\envs\\basalt\\lib\\site-packages\\numpy\\__init__.py'>)
12-22 13:15 DEBUG    on stmt: $226load_method.67 = getattr(value=$224load_global.66, attr=exp)
12-22 13:15 DEBUG    on stmt: $232binary_subscr.70 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $234call_method.71 = call $226load_method.67($232binary_subscr.70, func=$226load_method.67, args=[Var($232binary_subscr.70, layouts.py:114)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $236binary_true_divide.72 = $222binary_subtract.65 / $234call_method.71
12-22 13:15 DEBUG    on stmt: $240binary_add.74 = $236binary_true_divide.72 + dphi_term
12-22 13:15 DEBUG    on stmt: drj = q_kj * $240binary_add.74
12-22 13:15 DEBUG    on stmt: re_std_sq = dens_re_std * dens_re_std
12-22 13:15 DEBUG    on stmt: $258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='k' stmt=$258binary_subscr.81 = getitem(value=dens_R, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 84
12-22 13:15 DEBUG    idom 36 from label 84
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: $266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='k' stmt=$266binary_subscr.85 = getitem(value=dens_re_sum, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def_from_top label 84
12-22 13:15 DEBUG    idom 36 from label 84
12-22 13:15 DEBUG    find_def_from_bottom label 36
12-22 13:15 DEBUG    on stmt: $270binary_subtract.87 = $266binary_subscr.85 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $272binary_multiply.88 = dens_re_cov * $270binary_subtract.87
12-22 13:15 DEBUG    on stmt: $276binary_true_divide.90 = $272binary_multiply.88 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_k = $258binary_subscr.81 - $276binary_true_divide.90
12-22 13:15 DEBUG    on stmt: $286binary_subscr.94 = getitem(value=dens_R, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $294binary_subscr.98 = getitem(value=dens_re_sum, index=j, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $298binary_subtract.100 = $294binary_subscr.98 - dens_re_mean
12-22 13:15 DEBUG    on stmt: $300binary_multiply.101 = dens_re_cov * $298binary_subtract.100
12-22 13:15 DEBUG    on stmt: $304binary_true_divide.103 = $300binary_multiply.101 / re_std_sq
12-22 13:15 DEBUG    on stmt: weight_j = $286binary_subscr.94 - $304binary_true_divide.103
12-22 13:15 DEBUG    on stmt: $314binary_multiply.107 = dens_lambda * dens_mu_tot
12-22 13:15 DEBUG    on stmt: $320binary_multiply.110 = weight_k * drk
12-22 13:15 DEBUG    on stmt: $326binary_multiply.113 = weight_j * drj
12-22 13:15 DEBUG    on stmt: $328binary_add.114 = $320binary_multiply.110 + $326binary_multiply.113
12-22 13:15 DEBUG    on stmt: $330binary_multiply.115 = $314binary_multiply.107 * $328binary_add.114
12-22 13:15 DEBUG    on stmt: $336binary_subscr.118 = getitem(value=dens_mu, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $340binary_multiply.120 = $336binary_subscr.118 * dens_re_std
12-22 13:15 DEBUG    on stmt: $342binary_true_divide.121 = $330binary_multiply.115 / $340binary_multiply.120
12-22 13:15 DEBUG    on stmt: grad_cor_coeff = $342binary_true_divide.121 / n_vertices
12-22 13:15 DEBUG    on stmt: jump 350
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 350
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const352.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $354compare_op.3 = dist_squared > $const352.2
12-22 13:15 DEBUG    on stmt: bool358 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $358pred = call bool358($354compare_op.3, func=bool358, args=(Var($354compare_op.3, layouts.py:135),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $358pred, 360, 410
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 360
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const360.1 = const(float, -2.0)
12-22 13:15 DEBUG    on stmt: $364binary_multiply.3 = $const360.1 * a
12-22 13:15 DEBUG    on stmt: $368binary_multiply.5 = $364binary_multiply.3 * b
12-22 13:15 DEBUG    on stmt: $370load_global.6 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $const376.9 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $378binary_subtract.10 = b - $const376.9
12-22 13:15 DEBUG    on stmt: $380call_function.11 = call $370load_global.6(dist_squared, $378binary_subtract.10, func=$370load_global.6, args=[Var(dist_squared, layouts.py:99), Var($378binary_subtract.10, layouts.py:136)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: grad_coeff = $368binary_multiply.5 * $380call_function.11
12-22 13:15 DEBUG    on stmt: $390load_global.15 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $396call_function.18 = call $390load_global.15(dist_squared, b, func=$390load_global.15, args=[Var(dist_squared, layouts.py:99), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $398binary_multiply.19 = a * $396call_function.18
12-22 13:15 DEBUG    on stmt: $const400.20 = const(float, 1.0)
12-22 13:15 DEBUG    on stmt: $402binary_add.21 = $398binary_multiply.19 + $const400.20
12-22 13:15 DEBUG    on stmt: $404inplace_true_divide.22 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff, rhs=$402binary_add.21, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff.1 = $404inplace_true_divide.22
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 410
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff.2 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 414
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 414
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff.6 = phi(incoming_values=[Var(grad_coeff.1, layouts.py:137), Var(grad_coeff.2, layouts.py:139)], incoming_blocks=[360, 410])
12-22 13:15 DEBUG    on stmt: $414load_global.1 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $418call_function.3 = call $414load_global.1(dim, func=$414load_global.1, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $420get_iter.4 = getiter(value=$418call_function.3)
12-22 13:15 DEBUG    on stmt: $phi422.1 = $420get_iter.4
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 422
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $422for_iter.2 = iternext(value=$phi422.1)
12-22 13:15 DEBUG    on stmt: $422for_iter.3 = pair_first(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $422for_iter.4 = pair_second(value=$422for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi424.2 = $422for_iter.3
12-22 13:15 DEBUG    on stmt: branch $422for_iter.4, 424, 540
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 424
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: d = $phi424.2
12-22 13:15 DEBUG    on stmt: $426load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $434binary_subscr.7 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $440binary_subscr.10 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $442binary_subtract.11 = $434binary_subscr.7 - $440binary_subscr.10
12-22 13:15 DEBUG    on stmt: $444binary_multiply.12 = grad_coeff.6 * $442binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d = call $426load_global.3($444binary_multiply.12, func=$426load_global.3, args=[Var($444binary_multiply.12, layouts.py:142)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: bool454 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $454pred = call bool454(densmap_flag, func=bool454, args=(Var(densmap_flag, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $454pred, 456, 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 456
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $458load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $const460.4 = const(int, 2)
12-22 13:15 DEBUG    on stmt: $464binary_multiply.6 = $const460.4 * grad_cor_coeff
12-22 13:15 DEBUG    on stmt: $470binary_subscr.9 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $476binary_subscr.12 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $478binary_subtract.13 = $470binary_subscr.9 - $476binary_subscr.12
12-22 13:15 DEBUG    on stmt: $480binary_multiply.14 = $464binary_multiply.6 * $478binary_subtract.13
12-22 13:15 DEBUG    on stmt: $482call_function.15 = call $458load_global.3($480binary_multiply.14, func=$458load_global.3, args=[Var($480binary_multiply.14, layouts.py:147)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $484inplace_add.16 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=grad_d, rhs=$482call_function.15, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_d.1 = $484inplace_add.16
12-22 13:15 DEBUG    on stmt: jump 488
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 488
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_d.4 = phi(incoming_values=[Var(grad_d, layouts.py:142), Var(grad_d.1, layouts.py:147)], incoming_blocks=[424, 456])
12-22 13:15 DEBUG    on stmt: $494binary_subscr.6 = getitem(value=current, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $500binary_multiply.9 = grad_d.4 * alpha
12-22 13:15 DEBUG    on stmt: $502inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$494binary_subscr.6, rhs=$500binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d] = $502inplace_add.10
12-22 13:15 DEBUG    on stmt: bool512 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $512pred = call bool512(move_other, func=bool512, args=(Var(move_other, layouts.py:62),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $512pred, 514, 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 514
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $520binary_subscr.6 = getitem(value=other, index=d, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $524unary_negative.8 = unary(fn=<built-in function neg>, value=grad_d.4)
12-22 13:15 DEBUG    on stmt: $528binary_multiply.10 = $524unary_negative.8 * alpha
12-22 13:15 DEBUG    on stmt: $530inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$520binary_subscr.6, rhs=$528binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: other[d] = $530inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 809
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 540
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $546binary_subscr.5 = getitem(value=epoch_of_next_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $552binary_subscr.8 = getitem(value=epochs_per_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $554inplace_add.9 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$546binary_subscr.5, rhs=$552binary_subscr.8, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_sample[i] = $554inplace_add.9
12-22 13:15 DEBUG    on stmt: $560load_global.10 = global(int: <class 'int'>)
12-22 13:15 DEBUG    on stmt: $568binary_subscr.14 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $570binary_subtract.15 = n - $568binary_subscr.14
12-22 13:15 DEBUG    on stmt: $576binary_subscr.18 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $578binary_true_divide.19 = $570binary_subtract.15 / $576binary_subscr.18
12-22 13:15 DEBUG    on stmt: n_neg_samples = call $560load_global.10($578binary_true_divide.19, func=$560load_global.10, args=[Var($578binary_true_divide.19, layouts.py:156)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $584load_global.21 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $588call_function.23 = call $584load_global.21(n_neg_samples, func=$584load_global.21, args=[Var(n_neg_samples, layouts.py:155)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $590get_iter.24 = getiter(value=$588call_function.23)
12-22 13:15 DEBUG    on stmt: $phi592.1 = $590get_iter.24
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 592
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $592for_iter.2 = iternext(value=$phi592.1)
12-22 13:15 DEBUG    on stmt: $592for_iter.3 = pair_first(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $592for_iter.4 = pair_second(value=$592for_iter.2)
12-22 13:15 DEBUG    on stmt: $phi594.2 = $592for_iter.3
12-22 13:15 DEBUG    on stmt: branch $592for_iter.4, 594, 780
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 594
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: p = $phi594.2
12-22 13:15 DEBUG    on stmt: $596load_global.3 = global(tau_rand_int: CPUDispatcher(<function tau_rand_int at 0x000001AEF13D6AF0>))
12-22 13:15 DEBUG    on stmt: $600call_function.5 = call $596load_global.3(rng_state, func=$596load_global.3, args=[Var(rng_state, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: k.1 = $600call_function.5 % n_vertices
12-22 13:15 DEBUG    on stmt: other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    find_def var='k' stmt=other.1 = getitem(value=tail_embedding, index=k, fn=<built-in function getitem>)
12-22 13:15 DEBUG    replaced with: other.1 = getitem(value=tail_embedding, index=k.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $616load_global.11 = global(rdist: CPUDispatcher(<function rdist at 0x000001AEF1EA60D0>))
12-22 13:15 DEBUG    on stmt: dist_squared.1 = call $616load_global.11(current, other.1, func=$616load_global.11, args=[Var(current, layouts.py:96), Var(other.1, layouts.py:162)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $const628.16 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $630compare_op.17 = dist_squared.1 > $const628.16
12-22 13:15 DEBUG    on stmt: bool634 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $634pred = call bool634($630compare_op.17, func=bool634, args=(Var($630compare_op.17, layouts.py:166),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $634pred, 636, 680
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 636
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const636.2 = const(float, 2.0)
12-22 13:15 DEBUG    on stmt: $640binary_multiply.4 = $const636.2 * gamma
12-22 13:15 DEBUG    on stmt: grad_coeff.3 = $640binary_multiply.4 * b
12-22 13:15 DEBUG    on stmt: $const650.8 = const(float, 0.001)
12-22 13:15 DEBUG    on stmt: $654binary_add.10 = $const650.8 + dist_squared.1
12-22 13:15 DEBUG    on stmt: $658load_global.12 = global(pow: <built-in function pow>)
12-22 13:15 DEBUG    on stmt: $664call_function.15 = call $658load_global.12(dist_squared.1, b, func=$658load_global.12, args=[Var(dist_squared.1, layouts.py:164), Var(b, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $666binary_multiply.16 = a * $664call_function.15
12-22 13:15 DEBUG    on stmt: $const668.17 = const(int, 1)
12-22 13:15 DEBUG    on stmt: $670binary_add.18 = $666binary_multiply.16 + $const668.17
12-22 13:15 DEBUG    on stmt: $672binary_multiply.19 = $654binary_add.10 * $670binary_add.18
12-22 13:15 DEBUG    on stmt: $674inplace_true_divide.20 = inplace_binop(fn=<built-in function itruediv>, immutable_fn=<built-in function truediv>, lhs=grad_coeff.3, rhs=$672binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: grad_coeff.4 = $674inplace_true_divide.20
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 680
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $684compare_op.4 = j == k
12-22 13:15 DEBUG    find_def var='k' stmt=$684compare_op.4 = j == k
12-22 13:15 DEBUG    find_def_from_top label 680
12-22 13:15 DEBUG    idom 594 from label 680
12-22 13:15 DEBUG    find_def_from_bottom label 594
12-22 13:15 DEBUG    replaced with: $684compare_op.4 = j == k.1
12-22 13:15 DEBUG    on stmt: bool688 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $688pred = call bool688($684compare_op.4, func=bool688, args=(Var($684compare_op.4, layouts.py:171),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $688pred, 690, 696
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 690
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 696
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: jump 700
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 700
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_coeff.7 = phi(incoming_values=[Var(grad_coeff.5, layouts.py:174), Var(grad_coeff.4, layouts.py:168)], incoming_blocks=[696, 636])
12-22 13:15 DEBUG    on stmt: $700load_global.2 = global(range: <class 'range'>)
12-22 13:15 DEBUG    on stmt: $704call_function.4 = call $700load_global.2(dim, func=$700load_global.2, args=[Var(dim, layouts.py:62)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: $706get_iter.5 = getiter(value=$704call_function.4)
12-22 13:15 DEBUG    on stmt: $phi708.2 = $706get_iter.5
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 708
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $708for_iter.3 = iternext(value=$phi708.2)
12-22 13:15 DEBUG    on stmt: $708for_iter.4 = pair_first(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $708for_iter.5 = pair_second(value=$708for_iter.3)
12-22 13:15 DEBUG    on stmt: $phi710.3 = $708for_iter.4
12-22 13:15 DEBUG    on stmt: branch $708for_iter.5, 710, 776
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 710
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: d.1 = $phi710.3
12-22 13:15 DEBUG    on stmt: $const714.5 = const(float, 0.0)
12-22 13:15 DEBUG    on stmt: $716compare_op.6 = grad_coeff.7 > $const714.5
12-22 13:15 DEBUG    on stmt: bool720 = global(bool: <class 'bool'>)
12-22 13:15 DEBUG    on stmt: $720pred = call bool720($716compare_op.6, func=bool720, args=(Var($716compare_op.6, layouts.py:177),), kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: branch $720pred, 722, 748
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 722
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $722load_global.3 = global(clip: CPUDispatcher(<function clip at 0x000001AEF1EBA790>))
12-22 13:15 DEBUG    on stmt: $730binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $736binary_subscr.10 = getitem(value=other.1, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $738binary_subtract.11 = $730binary_subscr.7 - $736binary_subscr.10
12-22 13:15 DEBUG    on stmt: $740binary_multiply.12 = grad_coeff.7 * $738binary_subtract.11
12-22 13:15 DEBUG    on stmt: grad_d.2 = call $722load_global.3($740binary_multiply.12, func=$722load_global.3, args=[Var($740binary_multiply.12, layouts.py:178)], kws=(), vararg=None, varkwarg=None, target=None)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 748
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_d.3 = const(int, 0)
12-22 13:15 DEBUG    on stmt: jump 752
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 752
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: grad_d.5 = phi(incoming_values=[Var(grad_d.2, layouts.py:178), Var(grad_d.3, layouts.py:180)], incoming_blocks=[722, 748])
12-22 13:15 DEBUG    on stmt: $758binary_subscr.7 = getitem(value=current, index=d.1, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $764binary_multiply.10 = grad_d.5 * alpha
12-22 13:15 DEBUG    on stmt: $766inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$758binary_subscr.7, rhs=$764binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: current[d.1] = $766inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 708
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 776
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 808
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 780
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $786binary_subscr.5 = getitem(value=epoch_of_next_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $794binary_subscr.9 = getitem(value=epochs_per_negative_sample, index=i, fn=<built-in function getitem>)
12-22 13:15 DEBUG    on stmt: $796binary_multiply.10 = n_neg_samples * $794binary_subscr.9
12-22 13:15 DEBUG    on stmt: $798inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$786binary_subscr.5, rhs=$796binary_multiply.10, static_lhs=Undefined, static_rhs=Undefined)
12-22 13:15 DEBUG    on stmt: epoch_of_next_negative_sample[i] = $798inplace_add.11
12-22 13:15 DEBUG    on stmt: jump 807
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 806
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: $const806.0 = const(NoneType, None)
12-22 13:15 DEBUG    on stmt: $808return_value.1 = cast(value=$const806.0)
12-22 13:15 DEBUG    on stmt: return $808return_value.1
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 807
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 18
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 808
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 592
12-22 13:15 DEBUG    ==== SSA block rewrite pass on 809
12-22 13:15 DEBUG    Running <numba.core.ssa._FixSSAVars object at 0x000001AF114C1B80>
12-22 13:15 DEBUG    on stmt: jump 422
12-22 13:16 INFO     global n_training: 937
12-22 13:16 INFO     global n_test: 313
12-22 13:17 INFO     >> Basalt Global Model Train accuracy: 0.097302
12-22 13:17 INFO     >> Basalt Global Model Test accuracy: 0.100000
12-22 13:17 INFO     >> Basalt Global Model Train loss: 2.303331
12-22 13:17 INFO     ######################in comm round:###############################2
12-22 13:17 INFO     Training network 0. n_training: 2456
12-22 13:17 INFO     >> Training accuracy: 0.006168
12-22 13:17 INFO     >> Test accuracy: 0.100000
12-22 13:17 INFO      ** Training complete **
12-22 13:17 INFO     net 0 final test acc 0.100000
12-22 13:17 INFO     Training network 1. n_training: 2424
12-22 13:17 INFO     >> Training accuracy: 0.263091
12-22 13:17 INFO     >> Test accuracy: 0.100000
12-22 13:17 INFO      ** Training complete **
12-22 13:17 INFO     net 1 final test acc 0.100000
12-22 13:17 INFO     Training network 2. n_training: 3322
12-22 13:18 INFO     >> Training accuracy: 0.126838
12-22 13:18 INFO     >> Test accuracy: 0.100000
12-22 13:18 INFO      ** Training complete **
12-22 13:18 INFO     net 2 final test acc 0.100000
12-22 13:18 INFO     Training network 3. n_training: 3010
12-22 13:18 INFO     >> Training accuracy: 0.000665
12-22 13:18 INFO     >> Test accuracy: 0.100000
12-22 13:18 INFO      ** Training complete **
12-22 13:18 INFO     net 3 final test acc 0.100000
12-22 13:18 INFO     Training network 4. n_training: 3390
